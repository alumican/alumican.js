{"version":3,"sources":["js/test.ts"],"names":[],"mappings":"AAGA,IAAU,IAAI,CA2Eb;AA3ED,WAAU,IAAI;IAKb;QACC;YAAA,iBAsCC;YAWO,yBAAoB,GAAG,UAAC,KAAW;gBAC1C,MAAM,CAAC;oBACN,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CACpB,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAClB;wBACC,IAAM,KAAK,GAAU,GAAG,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAC/D,IAAM,IAAI,GAAU,KAAK,CAAC,OAAO,EAAE,CAAC;wBACpC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;oBACvC,CAAC,CACD,CAAC;gBACH,CAAC,CAAA;YACF,CAAC,CAAC;YAEM,qBAAgB,GAAG,UAAC,IAAW;gBACtC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC,CAAC;YA/DD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;YAInC,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YAErD,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAC,KAAY,EAAE,OAAmB;gBAC3D,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC7B,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;gBACxC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC;gBACvD,IAAM,KAAK,GAAG,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACjD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACX,KAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;gBACpC,CAAC;YACF,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC;YAIzD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAgBpB,MAAO,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACnD,CAAC;QAEO,qCAAsB,GAA9B,UAA+B,KAAW;YACzC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAChD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAClD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAClD,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YACjD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAClD,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACpD,CAAC;QAqBF,WAAC;IAAD,CArEA,AAqEC,IAAA;IArEY,SAAI,OAqEhB,CAAA;AACF,CAAC,EA3ES,IAAI,KAAJ,IAAI,QA2Eb;AAED,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC","file":"test.js","sourcesContent":["/// <reference path='../../build/node_modules/@types/jquery/index.d.ts' />\n/// <reference path='../../lib/alumican.d.ts' />\n\nnamespace test {\n\n\timport Scene = scn.Scene;\n\timport SceneManager = scn.SceneManager;\n\n\texport class Main {\n\t\tconstructor() {\n\t\t\tthis.title = jQuery('#page-title');\n\n\t\t\t// --------------------------------------------------\n\t\t\t// Build scene\n\t\t\tthis.sceneManager = new scn.SceneManager('homepage');\n\n\t\t\tjQuery('.page-link').each((index:number, element:HTMLElement):void => {\n\t\t\t\tconst link = jQuery(element);\n\t\t\t\tconst path = link.attr('name');\n\t\t\t\tlink.attr('href', 'javascript:void(0)');\n\t\t\t\tlink.attr('onclick', 'onMenuClick(\\'' + path + '\\');');\n\t\t\t\tconst scene = this.sceneManager.addSceneAt(path);\n\t\t\t\tif (scene) {\n\t\t\t\t\tthis.setupSceneEventHandler(scene);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.setupSceneEventHandler(this.sceneManager.getRoot());\n\n\t\t\t// --------------------------------------------------\n\t\t\t// Start\n\t\t\tthis.sceneManager.start();\n\n\t\t\t//sceneManager.goto('gallery/web/');\n\t\t\t//console.log(sceneManager.resolvePath('/'));\n\t\t\t//console.log(sceneManager.resolvePath('/aaa/bbb/'));\n\t\t\t//console.log(sceneManager.resolvePath('aaa/bbb/ccc'));\n\t\t\t//console.log(sceneManager.resolvePath('./aaa/bbb'));\n\t\t\t//console.log(sceneManager.resolvePath('aaa/bbb/../ccc'));\n\t\t\t//console.log(sceneManager.resolvePath('./aaa/./bbb/.././ccc'));\n\n\t\t\t//console.log(sceneManager.getSceneByPath('/').getName());\n\t\t\t//console.log(sceneManager.getSceneByPath('/gallery').getName());\n\t\t\t//console.log(sceneManager.getSceneByPath('/gallery/photo').getName());\n\t\t\t//console.log(sceneManager.getSceneByPath('/gallery/photo/photo-2').getName());\n\n\t\t\t// --------------------------------------------------\n\t\t\t(<any>window).onMenuClick = this.linkClickHandler;\n\t\t}\n\n\t\tprivate setupSceneEventHandler(scene:Scene):void {\n\t\t\tscene.onLoad = this.getSceneEventHandler(scene);\n\t\t\tscene.onUnload = this.getSceneEventHandler(scene);\n\t\t\tscene.onArrive = this.getSceneEventHandler(scene);\n\t\t\tscene.onLeave = this.getSceneEventHandler(scene);\n\t\t\tscene.onAscend = this.getSceneEventHandler(scene);\n\t\t\tscene.onDescend = this.getSceneEventHandler(scene);\n\t\t}\n\n\t\tprivate getSceneEventHandler = (scene:Scene):(() => cmd.Command) => {\n\t\t\treturn ():cmd.Command => {\n\t\t\t\treturn new cmd.Serial(\n\t\t\t\t\tnew cmd.Wait(1000),\n\t\t\t\t\t():void => {\n\t\t\t\t\t\tconst state:string = scn.getSceneStateString(scene.getState());\n\t\t\t\t\t\tconst path:string = scene.getPath();\n\t\t\t\t\t\tthis.title.text(state + ' : ' + path);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tprivate linkClickHandler = (path:string):void => {\n\t\t\tthis.sceneManager.goto(path);\n\t\t};\n\n\t\tprivate sceneManager:SceneManager;\n\t\tprivate title:JQuery;\n\t}\n}\n\nnew test.Main();"]}
{"version":3,"sources":["../src/alumican/cmd/Parallel.ts","../src/alumican/scn/core/Waypoint.ts","../src/alumican/include.ts","../src/alumican/alm/io/Logger.ts","../src/alumican/alm/browser/QueryString.ts","../src/alumican/alm/math/Easing.ts","../src/alumican/alm/event/Event.ts","../src/alumican/alm/event/EventDispatcher.ts","../src/alumican/cmd/CommandState.ts","../src/alumican/cmd/CommandEvent.ts","../src/alumican/cmd/Command.ts","../src/alumican/cmd/CommandList.ts","../src/alumican/cmd/Break.ts","../src/alumican/cmd/Return.ts","../src/alumican/cmd/Log.ts","../src/alumican/cmd/Wait.ts","../src/alumican/cmd/Func.ts","../src/alumican/cmd/Listen.ts","../src/alumican/cmd/Tween.ts","../src/alumican/cmd/Serial.ts","../src/alumican/alm/geom/Vector2.ts","../src/alumican/alm/geom/Vector3.ts","../src/alumican/alm/geom/Rectangle.ts","../src/alumican/alm/geom/Boxer.ts","../src/alumican/alm/util/Obj.ts","../src/alumican/alm/util/Arr.ts","../src/alumican/alm/util/Num.ts","../src/alumican/alm/util/Str.ts","../src/alumican/alm/util/Cmd.ts","../src/alumican/alm/resource/ObjectPool.ts","../src/alumican/alm/state/Switcher.ts","../src/alumican/alm/state/SwitcherEvent.ts","../src/alumican/alm/state/Lottery.ts","../src/alumican/alm/math/EasingValue.ts","../src/alumican/alm/math/SpringValue.ts","../src/alumican/alm/math/SimpleAverage.ts","../src/alumican/alm/math/SimpleMovingAverage.ts","../src/alumican/alm/math/MaxValue.ts","../src/alumican/alm/math/Circular.ts","../src/alumican/alm/time/Timer.ts","../src/alumican/alm/time/TimerEvent.ts","../src/alumican/alm/io/FileLoader.ts","../src/alumican/alm/io/FileLoaderEvent.ts","../src/alumican/alm/io/FileQuery.ts","../src/alumican/alm/view/View.ts","../src/alumican/alm/view/ButtonBehavior.ts","../src/alumican/alm/view/SelectionBehavior.ts","../src/alumican/alm/browser/DeviceInfo.ts","../src/alumican/alm/browser/LocalStorage.ts","../src/alumican/alm/browser/KeyWatcher.ts","../src/alumican/alm/browser/KeyWatcherEvent.ts","../src/alumican/alm/browser/WindowWatcher.ts","../src/alumican/alm/browser/WindowWatcherEvent.ts","../src/alumican/scn/Scene.ts","../src/alumican/scn/SceneEvent.ts","../src/alumican/scn/SceneManager.ts","../src/alumican/scn/SceneManagerEvent.ts","../src/alumican/scn/SceneTransferInfo.ts","../src/alumican/scn/SceneState.ts","../src/alumican/scn/core/Direction.ts","../src/alumican/scn/core/RootScene.ts"],"names":["cmd","scn","alm","trace","messages","_i","arguments","length","io","Logger","info","apply","caller","throwWarn","target","message","condition","warnIf","throwError","errorIf","browser","QueryString","url","this","set","prototype","search","index","indexOf","substring","location","hash","pair","pairs","split","i","getString","key","defaultValue","value","undefined","getInt","parseInt","isNaN","getFloat","parseFloat","getBool","getHash","LoggerLevel","NullLogging","verbose","prefix","warn","error","ConsoleLogging","console","debug","Array","slice","call","concat","log","DOMLogging","dom","html","print","line","join","innerHTML","innerText","ParallelLogging","loggers","n","setLevelByQuery","level","Silent","setNamespace","namespace","Verbose","logger","Info","Warn","stackTrace","Error","math","Easing","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","createEaseInElastic","s","p","a","asin","createEaseOutElastic","createEaseInOutElastic","easeInElastic","defaultEaseInElastic","easeOutElastic","defaultEaseOutElastic","easeInOutElastic","defaultEaseInOutElastic","createEaseInBack","createEaseOutBack","createEaseInOutBack","easeInBack","easeOutBack","defaultEaseOutBack","easeInOutBack","defaultEaseInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","defaultEaseInBack","event","Event","type","data","getType","getTarget","getData","setData","event_1","EventDispatcher","listeners","addEventListener","eventType","listener","numListeners","push","removeEventListener","splice","removeAllEventListener","hasEventListener","dispatchEvent","dispatchEventType","CommandState","CommandEvent","_super","eventTarget","__extends","clone","toString","COMPLETE","Command","executeFunction","interruptFunction","destroyFunction","_this","setExecuteFunction","setInterruptFunction","setDestroyFunction","state","Sleeping","self","parent","execute","Executing","getExecuteFunction","interrupt","Interrupting","getInterruptFunction","destroy","getDestroyFunction","notifyComplete","implExecuteFunction","command","implInterruptFunction","implDestroyFunction","func","getState","getParent","setParent","getSelf","CommandList","commands","addCommand","preProcess","getCommands","insertCommand","insertCommandAt","addCommandArray","insertCommandArray","insertCommandArrayAt","getLength","getCommandByIndex","numCommands","Func","Break","Return","Log","getMessages","setMessages","Wait","time","completeHandler","timerId","window","setTimeout","cancel","clearTimeout","getTime","setTime","args","eventDispatcher","getFunction","setFunction","getArguments","setArguments","getEventDispatcher","setEventDispatcher","getEventType","setEventType","Listen","Tween","to","from","duration","easing","onStart","onUpdate","onComplete","intervalHandler","elapsedTime","Date","startTime","progressTime","progressValue","tweenTarget","internalFrom","setInterval","updateInterval","clearInterval","timeRatio","value0","setTarget","getDuration","setDuration","getTo","setTo","getFrom","setFrom","getEasing","setEasing","getOnStart","setOnStart","getOnUpdate","setOnUpdate","getOnComplete","setOnComplete","getProgressTime","getProgressValue","getUpdateInterval","setUpdateInterval","milliseconds","Serial","currentCommand","position","next","isPaused","isCompleteOnPaused","implNotifyBreak","implNotifyReturn","getPosition","Parallel","completeCount","command_1","command_2","command_3","getCompleteCount","geom","Vector2","x","y","copyTo","point","getClone","zero","normalize","l","getSquareDistance","dx","dy","getDistance","Vector3","z","dz","Rectangle","width","height","rect","getTop","getBottom","getLeft","getRight","getTopLeft","getTopRight","getBottomLeft","getBottomRight","Align","ScaleMode","Boxer","resize","bounds","scaleMode","align","ShowAll","Middle_Center","tx","ty","tw","th","bx","by","bw","bh","NoBorder","ratioW","ratioH","ratio","ExactFit","Top_Left","Middle_Left","Bottom_Left","Top_Right","Middle_Right","Bottom_Right","Top_Center","Bottom_Center","util","Obj","each","Object","keys","forEach","Arr","sequence","count","init","step","result","v","unique","list","filter","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","m","Num","map","srcA","srcB","dstA","dstB","clamp","ease","random","min","max","randomInt","floor","dist","x1","y1","x2","y2","squared","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","PI3","PI2","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","Str","toTimeString","hours","minutes","seconds","h","substr","Cmd","stop","c","single","resource","ObjectPool","onRequireItem","onDestroyItem","initCount","growthCount","items","getItem","unshift","returnItem","item","reduce","shift","Switcher","isLoopEnabled","itemCount","itemIds","itemIndexById","onChange","onPrev","onNext","setupById","ids","setup","setupByCount","newItemIndex","oldItemIndex","newItemId","oldItemId","gotoByIndex","itemIndex","useTransition","dispatchPagerEvent","SwitcherEvent","CHANGE","gotoById","itemId","hasOwnProperty","prev","PREV","NEXT","getIsLoopEnabled","setIsLoopEnabled","getNewItemIndex","getOldItemIndex","getItemCount","getNewItemId","getOldItemId","getItemIds","Lottery","values","initValues","restValues","restCount","isEmpty","onCheck","isAutoResetEnabled","reset","get","add","getRestCount","getIsEmply","getIsAutoResetEnabled","setIsAutoResetEnabled","enabled","createIndices","EasingValue","initValue","tolerance","update","d","abs","SpringValue","spring","friction","acceleration","velocity","SimpleAverage","_value","_count","SimpleMovingAverage","maxCount","_maxCount","oldest","latest","MaxValue","maxLatestCount","_maxLatestCount","Number","MAX_VALUE","Circular","angle","setAngle","setVelocity","getAngle","getVelocity","getSin","getCos","getTan","tan","getMagnitude","getVector","xy","Timer","interval","repeatCount","timerHandler","tStartTime","getCurrentTime","elapsedCount","isCompleted","tInterval","startInterval","dispatch","TimerEvent","TICK","isRunning","tId","start","tRestTime","stopInterval","restart","valueOf","getIsRunning","getInterval","getElapsedTime","getRestTime","getElapsedCount","getRepeatCount","setRepeatCount","FileLoader","fileLoadCompleteHandler","query","content","currentThreadCount","isLoading","isLoadComplete","param","onLoad","fileLoadErrorHandler","onError","isLoading_","currentCount","totalCount","totalThreadCount","loadingQueries","loadingQueryIndex","queriesByQueryId","queriesByUrl","handlersByType","require","id","addQuery","FileQuery","String","load","FileLoaderEvent","PROGRESS","this_1","query_1","handler","addHandler","getQueryByQueryId","queryId","getQueryByUrl","getCurrentCount","getTotalCount","getContentByUrl","getContentByQueryId","textureId","getCurrentThreadCount","getTotalThreadCount","progress","loadedCount","ERROR","view_1","View","view","viewCount","name","autoHideWithInit","isInitializing","isInitialized","isReadying","isReadied","isShowing","isShown","isHiding","viewsById","initialize","implInitialize","hide","ready","implReady","finalize","implFinalize","show","getShowCommand","getHideCommand","showCommand","hideCommand","implShow","implHide","getIsInitializing","getIsInitialized","getIsReadying","getIsReadied","getIsShowing","getIsShown","getIsHiding","getIsHidden","getId","getView","getName","setName","getAutoHideWithInit","setAutoHideWithInit","getViewById","ButtonBehavior","hitArea","isHoverCursorEnabled","isPreventDefaultEnabled","isStopPropagationEnabled","mouseOverHandler","preventDefault","stopPropagation","over","applyMouseCursor","mouseOutHandler","out","mouseDownHandler","down","mouseUpHandler","up","clickHandler","click","touchStartHandler","touchEndHandler","touchCancelHandler","isEnabled","isOver","isDown","isOverInternal","isDownInternal","defaultMouseCursor","setHitArea","implButtonOver","_out","checkEnabled","implButtonOut","implButtonDown","_up","implButtonUp","implButtonClick","on","off","getIsEnabled","setIsEnabled","implButtonChangeEnabled","getIsOver","getIsDown","getHitArea","clearHitArea","getIsPreventDefaultEnabled","setIsPreventDefaultEnabled","getIsStopPropagationEnabled","setIsStopPropagationEnabled","getIsHoverCursorEnabled","setIsHoverCursorEnabled","style","cursor","SelectionBehavior","select","isSelected","implSelectionChanged","deselect","getIsSelected","DeviceInfo","u","navigator","userAgent","toLowerCase","isTablet","isMobile","isDesktop","isIOS","isAndroid","isIE","isEdge","isChrome","isSafari","isFireFox","isOpera","isUnknownBrowser","isTouchEnabled","ontouchstart","isDownloadEnabled","devicePixelRatio","isRetina","getIsDesktop","getIsTablet","getIsMobile","getIsIOS","getIsAndroid","getIsIE","getIsEdge","getIsChrome","getIsSafari","getIsFireFox","getIsOpera","getIsUnknownBrowser","getIsTouchEnabled","getIsDownloadEnabled","getIsRetina","getDevicePixelRatio","getDpi","dpi","div","document","createElement","setAttribute","body","appendChild","offsetHeight","removeChild","LocalStorage","save","expiredAt","isAvailable","record","JSON","stringify","localStorage","setItem","saveWithTerm","parse","removeItem","remove","isAvailable_","toMilliseconds","dates","KeyCode","KeyWatcher","windowKeyDownHandler","windowKeyUpHandler","getIsAnyKeyPressed","pressedKeyCount","getIsKeyPressed","keyCode","isKeyPressedByKeyCode","getIsContinuousPressEnabled","isContinuousPressEnabled","setIsContinuousPressEnabled","KeyWatcherEvent","KEY_DOWN","KEY_UP","isLongPressed","originalEvent","altKey","ctrlKey","shiftKey","WindowWatcher","windowResizeHandler","windowScrollHandler","windowWidth","innerWidth","windowHeight","innerHeight","scrollTop","pageYOffset","documentElement","scrollBottom","calcScrolledPosition","calcScrolledPositionRatio","WindowWatcherEvent","RESIZE","getWindow","getScrollTop","getScrollBottom","getWindowWidth","getWindowHeight","getIsMobileOrientationResize","isMobileOrientationResize","setIsMobileOrientationResize","windowOrientationChangeHandler","SCROLL","Scene","SceneState","Idling","childrenByName","numChildren","isEntered","onUnload","onArrive","onLeave","onAscend","onDescend","addChild","child","childName","addChildren","children","addedChildren","removeChildren","removedChildren","removeAllChildren","name_1","contains","getLastState","lastState","getChildByName","getNumChildren","getManager","getPath","manager","names","scene","getScenePathByNames","gotoScene","path","goto","_load","transferInfo","Loading","SceneEvent","LOAD","implOnLoad","LOAD_COMPLETE","_unload","Unloading","UNLOAD","implOnUnload","UNLOAD_COMPLETE","_arrive","Arriving","ARRIVE","implOnArrive","ARRIVE_COMPLETE","_leave","Leaving","LEAVE","implOnLeave","LEAVE_COMPLETE","_ascend","Ascending","ASCEND","implOnAscend","ASCEND_COMPLETE","_descend","Descending","DESCEND","implOnDescend","DESCEND_COMPLETE","SceneManager","sceneLoadCompleteHandler","currentScene","eventIndex","checkState","sceneUnloadCompleteHandler","sceneArriveCompleteHandler","sceneLeaveCompleteHandler","sceneAscendCompleteHandler","sceneDescendCompleteHandler","root","core","RootScene","waypoints","waypointIndex","transferId","resolvePath","getDestinationPath","newWaypoints","createWaypoints","Waypoint","isDestinationChanged","setDirection","printWaypoint","SceneTransferInfo","SceneManagerEvent","TRANSFER_START","normalized","name_2","pop","addSceneAt","createScene","success","getSceneNamesByPath","name_3","getRoot","getSceneByPath","getSceneLevelByNames","departurePath","destinationPath","departureNames","destinationNames","turningPath","turningLevel","turningNames","prevPath","getLevel","Direction","Sibling","Ascend","name_4","_setFrom","Descend","_setTo","getSceneStateString","tmpTransferId","getTransferId","TRANSFER_COMPLETE","currentWaypoint","relay","getDeparturePath","getDirectionString","direction","Static","getVersion"],"mappings":"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","file":"alumican.min.js","sourcesContent":["/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Parallel extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.completeCount = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tif (++this.completeCount >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.completeCount = 0;\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.execute();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.interrupt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getCompleteCount():number { return this.completeCount; }\n\t\tprivate completeCount:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace scn.core {\n\n\texport class Waypoint {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(path:string, level:number) {\n\t\t\tthis.path = path;\n\t\t\tthis.level = level;\n\t\t\tthis.from = Direction.Static;\n\t\t\tthis.to = Direction.Static;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getPath():string {\n\t\t\treturn this.path;\n\t\t}\n\n\t\tpublic getLevel():number {\n\t\t\treturn this.level;\n\t\t}\n\n\t\tpublic getFrom():Direction {\n\t\t\treturn this.from;\n\t\t}\n\n\t\tpublic getTo():Direction {\n\t\t\treturn this.to;\n\t\t}\n\n\t\tpublic _setFrom(from:Direction):void {\n\t\t\tthis.from = from;\n\t\t}\n\n\t\tpublic _setTo(to:Direction):void {\n\t\t\tthis.to = to;\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[Waypoint] path = \\'' + this.path + '\\', level = ' + this.level + ', from = ' + getDirectionString(this.from) + ', to = ' + getDirectionString(this.to);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate path:string;\n\t\tprivate level:number;\n\t\tprivate from:Direction;\n\t\tprivate to:Direction;\n\t}\n}","/* ---------- dependency ---------- */\n\n/* ---------- project ---------- */\n/// <reference path='alm/browser/QueryString.ts' />\n/// <reference path='alm/io/Logger.ts' />\n/// <reference path='alm/math/Easing.ts' />\n\n/// <reference path='alm/event/Event.ts' />\n/// <reference path='alm/event/EventDispatcher.ts' />\n\n/// <reference path='cmd/CommandState.ts' />\n/// <reference path='cmd/CommandEvent.ts' />\n/// <reference path='cmd/Command.ts' />\n/// <reference path='cmd/CommandList.ts' />\n/// <reference path='cmd/Break.ts' />\n/// <reference path='cmd/Return.ts' />\n/// <reference path='cmd/Log.ts' />\n/// <reference path='cmd/Wait.ts' />\n/// <reference path='cmd/Func.ts' />\n/// <reference path='cmd/Listen.ts' />\n/// <reference path='cmd/Tween.ts' />\n/// <reference path='cmd/Serial.ts' />\n/// <reference path='cmd/Parallel.ts' />\n\n/// <reference path='alm/geom/Vector2.ts' />\n/// <reference path='alm/geom/Vector3.ts' />\n/// <reference path='alm/geom/Rectangle.ts' />\n/// <reference path='alm/geom/Boxer.ts' />\n\n/// <reference path='alm/util/Hash.ts' />\n/// <reference path='alm/util/Obj.ts' />\n/// <reference path='alm/util/Arr.ts' />\n/// <reference path='alm/util/Num.ts' />\n/// <reference path='alm/util/Str.ts' />\n/// <reference path='alm/util/Cmd.ts' />\n\n/// <reference path='alm/resource/ObjectPool.ts' />\n\n/// <reference path='alm/state/Switcher.ts' />\n/// <reference path='alm/state/SwitcherEvent.ts' />\n/// <reference path='alm/state/Lottery.ts' />\n\n/// <reference path='alm/math/EasingValue.ts' />\n/// <reference path='alm/math/SpringValue.ts' />\n/// <reference path='alm/math/SimpleAverage.ts' />\n/// <reference path='alm/math/SimpleMovingAverage.ts' />\n/// <reference path='alm/math/MaxValue.ts' />\n/// <reference path='alm/math/Circular.ts' />\n\n/// <reference path='alm/time/Timer.ts' />\n/// <reference path='alm/time/TimerEvent.ts' />\n\n/// <reference path='alm/io/FileLoader.ts' />\n/// <reference path='alm/io/FileLoaderEvent.ts' />\n/// <reference path='alm/io/FileQuery.ts' />\n/// <reference path='alm/io/IFileHandler.ts' />\n\n/// <reference path='alm/view/View.ts' />\n/// <reference path='alm/view/ButtonBehavior.ts' />\n/// <reference path='alm/view/IButton.ts' />\n/// <reference path='alm/view/SelectionBehavior.ts' />\n/// <reference path='alm/view/ISelection.ts' />\n\n/// <reference path='alm/browser/DeviceInfo.ts' />\n/// <reference path='alm/browser/LocalStorage.ts' />\n/// <reference path='alm/browser/KeyWatcher.ts' />\n/// <reference path='alm/browser/KeyWatcherEvent.ts' />\n/// <reference path='alm/browser/WindowWatcher.ts' />\n/// <reference path='alm/browser/WindowWatcherEvent.ts' />\n\n/// <reference path='scn/Scene.ts' />\n/// <reference path='scn/SceneEvent.ts' />\n/// <reference path='scn/SceneManager.ts' />\n/// <reference path='scn/SceneManagerEvent.ts' />\n/// <reference path='scn/SceneTransferInfo.ts' />\n/// <reference path='scn/SceneState.ts' />\n/// <reference path='scn/core/Direction.ts' />\n/// <reference path='scn/core/RootScene.ts' />\n/// <reference path='scn/core/Waypoint.ts' />\n\nnamespace alm {\n\n\t// Library version info\n\texport function getVersion():string {\n\t\treturn '0.0.1';\n\t}\n\n\t// Credit info\n\tconst style:string = 'color:#999;';\n\tconst print:Function = console.debug;\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('%c+ alumican.js', style);\n\tprint('%c+ version ' + getVersion(), style);\n\tprint('%c+ http://alumican.net', style);\n\tprint('%c+ https://github.com/alumican/alumican.js', style);\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('');\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\timport QueryString = alm.browser.QueryString;\n\n\texport enum LoggerLevel {\n\t\tVerbose = 0,\n\t\tInfo = 1,\n\t\tWarn = 2,\n\t\tError = 3,\n\t\tSilent = 4,\n\t}\n\n\n\n\n\n\texport interface ILogging {\n\n\t\tverbose(prefix:string, messages:any[]):void;\n\t\tinfo(prefix:string, messages:any[]):void;\n\t\twarn(prefix:string, messages:any[]):void;\n\t\terror(prefix:string, messages:any[]):void;\n\t}\n\n\n\n\n\n\texport class NullLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t}\n\t}\n\n\n\n\n\n\texport class ConsoleLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconsole.debug.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconsole.warn.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconsole.error.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\t}\n\n\n\n\n\n\texport class DOMLogging implements ILogging {\n\n\t\tconstructor(dom:HTMLElement, html:boolean) {\n\t\t\tthis.dom = dom;\n\t\t\tthis.html = html;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tprivate print(prefix:string, messages:any[]):void {\n\t\t\tconst line:string = prefix + messages.join(', ');\n\t\t\tif (this.html) {\n\t\t\t\tthis.dom.innerHTML = line + '<br>\\n' + this.dom.innerHTML;\n\t\t\t} else {\n\t\t\t\tthis.dom.innerText = line + '\\n' + this.dom.innerText;\n\t\t\t}\n\t\t}\n\n\t\tprivate dom:HTMLElement;\n\t\tprivate html:boolean;\n\t}\n\n\n\n\n\n\texport class ParallelLogging implements ILogging {\n\n\t\tconstructor(loggers:ILogging[]) {\n\t\t\tthis.loggers = loggers;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].verbose(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].info(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].warn(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].error(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tprivate loggers:ILogging[];\n\t}\n\n\n\n\n\n\texport class Logger {\n\n\t\tpublic static level:number = LoggerLevel.Verbose;\n\t\tpublic static logger:ILogging = new ConsoleLogging();\n\t\tprivate static namespace:string = '';\n\n\t\tpublic static setLevelByQuery(key:string):void {\n\t\t\tconst level:number = new QueryString().getInt(key, LoggerLevel.Silent);\n\t\t\tLogger.level = isNaN(level) ? LoggerLevel.Silent : level;\n\t\t}\n\n\t\tpublic static setNamespace(namespace:string):void {\n\t\t\tLogger.namespace = namespace != '' ? (namespace + '#') : '';\n\t\t}\n\n\t\tpublic static verbose(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tLogger.logger.verbose('[' + Logger.namespace + 'Verbose] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static info(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) {\n\t\t\t\tLogger.logger.info('[' + Logger.namespace + 'Info   ] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static warn(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', messages);\n\t\t\t\tLogger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static error(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', messages);\n\t\t\t\tLogger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', [message + ' : ' + target]);\n\t\t\t\tLogger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', [message + ' : ' + target]);\n\t\t\t\tLogger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static stackTrace():void {\n\t\t\tconsole.trace();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n\nfunction trace(...messages:any[]):void {\n\talm.io.Logger.info.apply(trace.caller, arguments);\n}\n\nfunction throwWarn(target:any, message:string, condition:boolean = true):void {\n\talm.io.Logger.warnIf.apply(null, arguments);\n}\n\nfunction throwError(target:any, message:string, condition:boolean = true):void {\n\talm.io.Logger.errorIf.apply(null, arguments);\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\timport Hash = alm.util.Hash;\n\n\texport class QueryString {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(url:string = '') {\n\t\t\tthis.set(url);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(url:string = ''):void {\n\t\t\t// normalize url\n\t\t\tlet search:string = '';\n\t\t\tif (url != '') {\n\t\t\t\tconst index:number = url.indexOf('?');\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tsearch = url.substring(index);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsearch = location.search;\n\t\t\t}\n\t\t\t// parse query\n\t\t\tthis.hash = {};\n\t\t\tconst pairs:string[] = search.substring(1).split('&');\n\t\t\tlet pair:string[];\n\t\t\tfor(let i:number = 0; pairs[i]; ++i) {\n\t\t\t\tpair = pairs[i].split('=');\n\t\t\t\tthis.hash[pair[0]] = pair[1];\n\t\t\t}\n\t\t}\n\n\t\t// 'abc' -> 'abc'\n\t\tpublic getString(key:string, defaultValue:string):string {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : value;\n\t\t}\n\n\t\t// '123' -> 123\n\t\tpublic getInt(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseInt(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '1.23' -> 1.23\n\t\tpublic getFloat(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseFloat(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '0' -> false, otherwise true\n\t\tpublic getBool(key:string, defaultValue:boolean):boolean {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : (<any>value == true);\n\t\t}\n\n\t\tpublic getHash():Hash<string> {\n\t\t\treturn this.hash;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate hash:Hash<string>;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport type EasingFunction = (t:number)=>number;\n\n\texport class Easing {\n\n\t\tpublic static linear(t:number):number {\n\t\t\treturn t;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuad(t:number):number {\n\t\t\treturn (t /= 1) * t;\n\t\t}\n\n\t\tpublic static easeOutQuad(t:number):number {\n\t\t\treturn -(t /= 1) * (t - 2);\n\t\t}\n\n\t\tpublic static easeInOutQuad(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t;\n\t\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCubic(t:number):number {\n\t\t\treturn (t /= 1) * t * t;\n\t\t}\n\n\t\tpublic static easeOutCubic(t:number):number {\n\t\t\treturn (t = t - 1) * t * t + 1;\n\t\t}\n\n\t\tpublic static easeInOutCubic(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuart(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuart(t:number):number {\n\t\t\treturn -((t = t - 1) * t * t * t - 1);\n\t\t}\n\n\t\tpublic static easeInOutQuart(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t;\n\t\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuint(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuint(t:number):number {\n\t\t\treturn ((t = t - 1) * t * t * t * t + 1);\n\t\t}\n\n\t\tpublic static easeInOutQuint(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInSine(t:number):number {\n\t\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t\t}\n\n\t\tpublic static easeOutSine(t:number):number {\n\t\t\treturn Math.sin(t * (Math.PI / 2));\n\t\t}\n\n\t\tpublic static easeInOutSine(t:number):number {\n\t\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\treturn Math.pow(2, 10 * (t - 1));\n\t\t}\n\n\t\tpublic static easeOutExpo(t:number):number {\n\t\t\tif (t == 1) return 1;\n\t\t\treturn -Math.pow(2, -10 * t) + 1;\n\t\t}\n\n\t\tpublic static easeInOutExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\tif (t == 1) return 1;\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCirc(t:number):number {\n\t\t\treturn -(Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t}\n\n\t\tpublic static easeOutCirc(t:number):number {\n\t\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t\t}\n\n\t\tpublic static easeInOutCirc(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static createEaseInElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 0.5) == 2) return 1;\n\t\t\t\tif (p == 0) p = 0.3 * 1.5;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1) return -0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseOutElastic(t);\n\t\t}\n\n\t\tpublic static easeInOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutElastic(t);\n\t\t}\n\n\t\tprivate static defaultEaseInElastic:EasingFunction = Easing.createEaseInElastic();\n\t\tprivate static defaultEaseOutElastic:EasingFunction = Easing.createEaseOutElastic();\n\t\tprivate static defaultEaseInOutElastic:EasingFunction = Easing.createEaseInOutElastic();\n\n\n\n\n\n\t\tpublic static createEaseInBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * (((s *= 1.525) + 1) * t - s);\n\t\t\t\treturn 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseOutBack(t);\n\t\t}\n\n\t\tpublic static easeInOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutBack(t);\n\t\t}\n\n\t\tprivate static defaultEaseInBack:EasingFunction = Easing.createEaseInBack();\n\t\tprivate static defaultEaseOutBack:EasingFunction = Easing.createEaseOutBack();\n\t\tprivate static defaultEaseInOutBack:EasingFunction = Easing.createEaseInOutBack();\n\n\n\n\n\n\t\tpublic static easeInBounce(t:number):number {\n\t\t\treturn 1 - Easing.easeOutBounce(1 - t);\n\t\t}\n\n\t\tpublic static easeOutBounce(t:number):number {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * t * t;\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInOutBounce(t:number):number {\n\t\t\tif (t < 0.5) return Easing.easeInBounce(t * 2) * 0.5;\n\t\t\treturn Easing.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t\t}\n\t}\n}","/// <reference path='../../include.ts' />\r\n\r\nnamespace alm.event {\r\n\r\n\texport class Event<T = any> {\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// CONSTRUCTOR\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tconstructor(type:string, target:Object, data:T = null) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.target = target;\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\t\tpublic getType():string {\r\n\t\t\treturn this.type;\r\n\t\t}\r\n\r\n\t\tpublic getTarget():Object {\r\n\t\t\treturn this.target;\r\n\t\t}\r\n\r\n\t\tpublic getData():T {\r\n\t\t\treturn this.data;\r\n\t\t}\r\n\r\n\t\tpublic setData(data:T):void {\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// MEMBER\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tprivate type:string;\r\n\t\tprivate target:Object;\r\n\t\tprivate data:T;\r\n\t}\r\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.event {\n\n\timport Logger = alm.io.Logger;\n\texport type EventListener = (event:Event) => void;\n\n\texport class EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:any = null) {\n\t\t\tthis.target = target || this;\n\t\t\tthis.listeners = {};\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] addEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) return;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.listeners[eventType] = listeners = [];\n\t\t\t}\n\t\t\tlisteners.push(listener);\n\t\t}\n\n\t\tpublic removeEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] removeEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) {\n\t\t\t\t\t\tlisteners.splice(i,  1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (listeners.length == 0) {\n\t\t\t\t\tdelete this.listeners[eventType];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic removeAllEventListener(eventType:string = null):void {\n\t\t\tif (eventType) {\n\t\t\t\tdelete this.listeners[eventType];\n\t\t\t} else {\n\t\t\t\tthis.listeners = {};\n\t\t\t}\n\t\t}\n\n\t\tpublic hasEventListener(eventType:string):boolean {\n\t\t\treturn this.listeners[eventType] != null;\n\t\t}\n\n\t\tpublic dispatchEvent(event:Event):void {\n\t\t\tlet listeners:EventListener[] = this.listeners[event.getType()];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tlisteners[i].call(this.target, event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic dispatchEventType<T = any>(eventType:string, target:Object = null, data:T = null):void {\n\t\t\tthis.dispatchEvent(new Event<T>(eventType, target, data));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:any;\n\t\tprivate listeners:util.Hash<EventListener[]>;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport enum CommandState {\n\t\tSleeping     = 0,\n\t\tExecuting    = 1,\n\t\tInterrupting = 2,\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class CommandEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():CommandEvent {\n\t\t\treturn new CommandEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[CommandEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Command extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(executeFunction:Function = null, interruptFunction:Function = null, destroyFunction:Function = null) {\n\t\t\tsuper();\n\n\t\t\tthis.setExecuteFunction(executeFunction);\n\t\t\tthis.setInterruptFunction(interruptFunction);\n\t\t\tthis.setDestroyFunction(destroyFunction);\n\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.self = this;\n\t\t\tthis.parent = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic execute():void {\n\t\t\tif (this.state > CommandState.Sleeping) {\n\t\t\t\tthrow new Error('[Command.execute] + Command is already executing.');\n\t\t\t}\n\t\t\tthis.state = CommandState.Executing;\n\t\t\tthis.getExecuteFunction().call(this, this);\n\t\t}\n\n\t\tpublic interrupt():void {\n\t\t\tif (this.state == CommandState.Executing) {\n\t\t\t\tthis.state = CommandState.Interrupting;\n\t\t\t\tthis.getInterruptFunction().call(this, this);\n\t\t\t}\n\t\t}\n\n\t\tpublic destroy():void {\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.getDestroyFunction().call(this, this);\n\t\t\tthis.parent = null;\n\t\t\tthis.executeFunction = null;\n\t\t\tthis.interruptFunction = null;\n\t\t\tthis.destroyFunction = null;\n\t\t}\n\n\t\tprotected notifyComplete():void {\n\t\t\tswitch (this.state) {\n\t\t\t\tcase CommandState.Sleeping:\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Executing:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Interrupting:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getExecuteFunction():Function { return this.executeFunction || this.implExecuteFunction };\n\t\tpublic setExecuteFunction(func:Function):void { this.executeFunction = func; }\n\t\tprivate executeFunction:Function;\n\n\t\tpublic getInterruptFunction():Function { return this.interruptFunction || this.implInterruptFunction };\n\t\tpublic setInterruptFunction(func:Function):void { this.interruptFunction = func; }\n\t\tprivate interruptFunction:Function;\n\n\t\tpublic getDestroyFunction():Function { return this.destroyFunction || this.implDestroyFunction };\n\t\tpublic setDestroyFunction(func:Function):void { this.destroyFunction = func; }\n\t\tprivate destroyFunction:Function;\n\n\t\tpublic getState():CommandState { return this.state; }\n\t\tprivate state:CommandState;\n\n\t\tpublic getParent():Command { return this.parent; }\n\t\tpublic setParent(parent:Command):void { this.parent = parent; }\n\t\tprivate parent:Command;\n\n\t\tpublic getSelf():Command { return this.self; }\n\t\tprivate self:Command;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport abstract class CommandList extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper();\n\t\t\tthis.commands = [];\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tthis.commands = this.getCommands().concat(<Command[]>commands);\n\t\t\t}\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(0, ...commands);\n\t\t}\n\n\t\tprotected insertCommandAt(index:number, ...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tArray.prototype.splice.apply(this.getCommands(), (<any[]>[index, 0]).concat(commands));\n\t\t\t}\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprotected insertCommandArrayAt(index:number, commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(index, ...commands);\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn this.commands.length;\n\t\t}\n\n\t\tpublic getCommandByIndex(index:number):Command { return this.commands[index]; }\n\t\tpublic getCommands():Command[] { return this.commands; }\n\n\t\tprivate preProcess(commands:(Command|Function)[]):void {\n\t\t\tconst numCommands:number = commands.length;\n\t\t\tlet command:Command|Function;\n\t\t\tfor (let i:number = 0; i < numCommands; ++i) {\n\t\t\t\tcommand = commands[i];\n\t\t\t\tif (typeof(command) == 'function') commands[i] = command = new Func(command);\n\t\t\t\tcommand.setParent(this);\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\t\tprotected abstract implNotifyBreak():void;\n\t\tprotected abstract implNotifyReturn():void;\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate commands:Command[];\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Break extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyBreak'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Return extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Log extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...messages:any[]) {\n\t\t\tsuper();\n\t\t\tthis.messages = messages;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call(this.messages));\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.messages = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getMessages():any[] { return this.messages; }\n\t\tpublic setMessages(messages:any[]):void { this.messages = messages; }\n\t\tprivate messages:any[];\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Wait extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(time:number = 1000) {\n\t\t\tsuper();\n\t\t\tthis.time = time;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.timerId = window.setTimeout(this.completeHandler, this.time);\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearTimeout(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTime():number { return this.time; }\n\t\tpublic setTime(time:number):void { this.time = time; }\n\t\tprivate time:number;\n\n\t\tprivate timerId:number;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Func extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(func:Function = null, args:any[] = [], eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.func = func;\n\t\t\tthis.args = args;\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t\tthis.func(...this.args);\n\t\t\t} else {\n\t\t\t\tthis.func(...this.args);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.func = null;\n\t\t\tthis.args = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t\tthis.eventType = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getFunction():Function { return this.func; }\n\t\tpublic setFunction(func:Function):void { this.func = func; }\n\t\tprivate func:Function;\n\n\t\tpublic getArguments():any[] { return this.args; }\n\t\tpublic setArguments(args:any[]):void { this.args = args; }\n\t\tprivate args:any[];\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Listen extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.eventType = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Easing = alm.math.Easing;\n\timport EasingFunction = alm.math.EasingFunction;\n\n\texport type TweenCallbackFunction = (progressTime:number, progressValue:number) => void;\n\n\texport class Tween extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:Object, to:Object, from:Object = null, duration:number = 1000, easing:EasingFunction = Easing.linear, onStart:TweenCallbackFunction = null, onUpdate:TweenCallbackFunction = null, onComplete:TweenCallbackFunction = null) {\n\t\t\tsuper();\n\t\t\tthis.tweenTarget = target;\n\t\t\tthis.to = to;\n\t\t\tthis.from = from;\n\t\t\tthis.duration = duration;\n\t\t\tthis.easing = easing;\n\t\t\tthis.onStart = onStart;\n\t\t\tthis.onUpdate = onUpdate;\n\t\t\tthis.onComplete = onComplete;\n\t\t\tthis.progressTime = 0;\n\t\t\tthis.progressValue = 0;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.internalFrom = {};\n\t\t\tlet value0:number;\n\t\t\tlet value1:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue1 = this.to[key];\n\t\t\t\tif (this.from && this.from[key] != null) {\n\t\t\t\t\tthis.internalFrom[key] = this.from[key];\n\t\t\t\t} else {\n\t\t\t\t\tthis.internalFrom[key] = this.tweenTarget[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.duration > 0) {\n\t\t\t\tthis.timerId = window.setInterval(this.intervalHandler, Tween.updateInterval);\n\t\t\t\tthis.startTime = new Date().getTime();\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t\tthis.apply(1);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\n\t\t\tthis.tweenTarget = null;\n\t\t\tthis.to = null;\n\t\t\tthis.from = null;\n\t\t\tthis.easing = null;\n\t\t\tthis.onStart = null;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.onComplete = null;\n\t\t\tthis.internalFrom = null;\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearInterval(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate apply(timeRatio:number):void {\n\t\t\tthis.progressTime = timeRatio;\n\t\t\tthis.progressValue = this.easing(this.progressTime);\n\t\t\tlet value0:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue0 = this.internalFrom[key];\n\t\t\t\tthis.tweenTarget[key] = value0 + (this.to[key] - value0) * this.progressValue;\n\t\t\t}\n\t\t}\n\n\t\tprivate intervalHandler = ():void => {\n\t\t\tconst elapsedTime:number = new Date().getTime() - this.startTime;\n\t\t\tif (elapsedTime < this.duration) {\n\t\t\t\tthis.apply(elapsedTime / this.duration);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(1);\n\t\t\t\tthis.cancel();\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTarget():Object { return this.tweenTarget; }\n\t\tpublic setTarget(target:Object):void { this.tweenTarget = target; }\n\t\tprivate tweenTarget:Object;\n\n\t\tpublic getDuration():number { return this.duration; }\n\t\tpublic setDuration(duration:number):void { this.duration = duration; }\n\t\tprivate duration:number;\n\n\t\tpublic getTo():Object { return this.to; }\n\t\tpublic setTo(to:Object):void { this.to = to; }\n\t\tprivate to:Object;\n\n\t\tpublic getFrom():Object { return this.from; }\n\t\tpublic setFrom(from:Object):void { this.from = from; }\n\t\tprivate from:Object;\n\n\t\tpublic getEasing():EasingFunction { return this.easing; }\n\t\tpublic setEasing(easing:EasingFunction):void { this.easing = easing; }\n\t\tprivate easing:EasingFunction;\n\n\t\tpublic getOnStart():TweenCallbackFunction { return this.onStart; }\n\t\tpublic setOnStart(func:TweenCallbackFunction):void { this.onStart = func; }\n\t\tprivate onStart:TweenCallbackFunction;\n\n\t\tpublic getOnUpdate():TweenCallbackFunction { return this.onUpdate; }\n\t\tpublic setOnUpdate(func:TweenCallbackFunction):void { this.onUpdate = func; }\n\t\tprivate onUpdate:TweenCallbackFunction;\n\n\t\tpublic getOnComplete():TweenCallbackFunction { return this.onComplete; }\n\t\tpublic setOnComplete(func:TweenCallbackFunction):void { this.onComplete = func; }\n\t\tprivate onComplete:TweenCallbackFunction;\n\n\t\tpublic getProgressTime():number { return this.progressTime; }\n\t\tprivate progressTime:number;\n\n\t\tpublic getProgressValue():number { return this.progressValue; }\n\t\tprivate progressValue:number;\n\n\t\tprivate startTime:number;\n\t\tprivate timerId:number;\n\t\tprivate internalFrom:Object;\n\n\t\tpublic getUpdateInterval():number { return Tween.updateInterval; }\n\t\tpublic setUpdateInterval(milliseconds:number):void { Tween.updateInterval = milliseconds; }\n\t\tprivate static updateInterval:number = 1000 / 60;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Serial extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.currentCommand = null;\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.insertCommandAt(this.position + 1, ...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCommand = this.getCommandByIndex(this.position);\n\t\t\tthis.currentCommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand.execute();\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand = null;\n\t\t\tif (++this.position >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.position = 0;\n\t\t\tif (this.getLength() > 0) {\n\t\t\t\tthis.next();\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.destroy();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getPosition():number { return this.position; }\n\t\tprivate position:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector2 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0) {\n\t\t\tthis.set(x, y);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic copyTo(point:Vector2):void {\n\t\t\tpoint.set(this.x, this.y);\n\t\t}\n\n\t\tpublic getClone():Vector2 {\n\t\t\treturn new Vector2(this.x, this.y);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector2):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tpublic getDistance(point:Vector2):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector3 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, z:number = 0) {\n\t\t\tthis.set(x, y, z);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, z:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic copyTo(point:Vector3):void {\n\t\t\tpoint.set(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic getClone():Vector3 {\n\t\t\treturn new Vector3(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t\tthis.z /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector3):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\tconst dz:number = point.z - this.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tpublic getDistance(point:Vector3):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic z:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport class Rectangle {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0) {\n\t\t\tthis.set(x, y, width, height);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, width:number, height:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tpublic copyTo(rect:Rectangle):void {\n\t\t\trect.set(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getClone():Rectangle {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getTop():number {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tpublic getBottom():number {\n\t\t\treturn this.y + this.height;\n\t\t}\n\n\t\tpublic getLeft():number {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tpublic getRight():number {\n\t\t\treturn this.x + this.width;\n\t\t}\n\n\t\tpublic getTopLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getTop());\n\t\t}\n\n\t\tpublic getTopRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getTop());\n\t\t}\n\n\t\tpublic getBottomLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getBottom());\n\t\t}\n\n\t\tpublic getBottomRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getBottom());\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic width:number;\n\t\tpublic height:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport enum Align {\n\t\tTop_Left,\n\t\tTop_Center,\n\t\tTop_Right,\n\t\tMiddle_Left,\n\t\tMiddle_Center,\n\t\tMiddle_Right,\n\t\tBottom_Left,\n\t\tBottom_Center,\n\t\tBottom_Right\n\t}\n\n\texport enum ScaleMode {\n\t\tExactFit,\n\t\tShowAll,\n\t\tNoBorder,\n\t\tNoScale,\n\t}\n\n\texport class Boxer {\n\n\t\tpublic static resize(target:geom.Rectangle, bounds:geom.Rectangle, scaleMode:ScaleMode = ScaleMode.ShowAll, align:Align = Align.Middle_Center):geom.Rectangle {\n\t\t\tlet tx:number = target.x;\n\t\t\tlet ty:number = target.y;\n\t\t\tlet tw:number = target.width;\n\t\t\tlet th:number = target.height;\n\n\t\t\tconst bx:number = bounds.x;\n\t\t\tconst by:number = bounds.y;\n\t\t\tconst bw:number = bounds.width;\n\t\t\tconst bh:number = bounds.height;\n\n\t\t\tswitch (scaleMode) {\n\t\t\t\tcase ScaleMode.ShowAll:\n\t\t\t\tcase ScaleMode.NoBorder:\n\t\t\t\t\tconst ratioW:number = bw / tw;\n\t\t\t\t\tconst ratioH:number = bh / th;\n\t\t\t\t\tconst ratio:number = scaleMode == ScaleMode.ShowAll ? (ratioW < ratioH ? ratioW : ratioH) : (ratioW > ratioH ? ratioW : ratioH);\n\t\t\t\t\ttw *= ratio;\n\t\t\t\t\tth *= ratio;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ScaleMode.ExactFit:\n\t\t\t\t\treturn new geom.Rectangle(bx, by, bw, bh);\n\t\t\t}\n\n\t\t\ttx = bx + ((align == Align.Top_Left || align == Align.Middle_Left || align == Align.Bottom_Left) ? 0 :\n\t\t\t\t(align == Align.Top_Right || align == Align.Middle_Right || align == Align.Bottom_Right) ? (bw - tw) : (bw - tw) / 2);\n\t\t\tty = by + ((align == Align.Top_Left || align == Align.Top_Center || align == Align.Top_Right) ? 0 :\n\t\t\t\t(align == Align.Bottom_Left || align == Align.Bottom_Center || align == Align.Bottom_Right) ? (bh - th) : (bh - th) / 2);\n\n\t\t\treturn new geom.Rectangle(tx, ty, tw, th);\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Obj {\n\n\t\tpublic static each(target:any, func:(key:string, value:any) => void):void {\n\t\t\tif (target == null) return;\n\t\t\tObject.keys(target).forEach((key:string):void => {\n\t\t\t\tfunc(key, target[key]);\n\t\t\t});\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Arr {\n\n\t\t/**\n\t\t * 等差数列を生成する\n\t\t * @param {number} count 要素数\n\t\t * @param {number} init 初期値\n\t\t * @param {number} step 等差\n\t\t * @returns {number[]} 出力配列\n\t\t */\n\t\tpublic static sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\t\tconst result:number[] = new Array(count);\n\t\t\tlet v:number = init;\n\t\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\t\tresult[i] = v;\n\t\t\t\tv += step;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * 重複を削除したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static unique<T>(list:T[]):T[] {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) === i;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * 重複のみを抽出したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\t\tif (unique) {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2つの入力配列に対して総当たり戦をおこなう\n\t\t * @param {T[]} list1 入力配列1\n\t\t * @param {T[]} list2 入力配列2\n\t\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t\t * @param callback.count コールバックの呼ばれた回数\n\t\t * @param callback.index1 入力配列1の現在のインデックス\n\t\t * @param callback.index2 入力配列2の現在のインデックス\n\t\t * @param callback.element1 入力配列1の現在の要素\n\t\t * @param callback.element2 入力配列2の現在の要素\n\t\t */\n\t\tpublic static roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\t\tlet i:number, j:number, p:number = 1;\n\t\t\tconst m:number = list1.length;\n\t\t\tconst n:number = list2.length;\n\t\t\tfor (i = 0; i < m; ++i) {\n\t\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\timport EasingFunction = alm.math.EasingFunction;\n\n\texport class Num {\n\n\t\t/**\n\t\t * 値を特定の範囲から範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {boolean} clamp trueの場合は入力値を[srcA, srcB]の範囲内に丸める\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static map(value:number, srcA:number, srcB:number, dstA:number, dstB:number, clamp:boolean = true):number {\n\t\t\tif (srcA == srcB) return dstA;\n\t\t\tif (clamp) {\n\t\t\t\tif (srcA < srcB) {\n\t\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\t} else {\n\t\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (value - srcA) * (dstB - dstA) / (srcB - srcA) + dstA;\n\t\t}\n\n\t\t/**\n\t\t * 値を特定の範囲からイージング関数を経由して特定の範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {EasingFunction} easing イージング関関数\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static ease(value:number, srcA:number, srcB:number, dstA:number, dstB:number, easing:EasingFunction):number {\n\t\t\tif (srcA == srcB) return dstA;\n\t\t\tif (srcA < srcB) {\n\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\treturn easing((value - srcA) / (srcB - srcA)) * (dstB - dstA) + dstA;\n\t\t\t} else {\n\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\treturn easing((value - srcB) / (srcA - srcB)) * (dstB - dstA) + dstA;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 乱数（小数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static random(min:number = 0, max:number = 1):number {\n\t\t\treturn min + (max - min) * Math.random();\n\t\t}\n\n\t\t/**\n\t\t * 乱数（整数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static randomInt(min:number = 0, max:number = 1):number {\n\t\t\treturn Math.floor(Num.random(min, max));\n\t\t}\n\n\t\t/**\n\t\t * 値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clamp(value:number, min:number, max:number):number {\n\t\t\treturn value < min ? min : (value > max ? max : value);\n\t\t}\n\n\t\t/**\n\t\t * 2点間の距離を取得する\n\t\t * @param {number} x1 点1のx座標\n\t\t * @param {number} y1 点1のy座標\n\t\t * @param {number} x2 点2のx座標\n\t\t * @param {number} y2 点2のy座標\n\t\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t\t * @returns {number} 距離\n\t\t */\n\t\tpublic static dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\t\tconst dx:number = x2 - x1;\n\t\t\tconst dy:number = y2 - y1;\n\t\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\n\t\t/**\n\t\t * 値をラジアン法から弧度法に変換する\n\t\t * @param {number} radian ラジアン法\n\t\t * @returns {number} 弧度法\n\t\t */\n\t\tpublic static radToDeg(radian:number):number {\n\t\t\treturn radian * Num.RAD2DEG;\n\t\t}\n\n\t\t/**\n\t\t * 値を弧度法からラジアン法に変換する\n\t\t * @param {number} radian 弧度法\n\t\t * @returns {number} ラジアン法\n\t\t */\n\t\tpublic static degToRad(degree:number):number {\n\t\t\treturn degree * Num.DEG2RAD;\n\t\t}\n\n\t\t/**\n\t\t * ある角度からある角度への回転角度を取得する\n\t\t * @param {number} from 元の角度\n\t\t * @param {number} to 目標の角度\n\t\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t\t * @returns {number} 回転角度\n\t\t */\n\t\tpublic static turn(from:number, to:number, radian:boolean = true):number {\n\t\t\treturn radian ? ((to - from + Num.PI3) % Num.PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONST\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static PI2:number = Math.PI * 2;\n\t\tpublic static PI3:number = Math.PI * 3;\n\t\tpublic static PI4:number = Math.PI * 4;\n\t\tpublic static PI5:number = Math.PI * 5;\n\t\tpublic static PI6:number = Math.PI * 6;\n\t\tpublic static PI_2:number = Math.PI / 2;\n\t\tpublic static PI_3:number = Math.PI / 3;\n\t\tpublic static PI_4:number = Math.PI / 4;\n\t\tpublic static PI_6:number = Math.PI / 6;\n\n\t\tprivate static RAD2DEG:number = 180 / Math.PI;\n\t\tprivate static DEG2RAD:number = Math.PI / 180;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Str {\n\n\t\t/**\n\t\t * 時間を h:mm:ss の形式で取得する\n\t\t * @param {number} hours 時\n\t\t * @param {number} minutes 分\n\t\t * @param {number} seconds 秒\n\t\t * @returns {string} h:mm:ss 形式の文字列\n\t\t */\n\t\tpublic static toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\t\tseconds += minutes * 60 + hours * 3600;\n\t\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\t\tlet s:string = ('0' + Math.floor(seconds % 60)).substr(-2, 2);\n\t\t\tif (h != '0') {\n\t\t\t\treturn h + ':' + ('0' + m).substr(-2, 2) + ':' + s;\n\t\t\t} else {\n\t\t\t\treturn m + ':' + s;\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Cmd {\n\n\t\tpublic static stop(command:cmd.Command):any {\n\t\t\tif (command) command.interrupt();\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic static sequence(execute:boolean, ...commands:(cmd.Command|Function)[]):cmd.Serial {\n\t\t\tconst c:cmd.Serial = new cmd.Serial();\n\t\t\tc.addCommand(...commands);\n\t\t\tif (execute) c.execute();\n\t\t\treturn c;\n\t\t}\n\n\t\tpublic static single(execute:boolean, command:cmd.Command):cmd.Command {\n\t\t\tif (execute && command) command.execute();\n\t\t\treturn command;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.resource {\n\n\texport class ObjectPool<T> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * ObjectPool class.\n\t\t * @class\n\t\t * @param {function} onRequireItem This callback function is called when new item is required.\n\t\t * @param {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @param {number} initCount Init item count.\n\t\t * @param {number} growthCount Growth item count.\n\t\t *\n\t\t * @property {number} initCount Init item count.\n\t\t * @property {number} growthCount Growth item count.\n\t\t * @property {function} onRequireItem This callback function is called when new item is required.\n\t\t * @property {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @property {Array} items Array of items.\n\t\t * @property {number} index Current index of items.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tconstructor(onRequireItem:() => T, onDestroyItem:(item:T) => void, initCount:number = 100, growthCount:number = 50) {\n\t\t\tthis.onRequireItem = onRequireItem;\n\t\t\tthis.onDestroyItem = onDestroyItem;\n\t\t\tthis.growthCount = growthCount;\n\t\t\tthis.items = new Array(initCount);\n\t\t\tfor (let i = 0; i < initCount; ++i) {\n\t\t\t\tthis.items[i] = this.onRequireItem();\n\t\t\t}\n\t\t\tthis.index = initCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * Get item from object pool.\n\t\t * @return {T} Item\n\t\t */\n\t\tpublic getItem():T {\n\t\t\tif (this.index > 0) {\n\t\t\t\treturn this.items[--this.index];\n\t\t\t}\n\t\t\tfor (let i = 0; i < this.growthCount; ++i) {\n\t\t\t\tthis.items.unshift(this.onRequireItem());\n\t\t\t}\n\t\t\tthis.index = this.growthCount;\n\t\t\treturn this.getItem();\n\t\t}\n\n\t\t/**\n\t\t * Return item to object pool.\n\t\t * @param {T} Item.\n\t\t * @return void\n\t\t */\n\t\tpublic returnItem(item:T):void {\n\t\t\tthis.items[this.index++] = item;\n\t\t}\n\n\t\t/**\n\t\t * Optimize object pool size.\n\t\t * @return void\n\t\t */\n\t\tpublic reduce():void {\n\t\t\tconst n = this.index;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items.shift());\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t}\n\n\t\t/**\n\t\t * Destroy object pool.\n\t\t * @return void\n\t\t */\n\t\tpublic destroy():void {\n\t\t\tconst n = this.items.length;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items[i]);\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t\tthis.items = null;\n\t\t\tthis.onRequireItem = null;\n\t\t\tthis.onDestroyItem = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate items:T[];\n\t\tprivate index:number;\n\t\tprivate growthCount:number;\n\n\t\tpublic onRequireItem:() => T;\n\t\tpublic onDestroyItem:(item:T) => void;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\timport Hash = alm.util.Hash;\n\n\texport class Switcher<T = string> extends alm.event.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.isLoopEnabled = true;\n\n\t\t\tthis.itemCount = 0;\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.onChange = null;\n\t\t\tthis.onPrev = null;\n\t\t\tthis.onNext = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic setupById(ids:T[]):void {\n\t\t\tthis.itemCount = ids.length;\n\t\t\tthis.itemIds = ids;\n\n\t\t\tthis.itemIndexById = {};\n\t\t\tfor (let i:number = 0; i < this.itemCount; ++i) {\n\t\t\t\tthis.itemIndexById[this.itemIds[i] as unknown as string] = i;\n\t\t\t}\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tpublic setupByCount(itemCount:number):void {\n\t\t\tthis.itemCount = itemCount;\n\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tprivate setup():void {\n\t\t\tthis.newItemIndex = -1;\n\t\t\tthis.oldItemIndex = -1;\n\n\t\t\tthis.newItemId = null;\n\t\t\tthis.oldItemId = null;\n\t\t}\n\n\t\tpublic gotoByIndex(itemIndex:number, useTransition:boolean = true):boolean {\n\t\t\tif (itemIndex < 0 || itemIndex >= this.itemCount) itemIndex = -1;\n\t\t\tif (itemIndex == this.newItemIndex) return false;\n\n\t\t\tthis.oldItemIndex = this.newItemIndex;\n\t\t\tthis.newItemIndex = itemIndex;\n\n\t\t\tif (this.itemIds) {\n\t\t\t\tthis.oldItemId = this.oldItemIndex != -1 ? this.itemIds[this.oldItemIndex] : null;\n\t\t\t\tthis.newItemId = this.newItemIndex != -1 ? this.itemIds[this.newItemIndex] : null;\n\t\t\t}\n\n\t\t\tthis.dispatchPagerEvent(SwitcherEvent.CHANGE, this.onChange, useTransition);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic gotoById(itemId:string, useTransition:boolean = true):boolean {\n\t\t\tconst itemIndex:number = this.itemIndexById.hasOwnProperty(itemId) ? this.itemIndexById[itemId] : -1;\n\t\t\treturn this.gotoByIndex(itemIndex, useTransition);\n\t\t}\n\n\t\tpublic prev(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.newItemIndex - 1;\n\t\t\tif (this.isLoopEnabled && itemIndex < 0) itemIndex = this.itemCount - 1;\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.PREV, this.onPrev, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic next(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.newItemIndex + 1;\n\t\t\tif (this.isLoopEnabled && itemIndex >= this.itemCount) itemIndex = 0;\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.NEXT, this.onNext, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tprivate dispatchPagerEvent(eventType:string, callback:(event:SwitcherEvent<T>) => void, useTransition:boolean):void {\n\t\t\tconst oldItemId:T = (this.itemIds && this.oldItemIndex != -1) ? this.itemIds[this.oldItemIndex] : null;\n\t\t\tconst newItemId:T = (this.itemIds && this.newItemIndex != -1) ? this.itemIds[this.newItemIndex] : null;\n\n\t\t\tconst event:SwitcherEvent<T> = new SwitcherEvent<T>(eventType, this, this.newItemIndex, this.oldItemIndex, this.newItemId, this.oldItemId, useTransition);\n\t\t\tif (callback) {\n\t\t\t\tcallback(event);\n\t\t\t}\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsLoopEnabled():boolean { return this.isLoopEnabled; }\n\t\tpublic setIsLoopEnabled(value:boolean):void { this.isLoopEnabled = value; }\n\t\tprivate isLoopEnabled:boolean;\n\n\t\tpublic getNewItemIndex():number { return this.newItemIndex; }\n\t\tprivate newItemIndex:number;\n\n\t\tpublic getOldItemIndex():number { return this.oldItemIndex; }\n\t\tprivate oldItemIndex:number;\n\n\t\tpublic getItemCount():number { return this.itemCount; }\n\t\tprivate itemCount:number;\n\n\t\tpublic getNewItemId():T { return this.newItemId; }\n\t\tprivate newItemId:T;\n\n\t\tpublic getOldItemId():T { return this.oldItemId; }\n\t\tprivate oldItemId:T;\n\n\t\tpublic getItemIds():T[] { return this.itemIds; }\n\t\tprivate itemIds:T[];\n\n\t\tprivate itemIndexById:Hash<number>;\n\n\t\tpublic onChange:(event:SwitcherEvent<T>) => void;\n\t\tpublic onPrev:(event:SwitcherEvent<T>) => void;\n\t\tpublic onNext:(event:SwitcherEvent<T>) => void;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\texport class SwitcherEvent<T = string> extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static PREV:string = 'prev';\n\t\tpublic static NEXT:string = 'next';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any, newItemIndex:number, oldItemIndex:number, newItemId:T, oldItemId:T, useTransition:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.newItemIndex = newItemIndex;\n\t\t\tthis.oldItemIndex = oldItemIndex;\n\t\t\tthis.newItemId = newItemId;\n\t\t\tthis.oldItemId = oldItemId;\n\t\t\tthis.useTransition = useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SwitcherEvent<T> {\n\t\t\treturn new SwitcherEvent<T>(this.getType(), this.getTarget(), this.newItemIndex, this.oldItemIndex, this.newItemId, this.oldItemId, this.useTransition);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SwitcherEvent] type = ' + this.getType() + ', ' + this.oldItemIndex + ' -> ' + this.newItemIndex + ', transition = ' + this.useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic newItemIndex:number;\n\t\tpublic oldItemIndex:number;\n\t\tpublic newItemId:T;\n\t\tpublic oldItemId:T;\n\t\tpublic useTransition:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\texport class Lottery<T = any> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(values:T[] = null) {\n\t\t\tif (values) {\n\t\t\t\tthis.set(values);\n\t\t\t} else {\n\t\t\t\tthis.initValues = this.restValues = null;\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = true;\n\t\t\t}\n\t\t\tthis.onCheck = null;\n\t\t\tthis.isAutoResetEnabled = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(values:T[]):void {\n\t\t\tthis.initValues = values.concat();\n\t\t\tthis.reset();\n\t\t}\n\n\t\tpublic get():T {\n\t\t\tif (this.isEmpty && this.isAutoResetEnabled) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\tconst index:number = Math.floor(Math.random() * this.restCount);\n\t\t\tconst value:T = this.restValues[index];\n\t\t\tlet result:boolean = true;\n\t\t\tif (this.onCheck) result = this.onCheck(value);\n\t\t\tif (result) {\n\t\t\t\tthis.restValues.splice(index, 1);\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tpublic add(value:T, reset:boolean = false):void {\n\t\t\tthis.initValues.push(value);\n\t\t\tthis.restValues.push(value);\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\tif (reset) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.restValues = this.initValues.concat();\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t}\n\n\t\tpublic getRestCount():number {\n\t\t\treturn this.restCount;\n\t\t}\n\n\t\tpublic getIsEmply():boolean {\n\t\t\treturn this.isEmpty;\n\t\t}\n\n\t\tpublic getIsAutoResetEnabled():boolean {\n\t\t\treturn this.isAutoResetEnabled;\n\t\t}\n\n\t\tpublic setIsAutoResetEnabled(enabled:boolean):void {\n\t\t\tthis.isAutoResetEnabled = enabled;\n\t\t}\n\n\t\tpublic static createIndices(count:number):Lottery<number> {\n\t\t\tconst values:number[] = new Array(count);\n\t\t\tfor (let i:number = 0; i < count; ++i) values[i] = i;\n\t\t\treturn new Lottery<number>(values);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic onCheck:(value:T) => boolean;\n\n\t\tprivate isAutoResetEnabled:boolean;\n\t\tprivate isEmpty:boolean;\n\t\tprivate restCount:number;\n\t\tprivate restValues:T[];\n\t\tprivate initValues:T[];\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class EasingValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, easing:number = 0.1, tolerance:number = 0) {\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.easing = easing;\n\t\t\tthis.tolerance = tolerance;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tconst d:number = this.target - this.value;\n\t\t\t\tif (this.tolerance > 0 && Math.abs(d) <= this.tolerance) {\n\t\t\t\t\tthis.value = this.target;\n\t\t\t\t} else {\n\t\t\t\t\tthis.value += d * this.easing;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():EasingValue {\n\t\t\tconst v:EasingValue = new EasingValue(this.value, this.easing, this.tolerance);\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic easing:number;\n\t\tpublic tolerance:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class SpringValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, spring:number = 0.1, friction:number = 0.9) {\n\t\t\tthis.acceleration = 0;\n\t\t\tthis.velocity = 0;\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.spring = spring;\n\t\t\tthis.friction = friction;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tthis.acceleration = (this.target - this.value) * this.spring;\n\t\t\t\tthis.velocity += this.acceleration;\n\t\t\t\tthis.velocity *= this.friction;\n\t\t\t\tthis.value += this.velocity;\n\t\t\t} else {\n\t\t\t\tthis.acceleration = 0;\n\t\t\t\tthis.velocity = 0;\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():SpringValue {\n\t\t\tconst v:SpringValue = new SpringValue(this.value, this.spring, this.friction);\n\t\t\tv.acceleration = this.acceleration;\n\t\t\tv.velocity = this.velocity;\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic velocity:number;\n\t\tpublic acceleration:number;\n\t\tpublic spring:number;\n\t\tpublic friction:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tthis._value = (this._value * this._count + n) / ++this._count;\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _count:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleMovingAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxCount:number) {\n\t\t\tthis.maxCount = this._maxCount = maxCount;\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._count = this._maxCount;\n\n\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\tthis._value -= oldest;\n\n\t\t\t\tconst latest:number = n / this._maxCount;\n\t\t\t\tthis._value += latest;\n\n\t\t\t\tthis.values.push(latest);\n\n\t\t\t} else {\n\t\t\t\tthis._value *= (this._count - 1);\n\t\t\t\tthis._value += n;\n\t\t\t\tthis._value /= this._count;\n\n\t\t\t\tthis.values.push(n / this._maxCount);\n\t\t\t}\n\n\t\t\t/*\n\t\t\tthis._values.push(n);\n\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._values.shift();\n\t\t\t\tthis._count = this._maxCount;\n\t\t\t}\n\n\t\t\tthis._value = 0;\n\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\tthis._value += this._values[i];\n\t\t\t}\n\t\t\tthis._value /= this._count;\n\t\t\t*/\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class MaxValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxLatestCount:number = 0) {\n\t\t\tthis.maxLatestCount = this._maxLatestCount = maxLatestCount;\n\t\t\tthis.value = this._value = -Number.MAX_VALUE;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (this._maxLatestCount > 0) {\n\t\t\t\tif (++this._count > this._maxLatestCount) {\n\t\t\t\t\tthis._count = this._maxLatestCount;\n\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\t\tif (this._value > oldest) {\n\t\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._value = -Number.MAX_VALUE;\n\t\t\t\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\t\t\t\tconst v:number = this.values[i];\n\t\t\t\t\t\t\tif (this._value < v) {\n\t\t\t\t\t\t\t\tthis._value = v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++this._count;\n\t\t\t\tif (this._value < n) {\n\t\t\t\t\tthis._value = n;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxLatestCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxLatestCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class Circular {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(angle:number = 0, velocity:number = 0, radian:boolean = true) {\n\t\t\tthis.setAngle(angle, radian);\n\t\t\tthis.setVelocity(velocity, radian);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getAngle(radian:boolean = true):number {\n\t\t\treturn radian ? this.angle : (this.angle * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setAngle(angle:number, radian:boolean = true):void {\n\t\t\tthis.angle = radian ? angle : (angle * Math.PI / 180);\n\t\t}\n\n\t\tpublic getVelocity(radian:boolean = true):number {\n\t\t\treturn radian ? this.velocity : (this.velocity * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setVelocity(velocity:number, radian:boolean = true):void {\n\t\t\tthis.velocity = radian ? velocity : (velocity * Math.PI / 180);\n\t\t}\n\n\t\tpublic update():void {\n\t\t\tthis.angle += this.velocity;\n\t\t}\n\n\t\tpublic getSin(length:number = 1):number {\n\t\t\treturn length * Math.sin(this.angle);\n\t\t}\n\n\t\tpublic getCos(length:number = 1):number {\n\t\t\treturn length * Math.cos(this.angle);\n\t\t}\n\n\t\tpublic getTan(length:number = 1):number {\n\t\t\treturn length * Math.tan(this.angle);\n\t\t}\n\n\t\tpublic getMagnitude(length:number = 1):number {\n\t\t\treturn length * (1 + Math.sin(this.angle)) / 2;\n\t\t}\n\n\t\tpublic getVector(length:number = 1, xy:{ x:number, y:number } = null):{ x:number, y:number } {\n\t\t\tif (xy != null) {\n\t\t\t\txy.x = this.getCos(length);\n\t\t\t\txy.y = this.getSin(length);\n\t\t\t} else {\n\t\t\t\treturn { x: this.getCos(length), y: this.getSin(length) };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate angle:number;\n\t\tprivate velocity:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Timer extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(interval:number = 1000, repeatCount:number = 0) {\n\t\t\tsuper();\n\t\t\tthis.interval = interval;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tId = -1;\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\t\t\tthis.tStartTime = this.getCurrentTime();\n\t\t\tthis.startInterval(this.tRestTime != -1 ? this.tRestTime : this.interval);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tRestTime = this.getCurrentTime() - this.tStartTime;\n\t\t\tthis.stopInterval();\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.stop();\n\t\t\tthis.elapsedCount = 0;\n\t\t\tthis.tRestTime = -1;\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tthis.reset();\n\t\t\tthis.start();\n\t\t}\n\n\n\n\n\n\t\tprivate getCurrentTime():number {\n\t\t\treturn new Date().valueOf();\n\t\t}\n\n\t\tprivate startInterval(interval:number):void {\n\t\t\tthis.stopInterval();\n\t\t\tthis.tInterval = interval;\n\t\t\tthis.tId = window.setInterval(this.timerHandler, this.tInterval);\n\t\t}\n\n\t\tprivate stopInterval():void {\n\t\t\tif (this.tId != -1) {\n\t\t\t\tclearInterval(this.tId);\n\t\t\t\tthis.tId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatch(eventType:string):void {\n\t\t\tthis.dispatchEvent(new TimerEvent(eventType, this, this.elapsedCount, this.repeatCount, this.getRestCount()));\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.tStartTime = this.getCurrentTime();\n\t\t\t++this.elapsedCount;\n\t\t\tlet isCompleted:boolean = false;\n\t\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\t\tisCompleted = true;\n\t\t\t\tthis.stop();\n\t\t\t} else if (this.tInterval != this.interval) {\n\t\t\t\tthis.startInterval(this.interval);\n\t\t\t}\n\t\t\tthis.dispatch(TimerEvent.TICK);\n\t\t\tif (isCompleted) {\n\t\t\t\tthis.dispatch(TimerEvent.COMPLETE);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsRunning():boolean { return this.isRunning; }\n\t\tprivate isRunning:boolean;\n\n\t\tpublic getInterval():number { return this.interval; }\n\t\tpublic setInterval(interval:number):void { this.interval = interval; }\n\t\tprivate interval:number;\n\n\t\tpublic getElapsedTime():number { return this.getCurrentTime() - this.tStartTime; }\n\n\t\tpublic getRestTime():number { return this.interval - this.getElapsedTime(); }\n\n\t\tpublic getElapsedCount():number { return this.elapsedCount; }\n\t\tprivate elapsedCount:number;\n\n\t\tpublic getRepeatCount():number { return this.repeatCount; }\n\t\tpublic setRepeatCount(count:number):void { this.repeatCount = count; }\n\t\tprivate repeatCount:number;\n\n\t\tpublic getRestCount():number { return this.repeatCount - this.elapsedCount; }\n\n\t\tprivate tStartTime:number;\n\t\tprivate tRestTime:number;\n\t\tprivate tInterval:number;\n\t\tprivate tId:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class TimerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, elapsedCount:number = 0, repeatCount:number = 0, restCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.elapsedCount = elapsedCount;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.restCount = restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():TimerEvent {\n\t\t\treturn new TimerEvent(this.getType(), this.getTarget(), this.elapsedCount, this.repeatCount, this.restCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[TimerEvent] type = ' + this.getType() + ', elapsedCount = ' + this.elapsedCount + ', repeatCount=' + this.repeatCount + ', restCount=' + this.restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic elapsedCount:number;\n\t\tpublic repeatCount:number;\n\t\tpublic restCount:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\texport type CompleteFunction = (content:any) => void;\n\texport type ErrorFunction = (message:string) => void;\n\n\texport class FileLoader extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.isLoading_ = false;\n\n\t\t\tthis.currentCount = 0;\n\t\t\tthis.totalCount = 0;\n\n\t\t\tthis.currentThreadCount = 0;\n\t\t\tthis.totalThreadCount = 3;\n\n\t\t\tthis.loadingQueries = [];\n\t\t\tthis.loadingQueryIndex = -1;\n\n\t\t\tthis.queriesByQueryId = {};\n\t\t\tthis.queriesByUrl = {};\n\n\t\t\tthis.handlersByType = {};\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic require(url:string, type:string, id:string = ''):string {\n\t\t\treturn this.addQuery(type, url, {}, id);\n\t\t}\n\n\t\tprivate addQuery(type:string, url:string, param:any, id:string = ''):string {\n\t\t\tif (this.queriesByUrl[url]) return this.queriesByUrl[url].id;\n\n\t\t\tconst query:FileQuery = new FileQuery();\n\t\t\tquery.type = type;\n\t\t\tquery.url = url;\n\t\t\tquery.param = param;\n\n\t\t\tif (id != '') {\n\t\t\t\tquery.id = id;\n\t\t\t} else {\n\t\t\t\tquery.id = String(FileLoader.id);\n\t\t\t\t++FileLoader.id;\n\t\t\t}\n\n\t\t\tthis.loadingQueries.push(query);\n\t\t\tthis.queriesByQueryId[query.id] = query;\n\t\t\tthis.queriesByUrl[query.url] = query;\n\t\t\treturn query.id;\n\t\t}\n\n\t\tpublic load():void {\n\t\t\tif (this.isLoading_) return;\n\t\t\tthis.isLoading_ = true;\n\t\t\tthis.loadingQueryIndex = -1;\n\t\t\tthis.next();\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCount = this.loadingQueryIndex + 1;\n\t\t\tthis.totalCount = this.loadingQueries.length;\n\n\t\t\tif (this.currentCount > 0) {\n\t\t\t\tthis.dispatchEvent(new FileLoaderEvent(FileLoaderEvent.PROGRESS, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\n\t\t\twhile (this.currentThreadCount < this.totalThreadCount) {\n\t\t\t\tif (this.loadingQueryIndex + 1 < this.totalCount) {\n\t\t\t\t\t// add thread\n\t\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\t\tquery.isLoading = true;\n\t\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\t\tif (handler) {\n\t\t\t\t\t\thandler.load(query.url, (content:any):void => {\n\t\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content);\n\t\t\t\t\t\t},(message:string = ''):void => {\n\t\t\t\t\t\t\tthis.fileLoadErrorHandler(query, message);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\t}\n\t\t\t\t\t// continue loop\n\n\t\t\t\t} else {\n\t\t\t\t\t// all finished\n\t\t\t\t\tthis.isLoading_ = false;\n\t\t\t\t\tthis.loadingQueries = [];\n\t\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\t\tthis.dispatchEvent(new FileLoaderEvent(FileLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\tif (this.currentCount < this.totalCount) {\n\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\tquery.isLoading = true;\n\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\tif (handler) {\n\t\t\t\t\thandler.load(query.url, (content:any):void => {\n\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content);\n\t\t\t\t\t},(message:string = ''):void => {\n\t\t\t\t\t\tthis.fileLoadErrorHandler(query, message);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\tthis.next();\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis.isLoading_ = false;\n\t\t\t\tthis.loadingQueries = [];\n\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\tthis.dispatchEvent(new FileLoaderEvent(FileLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tpublic addHandler(handler:IFileHandler):void {\n\t\t\tthis.handlersByType[handler.getType()] = handler;\n\t\t}\n\n\t\tprivate fileLoadCompleteHandler = (query:FileQuery, content:any):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tquery.content = content;\n\t\t\tif (query.param.onLoad) {\n\t\t\t\tquery.param.onLoad(content);\n\t\t\t}\n\t\t\tthis.next();\n\t\t};\n\n\t\tprivate fileLoadErrorHandler = (query:FileQuery, message:string):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tif (query.param.onError) {\n\t\t\t\tquery.param.onError(message);\n\t\t\t}\n\t\t\tthis.next();\n\t\t};\n\n\t\tpublic getQueryByQueryId(queryId:string):FileQuery {\n\t\t\treturn this.queriesByQueryId[queryId];\n\t\t}\n\n\t\tpublic getQueryByUrl(url:string):FileQuery {\n\t\t\treturn this.queriesByUrl[url];\n\t\t}\n\n\t\tpublic isLoading():boolean {\n\t\t\treturn this.isLoading_;\n\t\t}\n\n\t\tpublic getCurrentCount():number {\n\t\t\treturn this.currentCount;\n\t\t}\n\n\t\tpublic getTotalCount():number {\n\t\t\treturn this.totalCount;\n\t\t}\n\n\t\tpublic getContentByUrl<T = any>(url:string):T {\n\t\t\treturn this.queriesByUrl[url].content;\n\t\t}\n\n\t\tpublic getContentByQueryId<T = any>(textureId:string):T {\n\t\t\treturn this.queriesByQueryId[textureId].content;\n\t\t}\n\n\t\tpublic getCurrentThreadCount():number {\n\t\t\treturn this.currentThreadCount;\n\t\t}\n\n\t\tpublic getTotalThreadCount():number {\n\t\t\treturn this.totalThreadCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isLoading_:boolean;\n\n\t\tprivate currentCount:number;\n\t\tprivate totalCount:number;\n\n\t\tprivate currentThreadCount:number;\n\t\tprivate totalThreadCount:number;\n\n\t\tprivate loadingQueries:FileQuery[];\n\t\tprivate loadingQueryIndex:number;\n\n\t\tprivate queriesByQueryId:util.Hash<FileQuery>;\n\t\tprivate queriesByUrl:util.Hash<FileQuery>;\n\n\t\tprivate handlersByType:util.Hash<IFileHandler>;\n\n\t\tprivate static id:number = 0;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic PROGRESS:string = 'progress';\n\t\tstatic COMPLETE:string = 'complete';\n\t\tstatic ERROR:string = 'error';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, progress:number = 0, loadedCount:number = 0, totalCount:number = 0, content:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.progress = progress;\n\t\t\tthis.loadedCount = loadedCount;\n\t\t\tthis.totalCount = totalCount;\n\t\t\tthis.content = content;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderEvent {\n\t\t\treturn new FileLoaderEvent(this.getType(), this.getTarget(), this.progress, this.loadedCount, this.totalCount, this.content);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderEvent] type = ' + this.getType() + ', progress = ' + this.progress + ', loadedCount = ' + this.loadedCount + ', totalCount = ' + this.totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic progress:number;\n\t\tpublic loadedCount:number;\n\t\tpublic totalCount:number;\n\t\tpublic content:any;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\texport class FileQuery {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.isLoadComplete = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic id:string;\n\t\tpublic type:string;\n\t\tpublic url:string;\n\t\tpublic param:any;\n\t\tpublic content:any;\n\t\tpublic isLoading:boolean;\n\t\tpublic isLoadComplete:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.view {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Logger = alm.io.Logger;\n\n\texport abstract class View<T = any> extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(view:T = null, id:string = null) {\n\t\t\tsuper();\n\t\t\tthis.id = id != null ? id : String(View.viewCount);\n\t\t\tthis.view = view;\n\t\t\tthis.name = '';\n\t\t\tthis.autoHideWithInit = true;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = false;\n\t\t\tthis.isShowing = false;\n\t\t\tthis.isShown = true;\n\t\t\tthis.isHiding = false;\n\n\t\t\tif (View.viewsById[this.id]) {\n\t\t\t\tLogger.warn('view id \\'' + this.id + '\\' is duplicate');\n\t\t\t}\n\t\t\tView.viewsById[this.id] = this;\n\t\t\t++View.viewCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic initialize():void {\n\t\t\tif (this.isInitializing || this.isInitialized) return;\n\t\t\tthis.isInitializing = true;\n\n\t\t\t//if (View.viewsById[this.id] == null) {\n\t\t\t//\tView.viewsById[this.id] = this;\n\t\t\t//}\n\n\t\t\tthis.view = this.implInitialize();\n\t\t\tif (this.isInitializing) {\n\t\t\t\tthrowError(this.name || this, 'view is not assigned', !this.view);\n\t\t\t\tif (this.autoHideWithInit) {\n\t\t\t\t\tthis.hide(false);\n\t\t\t\t}\n\t\t\t\tthis.isInitializing = false;\n\t\t\t\tthis.isInitialized = true;\n\t\t\t} else {\n\t\t\t\t// finalized while initializing\n\t\t\t\tthis.view = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic ready():void {\n\t\t\tif (this.isReadying || this.isReadied) return;\n\t\t\tthis.isReadying = true;\n\t\t\tthrowError(this.name || this, 'ready() must be called after initialize()', !this.isInitialized);\n\t\t\tthis.implReady();\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = true;\n\t\t}\n\n\t\tpublic finalize():void {\n\t\t\tif (!this.isInitializing && !this.isInitialized) return;\n\t\t\tthis.implFinalize();\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\n\t\t\tdelete View.viewsById[this.id];\n\t\t\tView.viewsById[this.id] = null;\n\t\t}\n\n\t\tpublic show(useTransition:boolean = true):void {\n\t\t\tif (this.isShown) return;\n\t\t\tthis.getShowCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic hide(useTransition:boolean = true):void {\n\t\t\tif (!this.isShown) return;\n\t\t\tthis.getHideCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic getShowCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (this.isShown) return;\n\t\t\t\t\tthrowError(this.name || this, 'getShowCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\tthrowWarn(this.name || this, 'getShowCommand() is must be called after ready()', this.isReadying|| !this.isReadied);\n\t\t\t\t\tthis.isShown = true;\n\t\t\t\t\tthis.isShowing = true;\n\t\t\t\t\tthis.isHiding = false;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.showCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implShow(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getHideCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (!this.isShown) return;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthrowError(this.name || this, 'getHideCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\t\tthrowWarn(this.name || this, 'getHideCommand() is must be called after ready()', this.isReadying || !this.isReadied);\n\t\t\t\t\t}\n\t\t\t\t\tthis.isShown = false;\n\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\tthis.isHiding = true;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hideCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implHide(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t\t\tthis.isHiding = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getIsInitializing():boolean {\n\t\t\treturn this.isInitializing;\n\t\t}\n\n\t\tpublic getIsInitialized():boolean {\n\t\t\treturn this.isInitialized;\n\t\t}\n\n\t\tpublic getIsReadying():boolean {\n\t\t\treturn this.isReadying;\n\t\t}\n\n\t\tpublic getIsReadied():boolean {\n\t\t\treturn this.isReadied;\n\t\t}\n\n\t\tpublic getIsShowing():boolean {\n\t\t\treturn this.isShowing;\n\t\t}\n\n\t\tpublic getIsShown():boolean {\n\t\t\treturn this.isShown;\n\t\t}\n\n\t\tpublic getIsHiding():boolean {\n\t\t\treturn this.isHiding;\n\t\t}\n\n\t\tpublic getIsHidden():boolean {\n\t\t\treturn !this.isShown;\n\t\t}\n\n\t\tpublic getId():string {\n\t\t\treturn this.id;\n\t\t}\n\n\t\tpublic getView():T {\n\t\t\treturn this.view;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic setName(value:string):void {\n\t\t\tthis.name = value;\n\t\t}\n\n\t\tpublic getAutoHideWithInit():boolean {\n\t\t\treturn this.autoHideWithInit;\n\t\t}\n\n\t\tpublic setAutoHideWithInit(value:boolean):void {\n\t\t\tthis.autoHideWithInit = value;\n\t\t}\n\n\n\n\n\n\t\tprotected abstract implInitialize():T;\n\t\tprotected abstract implReady():void;\n\t\tprotected abstract implFinalize():void;\n\t\tprotected abstract implShow(view:T, useTransition:boolean):cmd.Command;\n\t\tprotected abstract implHide(view:T, useTransition:boolean):cmd.Command;\n\n\n\n\n\n\t\tpublic static getViewById(id:string):View {\n\t\t\treturn View.viewsById[id];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate id:string;\n\t\tprivate view:T;\n\t\tprivate name:string;\n\t\tprivate autoHideWithInit:boolean;\n\t\tprivate showCommand:cmd.Command;\n\t\tprivate hideCommand:cmd.Command;\n\t\tprivate isInitializing:boolean;\n\t\tprivate isInitialized:boolean;\n\t\tprivate isReadying:boolean;\n\t\tprivate isReadied:boolean;\n\t\tprivate isShowing:boolean;\n\t\tprivate isShown:boolean;\n\t\tprivate isHiding:boolean;\n\n\t\tprivate static viewCount:number = 0;\n\t\tprivate static viewsById:util.Hash<View> = {};\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.view {\n\n\texport class ButtonBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:IButton, hitArea:HTMLElement = null, isHoverCursorEnabled:boolean = true, isPreventDefaultEnabled:boolean = true, isStopPropagationEnabled:boolean = true) {\n\t\t\tthis.target = target;\n\t\t\tthis.hitArea = null;\n\t\t\tthis.isHoverCursorEnabled = isHoverCursorEnabled;\n\t\t\tthis.isPreventDefaultEnabled = isPreventDefaultEnabled;\n\t\t\tthis.isStopPropagationEnabled = isStopPropagationEnabled;\n\t\t\tthis.isEnabled = true;\n\t\t\tthis.isOver = false;\n\t\t\tthis.isDown = false;\n\t\t\tthis.isOverInternal = false;\n\t\t\tthis.isDownInternal = false;\n\t\t\tthis.defaultMouseCursor = '';\n\n\t\t\tthis.setHitArea(hitArea);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic over(useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isOver) return;\n\t\t\t\tthis.isOver = true;\n\t\t\t\tthis.target.implButtonOver(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic out(useTransition:boolean = true):void {\n\t\t\tthis._out(true, useTransition);\n\t\t}\n\n\t\tprivate _out(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isOver) return;\n\t\t\t\tthis.isOver = false;\n\t\t\t\tthis.target.implButtonOut(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic down(useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isDown) return;\n\t\t\t\tthis.isDown = true;\n\t\t\t\tthis.target.implButtonDown(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic up(useTransition:boolean = true):void {\n\t\t\tthis._up(true, useTransition);\n\t\t}\n\n\t\tprivate _up(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isDown) return;\n\t\t\t\tthis.isDown = false;\n\t\t\t\tthis.target.implButtonUp(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic click(useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled) {\n\t\t\t\tthis.target.implButtonClick(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tprivate on():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.addEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.addEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.addEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.addEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.addEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.addEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.addEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.addEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tprivate off():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.removeEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.removeEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.removeEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.removeEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.removeEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.removeEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tpublic getIsEnabled():boolean {\n\t\t\treturn this.isEnabled;\n\t\t}\n\n\t\tpublic setIsEnabled(value:boolean, useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled != value) {\n\t\t\t\tthis.isEnabled = value;\n\t\t\t\tif (this.isEnabled) {\n\t\t\t\t\tif (this.isOverInternal) {\n\t\t\t\t\t\tthis.over();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDownInternal) {\n\t\t\t\t\t\tthis.down();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.isOver) {\n\t\t\t\t\t\tthis._out(false);\n\t\t\t\t\t\tthis.isOverInternal = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDown) {\n\t\t\t\t\t\tthis._up(false);\n\t\t\t\t\t\tthis.isDownInternal = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.target.implButtonChangeEnabled(this.isEnabled, useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsOver():boolean {\n\t\t\treturn this.isOver;\n\t\t}\n\n\t\tpublic getIsDown():boolean {\n\t\t\treturn this.isDown;\n\t\t}\n\n\t\tpublic getHitArea():HTMLElement {\n\t\t\treturn this.hitArea;\n\t\t}\n\n\t\tpublic setHitArea(hitArea:HTMLElement):void {\n\t\t\tif (this.hitArea !== hitArea) {\n\t\t\t\tthis.off();\n\t\t\t\tthis.hitArea = hitArea;\n\t\t\t\tthis.on();\n\t\t\t}\n\t\t}\n\n\t\tpublic clearHitArea():void {\n\t\t\tthis.setHitArea(null);\n\t\t}\n\n\t\tpublic getIsPreventDefaultEnabled():boolean {\n\t\t\treturn this.isPreventDefaultEnabled;\n\t\t}\n\n\t\tpublic setIsPreventDefaultEnabled(enabled:boolean):void {\n\t\t\tthis.isPreventDefaultEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsStopPropagationEnabled():boolean {\n\t\t\treturn this.isStopPropagationEnabled;\n\t\t}\n\n\t\tpublic setIsStopPropagationEnabled(enabled:boolean):void {\n\t\t\tthis.isStopPropagationEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsHoverCursorEnabled():boolean {\n\t\t\treturn this.isHoverCursorEnabled;\n\t\t}\n\n\t\tpublic setIsHoverCursorEnabled(enabled:boolean):void {\n\t\t\tthis.isHoverCursorEnabled = enabled;\n\t\t}\n\n\t\tprivate applyMouseCursor():void {\n\t\t\tif (this.isHoverCursorEnabled) {\n\t\t\t\tif (this.isOverInternal && this.isEnabled && this.hitArea != null) {\n\t\t\t\t\tthis.defaultMouseCursor = this.hitArea.style.cursor;\n\t\t\t\t\tthis.hitArea.style.cursor = 'pointer';\n\t\t\t\t} else {\n\t\t\t\t\tthis.hitArea.style.cursor = this.defaultMouseCursor != '' ? this.defaultMouseCursor : 'auto';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// --------------------------------------------------\n\t\t// Mouse Event\n\n\t\tprivate mouseOverHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.over();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseOutHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.out();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseDownHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate mouseUpHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\t\tprivate clickHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.click();\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Touch Event\n\n\t\tprivate touchStartHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate touchEndHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t\tthis.click();\n\t\t};\n\n\t\tprivate touchCancelHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:IButton;\n\t\tprivate hitArea:HTMLElement;\n\t\tprivate isEnabled:boolean;\n\t\tprivate isOver:boolean;\n\t\tprivate isDown:boolean;\n\t\tprivate isOverInternal:boolean;\n\t\tprivate isDownInternal:boolean;\n\t\tprivate isPreventDefaultEnabled:boolean;\n\t\tprivate isStopPropagationEnabled:boolean;\n\t\tprivate isHoverCursorEnabled:boolean;\n\t\tprivate defaultMouseCursor:string;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.view {\n\n\texport class SelectionBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:ISelection) {\n\t\t\tthis.target = target;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic select(useTransition:boolean = true):void {\n\t\t\tif (this.isSelected) return;\n\t\t\tthis.isSelected = true;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic deselect(useTransition:boolean = true):void {\n\t\t\tif (!this.isSelected) return;\n\t\t\tthis.isSelected = false;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic getIsSelected():boolean {\n\t\t\treturn this.isSelected;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:ISelection;\n\t\tprivate isSelected:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class DeviceInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tconst u:string = window.navigator.userAgent.toLowerCase();\n\n\t\t\t// Device\n\t\t\tthis.isTablet = (u.indexOf('windows') != -1 && u.indexOf('touch') != -1)\n\t\t\t\t|| u.indexOf('ipad') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') == -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('tablet') != -1)\n\t\t\t\t|| u.indexOf('kindle') != -1\n\t\t\t\t|| u.indexOf('silk') != -1\n\t\t\t\t|| u.indexOf('playbook') != -1;\n\n\t\t\tthis.isMobile = (u.indexOf('windows') != -1 && u.indexOf('phone') != -1)\n\t\t\t\t|| u.indexOf('iphone') != -1\n\t\t\t\t|| u.indexOf('ipod') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| u.indexOf('blackberry') != -1;\n\n\t\t\tthis.isDesktop = !this.isTablet && !this.isMobile;\n\n\t\t\t// OS\n\t\t\tthis.isIOS = u.indexOf('ipad') != -1 || u.indexOf('iphone') != -1 || u.indexOf('ipod') != -1;\n\t\t\tthis.isAndroid = u.indexOf('android') != -1 && u.indexOf('mobile') != -1;\n\n\t\t\t// Browser\n\t\t\tif(u.indexOf('msie') != -1 || u.indexOf('trident') != -1) {\n\t\t\t\tthis.isIE = true;\n\t\t\t} else if(u.indexOf('edge') != -1) {\n\t\t\t\tthis.isEdge = true;\n\t\t\t} else if(u.indexOf('chrome') != -1) {\n\t\t\t\tthis.isChrome = true;\n\t\t\t} else if(u.indexOf('safari') != -1) {\n\t\t\t\tthis.isSafari = true;\n\t\t\t} else if(u.indexOf('firefox') != -1) {\n\t\t\t\tthis.isFireFox = true;\n\t\t\t} else if(u.indexOf('opera') != -1) {\n\t\t\t\tthis.isOpera = true;\n\t\t\t} else {\n\t\t\t\tthis.isUnknownBrowser = true;\n\t\t\t}\n\n\t\t\t// Function\n\t\t\tthis.isTouchEnabled = (typeof window.ontouchstart) !== 'undefined';\n\t\t\tthis.isDownloadEnabled = !this.isIOS;\n\n\t\t\t// Resolution\n\t\t\tthis.devicePixelRatio = window.devicePixelRatio;\n\t\t\tthis.isRetina = this.devicePixelRatio > 1;\n\t\t}\n\n\t\t// --------------------\n\t\t// Device\n\n\t\tpublic static getIsDesktop():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDesktop;\n\t\t}\n\n\t\tpublic static getIsTablet():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTablet;\n\t\t}\n\n\t\tpublic static getIsMobile():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isMobile;\n\t\t}\n\n\t\t// --------------------\n\t\t// OS\n\n\t\tpublic static getIsIOS():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIOS;\n\t\t}\n\n\t\tpublic static getIsAndroid():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isAndroid;\n\t\t}\n\n\t\t// --------------------\n\t\t// Browser\n\n\t\tpublic static getIsIE():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIE;\n\t\t}\n\n\t\tpublic static getIsEdge():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isEdge;\n\t\t}\n\n\t\tpublic static getIsChrome():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isChrome;\n\t\t}\n\n\t\tpublic static getIsSafari():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isSafari;\n\t\t}\n\n\t\tpublic static getIsFireFox():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isFireFox;\n\t\t}\n\n\t\tpublic static getIsOpera():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isOpera;\n\t\t}\n\n\t\tpublic static getIsUnknownBrowser():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isUnknownBrowser;\n\t\t}\n\n\t\t// --------------------\n\t\t// Function\n\n\t\tpublic static getIsTouchEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTouchEnabled;\n\t\t}\n\n\t\tpublic static getIsDownloadEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDownloadEnabled;\n\t\t}\n\n\t\t// --------------------\n\t\t// Resolution\n\n\t\tpublic static getIsRetina():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isRetina;\n\t\t}\n\n\t\tpublic static getDevicePixelRatio():number {\n\t\t\tthis.initialize();\n\t\t\treturn this.devicePixelRatio;\n\t\t}\n\n\t\tpublic static getDpi():number {\n\t\t\tif (this.dpi == -1) {\n\t\t\t\tconst div:HTMLElement = document.createElement('div');\n\t\t\t\tdiv.setAttribute('style', 'height:1in;left:-100%;top:-100%;position:absolute;width:1in;');\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\tthis.dpi = div.offsetHeight;\n\t\t\t\tdocument.body.removeChild(div);\n\t\t\t}\n\t\t\treturn this.dpi;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isDesktop:boolean = false;\n\t\tprivate static isTablet:boolean = false;\n\t\tprivate static isMobile:boolean = false;\n\n\t\tprivate static isIOS:boolean = false;\n\t\tprivate static isAndroid:boolean = false;\n\n\t\tprivate static isIE:boolean = false;\n\t\tprivate static isEdge:boolean = false;\n\t\tprivate static isChrome:boolean = false;\n\t\tprivate static isSafari:boolean = false;\n\t\tprivate static isFireFox:boolean = false;\n\t\tprivate static isOpera:boolean = false;\n\t\tprivate static isUnknownBrowser:boolean = false;\n\n\t\tprivate static isTouchEnabled:boolean = false;\n\t\tprivate static isDownloadEnabled:boolean = false;\n\n\t\tprivate static isRetina:boolean = false;\n\t\tprivate static devicePixelRatio:number = 1;\n\t\tprivate static dpi:number = -1;\n\n\t\tprivate static isInitialized:boolean = false;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class LocalStorage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param expiredAt 有効期限（UNIXミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any, expiredAt:number = -1):boolean {\n\t\t\tif (!LocalStorage.isAvailable()) return false;\n\t\t\tconst record:{ value:string; expiredAt:number } = { value:JSON.stringify(value), expiredAt: expiredAt };\n\t\t\tlocalStorage.setItem(key, JSON.stringify(record));\n\t\t\treturn true;\n\t\t}\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param minutes 保存期間（分）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static saveWithTerm(key:string, value:any, milliseconds:number = -1):boolean {\n\t\t\tconst expiredAt:number = milliseconds > 0 ? new Date().getTime() + milliseconds :-1;\n\t\t\treturn LocalStorage.save(key, value, expiredAt);\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!LocalStorage.isAvailable()) return defaultValue;\n\t\t\tconst record:{ value:string; expiredAt:number } = JSON.parse(localStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\t// データが見つかった\n\t\t\t\tif (record.expiredAt > 0) {\n\t\t\t\t\t// 期限付きデータ\n\t\t\t\t\tif (new Date().getTime() < record.expiredAt) {\n\t\t\t\t\t\t// 有効期限内\n\t\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 有効期限を過ぎているので破棄\n\t\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t\t\treturn defaultValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 永続データ\n\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!LocalStorage.isAvailable()) return;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (LocalStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem('__CKECK__', '__CKECK__');\n\t\t\t\t\tlocalStorage.removeItem('__CKECK__');\n\t\t\t\t\tLocalStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLocalStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn LocalStorage.isAvailable_;\n\t\t}\n\n\t\t/**\n\t\t * 各時間の尺度ミリ秒で合算する\n\t\t * @param dates 日\n\t\t * @param hours 時\n\t\t * @param minutes 分\n\t\t * @param seconds 秒\n\t\t * @param milliseconds ミリ秒\n\t\t * @returns {number} 合算されたミリ秒\n\t\t */\n\t\tpublic static toMilliseconds(dates:number = 0, hours:number = 0, minutes:number = 0, seconds:number = 0, milliseconds:number = 0):number {\n\t\t\treturn milliseconds + (seconds + (minutes + (hours + dates * 24) * 60) * 60) * 1000;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\t// https://github.com/nfriend/ts-keycode-enum\n\texport enum KeyCode {\n\t\tBackspace = 8,\n\t\tTab = 9,\n\t\tEnter = 13,\n\t\tShift = 16,\n\t\tCtrl = 17,\n\t\tAlt = 18,\n\t\tPauseBreak = 19,\n\t\tCapsLock = 20,\n\t\tEscape = 27,\n\t\tSpace = 32,\n\t\tPageUp = 33,\n\t\tPageDown = 34,\n\t\tEnd = 35,\n\t\tHome = 36,\n\n\t\tLeftArrow = 37,\n\t\tUpArrow = 38,\n\t\tRightArrow = 39,\n\t\tDownArrow = 40,\n\n\t\tInsert = 45,\n\t\tDelete = 46,\n\n\t\tKey0 = 48,\n\t\tKey1 = 49,\n\t\tKey2 = 50,\n\t\tKey3 = 51,\n\t\tKey4 = 52,\n\t\tKey5 = 53,\n\t\tKey6 = 54,\n\t\tKey7 = 55,\n\t\tKey8 = 56,\n\t\tKey9 = 57,\n\n\t\tClosedParen = Key0,\n\t\tExclamationMark = Key1,\n\t\tAtSign = Key2,\n\t\tPoundSign = Key3,\n\t\tHash = PoundSign,\n\t\tDollarSign = Key4,\n\t\tPercentSign = Key5,\n\t\tCaret = Key6,\n\t\tHat = Caret,\n\t\tAmpersand = Key7,\n\t\tStar = Key8,\n\t\tAsterik = Star,\n\t\tOpenParen = Key9,\n\n\t\tA = 65,\n\t\tB = 66,\n\t\tC = 67,\n\t\tD = 68,\n\t\tE = 69,\n\t\tF = 70,\n\t\tG = 71,\n\t\tH = 72,\n\t\tI = 73,\n\t\tJ = 74,\n\t\tK = 75,\n\t\tL = 76,\n\t\tM = 77,\n\t\tN = 78,\n\t\tO = 79,\n\t\tP = 80,\n\t\tQ = 81,\n\t\tR = 82,\n\t\tS = 83,\n\t\tT = 84,\n\t\tU = 85,\n\t\tV = 86,\n\t\tW = 87,\n\t\tX = 88,\n\t\tY = 89,\n\t\tZ = 90,\n\n\t\tLeftWindowKey = 91,\n\t\tRightWindowKey = 92,\n\t\tSelectKey = 93,\n\n\t\tNumpad0 = 96,\n\t\tNumpad1 = 97,\n\t\tNumpad2 = 98,\n\t\tNumpad3 = 99,\n\t\tNumpad4 = 100,\n\t\tNumpad5 = 101,\n\t\tNumpad6 = 102,\n\t\tNumpad7 = 103,\n\t\tNumpad8 = 104,\n\t\tNumpad9 = 105,\n\n\t\tMultiply = 106,\n\t\tAdd = 107,\n\t\tSubtract = 109,\n\t\tDecimalPoint = 110,\n\t\tDivide = 111,\n\n\t\tF1 = 112,\n\t\tF2 = 113,\n\t\tF3 = 114,\n\t\tF4 = 115,\n\t\tF5 = 116,\n\t\tF6 = 117,\n\t\tF7 = 118,\n\t\tF8 = 119,\n\t\tF9 = 120,\n\t\tF10 = 121,\n\t\tF11 = 122,\n\t\tF12 = 123,\n\n\t\tNumLock = 144,\n\t\tScrollLock = 145,\n\n\t\tSemiColon = 186,\n\t\tEquals = 187,\n\t\tComma = 188,\n\t\tDash = 189,\n\t\tPeriod = 190,\n\t\tUnderScore = Dash,\n\t\tPlusSign = Equals,\n\t\tForwardSlash = 191,\n\t\tTilde = 192,\n\t\tGraveAccent = Tilde,\n\n\t\tOpenBracket = 219,\n\t\tClosedBracket = 221,\n\t\tQuote = 222\n\t}\n\n\n\n\n\n\texport class KeyWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] start');\n\n\t\t\twindow.addEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.addEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] stop');\n\n\t\t\twindow.removeEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.removeEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowKeyDownHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] == null) {\n\t\t\t\tKeyWatcher.isKeyPressedByKeyCode[keyCode] = true;\n\t\t\t\t++KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t} else if (KeyWatcher.isContinuousPressEnabled) {\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\t\tprivate static windowKeyUpHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] != null) {\n\t\t\t\tdelete KeyWatcher.isKeyPressedByKeyCode[keyCode];\n\t\t\t\t--KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_UP, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getIsAnyKeyPressed():boolean { return this.pressedKeyCount > 0; }\n\t\tprivate static pressedKeyCount:number = 0;\n\n\t\tpublic static getIsKeyPressed(keyCode:number):boolean { return this.isKeyPressedByKeyCode[keyCode] != null; }\n\t\tprivate static isKeyPressedByKeyCode:util.Hash<boolean> = {};\n\n\n\t\tpublic static getIsContinuousPressEnabled():boolean { return this.isContinuousPressEnabled; }\n\t\tpublic static setIsContinuousPressEnabled(enabled:boolean):void { this.isContinuousPressEnabled = enabled; }\n\t\tprivate static isContinuousPressEnabled:boolean = false;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static isLongPressed:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class KeyWatcherEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic KEY_UP:string = 'keyUp';\n\t\tstatic KEY_DOWN:string = 'keyDown';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, originalEvent:KeyboardEvent = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.key = this.originalEvent.key;\n\t\t\tthis.keyCode = this.originalEvent.keyCode;\n\t\t\tthis.altKey = this.originalEvent.altKey;\n\t\t\tthis.ctrlKey = this.originalEvent.ctrlKey;\n\t\t\tthis.shiftKey = this.originalEvent.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():KeyWatcherEvent {\n\t\t\treturn new KeyWatcherEvent(this.getType(), this.getTarget(), this.originalEvent);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[KeyWatcherEvent] type = ' + this.getType() + ', key = ' + this.key + ', keyCode = ' + this.keyCode + ', altKey = ' + this.altKey + ', ctrlKey = ' + this.ctrlKey + ', shiftKey = ' + this.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic originalEvent:KeyboardEvent;\n\t\tpublic key:string;\n\t\tpublic keyCode:number;\n\t\tpublic altKey:boolean;\n\t\tpublic ctrlKey:boolean;\n\t\tpublic shiftKey:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start(target:Window = null):void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] start');\n\n\t\t\tthis.window = target || window;\n\n\t\t\tthis.window.addEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('scroll', this.windowScrollHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] stop');\n\n\t\t\tthis.window.removeEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('scroll', this.windowScrollHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tthis.windowWidth = this.window.innerWidth;\n\t\t\tthis.windowHeight = this.window.innerHeight;\n\n\t\t\tthis.scrollTop = (this.window.pageYOffset !== undefined) ? this.window.pageYOffset : document.documentElement.scrollTop;\n\t\t\tthis.scrollBottom = this.scrollTop + this.windowHeight;\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static calcScrolledPosition(y:number):number {\n\t\t\treturn y - this.scrollTop;\n\t\t};\n\n\t\tpublic static calcScrolledPositionRatio(y:number):number {\n\t\t\treturn this.calcScrolledPosition(y) / this.windowHeight;\n\t\t}\n\n\t\tprivate static resize(event:Event):void {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.RESIZE, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\tprivate static windowResizeHandler = (event:Event):void => {\n\t\t\tif (!DeviceInfo.getIsDesktop() && WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.resize');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowOrientationChangeHandler = (event:Event):void => {\n\t\t\tif (DeviceInfo.getIsDesktop() || !WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.orientationchange');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowScrollHandler = (event:Event):void => {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.SCROLL, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getWindow():Window { return this.window; }\n\t\tprivate static window:Window = null;\n\n\t\tpublic static getScrollTop():number { return this.scrollTop; }\n\t\tprivate static scrollTop:number;\n\n\t\tpublic static getScrollBottom():number { return this.scrollBottom; }\n\t\tprivate static scrollBottom:number;\n\n\t\tpublic static getWindowWidth():number { return this.windowWidth; }\n\t\tprivate static windowWidth:number = 0;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tpublic static getIsMobileOrientationResize():boolean { return this.isMobileOrientationResize; }\n\t\tpublic static setIsMobileOrientationResize(value:boolean):void { this.isMobileOrientationResize = value; }\n\t\tprivate static isMobileOrientationResize:boolean = true;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcherEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SCROLL:string = 'scroll';\n\t\tstatic RESIZE:string = 'resize';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, originalEvent:Event = null, scrollTop:number = 0, scrollBottom:number = 0, windowWidth:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollBottom = scrollBottom;\n\t\t\tthis.windowWidth = windowWidth;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():WindowWatcherEvent {\n\t\t\treturn new WindowWatcherEvent(this.getType(), this.getTarget(), this.originalEvent, this.scrollTop, this.scrollBottom, this.windowWidth, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[WindowWatcherEvent] type = ' + this.getType() + ', scrollTop = ' + this.scrollTop + ', scrollBottom = ' + this.scrollBottom + ', windowWidth = ' + this.windowWidth + ', windowHeight = ' + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic originalEvent:Event;\n\t\tpublic scrollTop:number;\n\t\tpublic scrollBottom:number;\n\t\tpublic windowWidth:number;\n\t\tpublic windowHeight:number;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.io.Logger;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Scene extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.state = SceneState.Idling;\n\t\t\tthis.parent = null;\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\tthis.isEntered = false;\n\t\t\tthis.onLoad = null;\n\t\t\tthis.onUnload = null;\n\t\t\tthis.onArrive = null;\n\t\t\tthis.onLeave = null;\n\t\t\tthis.onAscend = null;\n\t\t\tthis.onDescend = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child name \\'' + childName + '\\' is already contained.');\n\t\t\t\t} else {\n\t\t\t\t\t++this.numChildren;\n\t\t\t\t\tchild.parent = this;\n\t\t\t\t\tthis.childrenByName[childName] = child;\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic removeChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\t--this.numChildren;\n\t\t\t\t\tchild.parent = null;\n\t\t\t\t\tdelete this.childrenByName[childName];\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child name \\'' + childName + '\\' is not contained.');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic addChildren(children:Scene[]):Scene[] {\n\t\t\tconst addedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.addChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\taddedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn addedChildren;\n\t\t}\n\n\t\tpublic removeChildren(children:Scene[]):Scene[] {\n\t\t\tconst removedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.removeChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\tremovedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn removedChildren;\n\t\t}\n\n\t\tpublic removeAllChildren():Scene[] {\n\t\t\tconst children:Scene[] = [];\n\t\t\tlet child:Scene;\n\t\t\tfor (let name in this.childrenByName) {\n\t\t\t\tchild = this.childrenByName[name];\n\t\t\t\tchild.parent = null;\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\treturn children;\n\t\t}\n\n\t\tpublic contains(child:Scene|string):boolean {\n\t\t\tif (child) {\n\t\t\t\treturn this.childrenByName[typeof child == 'string' ? child : child.name] != null;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getState():SceneState {\n\t\t\treturn this.state;\n\t\t}\n\n\t\tpublic getLastState():SceneState {\n\t\t\treturn this.lastState;\n\t\t}\n\n\t\tpublic getParent():Scene {\n\t\t\treturn this.parent;\n\t\t}\n\n\t\tpublic getChildByName(name:string):Scene {\n\t\t\treturn this.childrenByName[name];\n\t\t}\n\n\t\tpublic getNumChildren():number {\n\t\t\treturn this.numChildren;\n\t\t}\n\n\t\tpublic getManager():SceneManager {\n\t\t\tif (this.parent) {\n\t\t\t\treturn this.parent.getManager();\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getManager was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getPath():string {\n\t\t\tconst manager:SceneManager = this.getManager();\n\t\t\tif (manager) {\n\t\t\t\tconst names:string[] = [this.name];\n\t\t\t\tlet scene:Scene = this;\n\t\t\t\twhile (scene = scene.parent) {\n\t\t\t\t\tnames.unshift(scene.name);\n\t\t\t\t}\n\t\t\t\treturn manager.getScenePathByNames(names);\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getPath was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic gotoScene(path:string):void {\n\t\t\tthis.getManager().goto(path);\n\t\t}\n\n\n\n\n\n\t\tpublic _load(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Loading;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLoad) == 'function' ? this.onLoad() : this.implOnLoad();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _unload(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Unloading;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onUnload) == 'function' ? this.onUnload() : this.implOnUnload();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _arrive(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Arriving;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onArrive) == 'function' ? this.onArrive() : this.implOnArrive();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _leave(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Leaving;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLeave) == 'function' ? this.onLeave() : this.implOnLeave();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _ascend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Ascending;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onAscend) == 'function' ? this.onAscend() : this.implOnAscend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _descend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Descending;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onDescend) == 'function' ? this.onDescend() : this.implOnDescend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\n\n\n\n\t\tprotected implOnLoad():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnUnload():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnArrive():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnLeave():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnAscend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnDescend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t// The callback function is called preferentially over the override\n\t\tpublic onLoad:() => cmd.Command;\n\t\tpublic onUnload:() => cmd.Command;\n\t\tpublic onArrive:() => cmd.Command;\n\t\tpublic onLeave:() => cmd.Command;\n\t\tpublic onAscend:() => cmd.Command;\n\t\tpublic onDescend:() => cmd.Command;\n\n\t\tprivate isEntered:boolean;\n\t\tprivate name:string;\n\t\tprivate state:SceneState;\n\t\tprivate lastState:SceneState;\n\t\tprivate parent:Scene;\n\t\tprivate childrenByName:alm.util.Hash<Scene>;\n\t\tprivate numChildren:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static LOAD:string = 'load';\n\t\tpublic static UNLOAD:string = 'unload';\n\t\tpublic static ARRIVE:string = 'arrive';\n\t\tpublic static LEAVE:string = 'leave';\n\t\tpublic static ASCEND:string = 'ascend';\n\t\tpublic static DESCEND:string = 'descend';\n\n\t\tpublic static LOAD_COMPLETE:string = 'loadComplete';\n\t\tpublic static UNLOAD_COMPLETE:string = 'unloadComplete';\n\t\tpublic static ARRIVE_COMPLETE:string = 'arriveComplete';\n\t\tpublic static LEAVE_COMPLETE:string = 'leaveComplete';\n\t\tpublic static ASCEND_COMPLETE:string = 'ascendComplete';\n\t\tpublic static DESCEND_COMPLETE:string = 'descendComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneEvent {\n\t\t\treturn new SceneEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.io.Logger;\n\timport LoggerLevel = alm.io.LoggerLevel;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class SceneManager extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string = '') {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.root = new core.RootScene(this);\n\t\t\tthis.currentScene = null;\n\n\t\t\tthis.waypoints = [];\n\t\t\tthis.waypointIndex = -1;\n\t\t\tthis.lastState = SceneState.Idling;\n\t\t\tthis.eventIndex = -1;\n\t\t\tthis.transferId = -1;\n\t\t\tthis.transferInfo = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tLogger.verbose('----- scene manager start -----');\n\t\t\tthis.goto('/');\n\t\t}\n\n\t\tpublic goto(path:string):void {\n\t\t\tpath = this.resolvePath(path);\n\n\t\t\t// Return if current destination and new destination is same.\n\t\t\tif (this.transferInfo && this.transferInfo.getDestinationPath() == path) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Build waypoints\n\t\t\tlet newWaypoints:core.Waypoint[] = [];\n\t\t\tif (this.waypointIndex != -1) {\n\t\t\t\tnewWaypoints = this.createWaypoints(this.waypoints[this.waypointIndex].getPath(), path);\n\t\t\t} else {\n\t\t\t\t// Init\n\t\t\t\tnewWaypoints = [new core.Waypoint('/', 0)];\n\t\t\t}\n\n\t\t\t// Transfer\n\t\t\tif (newWaypoints.length > 0) {\n\t\t\t\tconst isDestinationChanged:boolean = this.transferInfo != null;\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.waypointIndex = 0;\n\t\t\t\t\tthis.eventIndex = 0;\n\t\t\t\t\t++this.transferId;\n\t\t\t\t\tthis.waypoints = newWaypoints;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.verbose('destination is changed');\n\t\t\t\t\tLogger.verbose('waypoint index : ' + this.waypointIndex);\n\t\t\t\t\tthis.waypoints = this.waypoints.slice(0, this.waypointIndex + 1).concat(newWaypoints.slice(1));\n\t\t\t\t\tthis.setDirection(this.waypoints);\n\t\t\t\t\tthis.printWaypoint(this.waypoints);\n\t\t\t\t}\n\n\t\t\t\tthis.transferInfo = new SceneTransferInfo(this.transferId, this.waypoints[this.waypointIndex].getPath(), this.waypoints[this.waypoints.length - 1].getPath());\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_START, this));\n\t\t\t\t}\n\n\t\t\t\tthis.checkState();\n\t\t\t}\n\t\t}\n\n\t\tpublic resolvePath(path:string):string {\n\t\t\t// Relative to absolute\n\t\t\tif (path[0] != '/') {\n\t\t\t\tif (this.currentScene) {\n\t\t\t\t\tpath = this.currentScene.getPath() + '/' + path;\n\t\t\t\t} else {\n\t\t\t\t\tpath = '/' + path;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Normalize\n\t\t\tconst names:string[] = path.split('/');\n\t\t\tconst normalized:string[] = [];\n\t\t\tfor (let i:number = 0; i < names.length; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (name == '') continue;\n\t\t\t\tif (name == '.') continue;\n\t\t\t\tif (name == '..') {\n\t\t\t\t\tnormalized.pop();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnormalized.push(name);\n\t\t\t}\n\n\t\t\treturn '/' + normalized.join('/');\n\t\t}\n\n\t\tpublic addSceneAt(path:string, createScene:boolean = false):Scene {\n\t\t\tlet success:boolean = false;\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (i == n - 1) {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tLogger.warn('[SceneManager \\'' + this.name + '\\'] addSceneAt was failed, because path \\'' + path + '\\' is already exist.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tscene = scene.getChildByName(name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn success ? scene : null;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getRoot():Scene {\n\t\t\treturn this.root;\n\t\t}\n\n\t\tpublic getSceneByPath(path:string):Scene {\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tscene = scene.getChildByName(names[i]);\n\t\t\t}\n\t\t\treturn scene;\n\t\t}\n\n\t\tpublic getSceneNamesByPath(path:string):string[] {\n\t\t\treturn path == '/' ? [''] : this.resolvePath(path).split('/');\n\t\t}\n\n\t\tpublic getSceneLevelByNames(names:string[]):number {\n\t\t\treturn names.length - 1;\n\t\t}\n\n\t\tpublic getScenePathByNames(names:string[]):string {\n\t\t\treturn names.length == 0 ? '/' : names.length == 1 ? ('/' + names[0]) : names.join('/');\n\t\t}\n\n\t\tprivate createWaypoints(departurePath:string, destinationPath:string):core.Waypoint[] {\n\t\t\tif (departurePath == destinationPath) {\n\t\t\t\tLogger.warn('[SceneManager] departure path and destination path is same, path = \\'' + departurePath + '\\'');\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tLogger.verbose('----- scene flow -----');\n\n\t\t\tconst waypoints:core.Waypoint[] = [\n\t\t\t\tnew core.Waypoint(departurePath, this.getSceneLevelByNames(this.getSceneNamesByPath(departurePath)))\n\t\t\t];\n\n\t\t\tconst departureNames:string[] = this.getSceneNamesByPath(departurePath);\n\t\t\tconst destinationNames:string[] = this.getSceneNamesByPath(destinationPath);\n\n\t\t\tLogger.verbose('    path');\n\t\t\tLogger.verbose('        current    : \\'' + departurePath + '\\'');\n\t\t\tLogger.verbose('        destination: \\'' + destinationPath + '\\'');\n\n\t\t\tLogger.verbose('    names');\n\t\t\tLogger.verbose('        current(' + departureNames.length + ')    : \\'' + departureNames + '\\'');\n\t\t\tLogger.verbose('        destination(' + destinationNames.length + '): \\'' + destinationNames + '\\'');\n\n\t\t\t// 折り返しを見つける\n\t\t\tlet turningLevel:number = 0;\n\t\t\tlet turningNames:string[] = [];\n\t\t\tlet turningPath:string;\n\t\t\tif (destinationPath == '/') {\n\t\t\t\tturningLevel = -1;\n\t\t\t\tturningNames = [];\n\t\t\t\tturningPath = '/';\n\t\t\t} else {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (departureNames[turningLevel] == destinationNames[turningLevel]) {\n\t\t\t\t\t\tturningNames.push(departureNames[turningLevel]);\n\t\t\t\t\t\t++turningLevel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t--turningLevel;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tturningPath = this.getScenePathByNames(turningNames);\n\t\t\t}\n\n\t\t\tLogger.verbose('    turning');\n\t\t\tLogger.verbose('        path     : ' + turningPath);\n\t\t\tLogger.verbose('        level    : ' + turningLevel);\n\t\t\tLogger.verbose('        names(' + turningNames.length + ') : \\'' + turningNames + '\\'');\n\n\t\t\t// 出発シーンから折り返しまで\n\t\t\t{\n\t\t\t\tconst names:string[] = departureNames.concat();\n\t\t\t\tlet prevPath:string = departurePath;\n\t\t\t\tfor (let i:number = departureNames.length - 1; i > turningLevel + 1; --i) {\n\t\t\t\t\tnames.pop();\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (turningPath == destinationPath && turningLevel > 0) {\n\t\t\t\t// 折り返しと到着シーンが同一\n\t\t\t\tconst from:core.Direction = turningLevel == waypoints[waypoints.length - 1].getLevel() ? core.Direction.Sibling : core.Direction.Ascend;\n\t\t\t\twaypoints.push(new core.Waypoint(turningPath, turningLevel));\n\t\t\t} else {\n\n\t\t\t\t// 折り返しから到達シーンまで\n\t\t\t\tconst names:string[] = turningNames.concat();\n\t\t\t\tconst prev:core.Waypoint = waypoints[waypoints.length - 1];\n\t\t\t\tlet prevPath:string = prev.getPath();\n\t\t\t\tlet prevLevel:number = prev.getLevel();\n\t\t\t\tfor (let i:number = turningLevel + 1; i < destinationNames.length; ++i) {\n\t\t\t\t\tconst name:string = destinationNames[i];\n\t\t\t\t\tnames.push(name);\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevLevel = level;\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 進行方向\n\t\t\tthis.setDirection(waypoints);\n\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tthis.printWaypoint(waypoints);\n\t\t\t}\n\n\t\t\treturn waypoints;\n\t\t}\n\n\t\tprivate setDirection(waypoints:core.Waypoint[]):void {\n\t\t\tconst n:number = waypoints.length;\n\t\t\tlet prev:core.Waypoint = null;\n\t\t\tlet point:core.Waypoint;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tpoint = waypoints[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tconst d:number = point.getLevel() - prev.getLevel();\n\t\t\t\t\tpoint._setFrom(d > 0 ? core.Direction.Descend : d < 0 ? core.Direction.Ascend : core.Direction.Sibling);\n\t\t\t\t\tprev._setTo(point.getFrom());\n\t\t\t\t}\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tprivate printWaypoint(waypoints:core.Waypoint[]):void {\n\t\t\tLogger.verbose('    waypoints');\n\t\t\tconst n:number = waypoints.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tLogger.verbose('        [' + i + '] ' + waypoints[i]);\n\t\t\t}\n\t\t\tLogger.verbose('');\n\t\t}\n\n\n\n\n\n\t\tprivate checkState():void {\n\t\t\ttrace('lastState : ' + scn.getSceneStateString(this.lastState));\n\n\t\t\t//trace(this.waypointIndex + ' / ' + this.waypoints.length);\n\n\t\t\tif (this.waypointIndex >= this.waypoints.length) {\n\t\t\t\tLogger.verbose('----- scene transfer complete -----');\n\t\t\t\tconst tmpTransferId:number = this.transferInfo.getTransferId();\n\t\t\t\tthis.waypointIndex = this.waypoints.length - 1;\n\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_COMPLETE, this));\n\t\t\t\tif (tmpTransferId == this.transferInfo.getTransferId()) {\n\t\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentScene) {\n\t\t\t\tconst currentWaypoint:core.Waypoint = this.waypoints[this.waypointIndex];\n\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypoint.getPath());\n\n\t\t\t\t// Departure scene\n\t\t\t\tif (this.waypoints.length > 1 && this.waypointIndex == 0) {\n\t\t\t\t\ttrace('Departure scene');\n\n\t\t\t\t\t// Leave\n\t\t\t\t\tif (this.lastState != SceneState.Leaving && this.currentScene.getLastState() == SceneState.Arriving) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Leave   : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._leave(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Departure to child\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tthis.checkState();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Through scene\n\t\t\t\tif (this.waypointIndex > 0 && this.waypointIndex < this.waypoints.length - 1) {\n\t\t\t\t\ttrace('Through scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ascend\n\t\t\t\t\tif (this.lastState != SceneState.Ascending && currentWaypoint.getFrom() == core.Direction.Ascend) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Ascend  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._ascend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Descend\n\t\t\t\t\tif (this.lastState != SceneState.Descending && currentWaypoint.getTo() == core.Direction.Descend) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Descend : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._descend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Destination scene\n\t\t\t\tif (this.waypointIndex == this.waypoints.length - 1) {\n\t\t\t\t\ttrace('Destination scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Arrive\n\t\t\t\t\tif (this.lastState != SceneState.Arriving) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Arrive  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._arrive(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\ttrace('Init scene');\n\n\t\t\t\t// Init\n\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\tthis.currentScene = this.root;\n\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t}\n\t\t}\n\n\t\tprivate sceneLoadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Loading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneUnloadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Unloading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneArriveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Arriving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneLeaveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Leaving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneAscendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Ascending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneDescendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Descending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate name:string;\n\t\tprivate root:Scene;\n\t\tprivate currentScene:Scene;\n\n\t\tprivate waypoints:core.Waypoint[];\n\t\tprivate waypointIndex:number;\n\t\tprivate lastState:SceneState;\n\t\tprivate eventIndex:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t\tprivate transferId:number;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TRANSFER_START:string = 'transferStart';\n\t\tpublic static TRANSFER_COMPLETE:string = 'transferComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerEvent {\n\t\t\treturn new SceneManagerEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneManagerEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\texport class SceneTransferInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(transferId:number, departurePath:string, destinationPath:string) {\n\t\t\tthis.transferId = transferId;\n\t\t\tthis.departurePath = departurePath;\n\t\t\tthis.destinationPath = destinationPath;\n\t\t\tthis.relay = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTransferId():number {\n\t\t\treturn this.transferId;\n\t\t}\n\n\t\tpublic getDeparturePath():string {\n\t\t\treturn this.departurePath;\n\t\t}\n\n\t\tpublic getDestinationPath():string {\n\t\t\treturn this.destinationPath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic relay:any;\n\n\t\tprivate transferId:number;\n\t\tprivate departurePath:string;\n\t\tprivate destinationPath:string;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\texport enum SceneState {\n\t\tIdling,\n\t\tLoading,\n\t\tUnloading,\n\t\tArriving,\n\t\tLeaving,\n\t\tAscending,\n\t\tDescending,\n\t}\n\n\texport function getSceneStateString(state:SceneState):string {\n\t\tswitch (state) {\n\t\t\tcase SceneState.Idling:\n\t\t\t\treturn 'idling';\n\t\t\tcase SceneState.Loading:\n\t\t\t\treturn 'loading';\n\t\t\tcase SceneState.Unloading:\n\t\t\t\treturn 'unloading';\n\t\t\tcase SceneState.Arriving:\n\t\t\t\treturn 'arriving';\n\t\t\tcase SceneState.Leaving:\n\t\t\t\treturn 'leaving';\n\t\t\tcase SceneState.Ascending:\n\t\t\t\treturn 'ascending';\n\t\t\tcase SceneState.Descending:\n\t\t\t\treturn 'descending';\n\t\t}\n\t\treturn '';\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace scn.core {\n\n\texport enum Direction {\n\t\tStatic,\n\t\tSibling,\n\t\tAscend,\n\t\tDescend,\n\t}\n\n\texport function getDirectionString(direction:Direction):string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.Static:\n\t\t\t\treturn 'static';\n\t\t\tcase Direction.Sibling:\n\t\t\t\treturn 'sibling';\n\t\t\tcase Direction.Ascend:\n\t\t\t\treturn 'ascend';\n\t\t\tcase Direction.Descend:\n\t\t\t\treturn 'descend';\n\t\t}\n\t\treturn '';\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace scn.core {\n\n\texport class RootScene extends Scene {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(manager:SceneManager) {\n\t\t\tsuper('');\n\t\t\tthis.manager = manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getManager():SceneManager {\n\t\t\treturn this.manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate manager:SceneManager;\n\t}\n}"]}
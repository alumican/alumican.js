{"version":3,"sources":["../src/alumican/cmd/Parallel.ts","../src/alumican/scn/core/Waypoint.ts","../src/alumican/include.ts","../src/alumican/alm/debug/Logger.ts","../src/alumican/alm/util/Time.ts","../src/alumican/alm/math/Easing.ts","../src/alumican/alm/browser/QueryString.ts","../src/alumican/alm/debug/FpsMonitor.ts","../src/alumican/alm/event/Event.ts","../src/alumican/alm/event/EventDispatcher.ts","../src/alumican/cmd/CommandState.ts","../src/alumican/cmd/CommandEvent.ts","../src/alumican/cmd/Command.ts","../src/alumican/cmd/CommandList.ts","../src/alumican/cmd/Break.ts","../src/alumican/cmd/Return.ts","../src/alumican/cmd/Log.ts","../src/alumican/cmd/Wait.ts","../src/alumican/cmd/Func.ts","../src/alumican/cmd/Listen.ts","../src/alumican/cmd/Tween.ts","../src/alumican/cmd/Serial.ts","../src/alumican/alm/geom/Vector2.ts","../src/alumican/alm/geom/Vector3.ts","../src/alumican/alm/geom/Rectangle.ts","../src/alumican/alm/geom/Boxer.ts","../src/alumican/alm/util/Obj.ts","../src/alumican/alm/util/Arr.ts","../src/alumican/alm/util/Num.ts","../src/alumican/alm/util/Str.ts","../src/alumican/alm/util/Cmd.ts","../src/alumican/alm/resource/ObjectPool.ts","../src/alumican/alm/state/Lottery.ts","../src/alumican/alm/state/Switcher.ts","../src/alumican/alm/state/SwitcherEvent.ts","../src/alumican/alm/state/LoHi.ts","../src/alumican/alm/state/LoHiEvent.ts","../src/alumican/alm/math/EasingValue.ts","../src/alumican/alm/math/SpringValue.ts","../src/alumican/alm/math/SimpleAverage.ts","../src/alumican/alm/math/SimpleMovingAverage.ts","../src/alumican/alm/math/MaxValue.ts","../src/alumican/alm/math/Circular.ts","../src/alumican/alm/time/AnimationFrameTicker.ts","../src/alumican/alm/time/AnimationFrameTickerEvent.ts","../src/alumican/alm/time/Timer.ts","../src/alumican/alm/time/TimerEvent.ts","../src/alumican/alm/io/FileLoader.ts","../src/alumican/alm/io/FileLoaderProgressEvent.ts","../src/alumican/alm/io/FileLoaderSuccessEvent.ts","../src/alumican/alm/io/FileLoaderErrorEvent.ts","../src/alumican/alm/io/FileQuery.ts","../src/alumican/alm/view/View.ts","../src/alumican/alm/view/ButtonBehavior.ts","../src/alumican/alm/view/SelectionBehavior.ts","../src/alumican/alm/browser/DeviceInfo.ts","../src/alumican/alm/browser/LocalStorage.ts","../src/alumican/alm/browser/KeyWatcher.ts","../src/alumican/alm/browser/KeyWatcherEvent.ts","../src/alumican/alm/browser/WindowWatcher.ts","../src/alumican/alm/browser/WindowWatcherEvent.ts","../src/alumican/scn/Scene.ts","../src/alumican/scn/SceneEvent.ts","../src/alumican/scn/SceneManager.ts","../src/alumican/scn/SceneManagerEvent.ts","../src/alumican/scn/SceneTransferInfo.ts","../src/alumican/scn/SceneState.ts","../src/alumican/scn/core/Direction.ts","../src/alumican/scn/core/RootScene.ts"],"names":["cmd","scn","alm","trace","messages","_i","arguments","length","debug","Logger","info","apply","caller","throwWarn","target","message","condition","warnIf","throwError","errorIf","util","Time","now","window","performance","Date","math","Easing","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","createEaseInElastic","s","p","a","asin","createEaseOutElastic","createEaseInOutElastic","easeInElastic","defaultEaseInElastic","easeOutElastic","defaultEaseOutElastic","easeInOutElastic","defaultEaseInOutElastic","createEaseInBack","createEaseOutBack","createEaseInOutBack","easeInBack","easeOutBack","defaultEaseOutBack","easeInOutBack","defaultEaseInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","defaultEaseInBack","browser","QueryString","url","this","set","prototype","search","index","indexOf","substring","location","hash","pair","pairs","split","i","getString","key","defaultValue","value","undefined","getInt","parseInt","isNaN","getFloat","parseFloat","getBool","getHash","setHash","setParam","removeParam","hasParam","LoggerLevel","NullLogging","verbose","prefix","warn","error","ConsoleLogging","console","Array","slice","call","concat","log","DOMLogging","print","line","join","html","dom","innerHTML","innerText","ParallelLogging","n","loggers","setLevelByQuery","level","Silent","setNamespace","namespace","Verbose","logger","Info","Warn","Error","stackTrace","FpsMonitor","reset","frameRate","frameCount","startTime","actualFrameRate","dummyFrameRate","update","currentTime","elapsedTime","setDummyFrameRate","clearDummyFrameRate","getFrameRate","event","Event","type","data","getType","getTarget","getData","setData","event_1","EventDispatcher","listeners","addEventListener","eventType","listener","numListeners","push","removeEventListener","splice","removeAllEventListener","hasEventListener","dispatchEvent","dispatchEventType","CommandState","_super","CommandEvent","__extends","clone","toString","COMPLETE","eventTarget","Command","execute","state","Sleeping","Executing","getExecuteFunction","interrupt","Interrupting","getInterruptFunction","destroy","getDestroyFunction","parent","executeFunction","interruptFunction","destroyFunction","notifyComplete","implExecuteFunction","command","implInterruptFunction","implDestroyFunction","setExecuteFunction","func","setInterruptFunction","setDestroyFunction","getState","getParent","setParent","getSelf","self","_this","CommandList","addCommand","commands","preProcess","getCommands","insertCommand","insertCommandAt","__spreadArrays","addCommandArray","insertCommandArray","insertCommandArrayAt","getLength","getCommandByIndex","numCommands","Func","Break","Return","Log","getMessages","setMessages","Wait","timerId","setTimeout","completeHandler","time","cancel","clearTimeout","getTime","setTime","eventDispatcher","args","getFunction","setFunction","getArguments","setArguments","getEventDispatcher","setEventDispatcher","getEventType","setEventType","Listen","Tween","internalFrom","to","from","tweenTarget","duration","setInterval","intervalHandler","updateInterval","onStart","progressTime","progressValue","onUpdate","onComplete","easing","clearInterval","timeRatio","value0","setTarget","getDuration","setDuration","getTo","setTo","getFrom","setFrom","getEasing","setEasing","getOnStart","setOnStart","getOnUpdate","setOnUpdate","getOnComplete","setOnComplete","getProgressTime","getProgressValue","getUpdateInterval","setUpdateInterval","milliseconds","Serial","position","next","currentCommand","isPaused","isCompleteOnPaused","implNotifyBreak","implNotifyReturn","getPosition","Parallel","completeCount","command_1","command_2","command_3","getCompleteCount","geom","Vector2","x","y","copyTo","point","getClone","zero","normalize","l","getSquareDistance","dx","dy","getDistance","Vector3","z","dz","Rectangle","width","height","rect","getTop","getBottom","getLeft","getRight","getTopLeft","getTopRight","getBottomLeft","getBottomRight","Align","ScaleMode","Boxer","resize","bounds","scaleMode","align","ShowAll","Middle_Center","tx","ty","tw","th","bx","by","bw","bh","NoBorder","ratioW","ratioH","ratio","ExactFit","Top_Left","Middle_Left","Bottom_Left","Top_Right","Middle_Right","Bottom_Right","Top_Center","Bottom_Center","Obj","each","Object","keys","forEach","get","Arr","sequence","count","init","step","result","v","unique","list","filter","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","m","Num","map","srcA","srcB","dstA","dstB","clamp","ease","random","min","max","randomInt","floor","clampAbs","minAbs","maxAbs","abs","dist","x1","y1","x2","y2","squared","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","PI3","PI2","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","Str","toTimeString","hours","minutes","seconds","h","substr","Cmd","stop","c","single","resource","ObjectPool","onRequireItem","onDestroyItem","initCount","growthCount","items","getItem","unshift","returnItem","item","reduce","shift","Lottery","values","initValues","restValues","restCount","isEmpty","onCheck","isAutoResetEnabled","add","getRestCount","getIsEmply","getIsAutoResetEnabled","setIsAutoResetEnabled","enabled","createIndices","Switcher","isLoopEnabled","itemCount","itemIds","itemIndexById","onChange","onPrev","onNext","setupById","ids","setup","setupByCount","newItemIndex","oldItemIndex","newItemId","oldItemId","gotoByIndex","itemIndex","useTransition","dispatchPagerEvent","SwitcherEvent","CHANGE","gotoById","itemId","hasOwnProperty","prev","PREV","NEXT","getIsLoopEnabled","setIsLoopEnabled","getNewItemIndex","getOldItemIndex","getItemCount","getNewItemId","getOldItemId","getItemIds","LoHi","lowThreshold","highThreshold","initValue","isHigh","_set","getIsHigh","getValue","getLowThreshold","getHighThreshold","setLowThreshold","threshold","setHighThreshold","LoHiEvent","LOW","HIGH","EasingValue","tolerance","d","SpringValue","spring","friction","acceleration","velocity","SimpleAverage","_value","_count","SimpleMovingAverage","maxCount","_maxCount","oldest","latest","MaxValue","maxLatestCount","_maxLatestCount","Number","MAX_VALUE","Circular","angle","setAngle","setVelocity","getAngle","getVelocity","getSin","getCos","getTan","tan","getMagnitude","getVector","xy","AnimationFrameTicker","updateHandler","requestId","requestAnimationFrame","targetFrameRate","frameStartTime","interval","toleranceDuration","AnimationFrameTickerEvent","TICK","isRunning","start","cancelAnimationFrame","getIsRunning","getTargetFrameRate","Timer","repeatCount","timerHandler","tStartTime","elapsedCount","isCompleted","tInterval","startInterval","dispatch","TimerEvent","tId","tRestTime","stopInterval","restart","getInterval","getElapsedTime","getRestTime","getElapsedCount","getRepeatCount","setRepeatCount","io","FileLoader","totalThreadCount","fileLoadCompleteHandler","query","content","currentThreadCount","isLoading","isLoadComplete","param","onLoad","FileLoaderSuccessEvent","SUCCESS","fileLoadErrorHandler","onError","FileLoaderErrorEvent","ERROR","isLoading_","currentCount","totalCount","loadingQueries","loadingQueryIndex","queriesByQueryId","queriesByUrl","handlersByType","require","id","addQuery","FileQuery","String","load","progress","this_1","FileLoaderProgressEvent","query_1","handler","START","PROGRESS","addHandler","getQueryByQueryId","queryId","getQueryByUrl","getCurrentCount","getTotalCount","getContentByUrl","getContentByQueryId","textureId","getCurrentThreadCount","getTotalThreadCount","loadedCount","view_1","View","view","viewCount","name","autoHideWithInit","isInitializing","isInitialized","isReadying","isReadied","isShowing","isShown","isHiding","viewsById","initialize","implInitialize","hide","ready","implReady","finalize","implFinalize","show","getShowCommand","getHideCommand","showCommand","hideCommand","implShow","implHide","getIsInitializing","getIsInitialized","getIsReadying","getIsReadied","getIsShowing","getIsShown","getIsHiding","getIsHidden","getId","getView","getName","setName","getAutoHideWithInit","setAutoHideWithInit","getViewById","ButtonBehavior","hitArea","isHoverCursorEnabled","isPreventDefaultEnabled","isStopPropagationEnabled","mouseOverHandler","preventDefault","stopPropagation","over","applyMouseCursor","mouseOutHandler","out","mouseDownHandler","down","mouseUpHandler","up","clickHandler","click","touchStartHandler","touchEndHandler","touchCancelHandler","isEnabled","isOver","isDown","isOverInternal","isDownInternal","defaultMouseCursor","setHitArea","implButtonOver","_out","checkEnabled","implButtonOut","implButtonDown","_up","implButtonUp","implButtonClick","on","off","getIsEnabled","setIsEnabled","implButtonChangeEnabled","getIsOver","getIsDown","getHitArea","clearHitArea","getIsPreventDefaultEnabled","setIsPreventDefaultEnabled","getIsStopPropagationEnabled","setIsStopPropagationEnabled","getIsHoverCursorEnabled","setIsHoverCursorEnabled","style","cursor","SelectionBehavior","select","isSelected","implSelectionChanged","deselect","getIsSelected","DeviceInfo","u","navigator","userAgent","toLowerCase","isTablet","isMobile","isDesktop","isIOS","isAndroid","isIE","isEdge","isChrome","isSafari","isFireFox","isOpera","isUnknownBrowser","isTouchEnabled","ontouchstart","isDownloadEnabled","devicePixelRatio","isRetina","getIsDesktop","getIsTablet","getIsMobile","getIsIOS","getIsAndroid","getIsIE","getIsEdge","getIsChrome","getIsSafari","getIsFireFox","getIsOpera","getIsUnknownBrowser","getIsTouchEnabled","getIsDownloadEnabled","getIsRetina","getDevicePixelRatio","getDpi","dpi","div","document","createElement","setAttribute","body","appendChild","offsetHeight","removeChild","LocalStorage","save","expiredAt","isAvailable","record","JSON","stringify","localStorage","setItem","saveWithTerm","parse","removeItem","remove","isAvailable_","toMilliseconds","dates","KeyCode","KeyWatcher","windowKeyDownHandler","windowKeyUpHandler","getIsAnyKeyPressed","pressedKeyCount","getIsKeyPressed","keyCode","isKeyPressedByKeyCode","getIsContinuousPressEnabled","isContinuousPressEnabled","setIsContinuousPressEnabled","KeyWatcherEvent","KEY_DOWN","KEY_UP","isLongPressed","originalEvent","altKey","ctrlKey","shiftKey","WindowWatcher","windowResizeHandler","windowScrollHandler","windowWidth","innerWidth","windowHeight","innerHeight","scrollTop","pageYOffset","documentElement","scrollBottom","calcScrolledPosition","calcScrolledPositionRatio","WindowWatcherEvent","RESIZE","getWindow","getScrollTop","getScrollBottom","getWindowWidth","getWindowHeight","getIsMobileOrientationResize","isMobileOrientationResize","setIsMobileOrientationResize","windowOrientationChangeHandler","SCROLL","Scene","addChild","child","childName","childrenByName","numChildren","addChildren","children","addedChildren","removeChildren","removedChildren","removeAllChildren","name_1","contains","getLastState","lastState","getChildByName","getNumChildren","getManager","getPath","manager","names","scene","getScenePathByNames","gotoScene","path","goto","_load","transferInfo","SceneState","Loading","isEntered","SceneEvent","LOAD","implOnLoad","Idling","LOAD_COMPLETE","_unload","Unloading","UNLOAD","onUnload","implOnUnload","UNLOAD_COMPLETE","_arrive","Arriving","ARRIVE","onArrive","implOnArrive","ARRIVE_COMPLETE","_leave","Leaving","LEAVE","onLeave","implOnLeave","LEAVE_COMPLETE","_ascend","Ascending","ASCEND","onAscend","implOnAscend","ASCEND_COMPLETE","_descend","Descending","DESCEND","onDescend","implOnDescend","DESCEND_COMPLETE","SceneManager","resolvePath","getDestinationPath","newWaypoints","waypointIndex","createWaypoints","waypoints","core","Waypoint","isDestinationChanged","setDirection","printWaypoint","eventIndex","transferId","SceneTransferInfo","SceneManagerEvent","TRANSFER_START","checkState","currentScene","normalized","name_2","pop","addSceneAt","createScene","success","getSceneNamesByPath","root","name_3","getRoot","getSceneByPath","getSceneLevelByNames","departurePath","destinationPath","departureNames","destinationNames","turningPath","turningLevel","turningNames","prevPath","getLevel","Direction","Sibling","Ascend","name_4","_setFrom","Descend","_setTo","getSceneStateString","tmpTransferId","getTransferId","TRANSFER_COMPLETE","currentWaypoint","sceneLeaveCompleteHandler","sceneUnloadCompleteHandler","sceneLoadCompleteHandler","sceneAscendCompleteHandler","sceneDescendCompleteHandler","sceneArriveCompleteHandler","RootScene","getDeparturePath","relay","getDirectionString","direction","Static","getVersion"],"mappings":"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","file":"alumican.min.js","sourcesContent":["/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Parallel extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.completeCount = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tif (++this.completeCount >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.completeCount = 0;\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.execute();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.interrupt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getCompleteCount():number { return this.completeCount; }\n\t\tprivate completeCount:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace scn.core {\n\n\texport class Waypoint {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(path:string, level:number) {\n\t\t\tthis.path = path;\n\t\t\tthis.level = level;\n\t\t\tthis.from = Direction.Static;\n\t\t\tthis.to = Direction.Static;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getPath():string {\n\t\t\treturn this.path;\n\t\t}\n\n\t\tpublic getLevel():number {\n\t\t\treturn this.level;\n\t\t}\n\n\t\tpublic getFrom():Direction {\n\t\t\treturn this.from;\n\t\t}\n\n\t\tpublic getTo():Direction {\n\t\t\treturn this.to;\n\t\t}\n\n\t\tpublic _setFrom(from:Direction):void {\n\t\t\tthis.from = from;\n\t\t}\n\n\t\tpublic _setTo(to:Direction):void {\n\t\t\tthis.to = to;\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[Waypoint] path = \\'' + this.path + '\\', level = ' + this.level + ', from = ' + getDirectionString(this.from) + ', to = ' + getDirectionString(this.to);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate path:string;\n\t\tprivate level:number;\n\t\tprivate from:Direction;\n\t\tprivate to:Direction;\n\t}\n}","/* ---------- dependency ---------- */\n\n/* ---------- project ---------- */\n/// <reference path='alm/util/Time.ts' />\n/// <reference path='alm/math/Easing.ts' />\n/// <reference path='alm/browser/QueryString.ts' />\n\n/// <reference path='alm/debug/Logger.ts' />\n/// <reference path='alm/debug/FpsMonitor.ts' />\n\n/// <reference path='alm/event/Event.ts' />\n/// <reference path='alm/event/EventDispatcher.ts' />\n\n/// <reference path='cmd/CommandState.ts' />\n/// <reference path='cmd/CommandEvent.ts' />\n/// <reference path='cmd/Command.ts' />\n/// <reference path='cmd/CommandList.ts' />\n/// <reference path='cmd/Break.ts' />\n/// <reference path='cmd/Return.ts' />\n/// <reference path='cmd/Log.ts' />\n/// <reference path='cmd/Wait.ts' />\n/// <reference path='cmd/Func.ts' />\n/// <reference path='cmd/Listen.ts' />\n/// <reference path='cmd/Tween.ts' />\n/// <reference path='cmd/Serial.ts' />\n/// <reference path='cmd/Parallel.ts' />\n\n/// <reference path='alm/geom/Vector2.ts' />\n/// <reference path='alm/geom/Vector3.ts' />\n/// <reference path='alm/geom/Rectangle.ts' />\n/// <reference path='alm/geom/Boxer.ts' />\n\n/// <reference path='alm/util/Hash.ts' />\n/// <reference path='alm/util/Obj.ts' />\n/// <reference path='alm/util/Arr.ts' />\n/// <reference path='alm/util/Num.ts' />\n/// <reference path='alm/util/Str.ts' />\n/// <reference path='alm/util/Cmd.ts' />\n\n/// <reference path='alm/resource/ObjectPool.ts' />\n\n/// <reference path='alm/state/Lottery.ts' />\n/// <reference path='alm/state/Switcher.ts' />\n/// <reference path='alm/state/SwitcherEvent.ts' />\n/// <reference path='alm/state/LoHi.ts' />\n/// <reference path='alm/state/LoHiEvent.ts' />\n\n/// <reference path='alm/math/EasingValue.ts' />\n/// <reference path='alm/math/SpringValue.ts' />\n/// <reference path='alm/math/SimpleAverage.ts' />\n/// <reference path='alm/math/SimpleMovingAverage.ts' />\n/// <reference path='alm/math/MaxValue.ts' />\n/// <reference path='alm/math/Circular.ts' />\n\n/// <reference path='alm/time/AnimationFrameTicker.ts' />\n/// <reference path='alm/time/AnimationFrameTickerEvent.ts' />\n/// <reference path='alm/time/Timer.ts' />\n/// <reference path='alm/time/TimerEvent.ts' />\n\n/// <reference path='alm/io/FileLoader.ts' />\n/// <reference path='alm/io/FileLoaderProgressEvent.ts' />\n/// <reference path='alm/io/FileLoaderSuccessEvent.ts' />\n/// <reference path='alm/io/FileLoaderErrorEvent.ts' />\n/// <reference path='alm/io/FileQuery.ts' />\n/// <reference path='alm/io/IFileHandler.ts' />\n\n/// <reference path='alm/view/View.ts' />\n/// <reference path='alm/view/ButtonBehavior.ts' />\n/// <reference path='alm/view/IButton.ts' />\n/// <reference path='alm/view/SelectionBehavior.ts' />\n/// <reference path='alm/view/ISelection.ts' />\n\n/// <reference path='alm/browser/DeviceInfo.ts' />\n/// <reference path='alm/browser/LocalStorage.ts' />\n/// <reference path='alm/browser/KeyWatcher.ts' />\n/// <reference path='alm/browser/KeyWatcherEvent.ts' />\n/// <reference path='alm/browser/WindowWatcher.ts' />\n/// <reference path='alm/browser/WindowWatcherEvent.ts' />\n\n/// <reference path='scn/Scene.ts' />\n/// <reference path='scn/SceneEvent.ts' />\n/// <reference path='scn/SceneManager.ts' />\n/// <reference path='scn/SceneManagerEvent.ts' />\n/// <reference path='scn/SceneTransferInfo.ts' />\n/// <reference path='scn/SceneState.ts' />\n/// <reference path='scn/core/Direction.ts' />\n/// <reference path='scn/core/RootScene.ts' />\n/// <reference path='scn/core/Waypoint.ts' />\n\nnamespace alm {\n\n\t// Library version info\n\texport function getVersion():string {\n\t\treturn '0.0.1';\n\t}\n\n\t// Credit info\n\tconst style:string = 'color:#999;';\n\tconst print:Function = console.debug;\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('%c+ alumican.js', style);\n\tprint('%c+ version ' + getVersion(), style);\n\tprint('%c+ http://alumican.net', style);\n\tprint('%c+ https://github.com/alumican/alumican.js', style);\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('');\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.debug {\n\n\timport QueryString = alm.browser.QueryString;\n\n\texport enum LoggerLevel {\n\t\tVerbose = 0,\n\t\tInfo = 1,\n\t\tWarn = 2,\n\t\tError = 3,\n\t\tSilent = 4,\n\t}\n\n\n\n\n\n\texport interface ILogging {\n\n\t\tverbose(prefix:string, messages:any[]):void;\n\t\tinfo(prefix:string, messages:any[]):void;\n\t\twarn(prefix:string, messages:any[]):void;\n\t\terror(prefix:string, messages:any[]):void;\n\t}\n\n\n\n\n\n\texport class NullLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t}\n\t}\n\n\n\n\n\n\texport class ConsoleLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconsole.debug.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconsole.warn.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconsole.error.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\t}\n\n\n\n\n\n\texport class DOMLogging implements ILogging {\n\n\t\tconstructor(dom:HTMLElement, html:boolean) {\n\t\t\tthis.dom = dom;\n\t\t\tthis.html = html;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tprivate print(prefix:string, messages:any[]):void {\n\t\t\tconst line:string = prefix + messages.join(', ');\n\t\t\tif (this.html) {\n\t\t\t\tthis.dom.innerHTML = line + '<br>\\n' + this.dom.innerHTML;\n\t\t\t} else {\n\t\t\t\tthis.dom.innerText = line + '\\n' + this.dom.innerText;\n\t\t\t}\n\t\t}\n\n\t\tprivate dom:HTMLElement;\n\t\tprivate html:boolean;\n\t}\n\n\n\n\n\n\texport class ParallelLogging implements ILogging {\n\n\t\tconstructor(loggers:ILogging[]) {\n\t\t\tthis.loggers = loggers;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].verbose(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].info(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].warn(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].error(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tprivate loggers:ILogging[];\n\t}\n\n\n\n\n\n\texport class Logger {\n\n\t\tpublic static level:number = LoggerLevel.Verbose;\n\t\tpublic static logger:ILogging = new ConsoleLogging();\n\t\tprivate static namespace:string = '';\n\n\t\tpublic static setLevelByQuery(key:string):void {\n\t\t\tconst level:number = new QueryString().getInt(key, LoggerLevel.Silent);\n\t\t\tLogger.level = isNaN(level) ? LoggerLevel.Silent : level;\n\t\t}\n\n\t\tpublic static setNamespace(namespace:string):void {\n\t\t\tLogger.namespace = namespace != '' ? (namespace + '#') : '';\n\t\t}\n\n\t\tpublic static verbose(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tLogger.logger.verbose('[' + Logger.namespace + 'Verbose] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static info(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) {\n\t\t\t\tLogger.logger.info('[' + Logger.namespace + 'Info   ] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static warn(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', messages);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static error(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', messages);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', [message + ' : ' + target]);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', [message + ' : ' + target]);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static stackTrace():void {\n\t\t\tconsole.trace();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n\nfunction trace(...messages:any[]):void {\n\talm.debug.Logger.info.apply(trace.caller, arguments);\n}\n\nfunction throwWarn(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.warnIf.apply(null, arguments);\n}\n\nfunction throwError(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.errorIf.apply(null, arguments);\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Time {\n\n\t\t/**\n\t\t * 現在の時刻(ミリ秒)を取得する\n\t\t * @returns {number} UNIX時間（ミリ秒）\n\t\t */\n\t\tpublic static now():number {\n\t\t\treturn (window.performance || Date).now();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport type EasingFunction = (t:number)=>number;\n\n\texport class Easing {\n\n\t\tpublic static linear(t:number):number {\n\t\t\treturn t;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuad(t:number):number {\n\t\t\treturn (t /= 1) * t;\n\t\t}\n\n\t\tpublic static easeOutQuad(t:number):number {\n\t\t\treturn -(t /= 1) * (t - 2);\n\t\t}\n\n\t\tpublic static easeInOutQuad(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t;\n\t\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCubic(t:number):number {\n\t\t\treturn (t /= 1) * t * t;\n\t\t}\n\n\t\tpublic static easeOutCubic(t:number):number {\n\t\t\treturn (t = t - 1) * t * t + 1;\n\t\t}\n\n\t\tpublic static easeInOutCubic(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuart(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuart(t:number):number {\n\t\t\treturn -((t = t - 1) * t * t * t - 1);\n\t\t}\n\n\t\tpublic static easeInOutQuart(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t;\n\t\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuint(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuint(t:number):number {\n\t\t\treturn ((t = t - 1) * t * t * t * t + 1);\n\t\t}\n\n\t\tpublic static easeInOutQuint(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInSine(t:number):number {\n\t\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t\t}\n\n\t\tpublic static easeOutSine(t:number):number {\n\t\t\treturn Math.sin(t * (Math.PI / 2));\n\t\t}\n\n\t\tpublic static easeInOutSine(t:number):number {\n\t\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\treturn Math.pow(2, 10 * (t - 1));\n\t\t}\n\n\t\tpublic static easeOutExpo(t:number):number {\n\t\t\tif (t == 1) return 1;\n\t\t\treturn -Math.pow(2, -10 * t) + 1;\n\t\t}\n\n\t\tpublic static easeInOutExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\tif (t == 1) return 1;\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCirc(t:number):number {\n\t\t\treturn -(Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t}\n\n\t\tpublic static easeOutCirc(t:number):number {\n\t\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t\t}\n\n\t\tpublic static easeInOutCirc(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static createEaseInElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 0.5) == 2) return 1;\n\t\t\t\tif (p == 0) p = 0.3 * 1.5;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1) return -0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseOutElastic(t);\n\t\t}\n\n\t\tpublic static easeInOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutElastic(t);\n\t\t}\n\n\t\tprivate static defaultEaseInElastic:EasingFunction = Easing.createEaseInElastic();\n\t\tprivate static defaultEaseOutElastic:EasingFunction = Easing.createEaseOutElastic();\n\t\tprivate static defaultEaseInOutElastic:EasingFunction = Easing.createEaseInOutElastic();\n\n\n\n\n\n\t\tpublic static createEaseInBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * (((s *= 1.525) + 1) * t - s);\n\t\t\t\treturn 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseOutBack(t);\n\t\t}\n\n\t\tpublic static easeInOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutBack(t);\n\t\t}\n\n\t\tprivate static defaultEaseInBack:EasingFunction = Easing.createEaseInBack();\n\t\tprivate static defaultEaseOutBack:EasingFunction = Easing.createEaseOutBack();\n\t\tprivate static defaultEaseInOutBack:EasingFunction = Easing.createEaseInOutBack();\n\n\n\n\n\n\t\tpublic static easeInBounce(t:number):number {\n\t\t\treturn 1 - Easing.easeOutBounce(1 - t);\n\t\t}\n\n\t\tpublic static easeOutBounce(t:number):number {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * t * t;\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInOutBounce(t:number):number {\n\t\t\tif (t < 0.5) return Easing.easeInBounce(t * 2) * 0.5;\n\t\t\treturn Easing.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t\t}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\timport Hash = alm.util.Hash;\n\n\texport class QueryString {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(url:string = '') {\n\t\t\tthis.set(url);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(url:string = ''):void {\n\t\t\t// normalize url\n\t\t\tlet search:string = '';\n\t\t\tif (url != '') {\n\t\t\t\tconst index:number = url.indexOf('?');\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tsearch = url.substring(index);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsearch = location.search;\n\t\t\t}\n\t\t\t// parse query\n\t\t\tthis.hash = {};\n\t\t\tconst pairs:string[] = search.substring(1).split('&');\n\t\t\tlet pair:string[];\n\t\t\tfor(let i:number = 0; pairs[i]; ++i) {\n\t\t\t\tpair = pairs[i].split('=');\n\t\t\t\tthis.hash[pair[0]] = pair[1];\n\t\t\t}\n\t\t}\n\n\t\t// 'abc' -> 'abc'\n\t\tpublic getString(key:string, defaultValue:string):string {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : value;\n\t\t}\n\n\t\t// '123' -> 123\n\t\tpublic getInt(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseInt(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '1.23' -> 1.23\n\t\tpublic getFloat(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseFloat(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '0' -> false, otherwise true\n\t\tpublic getBool(key:string, defaultValue:boolean):boolean {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : (<any>value == true);\n\t\t}\n\n\t\tpublic getHash():Hash<string> {\n\t\t\treturn this.hash;\n\t\t}\n\n\t\tpublic setHash(hash:Hash<string>):void {\n\t\t\tthis.hash = hash;\n\t\t}\n\n\t\tpublic setParam(key:string, value:any):void {\n\t\t\tthis.hash[key] = value;\n\t\t}\n\n\t\tpublic removeParam(key:string):void {\n\t\t\tdelete this.hash[key];\n\t\t}\n\n\t\tpublic hasParam(key:string):boolean {\n\t\t\treturn this.hash[key] !== undefined;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate hash:Hash<string>;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.debug {\n\n\timport Time = alm.util.Time;\n\n\texport class FpsMonitor {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic reset():void {\n\t\t\tthis.frameRate = 0;\n\t\t\tthis.frameCount = 0;\n\t\t\tthis.startTime = Time.now();\n\t\t\tthis.actualFrameRate = -1;\n\t\t\tthis.dummyFrameRate = -1;\n\t\t}\n\n\t\tpublic update():void {\n\t\t\t++this.frameCount;\n\t\t\tconst currentTime:number = Time.now();\n\t\t\tconst elapsedTime:number = currentTime - this.startTime;\n\t\t\tif (elapsedTime >= 1000) {\n\t\t\t\tthis.actualFrameRate = 1000 * this.frameCount / elapsedTime;\n\t\t\t\tthis.frameCount = 0;\n\t\t\t\tthis.startTime = currentTime;\n\t\t\t\tif (this.dummyFrameRate < 0) {\n\t\t\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic setDummyFrameRate(frameRate:number):void {\n\t\t\tthis.dummyFrameRate = frameRate;\n\t\t\tthis.frameRate = this.dummyFrameRate;\n\t\t}\n\n\t\tpublic clearDummyFrameRate():void {\n\t\t\tthis.dummyFrameRate = -1;\n\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t}\n\n\t\tpublic getFrameRate():number {\n\t\t\treturn this.frameRate;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate frameRate:number;\n\t\tprivate frameCount:number;\n\t\tprivate startTime:number;\n\t\tprivate actualFrameRate:number;\n\t\tprivate dummyFrameRate:number;\n\t}\n}","/// <reference path='../../include.ts' />\r\n\r\nnamespace alm.event {\r\n\r\n\texport class Event<T = any> {\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// CONSTRUCTOR\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tconstructor(type:string, target:Object, data:T = null) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.target = target;\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\t\tpublic getType():string {\r\n\t\t\treturn this.type;\r\n\t\t}\r\n\r\n\t\tpublic getTarget():Object {\r\n\t\t\treturn this.target;\r\n\t\t}\r\n\r\n\t\tpublic getData():T {\r\n\t\t\treturn this.data;\r\n\t\t}\r\n\r\n\t\tpublic setData(data:T):void {\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// MEMBER\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tprivate type:string;\r\n\t\tprivate target:Object;\r\n\t\tprivate data:T;\r\n\t}\r\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.event {\n\n\timport Logger = alm.debug.Logger;\n\texport type EventListener = (event:Event) => void;\n\n\texport class EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:any = null) {\n\t\t\tthis.target = target || this;\n\t\t\tthis.listeners = {};\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] addEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) return;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.listeners[eventType] = listeners = [];\n\t\t\t}\n\t\t\tlisteners.push(listener);\n\t\t}\n\n\t\tpublic removeEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] removeEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) {\n\t\t\t\t\t\tlisteners.splice(i,  1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (listeners.length == 0) {\n\t\t\t\t\tdelete this.listeners[eventType];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic removeAllEventListener(eventType:string = null):void {\n\t\t\tif (eventType) {\n\t\t\t\tdelete this.listeners[eventType];\n\t\t\t} else {\n\t\t\t\tthis.listeners = {};\n\t\t\t}\n\t\t}\n\n\t\tpublic hasEventListener(eventType:string):boolean {\n\t\t\treturn this.listeners[eventType] != null;\n\t\t}\n\n\t\tpublic dispatchEvent(event:Event):void {\n\t\t\tlet listeners:EventListener[] = this.listeners[event.getType()];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tlisteners[i].call(this.target, event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic dispatchEventType<T = any>(eventType:string, target:Object = null, data:T = null):void {\n\t\t\tthis.dispatchEvent(new Event<T>(eventType, target, data));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:any;\n\t\tprivate listeners:util.Hash<EventListener[]>;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport enum CommandState {\n\t\tSleeping     = 0,\n\t\tExecuting    = 1,\n\t\tInterrupting = 2,\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class CommandEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():CommandEvent {\n\t\t\treturn new CommandEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[CommandEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Command extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(executeFunction:Function = null, interruptFunction:Function = null, destroyFunction:Function = null) {\n\t\t\tsuper();\n\n\t\t\tthis.setExecuteFunction(executeFunction);\n\t\t\tthis.setInterruptFunction(interruptFunction);\n\t\t\tthis.setDestroyFunction(destroyFunction);\n\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.self = this;\n\t\t\tthis.parent = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic execute():void {\n\t\t\tif (this.state > CommandState.Sleeping) {\n\t\t\t\tthrow new Error('[Command.execute] + Command is already executing.');\n\t\t\t}\n\t\t\tthis.state = CommandState.Executing;\n\t\t\tthis.getExecuteFunction().call(this, this);\n\t\t}\n\n\t\tpublic interrupt():void {\n\t\t\tif (this.state == CommandState.Executing) {\n\t\t\t\tthis.state = CommandState.Interrupting;\n\t\t\t\tthis.getInterruptFunction().call(this, this);\n\t\t\t}\n\t\t}\n\n\t\tpublic destroy():void {\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.getDestroyFunction().call(this, this);\n\t\t\tthis.parent = null;\n\t\t\tthis.executeFunction = null;\n\t\t\tthis.interruptFunction = null;\n\t\t\tthis.destroyFunction = null;\n\t\t}\n\n\t\tprotected notifyComplete():void {\n\t\t\tswitch (this.state) {\n\t\t\t\tcase CommandState.Sleeping:\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Executing:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Interrupting:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getExecuteFunction():Function { return this.executeFunction || this.implExecuteFunction };\n\t\tpublic setExecuteFunction(func:Function):void { this.executeFunction = func; }\n\t\tprivate executeFunction:Function;\n\n\t\tpublic getInterruptFunction():Function { return this.interruptFunction || this.implInterruptFunction };\n\t\tpublic setInterruptFunction(func:Function):void { this.interruptFunction = func; }\n\t\tprivate interruptFunction:Function;\n\n\t\tpublic getDestroyFunction():Function { return this.destroyFunction || this.implDestroyFunction };\n\t\tpublic setDestroyFunction(func:Function):void { this.destroyFunction = func; }\n\t\tprivate destroyFunction:Function;\n\n\t\tpublic getState():CommandState { return this.state; }\n\t\tprivate state:CommandState;\n\n\t\tpublic getParent():Command { return this.parent; }\n\t\tpublic setParent(parent:Command):void { this.parent = parent; }\n\t\tprivate parent:Command;\n\n\t\tpublic getSelf():Command { return this.self; }\n\t\tprivate self:Command;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport abstract class CommandList extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper();\n\t\t\tthis.commands = [];\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tthis.commands = this.getCommands().concat(<Command[]>commands);\n\t\t\t}\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(0, ...commands);\n\t\t}\n\n\t\tprotected insertCommandAt(index:number, ...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tArray.prototype.splice.apply(this.getCommands(), (<any[]>[index, 0]).concat(commands));\n\t\t\t}\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprotected insertCommandArrayAt(index:number, commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(index, ...commands);\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn this.commands.length;\n\t\t}\n\n\t\tpublic getCommandByIndex(index:number):Command { return this.commands[index]; }\n\t\tpublic getCommands():Command[] { return this.commands; }\n\n\t\tprivate preProcess(commands:(Command|Function)[]):void {\n\t\t\tconst numCommands:number = commands.length;\n\t\t\tlet command:Command|Function;\n\t\t\tfor (let i:number = 0; i < numCommands; ++i) {\n\t\t\t\tcommand = commands[i];\n\t\t\t\tif (typeof(command) == 'function') commands[i] = command = new Func(command);\n\t\t\t\tcommand.setParent(this);\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\t\tprotected abstract implNotifyBreak():void;\n\t\tprotected abstract implNotifyReturn():void;\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate commands:Command[];\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Break extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyBreak'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Return extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Log extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...messages:any[]) {\n\t\t\tsuper();\n\t\t\tthis.messages = messages;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call(this.messages));\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.messages = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getMessages():any[] { return this.messages; }\n\t\tpublic setMessages(messages:any[]):void { this.messages = messages; }\n\t\tprivate messages:any[];\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\texport class Wait extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(time:number = 1000) {\n\t\t\tsuper();\n\t\t\tthis.time = time;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.timerId = window.setTimeout(this.completeHandler, this.time);\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearTimeout(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTime():number { return this.time; }\n\t\tpublic setTime(time:number):void { this.time = time; }\n\t\tprivate time:number;\n\n\t\tprivate timerId:number;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Func extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(func:Function = null, args:any[] = [], eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.func = func;\n\t\t\tthis.args = args;\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t\tthis.func(...this.args);\n\t\t\t} else {\n\t\t\t\tthis.func(...this.args);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.func = null;\n\t\t\tthis.args = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t\tthis.eventType = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getFunction():Function { return this.func; }\n\t\tpublic setFunction(func:Function):void { this.func = func; }\n\t\tprivate func:Function;\n\n\t\tpublic getArguments():any[] { return this.args; }\n\t\tpublic setArguments(args:any[]):void { this.args = args; }\n\t\tprivate args:any[];\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Listen extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.eventType = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Easing = alm.math.Easing;\n\timport EasingFunction = alm.math.EasingFunction;\n\timport Time = alm.util.Time;\n\n\texport type TweenCallbackFunction = (progressTime:number, progressValue:number) => void;\n\n\texport class Tween extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:Object, to:Object, from:Object = null, duration:number = 1000, easing:EasingFunction = Easing.linear, onStart:TweenCallbackFunction = null, onUpdate:TweenCallbackFunction = null, onComplete:TweenCallbackFunction = null) {\n\t\t\tsuper();\n\t\t\tthis.tweenTarget = target;\n\t\t\tthis.to = to;\n\t\t\tthis.from = from;\n\t\t\tthis.duration = duration;\n\t\t\tthis.easing = easing;\n\t\t\tthis.onStart = onStart;\n\t\t\tthis.onUpdate = onUpdate;\n\t\t\tthis.onComplete = onComplete;\n\t\t\tthis.progressTime = 0;\n\t\t\tthis.progressValue = 0;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.internalFrom = {};\n\t\t\tlet value0:number;\n\t\t\tlet value1:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue1 = this.to[key];\n\t\t\t\tif (this.from && this.from[key] != null) {\n\t\t\t\t\tthis.internalFrom[key] = this.from[key];\n\t\t\t\t} else {\n\t\t\t\t\tthis.internalFrom[key] = this.tweenTarget[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.duration > 0) {\n\t\t\t\tthis.timerId = window.setInterval(this.intervalHandler, Tween.updateInterval);\n\t\t\t\tthis.startTime = Time.now();\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t\tthis.apply(1);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\n\t\t\tthis.tweenTarget = null;\n\t\t\tthis.to = null;\n\t\t\tthis.from = null;\n\t\t\tthis.easing = null;\n\t\t\tthis.onStart = null;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.onComplete = null;\n\t\t\tthis.internalFrom = null;\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearInterval(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate apply(timeRatio:number):void {\n\t\t\tthis.progressTime = timeRatio;\n\t\t\tthis.progressValue = this.easing(this.progressTime);\n\t\t\tlet value0:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue0 = this.internalFrom[key];\n\t\t\t\tthis.tweenTarget[key] = value0 + (this.to[key] - value0) * this.progressValue;\n\t\t\t}\n\t\t}\n\n\t\tprivate intervalHandler = ():void => {\n\t\t\tconst elapsedTime:number = Time.now() - this.startTime;\n\t\t\tif (elapsedTime < this.duration) {\n\t\t\t\tthis.apply(elapsedTime / this.duration);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(1);\n\t\t\t\tthis.cancel();\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTarget():Object { return this.tweenTarget; }\n\t\tpublic setTarget(target:Object):void { this.tweenTarget = target; }\n\t\tprivate tweenTarget:Object;\n\n\t\tpublic getDuration():number { return this.duration; }\n\t\tpublic setDuration(duration:number):void { this.duration = duration; }\n\t\tprivate duration:number;\n\n\t\tpublic getTo():Object { return this.to; }\n\t\tpublic setTo(to:Object):void { this.to = to; }\n\t\tprivate to:Object;\n\n\t\tpublic getFrom():Object { return this.from; }\n\t\tpublic setFrom(from:Object):void { this.from = from; }\n\t\tprivate from:Object;\n\n\t\tpublic getEasing():EasingFunction { return this.easing; }\n\t\tpublic setEasing(easing:EasingFunction):void { this.easing = easing; }\n\t\tprivate easing:EasingFunction;\n\n\t\tpublic getOnStart():TweenCallbackFunction { return this.onStart; }\n\t\tpublic setOnStart(func:TweenCallbackFunction):void { this.onStart = func; }\n\t\tprivate onStart:TweenCallbackFunction;\n\n\t\tpublic getOnUpdate():TweenCallbackFunction { return this.onUpdate; }\n\t\tpublic setOnUpdate(func:TweenCallbackFunction):void { this.onUpdate = func; }\n\t\tprivate onUpdate:TweenCallbackFunction;\n\n\t\tpublic getOnComplete():TweenCallbackFunction { return this.onComplete; }\n\t\tpublic setOnComplete(func:TweenCallbackFunction):void { this.onComplete = func; }\n\t\tprivate onComplete:TweenCallbackFunction;\n\n\t\tpublic getProgressTime():number { return this.progressTime; }\n\t\tprivate progressTime:number;\n\n\t\tpublic getProgressValue():number { return this.progressValue; }\n\t\tprivate progressValue:number;\n\n\t\tprivate startTime:number;\n\t\tprivate timerId:number;\n\t\tprivate internalFrom:Object;\n\n\t\tpublic getUpdateInterval():number { return Tween.updateInterval; }\n\t\tpublic setUpdateInterval(milliseconds:number):void { Tween.updateInterval = milliseconds; }\n\t\tprivate static updateInterval:number = 1000 / 60;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Serial extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.currentCommand = null;\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.insertCommandAt(this.position + 1, ...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCommand = this.getCommandByIndex(this.position);\n\t\t\tthis.currentCommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand.execute();\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand = null;\n\t\t\tif (++this.position >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.position = 0;\n\t\t\tif (this.getLength() > 0) {\n\t\t\t\tthis.next();\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.destroy();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getPosition():number { return this.position; }\n\t\tprivate position:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector2 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0) {\n\t\t\tthis.set(x, y);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic copyTo(point:Vector2):void {\n\t\t\tpoint.set(this.x, this.y);\n\t\t}\n\n\t\tpublic getClone():Vector2 {\n\t\t\treturn new Vector2(this.x, this.y);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector2):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tpublic getDistance(point:Vector2):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector3 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, z:number = 0) {\n\t\t\tthis.set(x, y, z);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, z:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic copyTo(point:Vector3):void {\n\t\t\tpoint.set(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic getClone():Vector3 {\n\t\t\treturn new Vector3(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t\tthis.z /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector3):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\tconst dz:number = point.z - this.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tpublic getDistance(point:Vector3):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic z:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport class Rectangle {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0) {\n\t\t\tthis.set(x, y, width, height);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, width:number, height:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tpublic copyTo(rect:Rectangle):void {\n\t\t\trect.set(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getClone():Rectangle {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getTop():number {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tpublic getBottom():number {\n\t\t\treturn this.y + this.height;\n\t\t}\n\n\t\tpublic getLeft():number {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tpublic getRight():number {\n\t\t\treturn this.x + this.width;\n\t\t}\n\n\t\tpublic getTopLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getTop());\n\t\t}\n\n\t\tpublic getTopRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getTop());\n\t\t}\n\n\t\tpublic getBottomLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getBottom());\n\t\t}\n\n\t\tpublic getBottomRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getBottom());\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic width:number;\n\t\tpublic height:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.geom {\n\n\texport enum Align {\n\t\tTop_Left,\n\t\tTop_Center,\n\t\tTop_Right,\n\t\tMiddle_Left,\n\t\tMiddle_Center,\n\t\tMiddle_Right,\n\t\tBottom_Left,\n\t\tBottom_Center,\n\t\tBottom_Right\n\t}\n\n\texport enum ScaleMode {\n\t\tExactFit,\n\t\tShowAll,\n\t\tNoBorder,\n\t\tNoScale,\n\t}\n\n\texport class Boxer {\n\n\t\tpublic static resize(target:geom.Rectangle, bounds:geom.Rectangle, scaleMode:ScaleMode = ScaleMode.ShowAll, align:Align = Align.Middle_Center):geom.Rectangle {\n\t\t\tlet tx:number = target.x;\n\t\t\tlet ty:number = target.y;\n\t\t\tlet tw:number = target.width;\n\t\t\tlet th:number = target.height;\n\n\t\t\tconst bx:number = bounds.x;\n\t\t\tconst by:number = bounds.y;\n\t\t\tconst bw:number = bounds.width;\n\t\t\tconst bh:number = bounds.height;\n\n\t\t\tswitch (scaleMode) {\n\t\t\t\tcase ScaleMode.ShowAll:\n\t\t\t\tcase ScaleMode.NoBorder:\n\t\t\t\t\tconst ratioW:number = bw / tw;\n\t\t\t\t\tconst ratioH:number = bh / th;\n\t\t\t\t\tconst ratio:number = scaleMode == ScaleMode.ShowAll ? (ratioW < ratioH ? ratioW : ratioH) : (ratioW > ratioH ? ratioW : ratioH);\n\t\t\t\t\ttw *= ratio;\n\t\t\t\t\tth *= ratio;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ScaleMode.ExactFit:\n\t\t\t\t\treturn new geom.Rectangle(bx, by, bw, bh);\n\t\t\t}\n\n\t\t\ttx = bx + ((align == Align.Top_Left || align == Align.Middle_Left || align == Align.Bottom_Left) ? 0 :\n\t\t\t\t(align == Align.Top_Right || align == Align.Middle_Right || align == Align.Bottom_Right) ? (bw - tw) : (bw - tw) / 2);\n\t\t\tty = by + ((align == Align.Top_Left || align == Align.Top_Center || align == Align.Top_Right) ? 0 :\n\t\t\t\t(align == Align.Bottom_Left || align == Align.Bottom_Center || align == Align.Bottom_Right) ? (bh - th) : (bh - th) / 2);\n\n\t\t\treturn new geom.Rectangle(tx, ty, tw, th);\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Obj {\n\n\t\tpublic static each(target:any, func:(key:string, value:any) => void):void {\n\t\t\tif (target == null) return;\n\t\t\tObject.keys(target).forEach((key:string):void => {\n\t\t\t\tfunc(key, target[key]);\n\t\t\t});\n\t\t}\n\n\t\tpublic static get(target:any, key:string, defaultValue:any):any {\n\t\t\tconst value:any = target[key];\n\t\t\treturn typeof value !== 'undefined' ? value : defaultValue;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Arr {\n\n\t\t/**\n\t\t * 等差数列を生成する\n\t\t * @param {number} count 要素数\n\t\t * @param {number} init 初期値\n\t\t * @param {number} step 等差\n\t\t * @returns {number[]} 出力配列\n\t\t */\n\t\tpublic static sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\t\tconst result:number[] = new Array(count);\n\t\t\tlet v:number = init;\n\t\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\t\tresult[i] = v;\n\t\t\t\tv += step;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * 重複を削除したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static unique<T>(list:T[]):T[] {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) === i;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * 重複のみを抽出したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\t\tif (unique) {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2つの入力配列に対して総当たり戦をおこなう\n\t\t * @param {T[]} list1 入力配列1\n\t\t * @param {T[]} list2 入力配列2\n\t\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t\t * @param callback.count コールバックの呼ばれた回数\n\t\t * @param callback.index1 入力配列1の現在のインデックス\n\t\t * @param callback.index2 入力配列2の現在のインデックス\n\t\t * @param callback.element1 入力配列1の現在の要素\n\t\t * @param callback.element2 入力配列2の現在の要素\n\t\t */\n\t\tpublic static roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\t\tlet i:number, j:number, p:number = 1;\n\t\t\tconst m:number = list1.length;\n\t\t\tconst n:number = list2.length;\n\t\t\tfor (i = 0; i < m; ++i) {\n\t\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\timport EasingFunction = alm.math.EasingFunction;\n\n\texport class Num {\n\n\t\t/**\n\t\t * 値を特定の範囲から範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {boolean} clamp trueの場合は入力値を[srcA, srcB]の範囲内に丸める\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static map(value:number, srcA:number, srcB:number, dstA:number, dstB:number, clamp:boolean = true):number {\n\t\t\tif (srcA == srcB) return dstA;\n\t\t\tif (clamp) {\n\t\t\t\tif (srcA < srcB) {\n\t\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\t} else {\n\t\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (value - srcA) * (dstB - dstA) / (srcB - srcA) + dstA;\n\t\t}\n\n\t\t/**\n\t\t * 値を特定の範囲からイージング関数を経由して特定の範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {EasingFunction} easing イージング関関数\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static ease(value:number, srcA:number, srcB:number, dstA:number, dstB:number, easing:EasingFunction):number {\n\t\t\tif (srcA == srcB) return dstA;\n\t\t\tif (srcA < srcB) {\n\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\treturn easing((value - srcA) / (srcB - srcA)) * (dstB - dstA) + dstA;\n\t\t\t} else {\n\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\treturn easing((value - srcB) / (srcA - srcB)) * (dstB - dstA) + dstA;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 乱数（小数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static random(min:number = 0, max:number = 1):number {\n\t\t\treturn min + (max - min) * Math.random();\n\t\t}\n\n\t\t/**\n\t\t * 乱数（整数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static randomInt(min:number = 0, max:number = 1):number {\n\t\t\treturn Math.floor(Num.random(min, max));\n\t\t}\n\n\t\t/**\n\t\t * 値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clamp(value:number, min:number, max:number):number {\n\t\t\treturn value < min ? min : (value > max ? max : value);\n\t\t}\n\n\t\t/**\n\t\t * 富豪を保ったまま、値の絶対値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} minAbs 最小値\n\t\t * @param {number} maxAbs 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clampAbs(value:number, minAbs:number, maxAbs:number):number {\n\t\t\tif (value > 0) {\n\t\t\t\treturn value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value);\n\t\t\t} else {\n\t\t\t\tvalue = Math.abs(value);\n\t\t\t\treturn -(value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2点間の距離を取得する\n\t\t * @param {number} x1 点1のx座標\n\t\t * @param {number} y1 点1のy座標\n\t\t * @param {number} x2 点2のx座標\n\t\t * @param {number} y2 点2のy座標\n\t\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t\t * @returns {number} 距離\n\t\t */\n\t\tpublic static dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\t\tconst dx:number = x2 - x1;\n\t\t\tconst dy:number = y2 - y1;\n\t\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\n\t\t/**\n\t\t * 値をラジアン法から弧度法に変換する\n\t\t * @param {number} radian ラジアン法\n\t\t * @returns {number} 弧度法\n\t\t */\n\t\tpublic static radToDeg(radian:number):number {\n\t\t\treturn radian * Num.RAD2DEG;\n\t\t}\n\n\t\t/**\n\t\t * 値を弧度法からラジアン法に変換する\n\t\t * @param {number} radian 弧度法\n\t\t * @returns {number} ラジアン法\n\t\t */\n\t\tpublic static degToRad(degree:number):number {\n\t\t\treturn degree * Num.DEG2RAD;\n\t\t}\n\n\t\t/**\n\t\t * ある角度からある角度への回転角度を取得する\n\t\t * @param {number} from 元の角度\n\t\t * @param {number} to 目標の角度\n\t\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t\t * @returns {number} 回転角度\n\t\t */\n\t\tpublic static turn(from:number, to:number, radian:boolean = true):number {\n\t\t\treturn radian ? ((to - from + Num.PI3) % Num.PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONST\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static PI2:number = Math.PI * 2;\n\t\tpublic static PI3:number = Math.PI * 3;\n\t\tpublic static PI4:number = Math.PI * 4;\n\t\tpublic static PI5:number = Math.PI * 5;\n\t\tpublic static PI6:number = Math.PI * 6;\n\t\tpublic static PI_2:number = Math.PI / 2;\n\t\tpublic static PI_3:number = Math.PI / 3;\n\t\tpublic static PI_4:number = Math.PI / 4;\n\t\tpublic static PI_6:number = Math.PI / 6;\n\n\t\tprivate static RAD2DEG:number = 180 / Math.PI;\n\t\tprivate static DEG2RAD:number = Math.PI / 180;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Str {\n\n\t\t/**\n\t\t * 時間を h:mm:ss の形式で取得する\n\t\t * @param {number} hours 時\n\t\t * @param {number} minutes 分\n\t\t * @param {number} seconds 秒\n\t\t * @returns {string} h:mm:ss 形式の文字列\n\t\t */\n\t\tpublic static toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\t\tseconds += minutes * 60 + hours * 3600;\n\t\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\t\tlet s:string = ('0' + Math.floor(seconds % 60)).substr(-2, 2);\n\t\t\tif (h != '0') {\n\t\t\t\treturn h + ':' + ('0' + m).substr(-2, 2) + ':' + s;\n\t\t\t} else {\n\t\t\t\treturn m + ':' + s;\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.util {\n\n\texport class Cmd {\n\n\t\tpublic static stop(command:cmd.Command):any {\n\t\t\tif (command) command.interrupt();\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic static sequence(execute:boolean, ...commands:(cmd.Command|Function)[]):cmd.Serial {\n\t\t\tconst c:cmd.Serial = new cmd.Serial();\n\t\t\tc.addCommand(...commands);\n\t\t\tif (execute) c.execute();\n\t\t\treturn c;\n\t\t}\n\n\t\tpublic static single(execute:boolean, command:cmd.Command):cmd.Command {\n\t\t\tif (execute && command) command.execute();\n\t\t\treturn command;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.resource {\n\n\texport class ObjectPool<T> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * ObjectPool class.\n\t\t * @class\n\t\t * @param {function} onRequireItem This callback function is called when new item is required.\n\t\t * @param {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @param {number} initCount Init item count.\n\t\t * @param {number} growthCount Growth item count.\n\t\t *\n\t\t * @property {number} initCount Init item count.\n\t\t * @property {number} growthCount Growth item count.\n\t\t * @property {function} onRequireItem This callback function is called when new item is required.\n\t\t * @property {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @property {Array} items Array of items.\n\t\t * @property {number} index Current index of items.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tconstructor(onRequireItem:() => T, onDestroyItem:(item:T) => void, initCount:number = 100, growthCount:number = 50) {\n\t\t\tthis.onRequireItem = onRequireItem;\n\t\t\tthis.onDestroyItem = onDestroyItem;\n\t\t\tthis.growthCount = growthCount;\n\t\t\tthis.items = new Array(initCount);\n\t\t\tfor (let i = 0; i < initCount; ++i) {\n\t\t\t\tthis.items[i] = this.onRequireItem();\n\t\t\t}\n\t\t\tthis.index = initCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * Get item from object pool.\n\t\t * @return {T} Item\n\t\t */\n\t\tpublic getItem():T {\n\t\t\tif (this.index > 0) {\n\t\t\t\treturn this.items[--this.index];\n\t\t\t}\n\t\t\tfor (let i = 0; i < this.growthCount; ++i) {\n\t\t\t\tthis.items.unshift(this.onRequireItem());\n\t\t\t}\n\t\t\tthis.index = this.growthCount;\n\t\t\treturn this.getItem();\n\t\t}\n\n\t\t/**\n\t\t * Return item to object pool.\n\t\t * @param {T} Item.\n\t\t * @return void\n\t\t */\n\t\tpublic returnItem(item:T):void {\n\t\t\tthis.items[this.index++] = item;\n\t\t}\n\n\t\t/**\n\t\t * Optimize object pool size.\n\t\t * @return void\n\t\t */\n\t\tpublic reduce():void {\n\t\t\tconst n = this.index;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items.shift());\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t}\n\n\t\t/**\n\t\t * Destroy object pool.\n\t\t * @return void\n\t\t */\n\t\tpublic destroy():void {\n\t\t\tconst n = this.items.length;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items[i]);\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t\tthis.items = null;\n\t\t\tthis.onRequireItem = null;\n\t\t\tthis.onDestroyItem = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate items:T[];\n\t\tprivate index:number;\n\t\tprivate growthCount:number;\n\n\t\tpublic onRequireItem:() => T;\n\t\tpublic onDestroyItem:(item:T) => void;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\texport class Lottery<T = any> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(values:T[] = null) {\n\t\t\tif (values) {\n\t\t\t\tthis.set(values);\n\t\t\t} else {\n\t\t\t\tthis.initValues = this.restValues = null;\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = true;\n\t\t\t}\n\t\t\tthis.onCheck = null;\n\t\t\tthis.isAutoResetEnabled = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(values:T[]):void {\n\t\t\tthis.initValues = values.concat();\n\t\t\tthis.reset();\n\t\t}\n\n\t\tpublic get():T {\n\t\t\tif (this.isEmpty && this.isAutoResetEnabled) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\tconst index:number = Math.floor(Math.random() * this.restCount);\n\t\t\tconst value:T = this.restValues[index];\n\t\t\tlet result:boolean = true;\n\t\t\tif (this.onCheck) result = this.onCheck(value);\n\t\t\tif (result) {\n\t\t\t\tthis.restValues.splice(index, 1);\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tpublic add(value:T, reset:boolean = false):void {\n\t\t\tthis.initValues.push(value);\n\t\t\tthis.restValues.push(value);\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\tif (reset) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.restValues = this.initValues.concat();\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t}\n\n\t\tpublic getRestCount():number {\n\t\t\treturn this.restCount;\n\t\t}\n\n\t\tpublic getIsEmply():boolean {\n\t\t\treturn this.isEmpty;\n\t\t}\n\n\t\tpublic getIsAutoResetEnabled():boolean {\n\t\t\treturn this.isAutoResetEnabled;\n\t\t}\n\n\t\tpublic setIsAutoResetEnabled(enabled:boolean):void {\n\t\t\tthis.isAutoResetEnabled = enabled;\n\t\t}\n\n\t\tpublic static createIndices(count:number):Lottery<number> {\n\t\t\tconst values:number[] = new Array(count);\n\t\t\tfor (let i:number = 0; i < count; ++i) values[i] = i;\n\t\t\treturn new Lottery<number>(values);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic onCheck:(value:T) => boolean;\n\n\t\tprivate isAutoResetEnabled:boolean;\n\t\tprivate isEmpty:boolean;\n\t\tprivate restCount:number;\n\t\tprivate restValues:T[];\n\t\tprivate initValues:T[];\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\timport Hash = alm.util.Hash;\n\n\texport class Switcher<T = string> extends alm.event.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.isLoopEnabled = true;\n\n\t\t\tthis.itemCount = 0;\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.onChange = null;\n\t\t\tthis.onPrev = null;\n\t\t\tthis.onNext = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic setupById(ids:T[]):void {\n\t\t\tthis.itemCount = ids.length;\n\t\t\tthis.itemIds = ids;\n\n\t\t\tthis.itemIndexById = {};\n\t\t\tfor (let i:number = 0; i < this.itemCount; ++i) {\n\t\t\t\tthis.itemIndexById[this.itemIds[i] as unknown as string] = i;\n\t\t\t}\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tpublic setupByCount(itemCount:number):void {\n\t\t\tthis.itemCount = itemCount;\n\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tprivate setup():void {\n\t\t\tthis.newItemIndex = -1;\n\t\t\tthis.oldItemIndex = -1;\n\n\t\t\tthis.newItemId = null;\n\t\t\tthis.oldItemId = null;\n\t\t}\n\n\t\tpublic gotoByIndex(itemIndex:number, useTransition:boolean = true):boolean {\n\t\t\tif (itemIndex < 0 || itemIndex >= this.itemCount) itemIndex = -1;\n\t\t\tif (itemIndex == this.newItemIndex) return false;\n\n\t\t\tthis.oldItemIndex = this.newItemIndex;\n\t\t\tthis.newItemIndex = itemIndex;\n\n\t\t\tif (this.itemIds) {\n\t\t\t\tthis.oldItemId = this.oldItemIndex != -1 ? this.itemIds[this.oldItemIndex] : null;\n\t\t\t\tthis.newItemId = this.newItemIndex != -1 ? this.itemIds[this.newItemIndex] : null;\n\t\t\t}\n\n\t\t\tthis.dispatchPagerEvent(SwitcherEvent.CHANGE, this.onChange, useTransition);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic gotoById(itemId:string, useTransition:boolean = true):boolean {\n\t\t\tconst itemIndex:number = this.itemIndexById.hasOwnProperty(itemId) ? this.itemIndexById[itemId] : -1;\n\t\t\treturn this.gotoByIndex(itemIndex, useTransition);\n\t\t}\n\n\t\tpublic prev(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.newItemIndex - 1;\n\t\t\tif (this.isLoopEnabled && itemIndex < 0) itemIndex = this.itemCount - 1;\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.PREV, this.onPrev, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic next(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.newItemIndex + 1;\n\t\t\tif (this.isLoopEnabled && itemIndex >= this.itemCount) itemIndex = 0;\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.NEXT, this.onNext, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tprivate dispatchPagerEvent(eventType:string, callback:(event:SwitcherEvent<T>) => void, useTransition:boolean):void {\n\t\t\tconst oldItemId:T = (this.itemIds && this.oldItemIndex != -1) ? this.itemIds[this.oldItemIndex] : null;\n\t\t\tconst newItemId:T = (this.itemIds && this.newItemIndex != -1) ? this.itemIds[this.newItemIndex] : null;\n\n\t\t\tconst event:SwitcherEvent<T> = new SwitcherEvent<T>(eventType, this, this.newItemIndex, this.oldItemIndex, this.newItemId, this.oldItemId, useTransition);\n\t\t\tif (callback) {\n\t\t\t\tcallback(event);\n\t\t\t}\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsLoopEnabled():boolean { return this.isLoopEnabled; }\n\t\tpublic setIsLoopEnabled(value:boolean):void { this.isLoopEnabled = value; }\n\t\tprivate isLoopEnabled:boolean;\n\n\t\tpublic getNewItemIndex():number { return this.newItemIndex; }\n\t\tprivate newItemIndex:number;\n\n\t\tpublic getOldItemIndex():number { return this.oldItemIndex; }\n\t\tprivate oldItemIndex:number;\n\n\t\tpublic getItemCount():number { return this.itemCount; }\n\t\tprivate itemCount:number;\n\n\t\tpublic getNewItemId():T { return this.newItemId; }\n\t\tprivate newItemId:T;\n\n\t\tpublic getOldItemId():T { return this.oldItemId; }\n\t\tprivate oldItemId:T;\n\n\t\tpublic getItemIds():T[] { return this.itemIds; }\n\t\tprivate itemIds:T[];\n\n\t\tprivate itemIndexById:Hash<number>;\n\n\t\tpublic onChange:(event:SwitcherEvent<T>) => void;\n\t\tpublic onPrev:(event:SwitcherEvent<T>) => void;\n\t\tpublic onNext:(event:SwitcherEvent<T>) => void;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\texport class SwitcherEvent<T = string> extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static PREV:string = 'prev';\n\t\tpublic static NEXT:string = 'next';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any, newItemIndex:number, oldItemIndex:number, newItemId:T, oldItemId:T, useTransition:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.newItemIndex = newItemIndex;\n\t\t\tthis.oldItemIndex = oldItemIndex;\n\t\t\tthis.newItemId = newItemId;\n\t\t\tthis.oldItemId = oldItemId;\n\t\t\tthis.useTransition = useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SwitcherEvent<T> {\n\t\t\treturn new SwitcherEvent<T>(this.getType(), this.getTarget(), this.newItemIndex, this.oldItemIndex, this.newItemId, this.oldItemId, this.useTransition);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SwitcherEvent] type = ' + this.getType() + ', ' + this.oldItemIndex + ' -> ' + this.newItemIndex + ', transition = ' + this.useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic newItemIndex:number;\n\t\tpublic oldItemIndex:number;\n\t\tpublic newItemId:T;\n\t\tpublic oldItemId:T;\n\t\tpublic useTransition:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class LoHi extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(lowThreshold:number, highThreshold:number, initValue:number = 0) {\n\t\t\tsuper();\n\n\t\t\tthis.lowThreshold = lowThreshold;\n\t\t\tthis.highThreshold = highThreshold;\n\t\t\tthis.isHigh = false;\n\t\t\tthis._set(initValue, false);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * 新しい入力値を設定する\n\t\t * @param {number} value 入力値\n\t\t * @returns {boolean} 結果が更新されればtrue\n\t\t */\n\t\tpublic set(value:number):boolean {\n\t\t\treturn this._set(value, true);\n\t\t}\n\n\t\tpublic getIsHigh():boolean {\n\t\t\treturn this.isHigh;\n\t\t}\n\n\t\tpublic getValue():number {\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic getLowThreshold():number {\n\t\t\treturn this.lowThreshold;\n\t\t}\n\n\t\tpublic getHighThreshold():number {\n\t\t\treturn this.highThreshold;\n\t\t}\n\n\t\tpublic setLowThreshold(threshold:number):void {\n\t\t\tthis.lowThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tpublic setHighThreshold(threshold:number):void {\n\t\t\tthis.highThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tprivate _set(value:number, dispatchEvent:boolean):boolean {\n\t\t\tthis.value = value;\n\t\t\tif (this.isHigh && this.value < this.lowThreshold) {\n\t\t\t\tthis.isHigh = false;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.LOW, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (!this.isHigh && this.value > this.highThreshold) {\n\t\t\t\tthis.isHigh = true;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.HIGH, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate lowThreshold:number;\n\t\tprivate highThreshold:number;\n\t\tprivate value:number;\n\t\tprivate isHigh:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.state {\n\n\texport class LoHiEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static LOW:string = 'low';\n\t\tpublic static HIGH:string = 'high';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any, isHigh:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.isHigh = isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():LoHiEvent {\n\t\t\treturn new LoHiEvent(this.getType(), this.getTarget(), this.isHigh);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[LoHiEvent] type = ' + this.getType() + ', isHigh = ' + this.isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic isHigh:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class EasingValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, easing:number = 0.1, tolerance:number = 0) {\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.easing = easing;\n\t\t\tthis.tolerance = tolerance;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tconst d:number = this.target - this.value;\n\t\t\t\tif (this.tolerance > 0 && Math.abs(d) <= this.tolerance) {\n\t\t\t\t\tthis.value = this.target;\n\t\t\t\t} else {\n\t\t\t\t\tthis.value += d * this.easing;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():EasingValue {\n\t\t\tconst v:EasingValue = new EasingValue(this.value, this.easing, this.tolerance);\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic easing:number;\n\t\tpublic tolerance:number;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class SpringValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, spring:number = 0.1, friction:number = 0.9) {\n\t\t\tthis.acceleration = 0;\n\t\t\tthis.velocity = 0;\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.spring = spring;\n\t\t\tthis.friction = friction;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tthis.acceleration = (this.target - this.value) * this.spring;\n\t\t\t\tthis.velocity += this.acceleration;\n\t\t\t\tthis.velocity *= this.friction;\n\t\t\t\tthis.value += this.velocity;\n\t\t\t} else {\n\t\t\t\tthis.acceleration = 0;\n\t\t\t\tthis.velocity = 0;\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():SpringValue {\n\t\t\tconst v:SpringValue = new SpringValue(this.value, this.spring, this.friction);\n\t\t\tv.acceleration = this.acceleration;\n\t\t\tv.velocity = this.velocity;\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic velocity:number;\n\t\tpublic acceleration:number;\n\t\tpublic spring:number;\n\t\tpublic friction:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tthis._value = (this._value * this._count + n) / ++this._count;\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _count:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleMovingAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxCount:number) {\n\t\t\tthis.maxCount = this._maxCount = maxCount;\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._count = this._maxCount;\n\n\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\tthis._value -= oldest;\n\n\t\t\t\tconst latest:number = n / this._maxCount;\n\t\t\t\tthis._value += latest;\n\n\t\t\t\tthis.values.push(latest);\n\n\t\t\t} else {\n\t\t\t\tthis._value *= (this._count - 1);\n\t\t\t\tthis._value += n;\n\t\t\t\tthis._value /= this._count;\n\n\t\t\t\tthis.values.push(n / this._maxCount);\n\t\t\t}\n\n\t\t\t/*\n\t\t\tthis._values.push(n);\n\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._values.shift();\n\t\t\t\tthis._count = this._maxCount;\n\t\t\t}\n\n\t\t\tthis._value = 0;\n\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\tthis._value += this._values[i];\n\t\t\t}\n\t\t\tthis._value /= this._count;\n\t\t\t*/\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class MaxValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxLatestCount:number = 0) {\n\t\t\tthis.maxLatestCount = this._maxLatestCount = maxLatestCount;\n\t\t\tthis.value = this._value = -Number.MAX_VALUE;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (this._maxLatestCount > 0) {\n\t\t\t\tif (++this._count > this._maxLatestCount) {\n\t\t\t\t\tthis._count = this._maxLatestCount;\n\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\t\tif (this._value > oldest) {\n\t\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._value = -Number.MAX_VALUE;\n\t\t\t\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\t\t\t\tconst v:number = this.values[i];\n\t\t\t\t\t\t\tif (this._value < v) {\n\t\t\t\t\t\t\t\tthis._value = v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++this._count;\n\t\t\t\tif (this._value < n) {\n\t\t\t\t\tthis._value = n;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxLatestCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxLatestCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.math {\n\n\texport class Circular {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(angle:number = 0, velocity:number = 0, radian:boolean = true) {\n\t\t\tthis.setAngle(angle, radian);\n\t\t\tthis.setVelocity(velocity, radian);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getAngle(radian:boolean = true):number {\n\t\t\treturn radian ? this.angle : (this.angle * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setAngle(angle:number, radian:boolean = true):void {\n\t\t\tthis.angle = radian ? angle : (angle * Math.PI / 180);\n\t\t}\n\n\t\tpublic getVelocity(radian:boolean = true):number {\n\t\t\treturn radian ? this.velocity : (this.velocity * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setVelocity(velocity:number, radian:boolean = true):void {\n\t\t\tthis.velocity = radian ? velocity : (velocity * Math.PI / 180);\n\t\t}\n\n\t\tpublic update():void {\n\t\t\tthis.angle += this.velocity;\n\t\t}\n\n\t\tpublic getSin(length:number = 1):number {\n\t\t\treturn length * Math.sin(this.angle);\n\t\t}\n\n\t\tpublic getCos(length:number = 1):number {\n\t\t\treturn length * Math.cos(this.angle);\n\t\t}\n\n\t\tpublic getTan(length:number = 1):number {\n\t\t\treturn length * Math.tan(this.angle);\n\t\t}\n\n\t\tpublic getMagnitude(length:number = 1):number {\n\t\t\treturn length * (1 + Math.sin(this.angle)) / 2;\n\t\t}\n\n\t\tpublic getVector(length:number = 1, xy:{ x:number, y:number } = null):{ x:number, y:number } {\n\t\t\tif (xy != null) {\n\t\t\t\txy.x = this.getCos(length);\n\t\t\t\txy.y = this.getSin(length);\n\t\t\t} else {\n\t\t\t\treturn { x: this.getCos(length), y: this.getSin(length) };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate angle:number;\n\t\tprivate velocity:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class AnimationFrameTicker extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * requestAnimationFrameベースでのFPSタイマー\n\t\t * @param {number} frameRate 目標フレームレート（0の場合はフレームレートを制限しない）\n\t\t * @param {number} tolerance 許容誤差（frameRateに対する割合）\n\t\t */\n\t\tconstructor(frameRate:number = 0, tolerance:number = 0.1) {\n\t\t\tsuper();\n\n\t\t\tthis.targetFrameRate = frameRate;\n\t\t\tthis.interval = 1000 / this.targetFrameRate;\n\n\t\t\tthis.tolerance = tolerance;\n\t\t\tthis.toleranceDuration = this.interval * this.tolerance;\n\n\t\t\tthis.isRunning = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.frameStartTime = Time.now();\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\twindow.cancelAnimationFrame(this.requestId);\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getTargetFrameRate():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tprivate setInterval(callback:Function):number {\n\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t}\n\n\t\tprivate clearInterval(requestId:number):void {\n\t\t\twindow.clearInterval(requestId);\n\t\t}\n\n\t\tprivate updateHandler = ():void => {\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t\tif (this.targetFrameRate > 0) {\n\t\t\t\tconst currentTime:number = Time.now();\n\t\t\t\tconst elapsedTime:number = currentTime - this.frameStartTime;\n\t\t\t\tif (elapsedTime >= this.interval - this.toleranceDuration) {\n\t\t\t\t\t//trace('[AnimationFrameTicker] frameRate : ' + (1000 / elapsedTime));\n\t\t\t\t\tthis.frameStartTime = currentTime;\n\t\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate requestId:number;\n\n\t\tprivate targetFrameRate:number;\n\t\tprivate tolerance:number;\n\t\tprivate toleranceDuration:number;\n\t\tprivate interval:number;\n\t\tprivate frameStartTime:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class AnimationFrameTickerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():AnimationFrameTickerEvent {\n\t\t\treturn new AnimationFrameTickerEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[AnimationFrameTickerEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class Timer extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(interval:number = 1000, repeatCount:number = 0) {\n\t\t\tsuper();\n\t\t\tthis.interval = interval;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tId = -1;\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\t\t\tthis.tStartTime = Time.now();\n\t\t\tthis.startInterval(this.tRestTime != -1 ? this.tRestTime : this.interval);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tRestTime = Time.now() - this.tStartTime;\n\t\t\tthis.stopInterval();\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.stop();\n\t\t\tthis.elapsedCount = 0;\n\t\t\tthis.tRestTime = -1;\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tthis.reset();\n\t\t\tthis.start();\n\t\t}\n\n\n\n\n\n\t\tprivate startInterval(interval:number):void {\n\t\t\tthis.stopInterval();\n\t\t\tthis.tInterval = interval;\n\t\t\tthis.tId = window.setInterval(this.timerHandler, this.tInterval);\n\t\t}\n\n\t\tprivate stopInterval():void {\n\t\t\tif (this.tId != -1) {\n\t\t\t\tclearInterval(this.tId);\n\t\t\t\tthis.tId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatch(eventType:string):void {\n\t\t\tthis.dispatchEvent(new TimerEvent(eventType, this, this.elapsedCount, this.repeatCount, this.getRestCount()));\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.tStartTime = Time.now();\n\t\t\t++this.elapsedCount;\n\t\t\tlet isCompleted:boolean = false;\n\t\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\t\tisCompleted = true;\n\t\t\t\tthis.stop();\n\t\t\t} else if (this.tInterval != this.interval) {\n\t\t\t\tthis.startInterval(this.interval);\n\t\t\t}\n\t\t\tthis.dispatch(TimerEvent.TICK);\n\t\t\tif (isCompleted) {\n\t\t\t\tthis.dispatch(TimerEvent.COMPLETE);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsRunning():boolean { return this.isRunning; }\n\t\tprivate isRunning:boolean;\n\n\t\tpublic getInterval():number { return this.interval; }\n\t\tpublic setInterval(interval:number):void { this.interval = interval; }\n\t\tprivate interval:number;\n\n\t\tpublic getElapsedTime():number { return Time.now() - this.tStartTime; }\n\n\t\tpublic getRestTime():number { return this.interval - this.getElapsedTime(); }\n\n\t\tpublic getElapsedCount():number { return this.elapsedCount; }\n\t\tprivate elapsedCount:number;\n\n\t\tpublic getRepeatCount():number { return this.repeatCount; }\n\t\tpublic setRepeatCount(count:number):void { this.repeatCount = count; }\n\t\tprivate repeatCount:number;\n\n\t\tpublic getRestCount():number { return this.repeatCount - this.elapsedCount; }\n\n\t\tprivate tStartTime:number;\n\t\tprivate tRestTime:number;\n\t\tprivate tInterval:number;\n\t\tprivate tId:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class TimerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, elapsedCount:number = 0, repeatCount:number = 0, restCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.elapsedCount = elapsedCount;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.restCount = restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():TimerEvent {\n\t\t\treturn new TimerEvent(this.getType(), this.getTarget(), this.elapsedCount, this.repeatCount, this.restCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[TimerEvent] type = ' + this.getType() + ', elapsedCount = ' + this.elapsedCount + ', repeatCount=' + this.repeatCount + ', restCount=' + this.restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic elapsedCount:number;\n\t\tpublic repeatCount:number;\n\t\tpublic restCount:number;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\texport type CompleteFunction = (content:any, info?:any) => void;\n\texport type ErrorFunction = (info?:any) => void;\n\n\texport class FileLoader extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(totalThreadCount:number = 3) {\n\t\t\tsuper();\n\n\t\t\tthis.isLoading_ = false;\n\n\t\t\tthis.currentCount = 0;\n\t\t\tthis.totalCount = 0;\n\n\t\t\tthis.currentThreadCount = 0;\n\t\t\tthis.totalThreadCount = totalThreadCount;\n\n\t\t\tthis.loadingQueries = [];\n\t\t\tthis.loadingQueryIndex = -1;\n\n\t\t\tthis.queriesByQueryId = {};\n\t\t\tthis.queriesByUrl = {};\n\n\t\t\tthis.handlersByType = {};\n\n\t\t\ttrace('[FileLoader] totalThreadCount : ' + this.totalThreadCount);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic require(url:string, type:string, id:string = ''):string {\n\t\t\treturn this.addQuery(type, url, {}, id);\n\t\t}\n\n\t\tprivate addQuery(type:string, url:string, param:any, id:string = ''):string {\n\t\t\tif (this.queriesByUrl[url]) return this.queriesByUrl[url].id;\n\n\t\t\tconst query:FileQuery = new FileQuery();\n\t\t\tquery.type = type;\n\t\t\tquery.url = url;\n\t\t\tquery.param = param;\n\n\t\t\tif (id != '') {\n\t\t\t\tquery.id = id;\n\t\t\t} else {\n\t\t\t\tquery.id = String(FileLoader.id);\n\t\t\t\t++FileLoader.id;\n\t\t\t}\n\n\t\t\tthis.loadingQueries.push(query);\n\t\t\tthis.queriesByQueryId[query.id] = query;\n\t\t\tthis.queriesByUrl[query.url] = query;\n\t\t\treturn query.id;\n\t\t}\n\n\t\tpublic load():void {\n\t\t\tif (this.isLoading_) return;\n\t\t\tthis.isLoading_ = true;\n\t\t\tthis.loadingQueryIndex = -1;\n\t\t\tthis.next();\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCount = this.loadingQueryIndex + 1;\n\t\t\tthis.totalCount = this.loadingQueries.length;\n\n\t\t\tconst progress = this.currentCount / this.totalCount;\n\t\t\tif (this.currentCount == 0) {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.START, this, progress, this.currentCount, this.totalCount));\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.PROGRESS, this, progress, this.currentCount, this.totalCount));\n\t\t\t}\n\n\t\t\twhile (this.currentThreadCount < this.totalThreadCount) {\n\t\t\t\tif (this.loadingQueryIndex + 1 < this.totalCount) {\n\t\t\t\t\t// add thread\n\t\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\t\tquery.isLoading = true;\n\t\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\t\tif (handler) {\n\t\t\t\t\t\thandler.load(query.url, (content:any, info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content, info);\n\t\t\t\t\t\t},(info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadErrorHandler(query, info);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\t}\n\t\t\t\t\t// continue loop\n\n\t\t\t\t} else {\n\t\t\t\t\t// all finished\n\t\t\t\t\tthis.isLoading_ = false;\n\t\t\t\t\tthis.loadingQueries = [];\n\t\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.COMPLETE, this, progress, this.currentCount, this.totalCount));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\tif (this.currentCount < this.totalCount) {\n\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\tquery.isLoading = true;\n\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\tif (handler) {\n\t\t\t\t\thandler.load(query.url, (content:any):void => {\n\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content);\n\t\t\t\t\t},(message:string = ''):void => {\n\t\t\t\t\t\tthis.fileLoadErrorHandler(query, message);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\tthis.next();\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis.isLoading_ = false;\n\t\t\t\tthis.loadingQueries = [];\n\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\tthis.dispatchEvent(new FileLoaderEvent(FileLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tpublic addHandler(handler:IFileHandler):void {\n\t\t\tthis.handlersByType[handler.getType()] = handler;\n\t\t}\n\n\t\tprivate fileLoadCompleteHandler = (query:FileQuery, content:any, info:object = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tquery.content = content;\n\t\t\tif (query.param.onLoad) {\n\t\t\t\tquery.param.onLoad(content, info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderSuccessEvent(FileLoaderSuccessEvent.SUCCESS, this, content, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tprivate fileLoadErrorHandler = (query:FileQuery, info:any = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tif (query.param.onError) {\n\t\t\t\tquery.param.onError(info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderErrorEvent(FileLoaderErrorEvent.ERROR, this, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tpublic getQueryByQueryId(queryId:string):FileQuery {\n\t\t\treturn this.queriesByQueryId[queryId];\n\t\t}\n\n\t\tpublic getQueryByUrl(url:string):FileQuery {\n\t\t\treturn this.queriesByUrl[url];\n\t\t}\n\n\t\tpublic isLoading():boolean {\n\t\t\treturn this.isLoading_;\n\t\t}\n\n\t\tpublic getCurrentCount():number {\n\t\t\treturn this.currentCount;\n\t\t}\n\n\t\tpublic getTotalCount():number {\n\t\t\treturn this.totalCount;\n\t\t}\n\n\t\tpublic getContentByUrl<T = any>(url:string):T {\n\t\t\treturn this.queriesByUrl[url].content;\n\t\t}\n\n\t\tpublic getContentByQueryId<T = any>(textureId:string):T {\n\t\t\treturn this.queriesByQueryId[textureId].content;\n\t\t}\n\n\t\tpublic getCurrentThreadCount():number {\n\t\t\treturn this.currentThreadCount;\n\t\t}\n\n\t\tpublic getTotalThreadCount():number {\n\t\t\treturn this.totalThreadCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isLoading_:boolean;\n\n\t\tprivate currentCount:number;\n\t\tprivate totalCount:number;\n\n\t\tprivate currentThreadCount:number;\n\t\tprivate totalThreadCount:number;\n\n\t\tprivate loadingQueries:FileQuery[];\n\t\tprivate loadingQueryIndex:number;\n\n\t\tprivate queriesByQueryId:util.Hash<FileQuery>;\n\t\tprivate queriesByUrl:util.Hash<FileQuery>;\n\n\t\tprivate handlersByType:util.Hash<IFileHandler>;\n\n\t\tprivate static id:number = 0;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderProgressEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic START:string = 'start';\n\t\tstatic PROGRESS:string = 'progress';\n\t\tstatic COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, progress:number = 0, loadedCount:number = 0, totalCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.progress = progress;\n\t\t\tthis.loadedCount = loadedCount;\n\t\t\tthis.totalCount = totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderProgressEvent {\n\t\t\treturn new FileLoaderProgressEvent(this.getType(), this.getTarget(), this.progress, this.loadedCount, this.totalCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderProgressEvent] type = ' + this.getType() + ', progress = ' + this.progress + ', loadedCount = ' + this.loadedCount + ', totalCount = ' + this.totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic progress:number;\n\t\tpublic loadedCount:number;\n\t\tpublic totalCount:number;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderSuccessEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SUCCESS:string = 'success';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, content:any, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.content = content;\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderSuccessEvent {\n\t\t\treturn new FileLoaderSuccessEvent(this.getType(), this.getTarget(), this.content, this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderSuccessEvent] type = ' + this.getType() + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic content:any;\n\t\tpublic info:any;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderErrorEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic ERROR:string = 'error';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderErrorEvent {\n\t\t\treturn new FileLoaderErrorEvent(this.getType(), this.getTarget(), this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderErrorEvent] type = ' + this.getType() + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic info:any;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.io {\n\n\texport class FileQuery {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.isLoadComplete = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic id:string;\n\t\tpublic type:string;\n\t\tpublic url:string;\n\t\tpublic param:any;\n\t\tpublic content:any;\n\t\tpublic isLoading:boolean;\n\t\tpublic isLoadComplete:boolean;\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.view {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Logger = alm.debug.Logger;\n\n\texport abstract class View<T = any> extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(view:T = null, id:string = null) {\n\t\t\tsuper();\n\t\t\tthis.id = id != null ? id : String(View.viewCount);\n\t\t\tthis.view = view;\n\t\t\tthis.name = '';\n\t\t\tthis.autoHideWithInit = true;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = false;\n\t\t\tthis.isShowing = false;\n\t\t\tthis.isShown = true;\n\t\t\tthis.isHiding = false;\n\n\t\t\tif (View.viewsById[this.id]) {\n\t\t\t\tLogger.warn('view id \\'' + this.id + '\\' is duplicate');\n\t\t\t}\n\t\t\tView.viewsById[this.id] = this;\n\t\t\t++View.viewCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic initialize():void {\n\t\t\tif (this.isInitializing || this.isInitialized) return;\n\t\t\tthis.isInitializing = true;\n\n\t\t\t//if (View.viewsById[this.id] == null) {\n\t\t\t//\tView.viewsById[this.id] = this;\n\t\t\t//}\n\n\t\t\tthis.view = this.implInitialize();\n\t\t\tif (this.isInitializing) {\n\t\t\t\tthrowError(this.name || this, 'view is not assigned', !this.view);\n\t\t\t\tif (this.autoHideWithInit) {\n\t\t\t\t\tthis.hide(false);\n\t\t\t\t}\n\t\t\t\tthis.isInitializing = false;\n\t\t\t\tthis.isInitialized = true;\n\t\t\t} else {\n\t\t\t\t// finalized while initializing\n\t\t\t\tthis.view = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic ready():void {\n\t\t\tif (this.isReadying || this.isReadied) return;\n\t\t\tthis.isReadying = true;\n\t\t\tthrowError(this.name || this, 'ready() must be called after initialize()', !this.isInitialized);\n\t\t\tthis.implReady();\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = true;\n\t\t}\n\n\t\tpublic finalize():void {\n\t\t\tif (!this.isInitializing && !this.isInitialized) return;\n\t\t\tthis.implFinalize();\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\n\t\t\tdelete View.viewsById[this.id];\n\t\t\tView.viewsById[this.id] = null;\n\t\t}\n\n\t\tpublic show(useTransition:boolean = true):void {\n\t\t\tif (this.isShown) return;\n\t\t\tthis.getShowCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic hide(useTransition:boolean = true):void {\n\t\t\tif (!this.isShown) return;\n\t\t\tthis.getHideCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic getShowCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (this.isShown) return;\n\t\t\t\t\tthrowError(this.name || this, 'getShowCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\tthrowWarn(this.name || this, 'getShowCommand() is must be called after ready()', this.isReadying|| !this.isReadied);\n\t\t\t\t\tthis.isShown = true;\n\t\t\t\t\tthis.isShowing = true;\n\t\t\t\t\tthis.isHiding = false;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.showCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implShow(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getHideCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (!this.isShown) return;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthrowError(this.name || this, 'getHideCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\t\tthrowWarn(this.name || this, 'getHideCommand() is must be called after ready()', this.isReadying || !this.isReadied);\n\t\t\t\t\t}\n\t\t\t\t\tthis.isShown = false;\n\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\tthis.isHiding = true;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hideCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implHide(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t\t\tthis.isHiding = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getIsInitializing():boolean {\n\t\t\treturn this.isInitializing;\n\t\t}\n\n\t\tpublic getIsInitialized():boolean {\n\t\t\treturn this.isInitialized;\n\t\t}\n\n\t\tpublic getIsReadying():boolean {\n\t\t\treturn this.isReadying;\n\t\t}\n\n\t\tpublic getIsReadied():boolean {\n\t\t\treturn this.isReadied;\n\t\t}\n\n\t\tpublic getIsShowing():boolean {\n\t\t\treturn this.isShowing;\n\t\t}\n\n\t\tpublic getIsShown():boolean {\n\t\t\treturn this.isShown;\n\t\t}\n\n\t\tpublic getIsHiding():boolean {\n\t\t\treturn this.isHiding;\n\t\t}\n\n\t\tpublic getIsHidden():boolean {\n\t\t\treturn !this.isShown;\n\t\t}\n\n\t\tpublic getId():string {\n\t\t\treturn this.id;\n\t\t}\n\n\t\tpublic getView():T {\n\t\t\treturn this.view;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic setName(value:string):void {\n\t\t\tthis.name = value;\n\t\t}\n\n\t\tpublic getAutoHideWithInit():boolean {\n\t\t\treturn this.autoHideWithInit;\n\t\t}\n\n\t\tpublic setAutoHideWithInit(value:boolean):void {\n\t\t\tthis.autoHideWithInit = value;\n\t\t}\n\n\n\n\n\n\t\tprotected abstract implInitialize():T;\n\t\tprotected abstract implReady():void;\n\t\tprotected abstract implFinalize():void;\n\t\tprotected abstract implShow(view:T, useTransition:boolean):cmd.Command;\n\t\tprotected abstract implHide(view:T, useTransition:boolean):cmd.Command;\n\n\n\n\n\n\t\tpublic static getViewById(id:string):View {\n\t\t\treturn View.viewsById[id];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate id:string;\n\t\tprivate view:T;\n\t\tprivate name:string;\n\t\tprivate autoHideWithInit:boolean;\n\t\tprivate showCommand:cmd.Command;\n\t\tprivate hideCommand:cmd.Command;\n\t\tprivate isInitializing:boolean;\n\t\tprivate isInitialized:boolean;\n\t\tprivate isReadying:boolean;\n\t\tprivate isReadied:boolean;\n\t\tprivate isShowing:boolean;\n\t\tprivate isShown:boolean;\n\t\tprivate isHiding:boolean;\n\n\t\tprivate static viewCount:number = 0;\n\t\tprivate static viewsById:util.Hash<View> = {};\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.view {\n\n\texport class ButtonBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:IButton, hitArea:HTMLElement = null, isHoverCursorEnabled:boolean = true, isPreventDefaultEnabled:boolean = true, isStopPropagationEnabled:boolean = true) {\n\t\t\tthis.target = target;\n\t\t\tthis.hitArea = null;\n\t\t\tthis.isHoverCursorEnabled = isHoverCursorEnabled;\n\t\t\tthis.isPreventDefaultEnabled = isPreventDefaultEnabled;\n\t\t\tthis.isStopPropagationEnabled = isStopPropagationEnabled;\n\t\t\tthis.isEnabled = true;\n\t\t\tthis.isOver = false;\n\t\t\tthis.isDown = false;\n\t\t\tthis.isOverInternal = false;\n\t\t\tthis.isDownInternal = false;\n\t\t\tthis.defaultMouseCursor = '';\n\n\t\t\tthis.setHitArea(hitArea);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic over(useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isOver) return;\n\t\t\t\tthis.isOver = true;\n\t\t\t\tthis.target.implButtonOver(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic out(useTransition:boolean = true):void {\n\t\t\tthis._out(true, useTransition);\n\t\t}\n\n\t\tprivate _out(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isOver) return;\n\t\t\t\tthis.isOver = false;\n\t\t\t\tthis.target.implButtonOut(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic down(useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isDown) return;\n\t\t\t\tthis.isDown = true;\n\t\t\t\tthis.target.implButtonDown(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic up(useTransition:boolean = true):void {\n\t\t\tthis._up(true, useTransition);\n\t\t}\n\n\t\tprivate _up(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isDown) return;\n\t\t\t\tthis.isDown = false;\n\t\t\t\tthis.target.implButtonUp(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic click(useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled) {\n\t\t\t\tthis.target.implButtonClick(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tprivate on():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.addEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.addEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.addEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.addEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.addEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.addEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.addEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.addEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tprivate off():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.removeEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.removeEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.removeEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.removeEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.removeEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.removeEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tpublic getIsEnabled():boolean {\n\t\t\treturn this.isEnabled;\n\t\t}\n\n\t\tpublic setIsEnabled(value:boolean, useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled != value) {\n\t\t\t\tthis.isEnabled = value;\n\t\t\t\tif (this.isEnabled) {\n\t\t\t\t\tif (this.isOverInternal) {\n\t\t\t\t\t\tthis.over();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDownInternal) {\n\t\t\t\t\t\tthis.down();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.isOver) {\n\t\t\t\t\t\tthis._out(false);\n\t\t\t\t\t\tthis.isOverInternal = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDown) {\n\t\t\t\t\t\tthis._up(false);\n\t\t\t\t\t\tthis.isDownInternal = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.target.implButtonChangeEnabled(this.isEnabled, useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsOver():boolean {\n\t\t\treturn this.isOver;\n\t\t}\n\n\t\tpublic getIsDown():boolean {\n\t\t\treturn this.isDown;\n\t\t}\n\n\t\tpublic getHitArea():HTMLElement {\n\t\t\treturn this.hitArea;\n\t\t}\n\n\t\tpublic setHitArea(hitArea:HTMLElement):void {\n\t\t\tif (this.hitArea !== hitArea) {\n\t\t\t\tthis.off();\n\t\t\t\tthis.hitArea = hitArea;\n\t\t\t\tthis.on();\n\t\t\t}\n\t\t}\n\n\t\tpublic clearHitArea():void {\n\t\t\tthis.setHitArea(null);\n\t\t}\n\n\t\tpublic getIsPreventDefaultEnabled():boolean {\n\t\t\treturn this.isPreventDefaultEnabled;\n\t\t}\n\n\t\tpublic setIsPreventDefaultEnabled(enabled:boolean):void {\n\t\t\tthis.isPreventDefaultEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsStopPropagationEnabled():boolean {\n\t\t\treturn this.isStopPropagationEnabled;\n\t\t}\n\n\t\tpublic setIsStopPropagationEnabled(enabled:boolean):void {\n\t\t\tthis.isStopPropagationEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsHoverCursorEnabled():boolean {\n\t\t\treturn this.isHoverCursorEnabled;\n\t\t}\n\n\t\tpublic setIsHoverCursorEnabled(enabled:boolean):void {\n\t\t\tthis.isHoverCursorEnabled = enabled;\n\t\t}\n\n\t\tprivate applyMouseCursor():void {\n\t\t\tif (this.isHoverCursorEnabled) {\n\t\t\t\tif (this.isOverInternal && this.isEnabled && this.hitArea != null) {\n\t\t\t\t\tthis.defaultMouseCursor = this.hitArea.style.cursor;\n\t\t\t\t\tthis.hitArea.style.cursor = 'pointer';\n\t\t\t\t} else {\n\t\t\t\t\tthis.hitArea.style.cursor = this.defaultMouseCursor != '' ? this.defaultMouseCursor : 'auto';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// --------------------------------------------------\n\t\t// Mouse Event\n\n\t\tprivate mouseOverHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.over();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseOutHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.out();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseDownHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate mouseUpHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\t\tprivate clickHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.click();\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Touch Event\n\n\t\tprivate touchStartHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate touchEndHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t\tthis.click();\n\t\t};\n\n\t\tprivate touchCancelHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:IButton;\n\t\tprivate hitArea:HTMLElement;\n\t\tprivate isEnabled:boolean;\n\t\tprivate isOver:boolean;\n\t\tprivate isDown:boolean;\n\t\tprivate isOverInternal:boolean;\n\t\tprivate isDownInternal:boolean;\n\t\tprivate isPreventDefaultEnabled:boolean;\n\t\tprivate isStopPropagationEnabled:boolean;\n\t\tprivate isHoverCursorEnabled:boolean;\n\t\tprivate defaultMouseCursor:string;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.view {\n\n\texport class SelectionBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:ISelection) {\n\t\t\tthis.target = target;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic select(useTransition:boolean = true):void {\n\t\t\tif (this.isSelected) return;\n\t\t\tthis.isSelected = true;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic deselect(useTransition:boolean = true):void {\n\t\t\tif (!this.isSelected) return;\n\t\t\tthis.isSelected = false;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic getIsSelected():boolean {\n\t\t\treturn this.isSelected;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:ISelection;\n\t\tprivate isSelected:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class DeviceInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tconst u:string = window.navigator.userAgent.toLowerCase();\n\n\t\t\t// Device\n\t\t\tthis.isTablet = (u.indexOf('windows') != -1 && u.indexOf('touch') != -1)\n\t\t\t\t|| u.indexOf('ipad') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') == -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('tablet') != -1)\n\t\t\t\t|| u.indexOf('kindle') != -1\n\t\t\t\t|| u.indexOf('silk') != -1\n\t\t\t\t|| u.indexOf('playbook') != -1;\n\n\t\t\tthis.isMobile = (u.indexOf('windows') != -1 && u.indexOf('phone') != -1)\n\t\t\t\t|| u.indexOf('iphone') != -1\n\t\t\t\t|| u.indexOf('ipod') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| u.indexOf('blackberry') != -1;\n\n\t\t\tthis.isDesktop = !this.isTablet && !this.isMobile;\n\n\t\t\t// OS\n\t\t\tthis.isIOS = u.indexOf('ipad') != -1 || u.indexOf('iphone') != -1 || u.indexOf('ipod') != -1;\n\t\t\tthis.isAndroid = u.indexOf('android') != -1 && u.indexOf('mobile') != -1;\n\n\t\t\t// Browser\n\t\t\tif(u.indexOf('msie') != -1 || u.indexOf('trident') != -1) {\n\t\t\t\tthis.isIE = true;\n\t\t\t} else if(u.indexOf('edge') != -1) {\n\t\t\t\tthis.isEdge = true;\n\t\t\t} else if(u.indexOf('chrome') != -1) {\n\t\t\t\tthis.isChrome = true;\n\t\t\t} else if(u.indexOf('safari') != -1) {\n\t\t\t\tthis.isSafari = true;\n\t\t\t} else if(u.indexOf('firefox') != -1) {\n\t\t\t\tthis.isFireFox = true;\n\t\t\t} else if(u.indexOf('opera') != -1) {\n\t\t\t\tthis.isOpera = true;\n\t\t\t} else {\n\t\t\t\tthis.isUnknownBrowser = true;\n\t\t\t}\n\n\t\t\t// Function\n\t\t\tthis.isTouchEnabled = (typeof window.ontouchstart) !== 'undefined';\n\t\t\tthis.isDownloadEnabled = !this.isIOS;\n\n\t\t\t// Resolution\n\t\t\tthis.devicePixelRatio = window.devicePixelRatio;\n\t\t\tthis.isRetina = this.devicePixelRatio > 1;\n\t\t}\n\n\t\t// --------------------\n\t\t// Device\n\n\t\tpublic static getIsDesktop():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDesktop;\n\t\t}\n\n\t\tpublic static getIsTablet():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTablet;\n\t\t}\n\n\t\tpublic static getIsMobile():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isMobile;\n\t\t}\n\n\t\t// --------------------\n\t\t// OS\n\n\t\tpublic static getIsIOS():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIOS;\n\t\t}\n\n\t\tpublic static getIsAndroid():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isAndroid;\n\t\t}\n\n\t\t// --------------------\n\t\t// Browser\n\n\t\tpublic static getIsIE():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIE;\n\t\t}\n\n\t\tpublic static getIsEdge():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isEdge;\n\t\t}\n\n\t\tpublic static getIsChrome():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isChrome;\n\t\t}\n\n\t\tpublic static getIsSafari():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isSafari;\n\t\t}\n\n\t\tpublic static getIsFireFox():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isFireFox;\n\t\t}\n\n\t\tpublic static getIsOpera():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isOpera;\n\t\t}\n\n\t\tpublic static getIsUnknownBrowser():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isUnknownBrowser;\n\t\t}\n\n\t\t// --------------------\n\t\t// Function\n\n\t\tpublic static getIsTouchEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTouchEnabled;\n\t\t}\n\n\t\tpublic static getIsDownloadEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDownloadEnabled;\n\t\t}\n\n\t\t// --------------------\n\t\t// Resolution\n\n\t\tpublic static getIsRetina():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isRetina;\n\t\t}\n\n\t\tpublic static getDevicePixelRatio():number {\n\t\t\tthis.initialize();\n\t\t\treturn this.devicePixelRatio;\n\t\t}\n\n\t\tpublic static getDpi():number {\n\t\t\tif (this.dpi == -1) {\n\t\t\t\tconst div:HTMLElement = document.createElement('div');\n\t\t\t\tdiv.setAttribute('style', 'height:1in;left:-100%;top:-100%;position:absolute;width:1in;');\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\tthis.dpi = div.offsetHeight;\n\t\t\t\tdocument.body.removeChild(div);\n\t\t\t}\n\t\t\treturn this.dpi;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isDesktop:boolean = false;\n\t\tprivate static isTablet:boolean = false;\n\t\tprivate static isMobile:boolean = false;\n\n\t\tprivate static isIOS:boolean = false;\n\t\tprivate static isAndroid:boolean = false;\n\n\t\tprivate static isIE:boolean = false;\n\t\tprivate static isEdge:boolean = false;\n\t\tprivate static isChrome:boolean = false;\n\t\tprivate static isSafari:boolean = false;\n\t\tprivate static isFireFox:boolean = false;\n\t\tprivate static isOpera:boolean = false;\n\t\tprivate static isUnknownBrowser:boolean = false;\n\n\t\tprivate static isTouchEnabled:boolean = false;\n\t\tprivate static isDownloadEnabled:boolean = false;\n\n\t\tprivate static isRetina:boolean = false;\n\t\tprivate static devicePixelRatio:number = 1;\n\t\tprivate static dpi:number = -1;\n\n\t\tprivate static isInitialized:boolean = false;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\timport Time = alm.util.Time;\n\n\texport class LocalStorage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * データをCookieに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param expiredAt 有効期限（UNIXミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any, expiredAt:number = -1):boolean {\n\t\t\tif (!LocalStorage.isAvailable()) return false;\n\t\t\tconst record:{ value:string; expiredAt:number } = { value:JSON.stringify(value), expiredAt: expiredAt };\n\t\t\tlocalStorage.setItem(key, JSON.stringify(record));\n\t\t\treturn true;\n\t\t}\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param minutes 保存期間（分）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static saveWithTerm(key:string, value:any, milliseconds:number = -1):boolean {\n\t\t\tconst expiredAt:number = milliseconds > 0 ? Time.now() + milliseconds : -1;\n\t\t\treturn LocalStorage.save(key, value, expiredAt);\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!LocalStorage.isAvailable()) return defaultValue;\n\t\t\tconst record:{ value:string; expiredAt:number } = JSON.parse(localStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\t// データが見つかった\n\t\t\t\tif (record.expiredAt > 0) {\n\t\t\t\t\t// 期限付きデータ\n\t\t\t\t\tif (Time.now() < record.expiredAt) {\n\t\t\t\t\t\t// 有効期限内\n\t\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 有効期限を過ぎているので破棄\n\t\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t\t\treturn defaultValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 永続データ\n\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!LocalStorage.isAvailable()) return;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (LocalStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem('__CKECK__', '__CKECK__');\n\t\t\t\t\tlocalStorage.removeItem('__CKECK__');\n\t\t\t\t\tLocalStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLocalStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn LocalStorage.isAvailable_;\n\t\t}\n\n\t\t/**\n\t\t * 各時間の尺度ミリ秒で合算する\n\t\t * @param dates 日\n\t\t * @param hours 時\n\t\t * @param minutes 分\n\t\t * @param seconds 秒\n\t\t * @param milliseconds ミリ秒\n\t\t * @returns {number} 合算されたミリ秒\n\t\t */\n\t\tpublic static toMilliseconds(dates:number = 0, hours:number = 0, minutes:number = 0, seconds:number = 0, milliseconds:number = 0):number {\n\t\t\treturn milliseconds + (seconds + (minutes + (hours + dates * 24) * 60) * 60) * 1000;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\t// https://github.com/nfriend/ts-keycode-enum\n\texport enum KeyCode {\n\t\tBackspace = 8,\n\t\tTab = 9,\n\t\tEnter = 13,\n\t\tShift = 16,\n\t\tCtrl = 17,\n\t\tAlt = 18,\n\t\tPauseBreak = 19,\n\t\tCapsLock = 20,\n\t\tEscape = 27,\n\t\tSpace = 32,\n\t\tPageUp = 33,\n\t\tPageDown = 34,\n\t\tEnd = 35,\n\t\tHome = 36,\n\n\t\tLeftArrow = 37,\n\t\tUpArrow = 38,\n\t\tRightArrow = 39,\n\t\tDownArrow = 40,\n\n\t\tInsert = 45,\n\t\tDelete = 46,\n\n\t\tKey0 = 48,\n\t\tKey1 = 49,\n\t\tKey2 = 50,\n\t\tKey3 = 51,\n\t\tKey4 = 52,\n\t\tKey5 = 53,\n\t\tKey6 = 54,\n\t\tKey7 = 55,\n\t\tKey8 = 56,\n\t\tKey9 = 57,\n\n\t\tClosedParen = Key0,\n\t\tExclamationMark = Key1,\n\t\tAtSign = Key2,\n\t\tPoundSign = Key3,\n\t\tHash = PoundSign,\n\t\tDollarSign = Key4,\n\t\tPercentSign = Key5,\n\t\tCaret = Key6,\n\t\tHat = Caret,\n\t\tAmpersand = Key7,\n\t\tStar = Key8,\n\t\tAsterik = Star,\n\t\tOpenParen = Key9,\n\n\t\tA = 65,\n\t\tB = 66,\n\t\tC = 67,\n\t\tD = 68,\n\t\tE = 69,\n\t\tF = 70,\n\t\tG = 71,\n\t\tH = 72,\n\t\tI = 73,\n\t\tJ = 74,\n\t\tK = 75,\n\t\tL = 76,\n\t\tM = 77,\n\t\tN = 78,\n\t\tO = 79,\n\t\tP = 80,\n\t\tQ = 81,\n\t\tR = 82,\n\t\tS = 83,\n\t\tT = 84,\n\t\tU = 85,\n\t\tV = 86,\n\t\tW = 87,\n\t\tX = 88,\n\t\tY = 89,\n\t\tZ = 90,\n\n\t\tLeftWindowKey = 91,\n\t\tRightWindowKey = 92,\n\t\tSelectKey = 93,\n\n\t\tNumpad0 = 96,\n\t\tNumpad1 = 97,\n\t\tNumpad2 = 98,\n\t\tNumpad3 = 99,\n\t\tNumpad4 = 100,\n\t\tNumpad5 = 101,\n\t\tNumpad6 = 102,\n\t\tNumpad7 = 103,\n\t\tNumpad8 = 104,\n\t\tNumpad9 = 105,\n\n\t\tMultiply = 106,\n\t\tAdd = 107,\n\t\tSubtract = 109,\n\t\tDecimalPoint = 110,\n\t\tDivide = 111,\n\n\t\tF1 = 112,\n\t\tF2 = 113,\n\t\tF3 = 114,\n\t\tF4 = 115,\n\t\tF5 = 116,\n\t\tF6 = 117,\n\t\tF7 = 118,\n\t\tF8 = 119,\n\t\tF9 = 120,\n\t\tF10 = 121,\n\t\tF11 = 122,\n\t\tF12 = 123,\n\n\t\tNumLock = 144,\n\t\tScrollLock = 145,\n\n\t\tSemiColon = 186,\n\t\tEquals = 187,\n\t\tComma = 188,\n\t\tDash = 189,\n\t\tPeriod = 190,\n\t\tUnderScore = Dash,\n\t\tPlusSign = Equals,\n\t\tForwardSlash = 191,\n\t\tTilde = 192,\n\t\tGraveAccent = Tilde,\n\n\t\tOpenBracket = 219,\n\t\tClosedBracket = 221,\n\t\tQuote = 222\n\t}\n\n\n\n\n\n\texport class KeyWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] start');\n\n\t\t\twindow.addEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.addEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] stop');\n\n\t\t\twindow.removeEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.removeEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowKeyDownHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] == null) {\n\t\t\t\tKeyWatcher.isKeyPressedByKeyCode[keyCode] = true;\n\t\t\t\t++KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t} else if (KeyWatcher.isContinuousPressEnabled) {\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\t\tprivate static windowKeyUpHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] != null) {\n\t\t\t\tdelete KeyWatcher.isKeyPressedByKeyCode[keyCode];\n\t\t\t\t--KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_UP, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getIsAnyKeyPressed():boolean { return this.pressedKeyCount > 0; }\n\t\tprivate static pressedKeyCount:number = 0;\n\n\t\tpublic static getIsKeyPressed(keyCode:number):boolean { return this.isKeyPressedByKeyCode[keyCode] != null; }\n\t\tprivate static isKeyPressedByKeyCode:util.Hash<boolean> = {};\n\n\n\t\tpublic static getIsContinuousPressEnabled():boolean { return this.isContinuousPressEnabled; }\n\t\tpublic static setIsContinuousPressEnabled(enabled:boolean):void { this.isContinuousPressEnabled = enabled; }\n\t\tprivate static isContinuousPressEnabled:boolean = false;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static isLongPressed:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class KeyWatcherEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic KEY_UP:string = 'keyUp';\n\t\tstatic KEY_DOWN:string = 'keyDown';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, originalEvent:KeyboardEvent = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.key = this.originalEvent.key;\n\t\t\tthis.keyCode = this.originalEvent.keyCode;\n\t\t\tthis.altKey = this.originalEvent.altKey;\n\t\t\tthis.ctrlKey = this.originalEvent.ctrlKey;\n\t\t\tthis.shiftKey = this.originalEvent.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():KeyWatcherEvent {\n\t\t\treturn new KeyWatcherEvent(this.getType(), this.getTarget(), this.originalEvent);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[KeyWatcherEvent] type = ' + this.getType() + ', key = ' + this.key + ', keyCode = ' + this.keyCode + ', altKey = ' + this.altKey + ', ctrlKey = ' + this.ctrlKey + ', shiftKey = ' + this.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic originalEvent:KeyboardEvent;\n\t\tpublic key:string;\n\t\tpublic keyCode:number;\n\t\tpublic altKey:boolean;\n\t\tpublic ctrlKey:boolean;\n\t\tpublic shiftKey:boolean;\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start(target:Window = null):void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] start');\n\n\t\t\tthis.window = target || window;\n\n\t\t\tthis.window.addEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('scroll', this.windowScrollHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] stop');\n\n\t\t\tthis.window.removeEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('scroll', this.windowScrollHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tthis.windowWidth = this.window.innerWidth;\n\t\t\tthis.windowHeight = this.window.innerHeight;\n\n\t\t\tthis.scrollTop = (this.window.pageYOffset !== undefined) ? this.window.pageYOffset : document.documentElement.scrollTop;\n\t\t\tthis.scrollBottom = this.scrollTop + this.windowHeight;\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static calcScrolledPosition(y:number):number {\n\t\t\treturn y - this.scrollTop;\n\t\t};\n\n\t\tpublic static calcScrolledPositionRatio(y:number):number {\n\t\t\treturn this.calcScrolledPosition(y) / this.windowHeight;\n\t\t}\n\n\t\tprivate static resize(event:Event):void {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.RESIZE, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\tprivate static windowResizeHandler = (event:Event):void => {\n\t\t\tif (!DeviceInfo.getIsDesktop() && WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.resize');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowOrientationChangeHandler = (event:Event):void => {\n\t\t\tif (DeviceInfo.getIsDesktop() || !WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.orientationchange');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowScrollHandler = (event:Event):void => {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.SCROLL, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getWindow():Window { return this.window; }\n\t\tprivate static window:Window = null;\n\n\t\tpublic static getScrollTop():number { return this.scrollTop; }\n\t\tprivate static scrollTop:number;\n\n\t\tpublic static getScrollBottom():number { return this.scrollBottom; }\n\t\tprivate static scrollBottom:number;\n\n\t\tpublic static getWindowWidth():number { return this.windowWidth; }\n\t\tprivate static windowWidth:number = 0;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tpublic static getIsMobileOrientationResize():boolean { return this.isMobileOrientationResize; }\n\t\tpublic static setIsMobileOrientationResize(value:boolean):void { this.isMobileOrientationResize = value; }\n\t\tprivate static isMobileOrientationResize:boolean = true;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcherEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SCROLL:string = 'scroll';\n\t\tstatic RESIZE:string = 'resize';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, originalEvent:Event = null, scrollTop:number = 0, scrollBottom:number = 0, windowWidth:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollBottom = scrollBottom;\n\t\t\tthis.windowWidth = windowWidth;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():WindowWatcherEvent {\n\t\t\treturn new WindowWatcherEvent(this.getType(), this.getTarget(), this.originalEvent, this.scrollTop, this.scrollBottom, this.windowWidth, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[WindowWatcherEvent] type = ' + this.getType() + ', scrollTop = ' + this.scrollTop + ', scrollBottom = ' + this.scrollBottom + ', windowWidth = ' + this.windowWidth + ', windowHeight = ' + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic originalEvent:Event;\n\t\tpublic scrollTop:number;\n\t\tpublic scrollBottom:number;\n\t\tpublic windowWidth:number;\n\t\tpublic windowHeight:number;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Scene extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.state = SceneState.Idling;\n\t\t\tthis.parent = null;\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\tthis.isEntered = false;\n\t\t\tthis.onLoad = null;\n\t\t\tthis.onUnload = null;\n\t\t\tthis.onArrive = null;\n\t\t\tthis.onLeave = null;\n\t\t\tthis.onAscend = null;\n\t\t\tthis.onDescend = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child name \\'' + childName + '\\' is already contained.');\n\t\t\t\t} else {\n\t\t\t\t\t++this.numChildren;\n\t\t\t\t\tchild.parent = this;\n\t\t\t\t\tthis.childrenByName[childName] = child;\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic removeChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\t--this.numChildren;\n\t\t\t\t\tchild.parent = null;\n\t\t\t\t\tdelete this.childrenByName[childName];\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child name \\'' + childName + '\\' is not contained.');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic addChildren(children:Scene[]):Scene[] {\n\t\t\tconst addedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.addChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\taddedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn addedChildren;\n\t\t}\n\n\t\tpublic removeChildren(children:Scene[]):Scene[] {\n\t\t\tconst removedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.removeChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\tremovedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn removedChildren;\n\t\t}\n\n\t\tpublic removeAllChildren():Scene[] {\n\t\t\tconst children:Scene[] = [];\n\t\t\tlet child:Scene;\n\t\t\tfor (let name in this.childrenByName) {\n\t\t\t\tchild = this.childrenByName[name];\n\t\t\t\tchild.parent = null;\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\treturn children;\n\t\t}\n\n\t\tpublic contains(child:Scene|string):boolean {\n\t\t\tif (child) {\n\t\t\t\treturn this.childrenByName[typeof child == 'string' ? child : child.name] != null;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getState():SceneState {\n\t\t\treturn this.state;\n\t\t}\n\n\t\tpublic getLastState():SceneState {\n\t\t\treturn this.lastState;\n\t\t}\n\n\t\tpublic getParent():Scene {\n\t\t\treturn this.parent;\n\t\t}\n\n\t\tpublic getChildByName(name:string):Scene {\n\t\t\treturn this.childrenByName[name];\n\t\t}\n\n\t\tpublic getNumChildren():number {\n\t\t\treturn this.numChildren;\n\t\t}\n\n\t\tpublic getManager():SceneManager {\n\t\t\tif (this.parent) {\n\t\t\t\treturn this.parent.getManager();\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getManager was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getPath():string {\n\t\t\tconst manager:SceneManager = this.getManager();\n\t\t\tif (manager) {\n\t\t\t\tconst names:string[] = [this.name];\n\t\t\t\tlet scene:Scene = this;\n\t\t\t\twhile (scene = scene.parent) {\n\t\t\t\t\tnames.unshift(scene.name);\n\t\t\t\t}\n\t\t\t\treturn manager.getScenePathByNames(names);\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getPath was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic gotoScene(path:string):void {\n\t\t\tthis.getManager().goto(path);\n\t\t}\n\n\n\n\n\n\t\tpublic _load(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Loading;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLoad) == 'function' ? this.onLoad() : this.implOnLoad();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _unload(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Unloading;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onUnload) == 'function' ? this.onUnload() : this.implOnUnload();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _arrive(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Arriving;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onArrive) == 'function' ? this.onArrive() : this.implOnArrive();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _leave(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Leaving;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLeave) == 'function' ? this.onLeave() : this.implOnLeave();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _ascend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Ascending;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onAscend) == 'function' ? this.onAscend() : this.implOnAscend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _descend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Descending;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onDescend) == 'function' ? this.onDescend() : this.implOnDescend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\n\n\n\n\t\tprotected implOnLoad():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnUnload():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnArrive():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnLeave():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnAscend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnDescend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t// The callback function is called preferentially over the override\n\t\tpublic onLoad:() => cmd.Command;\n\t\tpublic onUnload:() => cmd.Command;\n\t\tpublic onArrive:() => cmd.Command;\n\t\tpublic onLeave:() => cmd.Command;\n\t\tpublic onAscend:() => cmd.Command;\n\t\tpublic onDescend:() => cmd.Command;\n\n\t\tprivate isEntered:boolean;\n\t\tprivate name:string;\n\t\tprivate state:SceneState;\n\t\tprivate lastState:SceneState;\n\t\tprivate parent:Scene;\n\t\tprivate childrenByName:alm.util.Hash<Scene>;\n\t\tprivate numChildren:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static LOAD:string = 'load';\n\t\tpublic static UNLOAD:string = 'unload';\n\t\tpublic static ARRIVE:string = 'arrive';\n\t\tpublic static LEAVE:string = 'leave';\n\t\tpublic static ASCEND:string = 'ascend';\n\t\tpublic static DESCEND:string = 'descend';\n\n\t\tpublic static LOAD_COMPLETE:string = 'loadComplete';\n\t\tpublic static UNLOAD_COMPLETE:string = 'unloadComplete';\n\t\tpublic static ARRIVE_COMPLETE:string = 'arriveComplete';\n\t\tpublic static LEAVE_COMPLETE:string = 'leaveComplete';\n\t\tpublic static ASCEND_COMPLETE:string = 'ascendComplete';\n\t\tpublic static DESCEND_COMPLETE:string = 'descendComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneEvent {\n\t\t\treturn new SceneEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport LoggerLevel = alm.debug.LoggerLevel;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class SceneManager extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string = '') {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.root = new core.RootScene(this);\n\t\t\tthis.currentScene = null;\n\n\t\t\tthis.waypoints = [];\n\t\t\tthis.waypointIndex = -1;\n\t\t\tthis.lastState = SceneState.Idling;\n\t\t\tthis.eventIndex = -1;\n\t\t\tthis.transferId = -1;\n\t\t\tthis.transferInfo = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tLogger.verbose('----- scene manager start -----');\n\t\t\tthis.goto('/');\n\t\t}\n\n\t\tpublic goto(path:string):void {\n\t\t\tpath = this.resolvePath(path);\n\n\t\t\t// Return if current destination and new destination is same.\n\t\t\tif (this.transferInfo && this.transferInfo.getDestinationPath() == path) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Build waypoints\n\t\t\tlet newWaypoints:core.Waypoint[] = [];\n\t\t\tif (this.waypointIndex != -1) {\n\t\t\t\tnewWaypoints = this.createWaypoints(this.waypoints[this.waypointIndex].getPath(), path);\n\t\t\t} else {\n\t\t\t\t// Init\n\t\t\t\tnewWaypoints = [new core.Waypoint('/', 0)];\n\t\t\t}\n\n\t\t\t// Transfer\n\t\t\tif (newWaypoints.length > 0) {\n\t\t\t\tconst isDestinationChanged:boolean = this.transferInfo != null;\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.waypointIndex = 0;\n\t\t\t\t\tthis.eventIndex = 0;\n\t\t\t\t\t++this.transferId;\n\t\t\t\t\tthis.waypoints = newWaypoints;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.verbose('destination is changed');\n\t\t\t\t\tLogger.verbose('waypoint index : ' + this.waypointIndex);\n\t\t\t\t\tthis.waypoints = this.waypoints.slice(0, this.waypointIndex + 1).concat(newWaypoints.slice(1));\n\t\t\t\t\tthis.setDirection(this.waypoints);\n\t\t\t\t\tthis.printWaypoint(this.waypoints);\n\t\t\t\t}\n\n\t\t\t\tthis.transferInfo = new SceneTransferInfo(this.transferId, this.waypoints[this.waypointIndex].getPath(), this.waypoints[this.waypoints.length - 1].getPath());\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_START, this));\n\t\t\t\t}\n\n\t\t\t\tthis.checkState();\n\t\t\t}\n\t\t}\n\n\t\tpublic resolvePath(path:string):string {\n\t\t\t// Relative to absolute\n\t\t\tif (path[0] != '/') {\n\t\t\t\tif (this.currentScene) {\n\t\t\t\t\tpath = this.currentScene.getPath() + '/' + path;\n\t\t\t\t} else {\n\t\t\t\t\tpath = '/' + path;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Normalize\n\t\t\tconst names:string[] = path.split('/');\n\t\t\tconst normalized:string[] = [];\n\t\t\tfor (let i:number = 0; i < names.length; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (name == '') continue;\n\t\t\t\tif (name == '.') continue;\n\t\t\t\tif (name == '..') {\n\t\t\t\t\tnormalized.pop();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnormalized.push(name);\n\t\t\t}\n\n\t\t\treturn '/' + normalized.join('/');\n\t\t}\n\n\t\tpublic addSceneAt(path:string, createScene:boolean = false):Scene {\n\t\t\tlet success:boolean = false;\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (i == n - 1) {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tLogger.warn('[SceneManager \\'' + this.name + '\\'] addSceneAt was failed, because path \\'' + path + '\\' is already exist.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tscene = scene.getChildByName(name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn success ? scene : null;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getRoot():Scene {\n\t\t\treturn this.root;\n\t\t}\n\n\t\tpublic getSceneByPath(path:string):Scene {\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tscene = scene.getChildByName(names[i]);\n\t\t\t}\n\t\t\treturn scene;\n\t\t}\n\n\t\tpublic getSceneNamesByPath(path:string):string[] {\n\t\t\treturn path == '/' ? [''] : this.resolvePath(path).split('/');\n\t\t}\n\n\t\tpublic getSceneLevelByNames(names:string[]):number {\n\t\t\treturn names.length - 1;\n\t\t}\n\n\t\tpublic getScenePathByNames(names:string[]):string {\n\t\t\treturn names.length == 0 ? '/' : names.length == 1 ? ('/' + names[0]) : names.join('/');\n\t\t}\n\n\t\tprivate createWaypoints(departurePath:string, destinationPath:string):core.Waypoint[] {\n\t\t\tif (departurePath == destinationPath) {\n\t\t\t\tLogger.warn('[SceneManager] departure path and destination path is same, path = \\'' + departurePath + '\\'');\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tLogger.verbose('----- scene flow -----');\n\n\t\t\tconst waypoints:core.Waypoint[] = [\n\t\t\t\tnew core.Waypoint(departurePath, this.getSceneLevelByNames(this.getSceneNamesByPath(departurePath)))\n\t\t\t];\n\n\t\t\tconst departureNames:string[] = this.getSceneNamesByPath(departurePath);\n\t\t\tconst destinationNames:string[] = this.getSceneNamesByPath(destinationPath);\n\n\t\t\tLogger.verbose('    path');\n\t\t\tLogger.verbose('        current    : \\'' + departurePath + '\\'');\n\t\t\tLogger.verbose('        destination: \\'' + destinationPath + '\\'');\n\n\t\t\tLogger.verbose('    names');\n\t\t\tLogger.verbose('        current(' + departureNames.length + ')    : \\'' + departureNames + '\\'');\n\t\t\tLogger.verbose('        destination(' + destinationNames.length + '): \\'' + destinationNames + '\\'');\n\n\t\t\t// 折り返しを見つける\n\t\t\tlet turningLevel:number = 0;\n\t\t\tlet turningNames:string[] = [];\n\t\t\tlet turningPath:string;\n\t\t\tif (destinationPath == '/') {\n\t\t\t\tturningLevel = -1;\n\t\t\t\tturningNames = [];\n\t\t\t\tturningPath = '/';\n\t\t\t} else {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (departureNames[turningLevel] == destinationNames[turningLevel]) {\n\t\t\t\t\t\tturningNames.push(departureNames[turningLevel]);\n\t\t\t\t\t\t++turningLevel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t--turningLevel;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tturningPath = this.getScenePathByNames(turningNames);\n\t\t\t}\n\n\t\t\tLogger.verbose('    turning');\n\t\t\tLogger.verbose('        path     : ' + turningPath);\n\t\t\tLogger.verbose('        level    : ' + turningLevel);\n\t\t\tLogger.verbose('        names(' + turningNames.length + ') : \\'' + turningNames + '\\'');\n\n\t\t\t// 出発シーンから折り返しまで\n\t\t\t{\n\t\t\t\tconst names:string[] = departureNames.concat();\n\t\t\t\tlet prevPath:string = departurePath;\n\t\t\t\tfor (let i:number = departureNames.length - 1; i > turningLevel + 1; --i) {\n\t\t\t\t\tnames.pop();\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (turningPath == destinationPath && turningLevel > 0) {\n\t\t\t\t// 折り返しと到着シーンが同一\n\t\t\t\tconst from:core.Direction = turningLevel == waypoints[waypoints.length - 1].getLevel() ? core.Direction.Sibling : core.Direction.Ascend;\n\t\t\t\twaypoints.push(new core.Waypoint(turningPath, turningLevel));\n\t\t\t} else {\n\n\t\t\t\t// 折り返しから到達シーンまで\n\t\t\t\tconst names:string[] = turningNames.concat();\n\t\t\t\tconst prev:core.Waypoint = waypoints[waypoints.length - 1];\n\t\t\t\tlet prevPath:string = prev.getPath();\n\t\t\t\tlet prevLevel:number = prev.getLevel();\n\t\t\t\tfor (let i:number = turningLevel + 1; i < destinationNames.length; ++i) {\n\t\t\t\t\tconst name:string = destinationNames[i];\n\t\t\t\t\tnames.push(name);\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevLevel = level;\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 進行方向\n\t\t\tthis.setDirection(waypoints);\n\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tthis.printWaypoint(waypoints);\n\t\t\t}\n\n\t\t\treturn waypoints;\n\t\t}\n\n\t\tprivate setDirection(waypoints:core.Waypoint[]):void {\n\t\t\tconst n:number = waypoints.length;\n\t\t\tlet prev:core.Waypoint = null;\n\t\t\tlet point:core.Waypoint;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tpoint = waypoints[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tconst d:number = point.getLevel() - prev.getLevel();\n\t\t\t\t\tpoint._setFrom(d > 0 ? core.Direction.Descend : d < 0 ? core.Direction.Ascend : core.Direction.Sibling);\n\t\t\t\t\tprev._setTo(point.getFrom());\n\t\t\t\t}\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tprivate printWaypoint(waypoints:core.Waypoint[]):void {\n\t\t\tLogger.verbose('    waypoints');\n\t\t\tconst n:number = waypoints.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tLogger.verbose('        [' + i + '] ' + waypoints[i]);\n\t\t\t}\n\t\t\tLogger.verbose('');\n\t\t}\n\n\n\n\n\n\t\tprivate checkState():void {\n\t\t\ttrace('lastState : ' + scn.getSceneStateString(this.lastState));\n\n\t\t\t//trace(this.waypointIndex + ' / ' + this.waypoints.length);\n\n\t\t\tif (this.waypointIndex >= this.waypoints.length) {\n\t\t\t\tLogger.verbose('----- scene transfer complete -----');\n\t\t\t\tconst tmpTransferId:number = this.transferInfo.getTransferId();\n\t\t\t\tthis.waypointIndex = this.waypoints.length - 1;\n\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_COMPLETE, this));\n\t\t\t\tif (tmpTransferId == this.transferInfo.getTransferId()) {\n\t\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentScene) {\n\t\t\t\tconst currentWaypoint:core.Waypoint = this.waypoints[this.waypointIndex];\n\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypoint.getPath());\n\n\t\t\t\t// Departure scene\n\t\t\t\tif (this.waypoints.length > 1 && this.waypointIndex == 0) {\n\t\t\t\t\ttrace('Departure scene');\n\n\t\t\t\t\t// Leave\n\t\t\t\t\tif (this.lastState != SceneState.Leaving && this.currentScene.getLastState() == SceneState.Arriving) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Leave   : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._leave(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Departure to child\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tthis.checkState();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Through scene\n\t\t\t\tif (this.waypointIndex > 0 && this.waypointIndex < this.waypoints.length - 1) {\n\t\t\t\t\ttrace('Through scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ascend\n\t\t\t\t\tif (this.lastState != SceneState.Ascending && currentWaypoint.getFrom() == core.Direction.Ascend) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Ascend  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._ascend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Descend\n\t\t\t\t\tif (this.lastState != SceneState.Descending && currentWaypoint.getTo() == core.Direction.Descend) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Descend : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._descend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Destination scene\n\t\t\t\tif (this.waypointIndex == this.waypoints.length - 1) {\n\t\t\t\t\ttrace('Destination scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Arrive\n\t\t\t\t\tif (this.lastState != SceneState.Arriving) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Arrive  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._arrive(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\ttrace('Init scene');\n\n\t\t\t\t// Init\n\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\tthis.currentScene = this.root;\n\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t}\n\t\t}\n\n\t\tprivate sceneLoadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Loading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneUnloadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Unloading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneArriveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Arriving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneLeaveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Leaving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneAscendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Ascending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneDescendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Descending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate name:string;\n\t\tprivate root:Scene;\n\t\tprivate currentScene:Scene;\n\n\t\tprivate waypoints:core.Waypoint[];\n\t\tprivate waypointIndex:number;\n\t\tprivate lastState:SceneState;\n\t\tprivate eventIndex:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t\tprivate transferId:number;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TRANSFER_START:string = 'transferStart';\n\t\tpublic static TRANSFER_COMPLETE:string = 'transferComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerEvent {\n\t\t\treturn new SceneManagerEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneManagerEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\texport class SceneTransferInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(transferId:number, departurePath:string, destinationPath:string) {\n\t\t\tthis.transferId = transferId;\n\t\t\tthis.departurePath = departurePath;\n\t\t\tthis.destinationPath = destinationPath;\n\t\t\tthis.relay = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTransferId():number {\n\t\t\treturn this.transferId;\n\t\t}\n\n\t\tpublic getDeparturePath():string {\n\t\t\treturn this.departurePath;\n\t\t}\n\n\t\tpublic getDestinationPath():string {\n\t\t\treturn this.destinationPath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic relay:any;\n\n\t\tprivate transferId:number;\n\t\tprivate departurePath:string;\n\t\tprivate destinationPath:string;\n\t}\n}","/// <reference path='../include.ts' />\n\nnamespace scn {\n\n\texport enum SceneState {\n\t\tIdling,\n\t\tLoading,\n\t\tUnloading,\n\t\tArriving,\n\t\tLeaving,\n\t\tAscending,\n\t\tDescending,\n\t}\n\n\texport function getSceneStateString(state:SceneState):string {\n\t\tswitch (state) {\n\t\t\tcase SceneState.Idling:\n\t\t\t\treturn 'idling';\n\t\t\tcase SceneState.Loading:\n\t\t\t\treturn 'loading';\n\t\t\tcase SceneState.Unloading:\n\t\t\t\treturn 'unloading';\n\t\t\tcase SceneState.Arriving:\n\t\t\t\treturn 'arriving';\n\t\t\tcase SceneState.Leaving:\n\t\t\t\treturn 'leaving';\n\t\t\tcase SceneState.Ascending:\n\t\t\t\treturn 'ascending';\n\t\t\tcase SceneState.Descending:\n\t\t\t\treturn 'descending';\n\t\t}\n\t\treturn '';\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace scn.core {\n\n\texport enum Direction {\n\t\tStatic,\n\t\tSibling,\n\t\tAscend,\n\t\tDescend,\n\t}\n\n\texport function getDirectionString(direction:Direction):string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.Static:\n\t\t\t\treturn 'static';\n\t\t\tcase Direction.Sibling:\n\t\t\t\treturn 'sibling';\n\t\t\tcase Direction.Ascend:\n\t\t\t\treturn 'ascend';\n\t\t\tcase Direction.Descend:\n\t\t\t\treturn 'descend';\n\t\t}\n\t\treturn '';\n\t}\n}","/// <reference path='../../include.ts' />\n\nnamespace scn.core {\n\n\texport class RootScene extends Scene {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(manager:SceneManager) {\n\t\t\tsuper('');\n\t\t\tthis.manager = manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getManager():SceneManager {\n\t\t\treturn this.manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate manager:SceneManager;\n\t}\n}"]}
{"version":3,"sources":["../src/util/Logger.ts","../src/util/Num.ts","../src/util/Arr.ts","../src/util/Str.ts","../src/util/Boxer.ts","../src/util/Rotator.ts","../src/util/LocalStorage.ts","../src/util/DeviceInfo.ts","../src/util/CommandUtil.ts","../src/util/JQueryUtil.ts","../src/geom/Vector2.ts","../src/geom/Vector3.ts","../src/geom/Rectangle.ts","../src/job/Timer.ts","../src/event/TimerEvent.ts","../src/job/KeyWatcher.ts","../src/event/KeyWatcherEvent.ts","../src/var/KeyCode.ts","../src/job/ResizeWatcher.ts","../src/event/ResizeWatcherEvent.ts","../src/job/ScrollWatcher.ts","../src/event/ScrollWatcherEvent.ts","../src/job/AssetLoader.ts","../src/event/AssetLoaderEvent.ts","../src/view/View.ts"],"names":["trace","messages","_i","arguments","length","alm","Logger","info","apply","caller","throwWarn","target","message","condition","warnIf","throwError","errorIf","Num","map","value","srcMin","srcMax","dstMin","dstMax","clamp","random","min","max","Math","dist","x1","y1","x2","y2","squared","dx","dy","sqrt","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","from","to","PI3","PI2","PI","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","Arr","unique","list","filter","x","i","self","indexOf","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","p","m","n","project","Str","toTimeString","hours","minutes","seconds","h","floor","toString","s","substr","Align","ScaleMode","Boxer","resize","bounds","scaleMode","align","ShowAll","Middle_Center","tx","ty","y","tw","width","th","height","bx","by","bw","bh","NoBorder","ratioW","ratioH","ratio","ExactFit","Rectangle","Top_Left","Middle_Left","Bottom_Left","Top_Right","Middle_Right","Bottom_Right","Top_Center","Bottom_Center","Rotator","angle","velocity","this","setAngle","setVelocity","prototype","getAngle","getVelocity","update","getSin","sin","getCos","cos","getTan","tan","getMagnitude","getVector","xy","LocalStorage","save","key","expiredAt","isAvailable","record","JSON","stringify","localStorage","setItem","saveWithTerm","milliseconds","Date","getTime","load","defaultValue","parse","getItem","removeItem","remove","isAvailable_","error","toMilliseconds","dates","LoggerLevel","verbose","level","Verbose","console","debug","Array","slice","call","concat","Info","log","warn","Warn","Error","DeviceInfo","initialize","isInitialized","u","window","navigator","userAgent","toLowerCase","isTablet","isMobile","isDesktop","isIOS","isAndroid","isRetina","round","devicePixelRatio","getIsDesktop","getIsTablet","getIsMobile","getIsIOS","getIsAndroid","getIsRetina","CommandUtil","stop","command","interrupt","sequence","execute","commands","c","cmd","Serial","addCommand","JQueryUtil","fadeTo","opacity","duration","easing","switchDisplayTo","switchVisibility","o","parseInt","css","tween","Tween","fadeInJquery","fadeOutJquery","Vector2","set","copyTo","point","getClone","zero","normalize","l","getLength","getSquareDistance","getDistance","Vector3","z","dz","rect","getTop","getBottom","getLeft","getRight","getTopLeft","getTopRight","getBottomLeft","getBottomRight","Timer","_super","interval","repeatCount","_this","timerHandler","tStartTime","getCurrentTime","elapsedCount","isCompleted","tInterval","startInterval","dispatch","TimerEvent","TICK","COMPLETE","isRunning","tId","reset","__extends","start","tRestTime","stopInterval","restart","valueOf","setInterval","clearInterval","eventType","dispatchEvent","getRestCount","getIsRunning","getInterval","getElapsedTime","getRestTime","getElapsedCount","getRepeatCount","setRepeatCount","count","EventDispatcher","eventTarget","restCount","clone","getType","getTarget","Event","KeyWatcher","eventDispatcher","$window","jQuery","on","windowKeyDownHandler","windowKeyUpHandler","off","addEventListener","listener","removeEventListener","getIsAnyKeyPressed","pressedKeyCount","getIsKeyPressed","keyCode","isKeyPressedByKeyCode","getIsContinuousPressEnabled","isContinuousPressEnabled","setIsContinuousPressEnabled","enabled","event","KeyWatcherEvent","KEY_DOWN","KEY_UP","pressTimer","isLongPressed","jqueryEvent","altKey","ctrlKey","shiftKey","KeyCode","ResizeWatcher","windowResizeHandler","windowWidth","windowHeight","getWindowWidth","getWindowHeight","ResizeWatcherEvent","RESIZE","ScrollWatcher","windowScrollHandler","scrollTop","scrollBottom","calcScrolledPosition","calcScrolledPositionRatio","getScrollTop","getScrollBottom","ScrollWatcherEvent","SCROLL","AssetLoader","isLoading_","currentCount","totalCount","loadingQueries","loadingQueryIndex","queriesByQueryId","queriesByUrl","texturesByUrl","texturesByQueryId","requireJQueryJson","url","addQuery","requireThreeTexture","type","param","id","query","LoaderQuery","String","push","next","AssetLoaderEvent","PROGRESS","query_1","isLoading","isLoadComplete","getJSON","data","content","onLoad","texture","THREE","TextureLoader","onError","addLoadUpdateListener","removeLoadUpdateListener","addLoadCompleteListener","removeLoadCompleteListener","getQueryByQueryId","queryId","getQueryByUrl","getCurrentCount","getTotalCount","getTexturesByUrl","getTexturesByQueryId","textureId","progress","loadedCount","ERROR","View","view","isInitializing","isReady","isShowing","isShown","isHiding","autoHideWithInit","name","implInitialize","hide","ready","implReady","finalize","implFinalize","show","useTransition","getShowCommand","getHideCommand","Func","showCommand","hideCommand","insertCommand","implShow","implHide","getIsInitializing","getIsInitialized","getIsReady","getIsShowing","getIsShown","getIsHiding","getIsHidden","getView","getAutoHideWithInit","setAutoHideWithInit","getName","setName"],"mappings":"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","file":"alumican.min.js","sourcesContent":["/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport enum LoggerLevel {\n\t\tVerbose = 0,\n\t\tInfo = 1,\n\t\tWarn = 2,\n\t\tError = 3,\n\t\tSilent = 4,\n\t}\n\n\texport class Logger {\n\n\t\tpublic static level: number = LoggerLevel.Verbose;\n\n\t\tpublic static verbose(...messages:any[]): void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) console.debug.apply(console, Array.prototype.slice.call([\"Verbose: \"].concat(messages)));\n\t\t}\n\n\t\tpublic static info(...messages:any[]): void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) console.log.apply(console, Array.prototype.slice.call([\"Info   : \"].concat(messages)));\n\t\t}\n\n\t\tpublic static warn(...messages:any[]): void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) console.warn.apply(console, Array.prototype.slice.call([\"Warn   : \"].concat(messages)));\n\t\t}\n\n\t\tpublic static error(...messages:any[]): void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) console.error.apply(console, Array.prototype.slice.call([\"Error  : \"].concat(messages)));\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true): void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) Logger.warn(message + \" : \", target);\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true): void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) Logger.error(message + \" : \", target);\n\t\t}\n\t}\n}\n\nfunction trace(...messages:any[]):void {\n\talm.Logger.info.apply(trace.caller, arguments);\n}\n\nfunction throwWarn(target:any, message:string, condition:boolean = true):void {\n\talm.Logger.warnIf.apply(null, arguments);\n}\n\nfunction throwError(target:any, message:string, condition:boolean = true):void {\n\talm.Logger.errorIf.apply(null, arguments);\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Num {\n\n\t\t/**\n\t\t * 値を特定の範囲内にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcMin マッピング元の最小値\n\t\t * @param {number} srcMax マッピング元の最大値\n\t\t * @param {number} dstMin マッピング先の最小値\n\t\t * @param {number} dstMax マッピング先の最大値\n\t\t * @param {boolean} clamp trueの場合は入力値をsrcMin, srcMaxの範囲内に丸める\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static map(value:number, srcMin:number, srcMax:number, dstMin:number, dstMax:number, clamp:boolean = true):number {\n\t\t\tif (srcMin == srcMax) return dstMin;\n\t\t\tif (clamp) {\n\t\t\t\tif (srcMin < srcMax) {\n\t\t\t\t\tif (value < srcMin) value = srcMin;\n\t\t\t\t\telse if (value > srcMax) value = srcMax;\n\t\t\t\t} else {\n\t\t\t\t\tif (value < srcMax) value = srcMax;\n\t\t\t\t\telse if (value > srcMin) value = srcMin;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (value - srcMin) * (dstMax - dstMin) / (srcMax - srcMin) + dstMin;\n\t\t}\n\n\t\t/**\n\t\t * 乱数を取得する\n\t\t * @param {number} min 最小知\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static random(min:number = 0, max:number = 1):number {\n\t\t\treturn min + (max - min) * Math.random();\n\t\t}\n\n\t\t/**\n\t\t * 値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clamp(value:number, min:number, max:number):number {\n\t\t\treturn value < min ? min : (value > max ? max : value);\n\t\t}\n\n\t\t/**\n\t\t * 2点間の距離を取得する\n\t\t * @param {number} x1 点1のx座標\n\t\t * @param {number} y1 点1のy座標\n\t\t * @param {number} x2 点2のx座標\n\t\t * @param {number} y2 点2のy座標\n\t\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t\t * @returns {number} 距離\n\t\t */\n\t\tpublic static dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\t\tconst dx:number = x2 - x1;\n\t\t\tconst dy:number = y2 - y1;\n\t\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\n\t\t/**\n\t\t * 値をラジアン法から弧度法に変換する\n\t\t * @param {number} radian ラジアン法\n\t\t * @returns {number} 弧度法\n\t\t */\n\t\tpublic static radToDeg(radian:number):number {\n\t\t\treturn radian * Num.RAD2DEG;\n\t\t}\n\n\t\t/**\n\t\t * 値を弧度法からラジアン法に変換する\n\t\t * @param {number} radian 弧度法\n\t\t * @returns {number} ラジアン法\n\t\t */\n\t\tpublic static degToRad(degree:number):number {\n\t\t\treturn degree * Num.DEG2RAD;\n\t\t}\n\n\t\t/**\n\t\t * ある角度からある角度への回転角度を取得する\n\t\t * @param {number} from 元の角度\n\t\t * @param {number} to 目標の角度\n\t\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t\t * @returns {number} 回転角度\n\t\t */\n\t\tpublic static turn(from:number, to:number, radian:boolean = true):number {\n\t\t\treturn radian ? ((to - from + Num.PI3) % Num.PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONST\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static PI2:number = Math.PI * 2;\n\t\tpublic static PI3:number = Math.PI * 3;\n\t\tpublic static PI4:number = Math.PI * 4;\n\t\tpublic static PI5:number = Math.PI * 5;\n\t\tpublic static PI6:number = Math.PI * 6;\n\t\tpublic static PI_2:number = Math.PI / 2;\n\t\tpublic static PI_3:number = Math.PI / 3;\n\t\tpublic static PI_4:number = Math.PI / 4;\n\t\tpublic static PI_6:number = Math.PI / 6;\n\n\t\tprivate static RAD2DEG:number = 180 / Math.PI;\n\t\tprivate static DEG2RAD:number = Math.PI / 180;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Arr {\n\n\t\t/**\n\t\t * 重複を削除したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static unique<T>(list:T[]):T[] {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) === i;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * 重複のみを抽出したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\t\tif (unique) {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2つの入力配列に対して総当たり戦をおこなう\n\t\t * @param {T[]} list1 入力配列1\n\t\t * @param {T[]} list2 入力配列2\n\t\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t\t * @param callback.count コールバックの呼ばれた回数\n\t\t * @param callback.index1 入力配列1の現在のインデックス\n\t\t * @param callback.index2 入力配列2の現在のインデックス\n\t\t * @param callback.element1 入力配列1の現在の要素\n\t\t * @param callback.element2 入力配列2の現在の要素\n\t\t */\n\t\tpublic static roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\t\tlet i:number, j:number, p:number = 1;\n\t\t\tconst m:number = list1.length;\n\t\t\tconst n:number = list2.length;\n\t\t\tfor (i = 0; i < m; ++i) {\n\t\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace project {\n\n\texport class Str {\n\n\t\t/**\n\t\t * 時間を h:mm:ss の形式で取得する\n\t\t * @param {number} hours 時\n\t\t * @param {number} minutes 分\n\t\t * @param {number} seconds 秒\n\t\t * @returns {string} h:mm:ss 形式の文字列\n\t\t */\n\t\tpublic static toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\t\tseconds += minutes * 60 + hours * 3600;\n\t\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\t\tlet s:string = (\"0\" + Math.floor(seconds % 60)).substr(-2, 2);\n\t\t\tif (h != \"0\") {\n\t\t\t\treturn h + \":\" + (\"0\" + m).substr(-2, 2) + \":\" + s;\n\t\t\t} else {\n\t\t\t\treturn m + \":\" + s;\n\t\t\t}\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport enum Align {\n\t\tTop_Left,\n\t\tTop_Center,\n\t\tTop_Right,\n\t\tMiddle_Left,\n\t\tMiddle_Center,\n\t\tMiddle_Right,\n\t\tBottom_Left,\n\t\tBottom_Center,\n\t\tBottom_Right\n\t}\n\n\texport enum ScaleMode {\n\t\tExactFit,\n\t\tShowAll,\n\t\tNoBorder,\n\t\tNoScale,\n\t}\n\n\texport class Boxer {\n\n\t\tpublic static resize(target:Rectangle, bounds:Rectangle, scaleMode:ScaleMode = ScaleMode.ShowAll, align:Align = Align.Middle_Center):Rectangle {\n\t\t\tlet tx:number = target.x;\n\t\t\tlet ty:number = target.y;\n\t\t\tlet tw:number = target.width;\n\t\t\tlet th:number = target.height;\n\n\t\t\tconst bx:number = bounds.x;\n\t\t\tconst by:number = bounds.y;\n\t\t\tconst bw:number = bounds.width;\n\t\t\tconst bh:number = bounds.height;\n\n\t\t\tswitch (scaleMode) {\n\t\t\t\tcase ScaleMode.ShowAll:\n\t\t\t\tcase ScaleMode.NoBorder:\n\t\t\t\t\tconst ratioW:number = bw / tw;\n\t\t\t\t\tconst ratioH:number = bh / th;\n\t\t\t\t\tconst ratio:number = scaleMode == ScaleMode.ShowAll ? (ratioW < ratioH ? ratioW : ratioH) : (ratioW > ratioH ? ratioW : ratioH);\n\t\t\t\t\ttw *= ratio;\n\t\t\t\t\tth *= ratio;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ScaleMode.ExactFit:\n\t\t\t\t\treturn new Rectangle(bx, by, bw, bh);\n\t\t\t}\n\n\t\t\ttx = bx + ((align == Align.Top_Left || align == Align.Middle_Left || align == Align.Bottom_Left) ? 0 :\n\t\t\t\t(align == Align.Top_Right || align == Align.Middle_Right || align == Align.Bottom_Right) ? (bw - tw) : (bw - tw) / 2);\n\t\t\tty = by + ((align == Align.Top_Left || align == Align.Top_Center || align == Align.Top_Right) ? 0 :\n\t\t\t\t(align == Align.Bottom_Left || align == Align.Bottom_Center || align == Align.Bottom_Right) ? (bh - th) : (bh - th) / 2);\n\n\t\t\treturn new Rectangle(tx, ty, tw, th);\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Rotator {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(angle:number = 0, velocity:number = 0, radian:boolean = true) {\n\t\t\tthis.setAngle(angle, radian);\n\t\t\tthis.setVelocity(velocity, radian);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getAngle(radian:boolean = true):number {\n\t\t\treturn radian ? this.angle : (this.angle * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setAngle(angle:number, radian:boolean = true):void {\n\t\t\tthis.angle = radian ? angle : (angle * Math.PI / 180);\n\t\t}\n\n\t\tpublic getVelocity(radian:boolean = true):number {\n\t\t\treturn radian ? this.velocity : (this.velocity * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setVelocity(velocity:number, radian:boolean = true):void {\n\t\t\tthis.velocity = radian ? velocity : (velocity * Math.PI / 180);\n\t\t}\n\n\t\tpublic update():void {\n\t\t\tthis.angle += this.velocity;\n\t\t}\n\n\t\tpublic getSin(length:number = 1):number {\n\t\t\treturn length * Math.sin(this.angle);\n\t\t}\n\n\t\tpublic getCos(length:number = 1):number {\n\t\t\treturn length * Math.cos(this.angle);\n\t\t}\n\n\t\tpublic getTan(length:number = 1):number {\n\t\t\treturn length * Math.tan(this.angle);\n\t\t}\n\n\t\tpublic getMagnitude(length:number = 1):number {\n\t\t\treturn length * (1 + Math.sin(this.angle)) / 2;\n\t\t}\n\n\t\tpublic getVector(length:number = 1, xy:{ x:number, y:number } = null):{ x:number, y:number } {\n\t\t\tif (xy != null) {\n\t\t\t\txy.x = this.getCos(length);\n\t\t\t\txy.y = this.getSin(length);\n\t\t\t} else {\n\t\t\t\treturn { x: this.getCos(length), y: this.getSin(length) };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate angle:number;\n\t\tprivate velocity:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class LocalStorage {\n\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param expiredAt 有効期限（UNIXミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any, expiredAt:number = -1):boolean {\n\t\t\tif (!LocalStorage.isAvailable()) return false;\n\t\t\tconst record:{ value:string; expiredAt:number } = { value:JSON.stringify(value), expiredAt: expiredAt };\n\t\t\tlocalStorage.setItem(key, JSON.stringify(record));\n\t\t\treturn true;\n\t\t}\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param minutes 保存期間（分）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static saveWithTerm(key:string, value:any, milliseconds:number = -1):boolean {\n\t\t\tconst expiredAt:number = milliseconds > 0 ? new Date().getTime() + milliseconds :-1;\n\t\t\treturn LocalStorage.save(key, value, expiredAt);\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!LocalStorage.isAvailable()) return defaultValue;\n\t\t\tconst record:{ value:string; expiredAt:number } = JSON.parse(localStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\t// データが見つかった\n\t\t\t\tif (record.expiredAt > 0) {\n\t\t\t\t\t// 期限付きデータ\n\t\t\t\t\tif (new Date().getTime() < record.expiredAt) {\n\t\t\t\t\t\t// 有効期限内\n\t\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 有効期限を過ぎているので破棄\n\t\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t\t\treturn defaultValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 永続データ\n\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!LocalStorage.isAvailable()) return;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (LocalStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem(\"__CKECK__\", \"__CKECK__\");\n\t\t\t\t\tlocalStorage.removeItem(\"__CKECK__\");\n\t\t\t\t\tLocalStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLocalStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn LocalStorage.isAvailable_;\n\t\t}\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\t\t/**\n\t\t * 各時間の尺度ミリ秒で合算する\n\t\t * @param dates 日\n\t\t * @param hours 時\n\t\t * @param minutes 分\n\t\t * @param seconds 秒\n\t\t * @param milliseconds ミリ秒\n\t\t * @returns {number} 合算されたミリ秒\n\t\t */\n\t\tpublic static toMilliseconds(dates:number = 0, hours:number = 0, minutes:number = 0, seconds:number = 0, milliseconds:number = 0):number {\n\t\t\treturn milliseconds + (seconds + (minutes + (hours + dates * 24) * 60) * 60) * 1000;\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class DeviceInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tconst u:string = window.navigator.userAgent.toLowerCase();\n\n\t\t\tthis.isTablet = (u.indexOf(\"windows\") != -1 && u.indexOf(\"touch\") != -1)\n\t\t\t\t|| u.indexOf(\"ipad\") != -1\n\t\t\t\t|| (u.indexOf(\"android\") != -1 && u.indexOf(\"mobile\") == -1)\n\t\t\t\t|| (u.indexOf(\"firefox\") != -1 && u.indexOf(\"tablet\") != -1)\n\t\t\t\t|| u.indexOf(\"kindle\") != -1\n\t\t\t\t|| u.indexOf(\"silk\") != -1\n\t\t\t\t|| u.indexOf(\"playbook\") != -1;\n\n\t\t\tthis.isMobile = (u.indexOf(\"windows\") != -1 && u.indexOf(\"phone\") != -1)\n\t\t\t\t|| u.indexOf(\"iphone\") != -1\n\t\t\t\t|| u.indexOf(\"ipod\") != -1\n\t\t\t\t|| (u.indexOf(\"android\") != -1 && u.indexOf(\"mobile\") != -1)\n\t\t\t\t|| (u.indexOf(\"firefox\") != -1 && u.indexOf(\"mobile\") != -1)\n\t\t\t\t|| u.indexOf(\"blackberry\") != -1;\n\n\t\t\tthis.isDesktop = !this.isTablet && !this.isMobile;\n\n\t\t\tthis.isIOS = u.indexOf(\"ipad\") != -1 || u.indexOf(\"iphone\") != -1 || u.indexOf(\"ipod\") != -1;\n\t\t\tthis.isAndroid = u.indexOf(\"android\") != -1 && u.indexOf(\"mobile\") != -1;\n\n\t\t\tthis.isRetina = Math.round(window.devicePixelRatio) == 2;\n\t\t}\n\n\t\tpublic static getIsDesktop():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDesktop;\n\t\t}\n\n\t\tpublic static getIsTablet():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTablet;\n\t\t}\n\n\t\tpublic static getIsMobile():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isMobile;\n\t\t}\n\n\t\tpublic static getIsIOS():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIOS;\n\t\t}\n\n\t\tpublic static getIsAndroid():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isAndroid;\n\t\t}\n\n\t\tpublic static getIsRetina():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isRetina;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isDesktop:boolean;\n\t\tprivate static isTablet:boolean;\n\t\tprivate static isMobile:boolean;\n\n\t\tprivate static isRetina:boolean;\n\n\t\tprivate static isIOS:boolean;\n\t\tprivate static isAndroid:boolean;\n\n\t\tprivate static isInitialized:boolean = false;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class CommandUtil {\n\n\t\tpublic static stop(command:cmd.Command):any {\n\t\t\tif (command) command.interrupt();\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic static sequence(execute:boolean, ...commands:(cmd.Command|Function)[]):cmd.Serial {\n\t\t\tconst c:cmd.Serial = new cmd.Serial();\n\t\t\tc.addCommand(...commands);\n\t\t\tif (execute) c.execute();\n\t\t\treturn c;\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class JQueryUtil {\n\n\t\tpublic static fadeTo(target:JQuery, opacity:number, duration:number, easing:cmd.EasingFunction, switchDisplayTo:string = \"\", switchVisibility:boolean = false, execute:boolean = true):cmd.Tween {\n\t\t\tlet o:Object = { value: parseInt(target.css(\"opacity\")) };\n\t\t\tconst tween:cmd.Tween = new cmd.Tween(o, { value: opacity }, null, duration, easing, ():void => {\n\t\t\t\tif (opacity > 0) {\n\t\t\t\t\tif (switchDisplayTo != \"\") target.css(\"display\", switchDisplayTo);\n\t\t\t\t\tif (switchVisibility) target.css(\"visibility\", \"visible\");\n\t\t\t\t}\n\t\t\t}, ():void => {\n\t\t\t\ttarget.css(\"opacity\", o[\"value\"]);\n\t\t\t}, ():void => {\n\t\t\t\tif (opacity <= 0) {\n\t\t\t\t\tif (switchDisplayTo != \"\") target.css(\"display\", \"none\");\n\t\t\t\t\tif (switchVisibility) target.css(\"visibility\", \"hidden\");\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (execute) tween.execute();\n\t\t\treturn tween;\n\t\t}\n\n\t\tpublic static fadeInJquery(target:JQuery, duration:number, easing:cmd.EasingFunction, switchDisplayTo:string = \"\", switchVisibility:boolean = false, execute:boolean = true):cmd.Tween {\n\t\t\treturn JQueryUtil.fadeTo(target, 1, duration, easing, switchDisplayTo, switchVisibility, execute);\n\t\t}\n\n\t\tpublic static fadeOutJquery(target:JQuery, duration:number, easing:cmd.EasingFunction, switchDisplayTo:string = \"\", switchVisibility:boolean = false, execute:boolean = true):cmd.Tween {\n\t\t\treturn JQueryUtil.fadeTo(target, 0, duration, easing, switchDisplayTo, switchVisibility, execute);\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Vector2 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0) {\n\t\t\tthis.set(x, y);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic copyTo(point:Vector2):void {\n\t\t\tpoint.set(this.x, this.y);\n\t\t}\n\n\t\tpublic getClone():Vector2 {\n\t\t\treturn new Vector2(this.x, this.y);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector2):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tpublic getDistance(point:Vector2):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Vector3 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, z:number = 0) {\n\t\t\tthis.set(x, y, z);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, z:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic copyTo(point:Vector3):void {\n\t\t\tpoint.set(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic getClone():Vector3 {\n\t\t\treturn new Vector3(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t\tthis.z /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector3):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\tconst dz:number = point.z - this.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tpublic getDistance(point:Vector3):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic z:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Rectangle {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0) {\n\t\t\tthis.set(x, y, width, height);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, width:number, height:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tpublic copyTo(rect:Rectangle):void {\n\t\t\trect.set(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getClone():Rectangle {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getTop():number {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tpublic getBottom():number {\n\t\t\treturn this.y + this.height;\n\t\t}\n\n\t\tpublic getLeft():number {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tpublic getRight():number {\n\t\t\treturn this.x + this.width;\n\t\t}\n\n\t\tpublic getTopLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getTop());\n\t\t}\n\n\t\tpublic getTopRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getTop());\n\t\t}\n\n\t\tpublic getBottomLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getBottom());\n\t\t}\n\n\t\tpublic getBottomRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getBottom());\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic width:number;\n\t\tpublic height:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Timer extends cmd.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(interval:number = 1000, repeatCount:number = 0) {\n\t\t\tsuper();\n\t\t\tthis.interval = interval;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tId = -1;\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\t\t\tthis.tStartTime = this.getCurrentTime();\n\t\t\tthis.startInterval(this.tRestTime != -1 ? this.tRestTime : this.interval);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tRestTime = this.getCurrentTime() - this.tStartTime;\n\t\t\tthis.stopInterval();\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.stop();\n\t\t\tthis.elapsedCount = 0;\n\t\t\tthis.tRestTime = -1;\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tthis.reset();\n\t\t\tthis.start();\n\t\t}\n\n\n\n\n\n\t\tprivate getCurrentTime():number {\n\t\t\treturn new Date().valueOf();\n\t\t}\n\n\t\tprivate startInterval(interval:number):void {\n\t\t\tthis.stopInterval();\n\t\t\tthis.tInterval = interval;\n\t\t\tthis.tId = window.setInterval(this.timerHandler, this.tInterval);\n\t\t}\n\n\t\tprivate stopInterval():void {\n\t\t\tif (this.tId != -1) {\n\t\t\t\tclearInterval(this.tId);\n\t\t\t\tthis.tId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatch(eventType:string):void {\n\t\t\tthis.dispatchEvent(new TimerEvent(eventType, this, this.elapsedCount, this.repeatCount, this.getRestCount()));\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.tStartTime = this.getCurrentTime();\n\t\t\t++this.elapsedCount;\n\t\t\tlet isCompleted:boolean = false;\n\t\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\t\tisCompleted = true;\n\t\t\t\tthis.stop();\n\t\t\t} else if (this.tInterval != this.interval) {\n\t\t\t\tthis.startInterval(this.interval);\n\t\t\t}\n\t\t\tthis.dispatch(TimerEvent.TICK);\n\t\t\tif (isCompleted) {\n\t\t\t\tthis.dispatch(TimerEvent.COMPLETE);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsRunning():boolean { return this.isRunning; }\n\t\tprivate isRunning:boolean;\n\n\t\tpublic getInterval():number { return this.interval; }\n\t\tpublic setInterval(interval:number):void { this.interval = interval; }\n\t\tprivate interval:number;\n\n\t\tpublic getElapsedTime():number { return this.getCurrentTime() - this.tStartTime; }\n\n\t\tpublic getRestTime():number { return this.interval - this.getElapsedTime(); }\n\n\t\tpublic getElapsedCount():number { return this.elapsedCount; }\n\t\tprivate elapsedCount:number;\n\n\t\tpublic getRepeatCount():number { return this.repeatCount; }\n\t\tpublic setRepeatCount(count:number):void { this.repeatCount = count; }\n\t\tprivate repeatCount:number;\n\n\t\tpublic getRestCount():number { return this.repeatCount - this.elapsedCount; }\n\n\t\tprivate tStartTime:number;\n\t\tprivate tRestTime:number;\n\t\tprivate tInterval:number;\n\t\tprivate tId:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class TimerEvent extends cmd.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = \"tick\";\n\t\tpublic static COMPLETE:string = \"complete\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, elapsedCount:number = 0, repeatCount:number = 0, restCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.elapsedCount = elapsedCount;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.restCount = restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():TimerEvent {\n\t\t\treturn new TimerEvent(this.getType(), this.getTarget(), this.elapsedCount, this.repeatCount, this.restCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[TimerEvent] type = \" + this.getType() + \", elapsedCount = \" + this.elapsedCount + \", repeatCount=\" + this.repeatCount + \", restCount=\" + this.restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic elapsedCount:number;\n\t\tpublic repeatCount:number;\n\t\tpublic restCount:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class KeyWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new cmd.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[KeyWatcher] start\");\n\n\t\t\tconst $window:JQuery = jQuery(window);\n\t\t\t$window.on(\"keydown\", this.windowKeyDownHandler);\n\t\t\t$window.on(\"keyup\", this.windowKeyUpHandler);\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[KeyWatcher] stop\");\n\n\t\t\tconst $window:JQuery = jQuery(window);\n\t\t\t$window.off(\"keydown\", this.windowKeyDownHandler);\n\t\t\t$window.off(\"keyup\", this.windowKeyUpHandler);\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowKeyDownHandler = (event:JQuery.Event):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] == null) {\n\t\t\t\tKeyWatcher.isKeyPressedByKeyCode[keyCode] = true;\n\t\t\t\t++KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t} else if (KeyWatcher.isContinuousPressEnabled) {\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\t\tprivate static windowKeyUpHandler = (event:JQuery.Event):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] != null) {\n\t\t\t\tdelete KeyWatcher.isKeyPressedByKeyCode[keyCode];\n\t\t\t\t--KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_UP, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getIsAnyKeyPressed():boolean { return this.pressedKeyCount > 0; }\n\t\tprivate static pressedKeyCount:number = 0;\n\n\t\tpublic static getIsKeyPressed(keyCode:number):boolean { return this.isKeyPressedByKeyCode[keyCode] != null; }\n\t\tprivate static isKeyPressedByKeyCode:cmd.Hash<boolean> = {};\n\n\n\t\tpublic static getIsContinuousPressEnabled():boolean { return this.isContinuousPressEnabled; }\n\t\tpublic static setIsContinuousPressEnabled(enabled:boolean):void { this.isContinuousPressEnabled = enabled; }\n\t\tprivate static isContinuousPressEnabled:boolean = false;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static pressTimer:alm.Timer = null;\n\t\tprivate static isLongPressed:boolean = false;\n\t\tprivate static eventDispatcher:cmd.EventDispatcher = null;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class KeyWatcherEvent extends cmd.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic KEY_UP:string = \"keyUp\";\n\t\tstatic KEY_DOWN:string = \"keyDown\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, jqueryEvent:JQuery.Event = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.jqueryEvent = jqueryEvent;\n\t\t\tthis.key = this.jqueryEvent.key;\n\t\t\tthis.keyCode = this.jqueryEvent.keyCode;\n\t\t\tthis.altKey = this.jqueryEvent.altKey;\n\t\t\tthis.ctrlKey = this.jqueryEvent.ctrlKey;\n\t\t\tthis.shiftKey = this.jqueryEvent.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():KeyWatcherEvent {\n\t\t\treturn new KeyWatcherEvent(this.getType(), this.getTarget(), this.jqueryEvent);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[KeyWatcherEvent] type = \" + this.getType() + \", key = \" + this.key + \", keyCode = \" + this.keyCode + \", altKey = \" + this.altKey + \", ctrlKey = \" + this.ctrlKey + \", shiftKey = \" + this.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic jqueryEvent:JQuery.Event;\n\t\tpublic key:string;\n\t\tpublic keyCode:number;\n\t\tpublic altKey:boolean;\n\t\tpublic ctrlKey:boolean;\n\t\tpublic shiftKey:boolean;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\n// Original\n// https://github.com/nfriend/ts-keycode-enum\n// License MIT\n\nnamespace alm {\n\n\texport enum KeyCode {\n\n\t\tBackspace = 8,\n\t\tTab = 9,\n\t\tEnter = 13,\n\t\tShift = 16,\n\t\tCtrl = 17,\n\t\tAlt = 18,\n\t\tPauseBreak = 19,\n\t\tCapsLock = 20,\n\t\tEscape = 27,\n\t\tSpace = 32,\n\t\tPageUp = 33,\n\t\tPageDown = 34,\n\t\tEnd = 35,\n\t\tHome = 36,\n\n\t\tLeftArrow = 37,\n\t\tUpArrow = 38,\n\t\tRightArrow = 39,\n\t\tDownArrow = 40,\n\n\t\tInsert = 45,\n\t\tDelete = 46,\n\n\t\tKey0 = 48,\n\t\tKey1 = 49,\n\t\tKey2 = 50,\n\t\tKey3 = 51,\n\t\tKey4 = 52,\n\t\tKey5 = 53,\n\t\tKey6 = 54,\n\t\tKey7 = 55,\n\t\tKey8 = 56,\n\t\tKey9 = 57,\n\n\t\tClosedParen = Key0,\n\t\tExclamationMark = Key1,\n\t\tAtSign = Key2,\n\t\tPoundSign = Key3,\n\t\tHash = PoundSign,\n\t\tDollarSign = Key4,\n\t\tPercentSign = Key5,\n\t\tCaret = Key6,\n\t\tHat = Caret,\n\t\tAmpersand = Key7,\n\t\tStar = Key8,\n\t\tAsterik = Star,\n\t\tOpenParen = Key9,\n\n\t\tA = 65,\n\t\tB = 66,\n\t\tC = 67,\n\t\tD = 68,\n\t\tE = 69,\n\t\tF = 70,\n\t\tG = 71,\n\t\tH = 72,\n\t\tI = 73,\n\t\tJ = 74,\n\t\tK = 75,\n\t\tL = 76,\n\t\tM = 77,\n\t\tN = 78,\n\t\tO = 79,\n\t\tP = 80,\n\t\tQ = 81,\n\t\tR = 82,\n\t\tS = 83,\n\t\tT = 84,\n\t\tU = 85,\n\t\tV = 86,\n\t\tW = 87,\n\t\tX = 88,\n\t\tY = 89,\n\t\tZ = 90,\n\n\t\tLeftWindowKey = 91,\n\t\tRightWindowKey = 92,\n\t\tSelectKey = 93,\n\n\t\tNumpad0 = 96,\n\t\tNumpad1 = 97,\n\t\tNumpad2 = 98,\n\t\tNumpad3 = 99,\n\t\tNumpad4 = 100,\n\t\tNumpad5 = 101,\n\t\tNumpad6 = 102,\n\t\tNumpad7 = 103,\n\t\tNumpad8 = 104,\n\t\tNumpad9 = 105,\n\n\t\tMultiply = 106,\n\t\tAdd = 107,\n\t\tSubtract = 109,\n\t\tDecimalPoint = 110,\n\t\tDivide = 111,\n\n\t\tF1 = 112,\n\t\tF2 = 113,\n\t\tF3 = 114,\n\t\tF4 = 115,\n\t\tF5 = 116,\n\t\tF6 = 117,\n\t\tF7 = 118,\n\t\tF8 = 119,\n\t\tF9 = 120,\n\t\tF10 = 121,\n\t\tF11 = 122,\n\t\tF12 = 123,\n\n\t\tNumLock = 144,\n\t\tScrollLock = 145,\n\n\t\tSemiColon = 186,\n\t\tEquals = 187,\n\t\tComma = 188,\n\t\tDash = 189,\n\t\tPeriod = 190,\n\t\tUnderScore = Dash,\n\t\tPlusSign = Equals,\n\t\tForwardSlash = 191,\n\t\tTilde = 192,\n\t\tGraveAccent = Tilde,\n\n\t\tOpenBracket = 219,\n\t\tClosedBracket = 221,\n\t\tQuote = 222\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class ResizeWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new cmd.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[ResizeWatcher] start\");\n\n\t\t\tjQuery(window).on(\"resize\", this.windowResizeHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[ResizeWatcher] stop\");\n\n\t\t\tjQuery(window).off(\"resize\", this.windowResizeHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tconst $window:JQuery = jQuery(window);\n\t\t\tResizeWatcher.windowWidth = $window.width();\n\t\t\tResizeWatcher.windowHeight = $window.height();\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:ResizeWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:ResizeWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowResizeHandler = (event:JQuery.Event):void => {\n\t\t\tResizeWatcher.apply();\n\t\t\tResizeWatcher.eventDispatcher.dispatchEvent(new ResizeWatcherEvent(ResizeWatcherEvent.RESIZE, ResizeWatcher, event, ResizeWatcher.windowWidth, ResizeWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getWindowWidth():number { return this.windowWidth; }\n\t\tprivate static windowWidth:number = 0;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:cmd.EventDispatcher = null;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class ResizeWatcherEvent extends cmd.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic RESIZE:string = \"resize\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, jqueryEvent:JQuery.Event = null, windowWidth:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.jqueryEvent = jqueryEvent;\n\t\t\tthis.windowWidth = windowWidth;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():ResizeWatcherEvent {\n\t\t\treturn new ResizeWatcherEvent(this.getType(), this.getTarget(), this.jqueryEvent, this.windowWidth, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[ResizeWatcherEvent] type = \" + this.getType() + \", windowWidth = \" + this.windowWidth + \", windowHeight = \" + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic jqueryEvent:JQuery.Event;\n\t\tpublic windowWidth:number;\n\t\tpublic windowHeight:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class ScrollWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new cmd.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[ScrollWatcher] start\");\n\n\t\t\tjQuery(window).on(\"resize\", this.windowScrollHandler);\n\t\t\tjQuery(window).on(\"scroll\", this.windowScrollHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[ScrollWatcher] stop\");\n\n\t\t\tjQuery(window).off(\"resize\", this.windowScrollHandler);\n\t\t\tjQuery(window).off(\"scroll\", this.windowScrollHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tconst $window:JQuery = jQuery(window);\n\t\t\tthis.windowHeight = $window.height();\n\t\t\tthis.scrollTop = $window.scrollTop();\n\t\t\tthis.scrollBottom = this.scrollTop + this.windowHeight;\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:ScrollWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:ScrollWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static calcScrolledPosition(y:number):number {\n\t\t\treturn y - this.scrollTop;\n\t\t};\n\n\t\tpublic static calcScrolledPositionRatio(y:number):number {\n\t\t\treturn this.calcScrolledPosition(y) / this.windowHeight;\n\t\t}\n\n\n\n\n\n\n\t\tprivate static windowScrollHandler = (event:JQuery.Event):void => {\n\t\t\tScrollWatcher.apply();\n\t\t\tScrollWatcher.eventDispatcher.dispatchEvent(new ScrollWatcherEvent(ScrollWatcherEvent.SCROLL, ScrollWatcher, event, ScrollWatcher.scrollTop, ScrollWatcher.scrollBottom, ScrollWatcher.windowHeight));\n\t\t};\n\n\t\tprivate static windowResizeHandler = (event:JQuery.Event):void => {\n\t\t\tScrollWatcher.apply();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getScrollTop():number { return this.scrollTop; }\n\t\tprivate static scrollTop:number;\n\n\t\tpublic static getScrollBottom():number { return this.scrollBottom; }\n\t\tprivate static scrollBottom:number;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:cmd.EventDispatcher = null;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class ScrollWatcherEvent extends cmd.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SCROLL:string = \"scroll\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, jqueryEvent:JQuery.Event = null, scrollTop:number = 0, scrollBottom:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.jqueryEvent = jqueryEvent;\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollBottom = scrollBottom;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():ScrollWatcherEvent {\n\t\t\treturn new ScrollWatcherEvent(this.getType(), this.getTarget(), this.jqueryEvent, this.scrollTop, this.scrollBottom, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[ScrollWatcherEvent] type = \" + this.getType() + \", scrollTop = \" + this.scrollTop + \", scrollBottom = \" + this.scrollBottom + \", windowHeight = \" + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic jqueryEvent:JQuery.Event;\n\t\tpublic scrollTop:number;\n\t\tpublic scrollBottom:number;\n\t\tpublic windowHeight:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class AssetLoader {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.isLoading_ = false;\n\n\t\t\tthis.currentCount = 0;\n\t\t\tthis.totalCount = 0;\n\n\t\t\tthis.loadingQueries = [];\n\t\t\tthis.loadingQueryIndex = -1;\n\n\t\t\tthis.queriesByQueryId = {};\n\t\t\tthis.queriesByUrl = {};\n\n\t\t\tthis.texturesByUrl = {};\n\t\t\tthis.texturesByQueryId = {};\n\n\t\t\tthis.eventDispatcher = new cmd.EventDispatcher();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic requireJQueryJson(url:string):string {\n\t\t\treturn this.addQuery(\"jQuery.JSON\", url, {});\n\t\t}\n\n\t\tpublic requireThreeTexture(url:string):string {\n\t\t\treturn this.addQuery(\"THREE.Texture\", url, {});\n\t\t}\n\n\t\t//public requireJQueryJson(url:string, onLoad?:(data:any)=>void):string {\n\t\t//\treturn this.addQuery(\"jQuery.JSON\", url, { onLoad: onLoad });\n\t\t//}\n\n\t\t//public requireThreeTexture(url:string, onLoad?:(texture:THREE.Texture)=>void, onError?:(message:string)=>void):string {\n\t\t//\treturn this.addQuery(\"THREE.Texture\", url, { onLoad: onLoad, onError: onError });\n\t\t//}\n\n\t\t//public requireThreeTextureAtlas(baseUrl:string, onLoad?:(texture:THREE.Texture)=>void, onError?:(message:string)=>void):string {\n\t\t//\treturn this.addQuery(\"THREE.TextureAtlas\", baseUrl, { onLoad: onLoad, onError: onError });\n\t\t//}\n\n\t\tprivate addQuery(type:string, url:string, param:any):string {\n\t\t\tif (this.queriesByUrl[url]) return this.queriesByUrl[url].id;\n\n\t\t\tconst query:LoaderQuery = new LoaderQuery();\n\t\t\tquery.id = String(AssetLoader.id);\n\t\t\tquery.type = type;\n\t\t\tquery.url = url;\n\t\t\tquery.param = param;\n\t\t\tthis.loadingQueries.push(query);\n\t\t\tthis.queriesByQueryId[query.id] = query;\n\t\t\tthis.queriesByUrl[query.url] = query;\n\t\t\t++AssetLoader.id;\n\t\t\treturn query.id;\n\t\t}\n\n\t\tpublic load():void {\n\t\t\tif (this.isLoading_) return;\n\t\t\tthis.isLoading_ = true;\n\t\t\tthis.loadingQueryIndex = -1;\n\t\t\tthis.next();\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCount = this.loadingQueryIndex + 1;\n\t\t\tthis.totalCount = this.loadingQueries.length;\n\n\t\t\tif (this.currentCount > 0) {\n\t\t\t\tthis.eventDispatcher.dispatchEvent(new AssetLoaderEvent(AssetLoaderEvent.PROGRESS, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\n\t\t\tif (this.currentCount < this.totalCount) {\n\t\t\t\tthis.loadingQueryIndex++;\n\t\t\t\tconst query:LoaderQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\tquery.isLoading = true;\n\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\ttrace(\"[AssetLoader] loading... \" + \"'\" + query.url + \"' as '\" + query.type + \"'\");\n\t\t\t\tswitch (query.type) {\n\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\t// jQuery JSON\n\t\t\t\t\tcase \"jQuery.JSON\":\n\t\t\t\t\t\tjQuery.getJSON(\n\t\t\t\t\t\t\tquery.url,\n\t\t\t\t\t\t\t(data:any):void => {\n\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\tquery.content = data;\n\t\t\t\t\t\t\t\tif (query.param.onLoad)\n\t\t\t\t\t\t\t\t\tquery.param.onLoad(data);\n\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\t// Three.js Texture\n\t\t\t\t\tcase \"THREE.Texture\":\n\t\t\t\t\t\tlet url:string = query.url;\n\t\t\t\t\t\tconst loader:THREE.TextureLoader = new THREE.TextureLoader();\n\t\t\t\t\t\tconst texture:THREE.Texture = loader.load(\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t(texture:THREE.Texture):void => {\n\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\tquery.content = texture;\n\t\t\t\t\t\t\t\tif (query.param.onLoad)\n\t\t\t\t\t\t\t\t\tquery.param.onLoad(texture);\n\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(event:ProgressEvent):void => {\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(event:ErrorEvent):void => {\n\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\tif (query.param.onError)\n\t\t\t\t\t\t\t\t\tquery.param.onError(event.type + \" : \" + event.message);\n\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.texturesByUrl[query.url] = texture;\n\t\t\t\t\t\tthis.texturesByQueryId[query.id] = texture;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t/*\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\t// Three.js Texture Atlas\n\t\t\t\t\tcase \"THREE.TextureAtlas\":\n\t\t\t\t\t\tjQuery.getJSON(\n\t\t\t\t\t\t\tquery.url + \".json\",\n\t\t\t\t\t\t\t(json:any):void => {\n\t\t\t\t\t\t\t\tTHREE.ImageUtils.loadTexture(\n\t\t\t\t\t\t\t\t\tquery.url,\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t(textureAtlas:THREE.Texture):void => {\n\t\t\t\t\t\t\t\t\t\tconst textureAtlasWidth:number = textureAtlas.image.width;\n\t\t\t\t\t\t\t\t\t\tconst textureAtlasHeight:number = textureAtlas.image.height;\n\t\t\t\t\t\t\t\t\t\tconst texturesByTextureId:Hash<THREE.Texture> = {};\n\t\t\t\t\t\t\t\t\t\tconst texture:THREE.Texture;\n\t\t\t\t\t\t\t\t\t\tconst textureFrame:any;\n\t\t\t\t\t\t\t\t\t\tfor (let textureId in json.frames) {\n\t\t\t\t\t\t\t\t\t\t\ttexture = textureAtlas.clone();\n\t\t\t\t\t\t\t\t\t\t\ttextureFrame = json.frames[textureId].frame;\n\t\t\t\t\t\t\t\t\t\t\ttexture.repeat.x = textureFrame.w / textureAtlasWidth;\n\t\t\t\t\t\t\t\t\t\t\ttexture.repeat.y = textureFrame.h / textureAtlasHeight;\n\t\t\t\t\t\t\t\t\t\t\ttexture.offset.x = Math.abs(textureFrame.x) / textureAtlasWidth;\n\t\t\t\t\t\t\t\t\t\t\ttexture.offset.y = Math.abs(textureFrame.y) / textureAtlasHeight;\n\t\t\t\t\t\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\t\t\t\t\t\ttexturesByTextureId[textureId] = texture;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\t\t\tquery.content = texturesByTextureId;\n\t\t\t\t\t\t\t\t\t\tquery.param.onLoad(texturesByTextureId);\n\t\t\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t(message:string):void => {\n\t\t\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\t\t\tquery.param.onError(message);\n\t\t\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t*/\n\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.next();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.isLoading_ = false;\n\t\t\t\tthis.loadingQueries = [];\n\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\tthis.eventDispatcher.dispatchEvent(new AssetLoaderEvent(AssetLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\t\t}\n\n\t\tpublic addLoadUpdateListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.addEventListener(AssetLoaderEvent.PROGRESS, listener);\n\t\t}\n\n\t\tpublic removeLoadUpdateListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.removeEventListener(AssetLoaderEvent.PROGRESS, listener);\n\t\t}\n\n\t\tpublic addLoadCompleteListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.addEventListener(AssetLoaderEvent.COMPLETE, listener);\n\t\t}\n\n\t\tpublic removeLoadCompleteListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.removeEventListener(AssetLoaderEvent.COMPLETE, listener);\n\t\t}\n\n\t\tpublic getQueryByQueryId(queryId:string):LoaderQuery {\n\t\t\treturn this.queriesByQueryId[queryId];\n\t\t}\n\n\n\t\tpublic getQueryByUrl(url:string):LoaderQuery {\n\t\t\treturn this.queriesByUrl[url];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic isLoading():boolean { return this.isLoading_; }\n\t\tprivate isLoading_:boolean;\n\n\t\tpublic getCurrentCount():number { return this.currentCount; }\n\t\tprivate currentCount:number;\n\n\t\tpublic getTotalCount():number { return this.totalCount; }\n\t\tprivate totalCount:number;\n\n\t\tpublic getTexturesByUrl(url:string):THREE.Texture { return this.texturesByUrl[url]; }\n\t\tprivate texturesByUrl:cmd.Hash<THREE.Texture>;\n\n\t\tpublic getTexturesByQueryId(textureId:string):THREE.Texture { return this.texturesByQueryId[textureId]; }\n\t\tprivate texturesByQueryId:cmd.Hash<THREE.Texture>;\n\n\t\tprivate loadingQueries:LoaderQuery[];\n\t\tprivate loadingQueryIndex:number;\n\n\t\tprivate queriesByQueryId:cmd.Hash<LoaderQuery>;\n\t\tprivate queriesByUrl:cmd.Hash<LoaderQuery>;\n\t\tprivate eventDispatcher:cmd.EventDispatcher;\n\n\t\tprivate static id:number = 0;\n\t}\n\n\n\n\n\n\texport class LoaderQuery {\n\t\tconstructor() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.isLoadComplete = false;\n\t\t}\n\n\t\tpublic id:string;\n\t\tpublic type:string;\n\t\tpublic url:string;\n\t\tpublic param:any;\n\t\tpublic content:any;\n\t\tpublic isLoading:boolean;\n\t\tpublic isLoadComplete:boolean;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class AssetLoaderEvent extends cmd.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic PROGRESS:string = \"progress\";\n\t\tstatic COMPLETE:string = \"complete\";\n\t\tstatic ERROR:string = \"error\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, progress:number = 0, loadedCount:number = 0, totalCount:number = 0, content:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.progress = progress;\n\t\t\tthis.loadedCount = loadedCount;\n\t\t\tthis.totalCount = totalCount;\n\t\t\tthis.content = content;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():AssetLoaderEvent {\n\t\t\treturn new AssetLoaderEvent(this.getType(), this.getTarget(), this.progress, this.loadedCount, this.totalCount, this.content);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[AssetLoaderEvent] type = \" + this.getType() + \", progress = \" + this.progress + \", loadedCount = \" + this.loadedCount + \", totalCount = \" + this.totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic progress:number;\n\t\tpublic loadedCount:number;\n\t\tpublic totalCount:number;\n\t\tpublic content:any;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport abstract class View<T> extends cmd.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(view:T = null) {\n\t\t\tsuper();\n\t\t\tthis.view = view;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.isReady = false;\n\t\t\tthis.isShowing = false;\n\t\t\tthis.isShown = true;\n\t\t\tthis.isHiding = false;\n\t\t\tthis.autoHideWithInit = true;\n\t\t\tthis.name = \"\";\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic initialize():void {\n\t\t\tif (this.isInitializing || this.isInitialized) return;\n\t\t\tthis.isInitializing = true;\n\t\t\tthis.view = this.implInitialize();\n\t\t\tthrowError(this.name || this, \"view is null\", !this.view);\n\t\t\tthis.hide(false);\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = true;\n\t\t}\n\n\t\tpublic ready():void {\n\t\t\tif (this.isReady) return;\n\t\t\tthrowError(this.name || this, \"ready() was called without being initialized\", !this.isInitialized);\n\t\t\tthis.implReady();\n\t\t\tthis.isReady = true;\n\t\t}\n\n\t\tpublic finalize():void {\n\t\t\tthis.implFinalize();\n\t\t}\n\n\t\tpublic show(useTransition:boolean = true):void {\n\t\t\tif (this.isShown) return;\n\t\t\tthis.getShowCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic hide(useTransition:boolean = true):void {\n\t\t\tif (!this.isShown) return;\n\t\t\tthis.getHideCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic getShowCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (this.isShown) return;\n\t\t\t\t\tthrowError(this.name || this, \"getShowCommand() was called without being initialized\", !this.isInitialized);\n\t\t\t\t\tthrowWarn(this.name || this, \"getShowCommand() was called without being ready\", !this.isReady);\n\t\t\t\t\tthis.isShown = true;\n\t\t\t\t\tthis.isShowing = true;\n\t\t\t\t\tthis.isHiding = false;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.showCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implShow(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getHideCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (!this.isShown) return;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthrowError(this.name || this, \"getHideCommand() was called without being initialized\", !this.isInitialized);\n\t\t\t\t\t\tthrowWarn(this.name || this, \"getHideCommand() was called without being ready\", !this.isReady);\n\t\t\t\t\t}\n\t\t\t\t\tthis.isShown = false;\n\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\tthis.isHiding = true;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hideCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implHide(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t\t\tthis.isHiding = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tprotected abstract implInitialize():T;\n\t\tprotected abstract implReady():void;\n\t\tprotected abstract implFinalize():void;\n\t\tprotected abstract implShow(view:T, useTransition:boolean):cmd.Command;\n\t\tprotected abstract implHide(view:T, useTransition:boolean):cmd.Command;\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsInitializing():boolean { return this.isInitializing; }\n\t\tprivate isInitializing:boolean;\n\n\t\tpublic getIsInitialized():boolean { return this.isInitialized; }\n\t\tprivate isInitialized:boolean;\n\n\t\tpublic getIsReady():boolean { return this.isReady; }\n\t\tprivate isReady:boolean;\n\n\t\tpublic getIsShowing():boolean { return this.isShowing; }\n\t\tprivate isShowing:boolean;\n\n\t\tpublic getIsShown():boolean { return this.isShown; }\n\t\tprivate isShown:boolean;\n\n\t\tpublic getIsHiding():boolean { return this.isHiding; }\n\t\tprivate isHiding:boolean;\n\n\t\tpublic getIsHidden():boolean { return !this.isShown; }\n\n\t\tpublic getView():T { return this.view; }\n\t\tprivate view:T;\n\n\t\tpublic getAutoHideWithInit():boolean { return this.autoHideWithInit; }\n\t\tpublic setAutoHideWithInit(value:boolean):void { this.autoHideWithInit = value; }\n\t\tprivate autoHideWithInit:boolean;\n\n\t\tpublic getName():string { return this.name; }\n\t\tpublic setName(value:string):void { this.name = value; }\n\t\tprivate name:string;\n\n\t\tprivate showCommand:cmd.Command;\n\t\tprivate hideCommand:cmd.Command;\n\t}\n}"]}
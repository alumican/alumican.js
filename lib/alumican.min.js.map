{"version":3,"sources":["../src/alm/util/Logger.ts","../src/alm/util/Easing.ts","../src/alm/event/Event.ts","../src/alm/event/EventDispatcher.ts","../src/cmd/CommandState.ts","../src/cmd/CommandEvent.ts","../src/cmd/Command.ts","../src/cmd/CommandList.ts","../src/cmd/Break.ts","../src/cmd/Return.ts","../src/cmd/Log.ts","../src/cmd/Wait.ts","../src/cmd/Func.ts","../src/cmd/Listen.ts","../src/cmd/Tween.ts","../src/cmd/Serial.ts","../src/cmd/Parallel.ts","../src/alm/geom/Vector2.ts","../src/alm/geom/Vector3.ts","../src/alm/geom/Rectangle.ts","../src/alm/util/Arr.ts","../src/alm/util/Num.ts","../src/alm/util/Str.ts","../src/alm/util/Loc.ts","../src/alm/util/Boxer.ts","../src/alm/util/Raffle.ts","../src/alm/util/Rotator.ts","../src/alm/util/Timer.ts","../src/alm/util/TimerEvent.ts","../src/alm/util/JQueryUtil.ts","../src/alm/util/CommandUtil.ts","../src/alm/loader/AssetLoader.ts","../src/alm/loader/AssetLoaderEvent.ts","../src/alm/view/View.ts","../src/alm/browser/DeviceInfo.ts","../src/alm/browser/LocalStorage.ts","../src/alm/browser/KeyWatcher.ts","../src/alm/browser/KeyWatcherEvent.ts","../src/alm/browser/WindowWatcher.ts","../src/alm/browser/WindowWatcherEvent.ts","../src/scn/Scene.ts","../src/scn/SceneEvent.ts","../src/scn/SceneManager.ts","../src/scn/SceneManagerEvent.ts","../src/scn/SceneTransferInfo.ts","../src/scn/SceneState.ts","../src/scn/core/Direction.ts","../src/scn/core/RootScene.ts","../src/scn/core/Waypoint.ts","../src/reference.ts"],"names":["trace","messages","_i","arguments","length","alm","util","Logger","info","apply","caller","throwWarn","target","message","condition","warnIf","throwError","errorIf","Easing","linear","x","t","b","c","d","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","createEaseInElastic","s","p","a","abs","asin","createEaseOutElastic","createEaseInOutElastic","easeInElastic","defaultEaseInElastic","easeOutElastic","defaultEaseOutElastic","easeInOutElastic","defaultEaseInOutElastic","createEaseInBack","createEaseOutBack","createEaseInOutBack","easeInBack","easeOutBack","defaultEaseOutBack","easeInOutBack","defaultEaseInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","defaultEaseInBack","event","Event","type","data","this","prototype","getType","getTarget","getData","setData","event_1","EventDispatcher","listeners","addEventListener","eventType","listener","numListeners","i","push","removeEventListener","splice","removeAllEventListener","hasEventListener","dispatchEvent","call","dispatchEventType","cmd","CommandState","CommandEvent","_super","eventTarget","__extends","clone","toString","COMPLETE","Command","executeFunction","interruptFunction","destroyFunction","_this","setExecuteFunction","setInterruptFunction","setDestroyFunction","state","Sleeping","self","parent","execute","Error","Executing","getExecuteFunction","interrupt","Interrupting","getInterruptFunction","destroy","getDestroyFunction","notifyComplete","implExecuteFunction","command","implInterruptFunction","implDestroyFunction","func","getState","getParent","setParent","getSelf","CommandList","commands","addCommand","preProcess","getCommands","concat","insertCommand","insertCommandAt","index","Array","addCommandArray","insertCommandArray","insertCommandArrayAt","getLength","getCommandByIndex","numCommands","Func","Break","Return","Log","console","log","slice","getMessages","setMessages","Wait","time","completeHandler","timerId","window","setTimeout","cancel","clearTimeout","getTime","setTime","args","eventDispatcher","getFunction","setFunction","getArguments","setArguments","getEventDispatcher","setEventDispatcher","getEventType","setEventType","Listen","Tween","to","from","duration","easing","onStart","onUpdate","onComplete","intervalHandler","elapsedTime","Date","startTime","progressTime","progressValue","tweenTarget","internalFrom","key","setInterval","updateInterval","clearInterval","timeRatio","value0","setTarget","getDuration","setDuration","getTo","setTo","getFrom","setFrom","getEasing","setEasing","getOnStart","setOnStart","getOnUpdate","setOnUpdate","getOnComplete","setOnComplete","getProgressTime","getProgressValue","getUpdateInterval","setUpdateInterval","milliseconds","Serial","currentCommand","position","next","isPaused","isCompleteOnPaused","implNotifyBreak","implNotifyReturn","getPosition","Parallel","completeCount","command_1","command_2","command_3","getCompleteCount","geom","Vector2","y","set","copyTo","point","getClone","zero","normalize","l","getSquareDistance","dx","dy","getDistance","Vector3","z","dz","Rectangle","width","height","rect","getTop","getBottom","getLeft","getRight","getTopLeft","getTopRight","getBottomLeft","getBottomRight","Arr","sequence","count","init","step","result","v","unique","list","filter","indexOf","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","m","n","Num","map","value","srcMin","srcMax","dstMin","dstMax","clamp","random","min","max","randomInt","floor","dist","x1","y1","x2","y2","squared","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","PI3","PI2","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","Str","toTimeString","hours","minutes","seconds","h","substr","Loc","getQuery","pair","query","pairs","location","search","substring","split","Align","ScaleMode","Boxer","resize","bounds","scaleMode","align","ShowAll","Middle_Center","tx","ty","tw","th","bx","by","bw","bh","NoBorder","ratioW","ratioH","ratio","ExactFit","Top_Left","Middle_Left","Bottom_Left","Top_Right","Middle_Right","Bottom_Right","Top_Center","Bottom_Center","Raffle","values","initValues","restValues","restCount","isEmpty","onCheck","isAutoResetEnabled","reset","get","getRestCount","getIsEmply","getIsAutoResetEnabled","setIsAutoResetEnabled","enabled","createIndices","Rotator","angle","velocity","setAngle","setVelocity","getAngle","getVelocity","update","getSin","getCos","getTan","tan","getMagnitude","getVector","xy","LoggerLevel","NullLogging","verbose","warn","error","ConsoleLogging","debug","DOMLogging","dom","html","print","prefix","line","join","innerHTML","innerText","ParallelLogging","loggers","level","Verbose","logger","Info","Warn","Timer","interval","repeatCount","timerHandler","tStartTime","getCurrentTime","elapsedCount","isCompleted","stop","tInterval","startInterval","dispatch","TimerEvent","TICK","isRunning","tId","start","tRestTime","stopInterval","restart","valueOf","getIsRunning","getInterval","getElapsedTime","getRestTime","getElapsedCount","getRepeatCount","setRepeatCount","JQueryUtil","fadeTo","opacity","switchDisplayTo","switchVisibility","o","parseInt","css","tween","fadeInJquery","fadeOutJquery","CommandUtil","single","loader_1","AssetLoader","isLoading_","currentCount","totalCount","loadingQueries","loadingQueryIndex","queriesByQueryId","queriesByUrl","texturesByUrl","texturesByQueryId","requireJQueryJson","url","addQuery","requireThreeTexture","param","id","LoaderQuery","String","load","AssetLoaderEvent","PROGRESS","query_1","isLoading","isLoadComplete","jQuery","getJSON","content","onLoad","texture","THREE","TextureLoader","onError","addLoadUpdateListener","removeLoadUpdateListener","addLoadCompleteListener","removeLoadCompleteListener","getQueryByQueryId","queryId","getQueryByUrl","getCurrentCount","getTotalCount","getTexturesByUrl","getTexturesByQueryId","textureId","loader","progress","loadedCount","ERROR","view_1","View","view","isInitializing","isInitialized","isReady","isShowing","isShown","isHiding","autoHideWithInit","name","viewsById","initialize","implInitialize","hide","ready","implReady","finalize","implFinalize","show","useTransition","getShowCommand","getHideCommand","showCommand","hideCommand","implShow","implHide","getIsInitializing","getIsInitialized","getIsReady","getIsShowing","getIsShown","getIsHiding","getIsHidden","getView","getAutoHideWithInit","setAutoHideWithInit","getName","setName","getViewById","browser","DeviceInfo","u","navigator","userAgent","toLowerCase","isTablet","isMobile","isDesktop","isIOS","isAndroid","isRetina","round","devicePixelRatio","getIsDesktop","getIsTablet","getIsMobile","getIsIOS","getIsAndroid","getIsRetina","LocalStorage","save","expiredAt","isAvailable","record","JSON","stringify","localStorage","setItem","saveWithTerm","defaultValue","parse","getItem","removeItem","remove","isAvailable_","toMilliseconds","dates","KeyCode","KeyWatcher","$window","on","windowKeyDownHandler","windowKeyUpHandler","off","getIsAnyKeyPressed","pressedKeyCount","getIsKeyPressed","keyCode","isKeyPressedByKeyCode","getIsContinuousPressEnabled","isContinuousPressEnabled","setIsContinuousPressEnabled","KeyWatcherEvent","KEY_DOWN","KEY_UP","pressTimer","isLongPressed","jqueryEvent","altKey","ctrlKey","shiftKey","WindowWatcher","windowScrollHandler","windowWidth","windowHeight","scrollTop","scrollBottom","calcScrolledPosition","calcScrolledPositionRatio","getScrollTop","getScrollBottom","getWindowWidth","getWindowHeight","WindowWatcherEvent","SCROLL","windowResizeHandler","RESIZE","scn","Scene","SceneState","Idling","childrenByName","numChildren","isEntered","onUnload","onArrive","onLeave","onAscend","onDescend","addChild","child","childName","removeChild","addChildren","children","addedChildren","removeChildren","removedChildren","removeAllChildren","name_1","contains","getLastState","lastState","getChildByName","getNumChildren","getManager","getPath","manager","names","scene","unshift","getScenePathByNames","gotoScene","path","goto","_load","transferInfo","Loading","SceneEvent","LOAD","implOnLoad","LOAD_COMPLETE","_unload","Unloading","UNLOAD","implOnUnload","UNLOAD_COMPLETE","_arrive","Arriving","ARRIVE","implOnArrive","ARRIVE_COMPLETE","_leave","Leaving","LEAVE","implOnLeave","LEAVE_COMPLETE","_ascend","Ascending","ASCEND","implOnAscend","ASCEND_COMPLETE","_descend","Descending","DESCEND","implOnDescend","DESCEND_COMPLETE","SceneManager","sceneLoadCompleteHandler","currentScene","eventIndex","checkState","sceneUnloadCompleteHandler","sceneArriveCompleteHandler","sceneLeaveCompleteHandler","sceneAscendCompleteHandler","sceneDescendCompleteHandler","root","core","RootScene","waypoints","waypointIndex","transferId","resolvePath","getDestinationPath","newWaypoints","createWaypoints","Waypoint","isDestinationChanged","setDirection","printWaypoint","SceneTransferInfo","SceneManagerEvent","TRANSFER_START","normalized","name_2","pop","addSceneAt","createScene","success","getSceneNamesByPath","name_3","getRoot","getSceneByPath","getSceneLevelByNames","departurePath","destinationPath","departureNames","destinationNames","turningPath","turningLevel","turningNames","prevPath","getLevel","Direction","Sibling","Ascend","prev","name_4","_setFrom","Descend","_setTo","getSceneStateString","tmpTransferId","getTransferId","TRANSFER_COMPLETE","currentWaypoint","relay","getDeparturePath","getDirectionString","direction","Static","getVersion","style"],"mappings":"AA6NA,SAAAA,YAAe,IAAAC,KAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACdG,IAAIC,KAAKC,OAAOC,KAAKC,MAAMT,MAAMU,OAAQP,WAG1C,SAAAQ,UAAmBC,EAAYC,EAAgBC,QAAA,IAAAA,IAAAA,GAAA,GAC9CT,IAAIC,KAAKC,OAAOQ,OAAON,MAAM,KAAMN,WAGpC,SAAAa,WAAoBJ,EAAYC,EAAgBC,QAAA,IAAAA,IAAAA,GAAA,GAC/CT,IAAIC,KAAKC,OAAOU,QAAQR,MAAM,KAAMN,2VCtOrC,SAAUE,IAAI,SAAAC,GAIb,IAAAY,EAAA,WAAA,SAAAA,KAuQA,OArQeA,EAAAC,OAAd,SAAqBC,EAAUC,EAAUC,EAAUC,EAAUC,GAC5D,OAAOD,EAAIF,EAAIG,EAAIF,GAONJ,EAAAO,WAAd,SAAyBL,EAAUC,EAAUC,EAAUC,EAAUC,GAChE,OAAOD,GAAKF,GAAKG,GAAKH,EAAIC,GAGbJ,EAAAQ,YAAd,SAA0BN,EAAUC,EAAUC,EAAUC,EAAUC,GACjE,OAASD,GAAMF,GAAKG,IAAMH,EAAI,GAAKC,GAGtBJ,EAAAS,cAAd,SAA4BP,EAAUC,EAAUC,EAAUC,EAAUC,GACnE,OAAKH,GAAKG,EAAI,GAAK,EAAUD,EAAI,EAAIF,EAAIA,EAAIC,GACpCC,EAAK,KAAQF,GAAMA,EAAI,GAAK,GAAKC,GAO7BJ,EAAAU,YAAd,SAA0BR,EAAUC,EAAUC,EAAUC,EAAUC,GACjE,OAAOD,GAAKF,GAAKG,GAAKH,EAAIA,EAAIC,GAGjBJ,EAAAW,aAAd,SAA2BT,EAAUC,EAAUC,EAAUC,EAAUC,GAClE,OAAOD,IAAMF,EAAIA,EAAIG,EAAI,GAAKH,EAAIA,EAAI,GAAKC,GAG9BJ,EAAAY,eAAd,SAA6BV,EAAUC,EAAUC,EAAUC,EAAUC,GACpE,OAAKH,GAAKG,EAAI,GAAK,EAAUD,EAAI,EAAIF,EAAIA,EAAIA,EAAIC,EAC1CC,EAAI,IAAMF,GAAK,GAAKA,EAAIA,EAAI,GAAKC,GAO3BJ,EAAAa,YAAd,SAA0BX,EAAUC,EAAUC,EAAUC,EAAUC,GACjE,OAAOD,GAAKF,GAAKG,GAAKH,EAAIA,EAAIA,EAAIC,GAGrBJ,EAAAc,aAAd,SAA2BZ,EAAUC,EAAUC,EAAUC,EAAUC,GAClE,OAASD,IAAOF,EAAIA,EAAIG,EAAI,GAAKH,EAAIA,EAAIA,EAAI,GAAKC,GAGrCJ,EAAAe,eAAd,SAA6Bb,EAAUC,EAAUC,EAAUC,EAAUC,GACpE,OAAKH,GAAKG,EAAI,GAAK,EAAUD,EAAI,EAAIF,EAAIA,EAAIA,EAAIA,EAAIC,GAC5CC,EAAK,IAAMF,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAAKC,GAOlCJ,EAAAgB,YAAd,SAA0Bd,EAAUC,EAAUC,EAAUC,EAAUC,GACjE,OAAOD,GAAKF,GAAKG,GAAKH,EAAIA,EAAIA,EAAIA,EAAIC,GAGzBJ,EAAAiB,aAAd,SAA2Bf,EAAUC,EAAUC,EAAUC,EAAUC,GAClE,OAAOD,IAAMF,EAAIA,EAAIG,EAAI,GAAKH,EAAIA,EAAIA,EAAIA,EAAI,GAAKC,GAGtCJ,EAAAkB,eAAd,SAA6BhB,EAAUC,EAAUC,EAAUC,EAAUC,GACpE,OAAKH,GAAKG,EAAI,GAAK,EAAUD,EAAI,EAAIF,EAAIA,EAAIA,EAAIA,EAAIA,EAAIC,EAClDC,EAAI,IAAMF,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAAKC,GAOnCJ,EAAAmB,WAAd,SAAyBjB,EAAUC,EAAUC,EAAUC,EAAUC,GAChE,OAASD,EAAKe,KAAKC,IAAIlB,EAAIG,GAAKc,KAAKE,GAAK,IAAMjB,EAAID,GAGvCJ,EAAAuB,YAAd,SAA0BrB,EAAUC,EAAUC,EAAUC,EAAUC,GACjE,OAAOD,EAAIe,KAAKI,IAAIrB,EAAIG,GAAKc,KAAKE,GAAK,IAAMlB,GAGhCJ,EAAAyB,cAAd,SAA4BvB,EAAUC,EAAUC,EAAUC,EAAUC,GACnE,OAASD,EAAK,GAAKe,KAAKC,IAAID,KAAKE,GAAKnB,EAAIG,GAAK,GAAKF,GAOvCJ,EAAA0B,WAAd,SAAyBxB,EAAUC,EAAUC,EAAUC,EAAUC,GAChE,OAAS,GAALH,EAAeC,EACZC,EAAIe,KAAKO,IAAI,EAAG,IAAMxB,EAAIG,EAAI,IAAMF,GAG9BJ,EAAA4B,YAAd,SAA0B1B,EAAUC,EAAUC,EAAUC,EAAUC,GACjE,OAAIH,GAAKG,EAAUF,EAAIC,EAChBA,GAAiC,EAA3Be,KAAKO,IAAI,GAAI,GAAKxB,EAAIG,IAAUF,GAGhCJ,EAAA6B,cAAd,SAA4B3B,EAAUC,EAAUC,EAAUC,EAAUC,GACnE,OAAS,GAALH,EAAeC,EACfD,GAAKG,EAAUF,EAAIC,GAClBF,GAAKG,EAAI,GAAK,EAAUD,EAAI,EAAIe,KAAKO,IAAI,EAAG,IAAMxB,EAAI,IAAMC,EAC1DC,EAAI,GAA+B,EAAzBe,KAAKO,IAAI,GAAI,KAAOxB,IAAUC,GAOlCJ,EAAA8B,WAAd,SAAyB5B,EAAUC,EAAUC,EAAUC,EAAUC,GAChE,OAASD,GAAMe,KAAKW,KAAK,GAAK5B,GAAKG,GAAKH,GAAK,GAAKC,GAGrCJ,EAAAgC,YAAd,SAA0B9B,EAAUC,EAAUC,EAAUC,EAAUC,GACjE,OAAOD,EAAIe,KAAKW,KAAK,GAAK5B,EAAIA,EAAIG,EAAI,GAAKH,GAAKC,GAGnCJ,EAAAiC,cAAd,SAA4B/B,EAAUC,EAAUC,EAAUC,EAAUC,GACnE,OAAKH,GAAKG,EAAI,GAAK,GAAYD,EAAK,GAAKe,KAAKW,KAAK,EAAI5B,EAAIA,GAAK,GAAKC,EAC9DC,EAAI,GAAKe,KAAKW,KAAK,GAAK5B,GAAK,GAAKA,GAAK,GAAKC,GAOtCJ,EAAAkC,oBAAd,SAAkCC,GACjC,YADiC,IAAAA,IAAAA,EAAA,SAC1B,SAAUjC,EAAUC,EAAUC,EAAUC,EAAUC,GACxD,IAAI8B,EAAW,EACXC,EAAWhC,EACf,OAAS,GAALF,EAAeC,EACH,IAAXD,GAAKG,GAAgBF,EAAIC,GACrB,GAAL+B,IAAQA,EAAQ,GAAJ9B,GACZ+B,EAAIjB,KAAKkB,IAAIjC,IAChBgC,EAAIhC,EACJ8B,EAAIC,EAAI,GAERD,EAAIC,GAAK,EAAIhB,KAAKE,IAAMF,KAAKmB,KAAKlC,EAAIgC,IAE9BA,EAAIjB,KAAKO,IAAI,EAAG,IAAMxB,GAAK,IAAMiB,KAAKI,KAAKrB,EAAIG,EAAI6B,IAAM,EAAIf,KAAKE,IAAMc,GAAOhC,KAI5EJ,EAAAwC,qBAAd,SAAmCL,GAClC,YADkC,IAAAA,IAAAA,EAAA,SAC3B,SAAUjC,EAAUC,EAAUC,EAAUC,EAAUC,GACxD,IAAI8B,EAAW,EACXC,EAAWhC,EACf,OAAS,GAALF,EAAeC,EACH,IAAXD,GAAKG,GAAgBF,EAAIC,GACrB,GAAL+B,IAAQA,EAAQ,GAAJ9B,GACZ+B,EAAIjB,KAAKkB,IAAIjC,IAChBgC,EAAIhC,EACJ8B,EAAIC,EAAI,GAERD,EAAIC,GAAK,EAAIhB,KAAKE,IAAMF,KAAKmB,KAAKlC,EAAIgC,GAEhCA,EAAIjB,KAAKO,IAAI,GAAI,GAAKxB,GAAKiB,KAAKI,KAAKrB,EAAIG,EAAI6B,IAAM,EAAIf,KAAKE,IAAMc,GAAK/B,EAAID,KAItEJ,EAAAyC,uBAAd,SAAqCN,GACpC,YADoC,IAAAA,IAAAA,EAAA,SAC7B,SAAUjC,EAAUC,EAAUC,EAAUC,EAAUC,GACxD,IAAI8B,EAAW,EACXC,EAAWhC,EACf,OAAS,GAALF,EAAeC,EACC,IAAfD,GAAKG,EAAI,GAAgBF,EAAIC,GACzB,GAAL+B,IAAQA,EAAI9B,GAAK,GAAM,MACvB+B,EAAIjB,KAAKkB,IAAIjC,IAChBgC,EAAIhC,EACJ8B,EAAIC,EAAI,GAERD,EAAIC,GAAK,EAAIhB,KAAKE,IAAMF,KAAKmB,KAAKlC,EAAIgC,GAEnClC,EAAI,EAAkBkC,EAAIjB,KAAKO,IAAI,EAAG,IAAMxB,GAAK,IAAMiB,KAAKI,KAAKrB,EAAIG,EAAI6B,IAAM,EAAIf,KAAKE,IAAMc,IAA/E,GAAqFhC,EACjGiC,EAAIjB,KAAKO,IAAI,GAAI,IAAMxB,GAAK,IAAMiB,KAAKI,KAAKrB,EAAIG,EAAI6B,IAAM,EAAIf,KAAKE,IAAMc,GAAK,GAAM/B,EAAID,KAInFJ,EAAA0C,cAAd,SAA4BxC,EAAUC,EAAUC,EAAUC,EAAUC,GACnE,OAAON,EAAO2C,qBAAqBzC,EAAGC,EAAGC,EAAGC,EAAGC,IAGlCN,EAAA4C,eAAd,SAA6B1C,EAAUC,EAAUC,EAAUC,EAAUC,GACpE,OAAON,EAAO6C,sBAAsB3C,EAAGC,EAAGC,EAAGC,EAAGC,IAGnCN,EAAA8C,iBAAd,SAA+B5C,EAAUC,EAAUC,EAAUC,EAAUC,GACtE,OAAON,EAAO+C,wBAAwB7C,EAAGC,EAAGC,EAAGC,EAAGC,IAWrCN,EAAAgD,iBAAd,SAA+Bb,GAC9B,YAD8B,IAAAA,IAAAA,EAAA,SACvB,SAAUjC,EAAUC,EAAUC,EAAUC,EAAUC,GACxD,OAAOD,GAAKF,GAAKG,GAAKH,IAAMgC,EAAI,GAAKhC,EAAIgC,GAAK/B,IAIlCJ,EAAAiD,kBAAd,SAAgCd,GAC/B,YAD+B,IAAAA,IAAAA,EAAA,SACxB,SAAUjC,EAAUC,EAAUC,EAAUC,EAAUC,GACxD,OAAOD,IAAMF,EAAIA,EAAIG,EAAI,GAAKH,IAAMgC,EAAI,GAAKhC,EAAIgC,GAAK,GAAK/B,IAI/CJ,EAAAkD,oBAAd,SAAkCf,GACjC,YADiC,IAAAA,IAAAA,EAAA,SAC1B,SAAUjC,EAAUC,EAAUC,EAAUC,EAAUC,GACxD,OAAKH,GAAKG,EAAI,GAAK,EAAUD,EAAI,GAAKF,EAAIA,IAAqB,GAAdgC,GAAK,QAAchC,EAAIgC,IAAM/B,EACvEC,EAAI,IAAMF,GAAK,GAAKA,IAAqB,GAAdgC,GAAK,QAAchC,EAAIgC,GAAK,GAAK/B,IAIvDJ,EAAAmD,WAAd,SAAyBjD,EAAUC,EAAUC,EAAUC,EAAUC,GAChE,OAAON,EAAO2C,qBAAqBzC,EAAGC,EAAGC,EAAGC,EAAGC,IAGlCN,EAAAoD,YAAd,SAA0BlD,EAAUC,EAAUC,EAAUC,EAAUC,GACjE,OAAON,EAAOqD,mBAAmBnD,EAAGC,EAAGC,EAAGC,EAAGC,IAGhCN,EAAAsD,cAAd,SAA4BpD,EAAUC,EAAUC,EAAUC,EAAUC,GACnE,OAAON,EAAOuD,qBAAqBrD,EAAGC,EAAGC,EAAGC,EAAGC,IAWlCN,EAAAwD,aAAd,SAA2BtD,EAAUC,EAAUC,EAAUC,EAAUC,GAClE,OAAOD,EAAIL,EAAOyD,cAAcvD,EAAGI,EAAIH,EAAG,EAAGE,EAAGC,GAAKF,GAGxCJ,EAAAyD,cAAd,SAA4BvD,EAAUC,EAAUC,EAAUC,EAAUC,GACnE,OAAKH,GAAKG,GAAM,EAAI,KACZD,GAAK,OAASF,EAAIA,GAAKC,EACpBD,EAAK,EAAI,KACZE,GAAK,QAAUF,GAAM,IAAM,MAASA,EAAI,KAAQC,EAC7CD,EAAK,IAAM,KACdE,GAAK,QAAUF,GAAM,KAAO,MAASA,EAAI,OAAUC,EAEnDC,GAAK,QAAUF,GAAM,MAAQ,MAASA,EAAI,SAAYC,GAIjDJ,EAAA0D,gBAAd,SAA8BxD,EAAUC,EAAUC,EAAUC,EAAUC,GACrE,OAAIH,EAAIG,EAAI,EAAmD,GAAzCN,EAAOwD,aAAatD,EAAO,EAAJC,EAAO,EAAGE,EAAGC,GAAWF,EAChB,GAA9CJ,EAAOyD,cAAcvD,EAAO,EAAJC,EAAQG,EAAG,EAAGD,EAAGC,GAAe,GAAJD,EAAUD,GAjEvDJ,EAAA2C,qBAAsC3C,EAAOkC,sBAC7ClC,EAAA6C,sBAAuC7C,EAAOwC,uBAC9CxC,EAAA+C,wBAAyC/C,EAAOyC,yBAqChDzC,EAAA2D,kBAAmC3D,EAAOgD,mBAC1ChD,EAAAqD,mBAAoCrD,EAAOiD,oBAC3CjD,EAAAuD,qBAAsCvD,EAAOkD,sBA0B7DlD,EAvQA,GAAaZ,EAAAY,OAAMA,EAJN,CAAAb,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCEV,SAAUA,IAAI,SAAAyE,GAEb,IAAAC,EAAA,WAQC,SAAAA,EAAYC,EAAapE,EAAeqE,QAAA,IAAAA,IAAAA,EAAA,MACvCC,KAAKF,KAAOA,EACZE,KAAKtE,OAASA,EACdsE,KAAKD,KAAOA,EAgCd,OA7BQF,EAAAI,UAAAC,QAAP,WACC,OAAOF,KAAKF,MAGND,EAAAI,UAAAE,UAAP,WACC,OAAOH,KAAKtE,QAGNmE,EAAAI,UAAAG,QAAP,WACC,OAAOJ,KAAKD,MAGNF,EAAAI,UAAAI,QAAP,SAAeN,GACdC,KAAKD,KAAOA,GAgBdF,EA3CA,GAAaD,EAAAC,MAAKA,EAFL,CAAA1E,EAAAyE,QAAAzE,EAAAyE,WAAd,CAAUzE,MAAAA,UCAV,SAAUA,IAAI,SAAAmF,GAIb,IAAAC,EAAA,WAQC,SAAAA,EAAY7E,QAAA,IAAAA,IAAAA,EAAA,MACXsE,KAAKtE,OAASA,GAAUsE,KACxBA,KAAKQ,aAkFP,OArEQD,EAAAN,UAAAQ,iBAAP,SAAwBC,EAAkBC,GACzC,GAAwB,mBAAd,EAAV,CACA,IAAIH,EAA4BR,KAAKQ,UAAUE,GAC/C,GAAIF,GAEH,IAAK,IADCI,EAAsBJ,EAAUtF,OAC7B2F,EAAW,EAAGA,EAAID,IAAgBC,EAC1C,GAAIF,GAAYH,EAAUK,GAAI,YAG/Bb,KAAKQ,UAAUE,GAAaF,KAE7BA,EAAUM,KAAKH,KAGTJ,EAAAN,UAAAc,oBAAP,SAA2BL,EAAkBC,GAC5C,GAAwB,mBAAd,EAAV,CACA,IAAIH,EAA4BR,KAAKQ,UAAUE,GAC/C,GAAIF,EAAW,CAEd,IAAK,IADCI,EAAsBJ,EAAUtF,OAC7B2F,EAAW,EAAGA,EAAID,IAAgBC,EAC1C,GAAIF,GAAYH,EAAUK,GAAI,CAC7BL,EAAUQ,OAAOH,EAAI,GACrB,MAGsB,GAApBL,EAAUtF,eACN8E,KAAKQ,UAAUE,MAKlBH,EAAAN,UAAAgB,uBAAP,SAA8BP,QAAA,IAAAA,IAAAA,EAAA,MACzBA,SACIV,KAAKQ,UAAUE,GAEtBV,KAAKQ,cAIAD,EAAAN,UAAAiB,iBAAP,SAAwBR,GACvB,OAAoC,MAA7BV,KAAKQ,UAAUE,IAGhBH,EAAAN,UAAAkB,cAAP,SAAqBvB,GACpB,IAAIY,EAA4BR,KAAKQ,UAAUZ,EAAMM,WACrD,GAAIM,EAEH,IAAK,IADCI,EAAsBJ,EAAUtF,OAC7B2F,EAAW,EAAGA,EAAID,IAAgBC,EAC1CL,EAAUK,GAAGO,KAAKpB,KAAKtE,OAAQkE,IAK3BW,EAAAN,UAAAoB,kBAAP,SAAyBX,EAAkBhF,EAAsBqE,QAAtB,IAAArE,IAAAA,EAAA,WAAsB,IAAAqE,IAAAA,EAAA,MAChEC,KAAKmB,cAAc,IAAIb,EAAAT,MAAMa,EAAWhF,EAAQqE,KAelDQ,EA5FA,GAAaD,EAAAC,gBAAeA,EAJf,CAAApF,EAAAyE,QAAAzE,EAAAyE,WAAd,CAAUzE,MAAAA,UCAV,SAAUmG,IAET,SAAYC,GACXA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,aAAA,GAAA,eAHD,CAAYD,EAAAC,eAAAD,EAAAC,kBAFb,CAAUD,MAAAA,UCAV,SAAUA,GAET,IAEAE,EAAA,SAAAC,GAoBC,SAAAD,EAAYd,EAAkBgB,eAAA,IAAAA,IAAAA,EAAA,MAC7BD,EAAAL,KAAApB,KAAMU,EAAWgB,IAAY1B,KA8B/B,OAnDkC2B,UAAAH,EAAAC,GAkC1BD,EAAAvB,UAAA2B,MAAP,WACC,OAAO,IAAIJ,EAAaxB,KAAKE,UAAWF,KAAKG,cAGvCqB,EAAAvB,UAAA4B,SAAP,WACC,MAAO,yBAA2B7B,KAAKE,WA/B1BsB,EAAAM,SAAkB,WA2CjCN,EAnDA,CAFerG,IAAIyE,MAAMC,OAEZyB,EAAAE,aAAYA,EAJ1B,CAAUF,MAAAA,UCAV,SAAUA,GAET,IAEAS,EAAA,SAAAN,GAQC,SAAAM,EAAYC,EAAiCC,EAAmCC,QAApE,IAAAF,IAAAA,EAAA,WAAiC,IAAAC,IAAAA,EAAA,WAAmC,IAAAC,IAAAA,EAAA,MAAhF,IAAAC,EACCV,EAAAL,KAAApB,OAAOA,YAEPmC,EAAKC,mBAAmBJ,GACxBG,EAAKE,qBAAqBJ,GAC1BE,EAAKG,mBAAmBJ,GAExBC,EAAKI,MAAQjB,EAAAC,aAAaiB,SAC1BL,EAAKM,KAAON,EACZA,EAAKO,OAAS,OA4FhB,OA7G6Bf,UAAAI,EAAAN,GA8BrBM,EAAA9B,UAAA0C,QAAP,WACC,GAAI3C,KAAKuC,MAAQjB,EAAAC,aAAaiB,SAC7B,MAAM,IAAII,MAAM,qDAEjB5C,KAAKuC,MAAQjB,EAAAC,aAAasB,UAC1B7C,KAAK8C,qBAAqB1B,KAAKpB,KAAMA,OAG/B+B,EAAA9B,UAAA8C,UAAP,WACK/C,KAAKuC,OAASjB,EAAAC,aAAasB,YAC9B7C,KAAKuC,MAAQjB,EAAAC,aAAayB,aAC1BhD,KAAKiD,uBAAuB7B,KAAKpB,KAAMA,QAIlC+B,EAAA9B,UAAAiD,QAAP,WACClD,KAAKuC,MAAQjB,EAAAC,aAAaiB,SAC1BxC,KAAKmD,qBAAqB/B,KAAKpB,KAAMA,MACrCA,KAAK0C,OAAS,KACd1C,KAAKgC,gBAAkB,KACvBhC,KAAKiC,kBAAoB,KACzBjC,KAAKkC,gBAAkB,MAGdH,EAAA9B,UAAAmD,eAAV,WACC,OAAQpD,KAAKuC,OACZ,KAAKjB,EAAAC,aAAaiB,SACjB,MACD,KAAKlB,EAAAC,aAAasB,UAIlB,KAAKvB,EAAAC,aAAayB,aACjBhD,KAAKmB,cAAc,IAAIG,EAAAE,aAAaF,EAAAE,aAAaM,SAAU9B,OAC3DA,KAAKkD,YAKEnB,EAAA9B,UAAAoD,oBAAV,SAA8BC,GAC7BtD,KAAKoD,kBAEIrB,EAAA9B,UAAAsD,sBAAV,SAAgCD,KAGtBvB,EAAA9B,UAAAuD,oBAAV,SAA8BF,KAavBvB,EAAA9B,UAAA6C,mBAAP,WAAuC,OAAO9C,KAAKgC,iBAAmBhC,KAAKqD,qBACpEtB,EAAA9B,UAAAmC,mBAAP,SAA0BqB,GAAsBzD,KAAKgC,gBAAkByB,GAGhE1B,EAAA9B,UAAAgD,qBAAP,WAAyC,OAAOjD,KAAKiC,mBAAqBjC,KAAKuD,uBACxExB,EAAA9B,UAAAoC,qBAAP,SAA4BoB,GAAsBzD,KAAKiC,kBAAoBwB,GAGpE1B,EAAA9B,UAAAkD,mBAAP,WAAuC,OAAOnD,KAAKkC,iBAAmBlC,KAAKwD,qBACpEzB,EAAA9B,UAAAqC,mBAAP,SAA0BmB,GAAsBzD,KAAKkC,gBAAkBuB,GAGhE1B,EAAA9B,UAAAyD,SAAP,WAAiC,OAAO1D,KAAKuC,OAGtCR,EAAA9B,UAAA0D,UAAP,WAA6B,OAAO3D,KAAK0C,QAClCX,EAAA9B,UAAA2D,UAAP,SAAiBlB,GAAuB1C,KAAK0C,OAASA,GAG/CX,EAAA9B,UAAA4D,QAAP,WAA2B,OAAO7D,KAAKyC,MAExCV,EA7GA,CAFyB5G,IAAIyE,MAAMW,iBAEtBe,EAAAS,QAAOA,EAJrB,CAAUT,MAAAA,UCAV,SAAUA,GAET,IAAAwC,EAAA,SAAArC,GAQC,SAAAqC,QAAY,IAAAC,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,GAAAC,UAAAD,GAAZ,IAAAmH,EACCV,EAAAL,KAAApB,OAAOA,YACPmC,EAAK4B,YACL5B,EAAK6B,WAAUzI,MAAf4G,EAAmB4B,KAoFrB,OA/F0CpC,UAAAmC,EAAArC,GAwBlCqC,EAAA7D,UAAA+D,WAAP,eAAkB,IAAAD,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,GAAAC,UAAAD,GACb+I,EAAS7I,OAAS,IACrB8E,KAAKiE,WAAWF,GAChB/D,KAAK+D,SAAW/D,KAAKkE,cAAcC,OAAkBJ,KAIhDD,EAAA7D,UAAAmE,cAAP,eAAqB,IAAAL,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,GAAAC,UAAAD,GACpBgF,KAAKqE,gBAAe9I,MAApByE,MAAqB,GAACmE,OAAKJ,KAGlBD,EAAA7D,UAAAoE,gBAAV,SAA0BC,OAAc,IAAAP,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,EAAA,GAAAC,UAAAD,GACnC+I,EAAS7I,OAAS,IACrB8E,KAAKiE,WAAWF,GAChBQ,MAAMtE,UAAUe,OAAOzF,MAAMyE,KAAKkE,eAAwBI,EAAO,GAAIH,OAAOJ,MAIvED,EAAA7D,UAAAuE,gBAAP,SAAuBT,GACtB/D,KAAKgE,WAAUzI,MAAfyE,KAAmB+D,IAGbD,EAAA7D,UAAAwE,mBAAP,SAA0BV,GACzB/D,KAAKoE,cAAa7I,MAAlByE,KAAsB+D,IAGbD,EAAA7D,UAAAyE,qBAAV,SAA+BJ,EAAcP,GAC5C/D,KAAKqE,gBAAe9I,MAApByE,MAAqBsE,GAAKH,OAAKJ,KAGzBD,EAAA7D,UAAA0E,UAAP,WACC,OAAO3E,KAAK+D,SAAS7I,QAGf4I,EAAA7D,UAAA2E,kBAAP,SAAyBN,GAAwB,OAAOtE,KAAK+D,SAASO,IAC/DR,EAAA7D,UAAAiE,YAAP,WAAiC,OAAOlE,KAAK+D,UAErCD,EAAA7D,UAAAgE,WAAR,SAAmBF,GAGlB,IAAK,IADDT,EADEuB,EAAqBd,EAAS7I,OAE3B2F,EAAW,EAAGA,EAAIgE,IAAehE,EAElB,mBADvByC,EAAUS,EAASlD,MACgBkD,EAASlD,GAAKyC,EAAU,IAAIhC,EAAAwD,KAAKxB,IACpEA,EAAQM,UAAU5D,OAIV8D,EAAA7D,UAAAoD,oBAAV,SAA8BC,GAC7BtD,KAAKoD,kBAGIU,EAAA7D,UAAAsD,sBAAV,SAAgCD,KAGtBQ,EAAA7D,UAAAuD,oBAAV,SAA8BF,KAiB/BQ,EA/FA,CAA0CxC,EAAAS,SAApBT,EAAAwC,YAAWA,EAFlC,CAAUxC,MAAAA,UCAV,SAAUA,GAET,IAAAyD,EAAA,SAAAtD,GAQC,SAAAsD,WACCtD,EAAAL,KAAApB,OAAOA,KAkCT,OA3C2B2B,UAAAoD,EAAAtD,GAsBhBsD,EAAA9E,UAAAoD,oBAAV,SAA8BC,GAC7B,IAAMG,EAAgBzD,KAAK2D,YAAyB,YAChDF,GAAMA,IACVzD,KAAKoD,kBAGI2B,EAAA9E,UAAAsD,sBAAV,SAAgCD,KAGtByB,EAAA9E,UAAAuD,oBAAV,SAA8BF,KAY/ByB,EA3CA,CAA2BzD,EAAAS,SAAdT,EAAAyD,MAAKA,EAFnB,CAAUzD,MAAAA,UCAV,SAAUA,GAET,IAAA0D,EAAA,SAAAvD,GAQC,SAAAuD,WACCvD,EAAAL,KAAApB,OAAOA,KAkCT,OA3C4B2B,UAAAqD,EAAAvD,GAsBjBuD,EAAA/E,UAAAoD,oBAAV,SAA8BC,GAC7B,IAAMG,EAAgBzD,KAAK2D,YAA0B,aACjDF,GAAMA,IACVzD,KAAKoD,kBAGI4B,EAAA/E,UAAAsD,sBAAV,SAAgCD,KAGtB0B,EAAA/E,UAAAuD,oBAAV,SAA8BF,KAY/B0B,EA3CA,CAA4B1D,EAAAS,SAAfT,EAAA0D,OAAMA,EAFpB,CAAU1D,MAAAA,UCAV,SAAUA,GAET,IAAA2D,EAAA,SAAAxD,GAQC,SAAAwD,QAAY,IAAAlK,KAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GAAZ,IAAAmH,EACCV,EAAAL,KAAApB,OAAOA,YACPmC,EAAKpH,SAAWA,IAsClB,OAhDyB4G,UAAAsD,EAAAxD,GAuBdwD,EAAAhF,UAAAoD,oBAAV,SAA8BC,GAC7B4B,QAAQC,IAAI5J,MAAM2J,QAASX,MAAMtE,UAAUmF,MAAMhE,KAAKpB,KAAKjF,WAC3DiF,KAAKoD,kBAGI6B,EAAAhF,UAAAsD,sBAAV,SAAgCD,KAGtB2B,EAAAhF,UAAAuD,oBAAV,SAA8BF,GAC7BtD,KAAKjF,SAAW,MAaVkK,EAAAhF,UAAAoF,YAAP,WAA6B,OAAOrF,KAAKjF,UAClCkK,EAAAhF,UAAAqF,YAAP,SAAmBvK,GAAuBiF,KAAKjF,SAAWA,GAE3DkK,EAhDA,CAAyB3D,EAAAS,SAAZT,EAAA2D,IAAGA,EAFjB,CAAU3D,MAAAA,UCAV,SAAUA,GAET,IAAAiE,EAAA,SAAA9D,GAQC,SAAA8D,EAAYC,QAAA,IAAAA,IAAAA,EAAA,KAAZ,IAAArD,EACCV,EAAAL,KAAApB,OAAOA,YAkCAmC,EAAAsD,gBAAkB,SAAC7F,GAC1BuC,EAAKiB,kBAlCLjB,EAAKqD,KAAOA,EACZrD,EAAKuD,SAAW,IAmDlB,OA9D0B/D,UAAA4D,EAAA9D,GAwBf8D,EAAAtF,UAAAoD,oBAAV,SAA8BC,GAC7BtD,KAAK0F,QAAUC,OAAOC,WAAW5F,KAAKyF,gBAAiBzF,KAAKwF,OAGnDD,EAAAtF,UAAAsD,sBAAV,SAAgCD,GAC/BtD,KAAK6F,UAGIN,EAAAtF,UAAAuD,oBAAV,SAA8BF,GAC7BtD,KAAK6F,UAGEN,EAAAtF,UAAA4F,OAAR,YACsB,GAAjB7F,KAAK0F,UACRI,aAAa9F,KAAK0F,SAClB1F,KAAK0F,SAAW,IAkBXH,EAAAtF,UAAA8F,QAAP,WAA0B,OAAO/F,KAAKwF,MAC/BD,EAAAtF,UAAA+F,QAAP,SAAeR,GAAoBxF,KAAKwF,KAAOA,GAIhDD,EA9DA,CAA0BjE,EAAAS,SAAbT,EAAAiE,KAAIA,EAFlB,CAAUjE,MAAAA,UCAV,SAAUA,GAKT,IAAAwD,EAAA,SAAArD,GAQC,SAAAqD,EAAYrB,EAAsBwC,EAAiBC,EAAwCxF,QAA/E,IAAA+C,IAAAA,EAAA,WAAsB,IAAAwC,IAAAA,WAAiB,IAAAC,IAAAA,EAAA,WAAwC,IAAAxF,IAAAA,EAAA,MAA3F,IAAAyB,EACCV,EAAAL,KAAApB,OAAOA,YA4CAmC,EAAAsD,gBAAkB,SAAC7F,GAC1BuC,EAAKiB,kBA5CLjB,EAAKsB,KAAOA,EACZtB,EAAK8D,KAAOA,EACZ9D,EAAK+D,gBAAkBA,EACvB/D,EAAKzB,UAAYA,IAqEnB,OAlF0BiB,UAAAmD,EAAArD,GA0BfqD,EAAA7E,UAAAoD,oBAAV,SAA8BC,GACzBtD,KAAKkG,iBAAmBlG,KAAKU,WAChCV,KAAKkG,gBAAgBzF,iBAAiBT,KAAKU,UAAWV,KAAKyF,iBAC3DzF,KAAKyD,KAAIlI,MAATyE,KAAaA,KAAKiG,QAElBjG,KAAKyD,KAAIlI,MAATyE,KAAaA,KAAKiG,MAClBjG,KAAKoD,mBAIG0B,EAAA7E,UAAAsD,sBAAV,SAAgCD,GAC3BtD,KAAKkG,iBAAmBlG,KAAKU,WAChCV,KAAKkG,gBAAgBnF,oBAAoBf,KAAKU,UAAWV,KAAKyF,kBAItDX,EAAA7E,UAAAuD,oBAAV,SAA8BF,GACzBtD,KAAKkG,iBAAmBlG,KAAKU,WAChCV,KAAKkG,gBAAgBnF,oBAAoBf,KAAKU,UAAWV,KAAKyF,iBAG/DzF,KAAKyD,KAAO,KACZzD,KAAKiG,KAAO,KACZjG,KAAKkG,gBAAkB,KACvBlG,KAAKU,UAAY,MAiBXoE,EAAA7E,UAAAkG,YAAP,WAAgC,OAAOnG,KAAKyD,MACrCqB,EAAA7E,UAAAmG,YAAP,SAAmB3C,GAAsBzD,KAAKyD,KAAOA,GAG9CqB,EAAA7E,UAAAoG,aAAP,WAA8B,OAAOrG,KAAKiG,MACnCnB,EAAA7E,UAAAqG,aAAP,SAAoBL,GAAmBjG,KAAKiG,KAAOA,GAG5CnB,EAAA7E,UAAAsG,mBAAP,WAA8C,OAAOvG,KAAKkG,iBACnDpB,EAAA7E,UAAAuG,mBAAP,SAA0BN,GAAwClG,KAAKkG,gBAAkBA,GAGlFpB,EAAA7E,UAAAwG,aAAP,WAA+B,OAAOzG,KAAKU,WACpCoE,EAAA7E,UAAAyG,aAAP,SAAoBhG,GAAyBV,KAAKU,UAAYA,GAE/DoE,EAlFA,CAA0BxD,EAAAS,SAAbT,EAAAwD,KAAIA,EALlB,CAAUxD,MAAAA,UCAV,SAAUA,GAKT,IAAAqF,EAAA,SAAAlF,GAQC,SAAAkF,EAAYT,EAAwCxF,QAAxC,IAAAwF,IAAAA,EAAA,WAAwC,IAAAxF,IAAAA,EAAA,MAApD,IAAAyB,EACCV,EAAAL,KAAApB,OAAOA,YAoCAmC,EAAAsD,gBAAkB,SAAC7F,GAC1BuC,EAAKiB,kBApCLjB,EAAK+D,gBAAkBA,EACvB/D,EAAKzB,UAAYA,IAuDnB,OAlE4BiB,UAAAgF,EAAAlF,GAwBjBkF,EAAA1G,UAAAoD,oBAAV,SAA8BC,GACzBtD,KAAKkG,iBAAmBlG,KAAKU,WAChCV,KAAKkG,gBAAgBzF,iBAAiBT,KAAKU,UAAWV,KAAKyF,kBAInDkB,EAAA1G,UAAAsD,sBAAV,SAAgCD,GAC3BtD,KAAKkG,iBAAmBlG,KAAKU,WAChCV,KAAKkG,gBAAgBnF,oBAAoBf,KAAKU,UAAWV,KAAKyF,kBAItDkB,EAAA1G,UAAAuD,oBAAV,SAA8BF,GACzBtD,KAAKkG,iBAAmBlG,KAAKU,WAChCV,KAAKkG,gBAAgBnF,oBAAoBf,KAAKU,UAAWV,KAAKyF,iBAG/DzF,KAAKU,UAAY,KACjBV,KAAKkG,gBAAkB,MAiBjBS,EAAA1G,UAAAsG,mBAAP,WAA8C,OAAOvG,KAAKkG,iBACnDS,EAAA1G,UAAAuG,mBAAP,SAA0BN,GAAwClG,KAAKkG,gBAAkBA,GAGlFS,EAAA1G,UAAAwG,aAAP,WAA+B,OAAOzG,KAAKU,WACpCiG,EAAA1G,UAAAyG,aAAP,SAAoBhG,GAAyBV,KAAKU,UAAYA,GAE/DiG,EAlEA,CAA4BrF,EAAAS,SAAfT,EAAAqF,OAAMA,EALpB,CAAUrF,MAAAA,UCAV,SAAUA,GAET,IAAOtF,EAASb,IAAIC,KAAKY,OAKzB4K,EAAA,SAAAnF,GAQC,SAAAmF,EAAYlL,EAAemL,EAAWC,EAAoBC,EAAwBC,EAAuCC,EAAsCC,EAAuCC,QAAhK,IAAAL,IAAAA,EAAA,WAAoB,IAAAC,IAAAA,EAAA,UAAwB,IAAAC,IAAAA,EAAwBhL,EAAOC,aAAQ,IAAAgL,IAAAA,EAAA,WAAsC,IAAAC,IAAAA,EAAA,WAAuC,IAAAC,IAAAA,EAAA,MAAtM,IAAAhF,EACCV,EAAAL,KAAApB,OAAOA,YAsFAmC,EAAAiF,gBAAkB,WACzB,IAAMC,GAAqB,IAAIC,MAAOvB,UAAY5D,EAAKoF,UACnDF,EAAclF,EAAK4E,UACtB5E,EAAK5G,MAAM8L,EAAclF,EAAK4E,UAC1B5E,EAAK+E,UAAU/E,EAAK+E,SAAS/E,EAAKqF,aAAcrF,EAAKsF,iBAEzDtF,EAAK5G,MAAM,GACX4G,EAAK0D,SACD1D,EAAK+E,UAAU/E,EAAK+E,SAAS/E,EAAKqF,aAAcrF,EAAKsF,eACrDtF,EAAKgF,YAAYhF,EAAKgF,WAAWhF,EAAKqF,aAAcrF,EAAKsF,eAC7DtF,EAAKiB,mBA/FNjB,EAAKuF,YAAchM,EACnByG,EAAK0E,GAAKA,EACV1E,EAAK2E,KAAOA,EACZ3E,EAAK4E,SAAWA,EAChB5E,EAAK6E,OAASA,EACd7E,EAAK8E,QAAUA,EACf9E,EAAK+E,SAAWA,EAChB/E,EAAKgF,WAAaA,EAClBhF,EAAKqF,aAAe,EACpBrF,EAAKsF,cAAgB,EACrBtF,EAAKoF,UAAY,EACjBpF,EAAKuD,SAAW,IA+IlB,OApK2B/D,UAAAiF,EAAAnF,GAkChBmF,EAAA3G,UAAAoD,oBAAV,SAA8BC,GAC7BtD,KAAK2H,gBAGL,IAAK,IAAIC,KAAO5H,KAAK6G,GACX7G,KAAK6G,GAAGe,GACb5H,KAAK8G,MAA0B,MAAlB9G,KAAK8G,KAAKc,GAC1B5H,KAAK2H,aAAaC,GAAO5H,KAAK8G,KAAKc,GAEnC5H,KAAK2H,aAAaC,GAAO5H,KAAK0H,YAAYE,GAGxC5H,KAAK+G,SAAW,GACnB/G,KAAK0F,QAAUC,OAAOkC,YAAY7H,KAAKoH,gBAAiBR,EAAMkB,gBAC9D9H,KAAKuH,WAAY,IAAID,MAAOvB,UAC5B/F,KAAKzE,MAAM,GACPyE,KAAKiH,SAASjH,KAAKiH,QAAQjH,KAAKwH,aAAcxH,KAAKyH,iBAEvDzH,KAAKzE,MAAM,GACPyE,KAAKiH,SAASjH,KAAKiH,QAAQjH,KAAKwH,aAAcxH,KAAKyH,eACvDzH,KAAKzE,MAAM,GACPyE,KAAKkH,UAAUlH,KAAKkH,SAASlH,KAAKwH,aAAcxH,KAAKyH,eACrDzH,KAAKmH,YAAYnH,KAAKmH,WAAWnH,KAAKwH,aAAcxH,KAAKyH,eAC7DzH,KAAKoD,mBAIGwD,EAAA3G,UAAAsD,sBAAV,SAAgCD,GAC/BtD,KAAK6F,UAGIe,EAAA3G,UAAAuD,oBAAV,SAA8BF,GAC7BtD,KAAK6F,SAEL7F,KAAK0H,YAAc,KACnB1H,KAAK6G,GAAK,KACV7G,KAAK8G,KAAO,KACZ9G,KAAKgH,OAAS,KACdhH,KAAKiH,QAAU,KACfjH,KAAKkH,SAAW,KAChBlH,KAAKmH,WAAa,KAClBnH,KAAK2H,aAAe,MAGbf,EAAA3G,UAAA4F,OAAR,YACsB,GAAjB7F,KAAK0F,UACRqC,cAAc/H,KAAK0F,SACnB1F,KAAK0F,SAAW,IAIVkB,EAAA3G,UAAA1E,MAAR,SAAcyM,GACbhI,KAAKwH,aAAeQ,EACpBhI,KAAKyH,cAAgBzH,KAAKgH,OAAO,EAAGhH,KAAKwH,aAAc,EAAG,EAAG,GAC7D,IAAIS,EACJ,IAAK,IAAIL,KAAO5H,KAAK6G,GACpBoB,EAASjI,KAAK2H,aAAaC,GAC3B5H,KAAK0H,YAAYE,GAAOK,GAAUjI,KAAK6G,GAAGe,GAAOK,GAAUjI,KAAKyH,eA4B3Db,EAAA3G,UAAAE,UAAP,WAA4B,OAAOH,KAAK0H,aACjCd,EAAA3G,UAAAiI,UAAP,SAAiBxM,GAAsBsE,KAAK0H,YAAchM,GAGnDkL,EAAA3G,UAAAkI,YAAP,WAA8B,OAAOnI,KAAK+G,UACnCH,EAAA3G,UAAAmI,YAAP,SAAmBrB,GAAwB/G,KAAK+G,SAAWA,GAGpDH,EAAA3G,UAAAoI,MAAP,WAAwB,OAAOrI,KAAK6G,IAC7BD,EAAA3G,UAAAqI,MAAP,SAAazB,GAAkB7G,KAAK6G,GAAKA,GAGlCD,EAAA3G,UAAAsI,QAAP,WAA0B,OAAOvI,KAAK8G,MAC/BF,EAAA3G,UAAAuI,QAAP,SAAe1B,GAAoB9G,KAAK8G,KAAOA,GAGxCF,EAAA3G,UAAAwI,UAAP,WAAoC,OAAOzI,KAAKgH,QACzCJ,EAAA3G,UAAAyI,UAAP,SAAiB1B,GAA8BhH,KAAKgH,OAASA,GAGtDJ,EAAA3G,UAAA0I,WAAP,WAA4C,OAAO3I,KAAKiH,SACjDL,EAAA3G,UAAA2I,WAAP,SAAkBnF,GAAmCzD,KAAKiH,QAAUxD,GAG7DmD,EAAA3G,UAAA4I,YAAP,WAA6C,OAAO7I,KAAKkH,UAClDN,EAAA3G,UAAA6I,YAAP,SAAmBrF,GAAmCzD,KAAKkH,SAAWzD,GAG/DmD,EAAA3G,UAAA8I,cAAP,WAA+C,OAAO/I,KAAKmH,YACpDP,EAAA3G,UAAA+I,cAAP,SAAqBvF,GAAmCzD,KAAKmH,WAAa1D,GAGnEmD,EAAA3G,UAAAgJ,gBAAP,WAAkC,OAAOjJ,KAAKwH,cAGvCZ,EAAA3G,UAAAiJ,iBAAP,WAAmC,OAAOlJ,KAAKyH,eAOxCb,EAAA3G,UAAAkJ,kBAAP,WAAoC,OAAOvC,EAAMkB,gBAC1ClB,EAAA3G,UAAAmJ,kBAAP,SAAyBC,GAA4BzC,EAAMkB,eAAiBuB,GAC7DzC,EAAAkB,eAAwB,IAAO,GAC/ClB,EApKA,CAA2BtF,EAAAS,SAAdT,EAAAsF,MAAKA,EAPnB,CAAUtF,MAAAA,UCAV,SAAUA,GAIT,IAAAgI,EAAA,SAAA7H,GAQC,SAAA6H,QAAY,IAAAvF,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,GAAAC,UAAAD,GAAZ,IAAAmH,EAAAV,EAAAlG,MAAAyE,KACU+D,IAAQ/D,YAuCVmC,EAAAsD,gBAAkB,SAAC7F,GAC1BuC,EAAKoH,eAAexI,oBAAoBO,EAAAE,aAAaM,SAAUK,EAAKsD,iBACpEtD,EAAKoH,eAAiB,OAChBpH,EAAKqH,UAAYrH,EAAKwC,YAC3BxC,EAAKiB,iBAELjB,EAAKsH,QA5CNtH,EAAKoH,eAAiB,KACtBpH,EAAKqH,UAAY,EACjBrH,EAAKuH,UAAW,EAChBvH,EAAKwH,oBAAqB,IA8G5B,OA3H4BhI,UAAA2H,EAAA7H,GA0BpB6H,EAAArJ,UAAA+D,WAAP,eAAkB,IAAAD,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,GAAAC,UAAAD,GACjByG,EAAAxB,UAAM+D,WAAUzI,MAAAyE,KAAI+D,IAGduF,EAAArJ,UAAAmE,cAAP,eAAqB,IAAAL,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,GAAAC,UAAAD,GACpByG,EAAAxB,UAAMoE,gBAAe9I,MAAAyE,MAACA,KAAKwJ,SAAW,GAACrF,OAAKJ,KAGtCuF,EAAArJ,UAAAuE,gBAAP,SAAuBT,GACtB/D,KAAKgE,WAAUzI,MAAfyE,KAAmB+D,IAGbuF,EAAArJ,UAAAwE,mBAAP,SAA0BV,GACzB/D,KAAKoE,cAAa7I,MAAlByE,KAAsB+D,IAGfuF,EAAArJ,UAAAwJ,KAAR,WACCzJ,KAAKuJ,eAAiBvJ,KAAK4E,kBAAkB5E,KAAKwJ,UAClDxJ,KAAKuJ,eAAe9I,iBAAiBa,EAAAE,aAAaM,SAAU9B,KAAKyF,iBACjEzF,KAAKuJ,eAAe5G,WAaX2G,EAAArJ,UAAAoD,oBAAV,SAA8BC,GAC7BtD,KAAKwJ,SAAW,EACZxJ,KAAK2E,YAAc,EACtB3E,KAAKyJ,OAELzJ,KAAKoD,kBAIGkG,EAAArJ,UAAAsD,sBAAV,SAAgCD,GAC3BtD,KAAKuJ,iBACRvJ,KAAKuJ,eAAexI,oBAAoBO,EAAAE,aAAaM,SAAU9B,KAAKyF,iBACpEzF,KAAKuJ,eAAexG,YACpB/C,KAAKuJ,eAAiB,MAEvBvJ,KAAKwJ,UAAY,EACjB/H,EAAAxB,UAAMsD,sBAAqBnC,KAAApB,KAACsD,IAGnBgG,EAAArJ,UAAAuD,oBAAV,SAA8BF,GACzBtD,KAAKuJ,iBACRvJ,KAAKuJ,eAAexI,oBAAoBO,EAAAE,aAAaM,SAAU9B,KAAKyF,iBACpEzF,KAAKuJ,eAAerG,UACpBlD,KAAKuJ,eAAiB,MAEvBvJ,KAAKwJ,UAAY,EACjBxJ,KAAK0J,UAAW,EAChB1J,KAAK2J,oBAAqB,EAC1BlI,EAAAxB,UAAMuD,oBAAmBpC,KAAApB,KAACsD,IAGjBgG,EAAArJ,UAAA2J,gBAAV,WACK5J,KAAKuJ,eAAe7F,YAAcpC,EAAAC,aAAasB,YAClD7C,KAAKuJ,eAAexI,oBAAoBO,EAAAE,aAAaM,SAAU9B,KAAKyF,iBACpEzF,KAAKuJ,eAAexG,aAErB/C,KAAKoD,kBAGIkG,EAAArJ,UAAA4J,iBAAV,WACK7J,KAAKuJ,eAAe7F,YAAcpC,EAAAC,aAAasB,YAClD7C,KAAKuJ,eAAexI,oBAAoBO,EAAAE,aAAaM,SAAU9B,KAAKyF,iBACpEzF,KAAKuJ,eAAexG,aAErB,IAAMU,EAAgBzD,KAAK2D,YAA0B,aACjDF,GAAMA,IACVzD,KAAKkD,WAaIoG,EAAArJ,UAAA6J,YAAV,WAAiC,OAAO9J,KAAKwJ,UAM9CF,EA3HA,CAA4BhI,EAAAwC,aAAfxC,EAAAgI,OAAMA,EAJpB,CAAUhI,MAAAA,SCAV,IAAUA,KAAV,SAAUA,GAIT,IAAAyI,EAAA,SAAAtI,GAQC,SAAAsI,QAAY,IAAAhG,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,GAAAC,UAAAD,GAAZ,IAAAmH,EAAAV,EAAAlG,MAAAyE,KACU+D,IAAQ/D,YA8BVmC,EAAAsD,gBAAkB,SAAC7F,KACpBuC,EAAK6H,eAAiB7H,EAAKwC,aAChCxC,EAAKiB,kBA/BNjB,EAAK6H,cAAgB,IAiIvB,OA3I8BrI,UAAAoI,EAAAtI,GAuBtBsI,EAAA9J,UAAA+D,WAAP,eAAkB,IAAAD,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,GAAAC,UAAAD,GACjByG,EAAAxB,UAAM+D,WAAUzI,MAAAyE,KAAI+D,IAGdgG,EAAA9J,UAAAmE,cAAP,eAAqB,IAAAL,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,GAAAC,UAAAD,GACpBgF,KAAKgE,WAAUzI,MAAfyE,KAAmB+D,IAGbgG,EAAA9J,UAAAuE,gBAAP,SAAuBT,GACtB/D,KAAKgE,WAAUzI,MAAfyE,KAAmB+D,IAGbgG,EAAA9J,UAAAwE,mBAAP,SAA0BV,GACzB/D,KAAKgE,WAAUzI,MAAfyE,KAAmB+D,IASVgG,EAAA9J,UAAAoD,oBAAV,SAA8BC,GAC7BtD,KAAKgK,cAAgB,EACrB,IAAM9O,EAAgB8E,KAAK2E,YAC3B,GAAIzJ,EAAS,EAGZ,IAAK,IADD+O,EADElG,EAAqB/D,KAAKkE,cAEvBrD,EAAW,EAAGA,EAAI3F,IAAU2F,GACpCoJ,EAAUlG,EAASlD,IACXJ,iBAAiBa,EAAAE,aAAaM,SAAU9B,KAAKyF,iBACrDwE,EAAQtH,eAGT3C,KAAKoD,kBAIG2G,EAAA9J,UAAAsD,sBAAV,SAAgCD,GAC/B,IAAMpI,EAAgB8E,KAAK2E,YAC3B,GAAIzJ,EAAS,EAGZ,IAAK,IADDgP,EADEnG,EAAqB/D,KAAKkE,cAEvBrD,EAAW,EAAGA,EAAI3F,IAAU2F,GACpCqJ,EAAUnG,EAASlD,IACXE,oBAAoBO,EAAAE,aAAaM,SAAU9B,KAAKyF,iBACxDyE,EAAQnH,YAGVtB,EAAAxB,UAAMsD,sBAAqBnC,KAAApB,KAACsD,IAGnByG,EAAA9J,UAAAuD,oBAAV,SAA8BF,GAC7B,IAAMpI,EAAgB8E,KAAK2E,YAC3B,GAAIzJ,EAAS,EAGZ,IAAK,IADDiP,EADEpG,EAAqB/D,KAAKkE,cAEvBrD,EAAW,EAAGA,EAAI3F,IAAU2F,GACpCsJ,EAAUpG,EAASlD,IACXE,oBAAoBO,EAAAE,aAAaM,SAAU9B,KAAKyF,iBACxD0E,EAAQjH,UAGVzB,EAAAxB,UAAMuD,oBAAmBpC,KAAApB,KAACsD,IAGjByG,EAAA9J,UAAA2J,gBAAV,WACC,IAAM1O,EAAgB8E,KAAK2E,YAC3B,GAAIzJ,EAAS,EAGZ,IAAK,IAFC6I,EAAqB/D,KAAKkE,cAC5BZ,OAAO,EACFzC,EAAW,EAAGA,EAAI3F,IAAU2F,GACpCyC,EAAUS,EAASlD,IACP6C,YAAcpC,EAAAC,aAAasB,YACtCS,EAAQvC,oBAAoBO,EAAAE,aAAaM,SAAU9B,KAAKyF,iBACxDnC,EAAQP,aAIX/C,KAAKoD,kBAGI2G,EAAA9J,UAAA4J,iBAAV,WACC,IAAM3O,EAAgB8E,KAAK2E,YAC3B,GAAIzJ,EAAS,EAGZ,IAAK,IAFC6I,EAAqB/D,KAAKkE,cAC5BZ,OAAO,EACFzC,EAAW,EAAGA,EAAI3F,IAAU2F,GACpCyC,EAAUS,EAASlD,IACP6C,YAAcpC,EAAAC,aAAasB,YACtCS,EAAQvC,oBAAoBO,EAAAE,aAAaM,SAAU9B,KAAKyF,iBACxDnC,EAAQP,aAIX,IAAMU,EAAgBzD,KAAK2D,YAA0B,aACjDF,GAAMA,IACVzD,KAAKkD,WAaI6G,EAAA9J,UAAAmK,iBAAV,WAAsC,OAAOpK,KAAKgK,eAMnDD,EA3IA,CAA8BzI,EAAAwC,aAAjBxC,EAAAyI,SAAQA,EAJtB,CAAUzI,MAAAA,UCAV,SAAUnG,IAAI,SAAAkP,GAEb,IAAAC,EAAA,WAQC,SAAAA,EAAYpO,EAAcqO,QAAd,IAAArO,IAAAA,EAAA,QAAc,IAAAqO,IAAAA,EAAA,GACzBvK,KAAKwK,IAAItO,EAAGqO,GA8Dd,OAjDQD,EAAArK,UAAAuK,IAAP,SAAWtO,EAAUqO,GACpBvK,KAAK9D,EAAIA,EACT8D,KAAKuK,EAAIA,GAGHD,EAAArK,UAAAwK,OAAP,SAAcC,GACbA,EAAMF,IAAIxK,KAAK9D,EAAG8D,KAAKuK,IAGjBD,EAAArK,UAAA0K,SAAP,WACC,OAAO,IAAIL,EAAQtK,KAAK9D,EAAG8D,KAAKuK,IAG1BD,EAAArK,UAAA2K,KAAP,WACC5K,KAAKwK,IAAI,EAAG,IAGNF,EAAArK,UAAA4K,UAAP,WACC,IAAMC,EAAW9K,KAAK2E,YACtB3E,KAAK9D,GAAK4O,EACV9K,KAAKuK,GAAKO,GAGJR,EAAArK,UAAA0E,UAAP,WACC,OAAOvH,KAAKW,KAAKiC,KAAK9D,EAAI8D,KAAK9D,EAAI8D,KAAKuK,EAAIvK,KAAKuK,IAG3CD,EAAArK,UAAA8K,kBAAP,SAAyBL,GACxB,IAAMM,EAAYN,EAAMxO,EAAI8D,KAAK9D,EAC3B+O,EAAYP,EAAMH,EAAIvK,KAAKuK,EACjC,OAAOS,EAAKA,EAAKC,EAAKA,GAGhBX,EAAArK,UAAAiL,YAAP,SAAmBR,GAClB,OAAOtN,KAAKW,KAAKiC,KAAK+K,kBAAkBL,KAe1CJ,EAvEA,GAAaD,EAAAC,QAAOA,EAFP,CAAAnP,EAAAkP,OAAAlP,EAAAkP,UAAd,CAAUlP,MAAAA,UCAV,SAAUA,IAAI,SAAAkP,GAEb,IAAAc,EAAA,WAQC,SAAAA,EAAYjP,EAAcqO,EAAca,QAA5B,IAAAlP,IAAAA,EAAA,QAAc,IAAAqO,IAAAA,EAAA,QAAc,IAAAa,IAAAA,EAAA,GACvCpL,KAAKwK,IAAItO,EAAGqO,EAAGa,GAkEjB,OArDQD,EAAAlL,UAAAuK,IAAP,SAAWtO,EAAUqO,EAAUa,GAC9BpL,KAAK9D,EAAIA,EACT8D,KAAKuK,EAAIA,EACTvK,KAAKoL,EAAIA,GAGHD,EAAAlL,UAAAwK,OAAP,SAAcC,GACbA,EAAMF,IAAIxK,KAAK9D,EAAG8D,KAAKuK,EAAGvK,KAAKoL,IAGzBD,EAAAlL,UAAA0K,SAAP,WACC,OAAO,IAAIQ,EAAQnL,KAAK9D,EAAG8D,KAAKuK,EAAGvK,KAAKoL,IAGlCD,EAAAlL,UAAA2K,KAAP,WACC5K,KAAKwK,IAAI,EAAG,EAAG,IAGTW,EAAAlL,UAAA4K,UAAP,WACC,IAAMC,EAAW9K,KAAK2E,YACtB3E,KAAK9D,GAAK4O,EACV9K,KAAKuK,GAAKO,EACV9K,KAAKoL,GAAKN,GAGJK,EAAAlL,UAAA0E,UAAP,WACC,OAAOvH,KAAKW,KAAKiC,KAAK9D,EAAI8D,KAAK9D,EAAI8D,KAAKuK,EAAIvK,KAAKuK,EAAIvK,KAAKoL,EAAIpL,KAAKoL,IAG7DD,EAAAlL,UAAA8K,kBAAP,SAAyBL,GACxB,IAAMM,EAAYN,EAAMxO,EAAI8D,KAAK9D,EAC3B+O,EAAYP,EAAMH,EAAIvK,KAAKuK,EAC3Bc,EAAYX,EAAMU,EAAIpL,KAAKoL,EACjC,OAAOJ,EAAKA,EAAKC,EAAKA,EAAKI,EAAKA,GAG1BF,EAAAlL,UAAAiL,YAAP,SAAmBR,GAClB,OAAOtN,KAAKW,KAAKiC,KAAK+K,kBAAkBL,KAgB1CS,EA3EA,GAAad,EAAAc,QAAOA,EAFP,CAAAhQ,EAAAkP,OAAAlP,EAAAkP,UAAd,CAAUlP,MAAAA,UCAV,SAAUA,IAAI,SAAAkP,GAEb,IAAAiB,EAAA,WAQC,SAAAA,EAAYpP,EAAcqO,EAAcgB,EAAkBC,QAA9C,IAAAtP,IAAAA,EAAA,QAAc,IAAAqO,IAAAA,EAAA,QAAc,IAAAgB,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,GACzDxL,KAAKwK,IAAItO,EAAGqO,EAAGgB,EAAOC,GA0ExB,OA7DQF,EAAArL,UAAAuK,IAAP,SAAWtO,EAAUqO,EAAUgB,EAAcC,GAC5CxL,KAAK9D,EAAIA,EACT8D,KAAKuK,EAAIA,EACTvK,KAAKuL,MAAQA,EACbvL,KAAKwL,OAASA,GAGRF,EAAArL,UAAAwK,OAAP,SAAcgB,GACbA,EAAKjB,IAAIxK,KAAK9D,EAAG8D,KAAKuK,EAAGvK,KAAKuL,MAAOvL,KAAKwL,SAGpCF,EAAArL,UAAA0K,SAAP,WACC,OAAO,IAAIW,EAAUtL,KAAK9D,EAAG8D,KAAKuK,EAAGvK,KAAKuL,MAAOvL,KAAKwL,SAGhDF,EAAArL,UAAAyL,OAAP,WACC,OAAO1L,KAAKuK,GAGNe,EAAArL,UAAA0L,UAAP,WACC,OAAO3L,KAAKuK,EAAIvK,KAAKwL,QAGfF,EAAArL,UAAA2L,QAAP,WACC,OAAO5L,KAAK9D,GAGNoP,EAAArL,UAAA4L,SAAP,WACC,OAAO7L,KAAK9D,EAAI8D,KAAKuL,OAGfD,EAAArL,UAAA6L,WAAP,WACC,OAAO,IAAIzB,EAAAC,QAAQtK,KAAK4L,UAAW5L,KAAK0L,WAGlCJ,EAAArL,UAAA8L,YAAP,WACC,OAAO,IAAI1B,EAAAC,QAAQtK,KAAK6L,WAAY7L,KAAK0L,WAGnCJ,EAAArL,UAAA+L,cAAP,WACC,OAAO,IAAI3B,EAAAC,QAAQtK,KAAK4L,UAAW5L,KAAK2L,cAGlCL,EAAArL,UAAAgM,eAAP,WACC,OAAO,IAAI5B,EAAAC,QAAQtK,KAAK6L,WAAY7L,KAAK2L,cAiB3CL,EAnFA,GAAajB,EAAAiB,UAASA,EAFT,CAAAnQ,EAAAkP,OAAAlP,EAAAkP,UAAd,CAAUlP,MAAAA,UCAV,SAAUA,IAAI,SAAAC,GAEb,IAAA8Q,EAAA,WAuEC,SAAAA,KACD,OA/DeA,EAAAC,SAAd,SAAuBC,EAAcC,EAAiBC,QAAjB,IAAAD,IAAAA,EAAA,QAAiB,IAAAC,IAAAA,EAAA,GAGrD,IAAK,IAFCC,EAAkB,IAAIhI,MAAM6H,GAC9BI,EAAWH,EACNxL,EAAW,EAAGA,EAAIuL,IAASvL,EACnC0L,EAAO1L,GAAK2L,EACZA,GAAKF,EAEN,OAAOC,GAQML,EAAAO,OAAd,SAAwBC,GACvB,OAAOA,EAAKC,OAAO,SAAUzQ,EAAK2E,EAAU4B,GAC3C,OAAOA,EAAKmK,QAAQ1Q,KAAO2E,KAUfqL,EAAAW,WAAd,SAA4BH,EAAUD,GAErC,YAFqC,IAAAA,IAAAA,GAAA,GAEjCA,EACIC,EAAKC,OAAO,SAAUzQ,EAAK2E,EAAU4B,GAC3C,OAAOA,EAAKmK,QAAQ1Q,KAAOuG,EAAKqK,YAAY5Q,KAGtCwQ,EAAKC,OAAO,SAAUzQ,EAAK2E,EAAU4B,GAC3C,OAAQA,EAAKmK,QAAQ1Q,KAAO2E,GAAO4B,EAAKqK,YAAY5Q,KAAO2E,KAgBhDqL,EAAAa,WAAd,SAA4BC,EAAWC,EAAWC,GACjD,IAAIrM,EAAUsM,EAAU/O,EAAW,EAC7BgP,EAAWJ,EAAM9R,OACjBmS,EAAWJ,EAAM/R,OACvB,IAAK2F,EAAI,EAAGA,EAAIuM,IAAKvM,EACpB,IAAKsM,EAAItM,EAAI,EAAGsM,EAAIE,IAAKF,EACxBD,EAAS9O,IAAKyC,EAAGsM,EAAGH,EAAMnM,GAAIoM,EAAME,KAMxCjB,EAxEA,GAAa9Q,EAAA8Q,IAAGA,EAFH,CAAA/Q,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCAV,SAAUA,IAAI,SAAAC,GAEb,IAAAkS,EAAA,WAgIC,SAAAA,KACD,OArHeA,EAAAC,IAAd,SAAkBC,EAAcC,EAAeC,EAAeC,EAAeC,EAAeC,GAC3F,YAD2F,IAAAA,IAAAA,GAAA,GACvFJ,GAAUC,EAAeC,GACzBE,IACCJ,EAASC,EACRF,EAAQC,EAAQD,EAAQC,EACnBD,EAAQE,IAAQF,EAAQE,GAE7BF,EAAQE,EAAQF,EAAQE,EACnBF,EAAQC,IAAQD,EAAQC,KAG3BD,EAAQC,IAAWG,EAASD,IAAWD,EAASD,GAAUE,IASrDL,EAAAQ,OAAd,SAAqBC,EAAgBC,GACpC,YADoB,IAAAD,IAAAA,EAAA,QAAgB,IAAAC,IAAAA,EAAA,GAC7BD,GAAOC,EAAMD,GAAO3Q,KAAK0Q,UASnBR,EAAAW,UAAd,SAAwBF,EAAgBC,GACvC,YADuB,IAAAD,IAAAA,EAAA,QAAgB,IAAAC,IAAAA,EAAA,GAChC5Q,KAAK8Q,MAAMZ,EAAIQ,OAAOC,EAAKC,KAUrBV,EAAAO,MAAd,SAAoBL,EAAcO,EAAYC,GAC7C,OAAOR,EAAQO,EAAMA,EAAOP,EAAQQ,EAAMA,EAAMR,GAYnCF,EAAAa,KAAd,SAAmBC,EAAWC,EAAWC,EAAWC,EAAWC,QAAA,IAAAA,IAAAA,GAAA,GAC9D,IAAMxD,EAAYsD,EAAKF,EACjBnD,EAAYsD,EAAKF,EACvB,OAAOG,EAAWxD,EAAKA,EAAKC,EAAKA,EAAM7N,KAAKW,KAAKiN,EAAKA,EAAKC,EAAKA,IAQnDqC,EAAAmB,SAAd,SAAuBC,GACtB,OAAOA,EAASpB,EAAIqB,SAQPrB,EAAAsB,SAAd,SAAuBC,GACtB,OAAOA,EAASvB,EAAIwB,SAUPxB,EAAAyB,KAAd,SAAmBjI,EAAaD,EAAW6H,GAC1C,YAD0C,IAAAA,IAAAA,GAAA,GACnCA,GAAW7H,EAAKC,EAAOwG,EAAI0B,KAAO1B,EAAI2B,IAAM7R,KAAKE,IAAQuJ,EAAKC,EAAO,KAAO,IAAM,KAa5EwG,EAAA2B,IAAuB,EAAV7R,KAAKE,GAClBgQ,EAAA0B,IAAuB,EAAV5R,KAAKE,GAClBgQ,EAAA4B,IAAuB,EAAV9R,KAAKE,GAClBgQ,EAAA6B,IAAuB,EAAV/R,KAAKE,GAClBgQ,EAAA8B,IAAuB,EAAVhS,KAAKE,GAClBgQ,EAAA+B,KAAcjS,KAAKE,GAAK,EACxBgQ,EAAAgC,KAAclS,KAAKE,GAAK,EACxBgQ,EAAAiC,KAAcnS,KAAKE,GAAK,EACxBgQ,EAAAkC,KAAcpS,KAAKE,GAAK,EAEvBgQ,EAAAqB,QAAiB,IAAMvR,KAAKE,GAC5BgQ,EAAAwB,QAAiB1R,KAAKE,GAAK,IAO3CgQ,EAjIA,GAAalS,EAAAkS,IAAGA,EAFH,CAAAnS,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCAV,SAAUA,IAAI,SAAAC,GAEb,IAAAqU,EAAA,WAqBC,SAAAA,KACD,OAbeA,EAAAC,aAAd,SAA2BC,EAAkBC,EAAoBC,QAAtC,IAAAF,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,QAAoB,IAAAC,IAAAA,EAAA,GAChEA,GAAqB,GAAVD,EAAuB,KAARD,EAC1B,IAAIG,EAAW1S,KAAK8Q,MAAM2B,EAAU,MAAMhO,WACtCuL,EAAWhQ,KAAK8Q,MAAO2B,EAAU,GAAM,IAAIhO,WAC3C1D,GAAY,IAAMf,KAAK8Q,MAAM2B,EAAU,KAAKE,QAAQ,EAAG,GAC3D,MAAS,KAALD,EACIA,EAAI,KAAO,IAAM1C,GAAG2C,QAAQ,EAAG,GAAK,IAAM5R,EAE1CiP,EAAI,IAAMjP,GAKpBsR,EAtBA,GAAarU,EAAAqU,IAAGA,EAFH,CAAAtU,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCAV,SAAUA,IAAI,SAAAC,GAEb,IAAA4U,EAAA,WAaC,SAAAA,KACD,OAZeA,EAAAC,SAAd,WAIC,IAAI,IADAC,EAFEC,KACAC,EAAiBC,SAASC,OAAOC,UAAU,GAAGC,MAAM,KAElD3P,EAAW,EAAGuP,EAAMvP,KAAMA,EAEjCsP,GADAD,EAAOE,EAAMvP,GAAG2P,MAAM,MACX,IAAMN,EAAK,GAEvB,OAAOC,GAITH,EAdA,GAAa5U,EAAA4U,IAAGA,EAFH,CAAA7U,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCAV,SAAUA,IAAI,SAAAC,GAEb,IAAYqV,GAAZ,SAAYA,GACXA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,aAAA,GAAA,eATD,CAAYA,EAAArV,EAAAqV,QAAArV,EAAAqV,WAYZ,IAAYC,GAAZ,SAAYA,GACXA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,QAAA,GAAA,UAJD,CAAYA,EAAAtV,EAAAsV,YAAAtV,EAAAsV,eAOZ,IAAAC,EAAA,WAmCC,SAAAA,KACD,OAlCeA,EAAAC,OAAd,SAAqBlV,EAAuBmV,EAAuBC,EAAyCC,QAAzC,IAAAD,IAAAA,EAAsBJ,EAAUM,cAAS,IAAAD,IAAAA,EAAcN,EAAMQ,eAC/H,IAAIC,EAAYxV,EAAOQ,EACnBiV,EAAYzV,EAAO6O,EACnB6G,EAAY1V,EAAO6P,MACnB8F,EAAY3V,EAAO8P,OAEjB8F,EAAYT,EAAO3U,EACnBqV,EAAYV,EAAOtG,EACnBiH,EAAYX,EAAOtF,MACnBkG,EAAYZ,EAAOrF,OAEzB,OAAQsF,GACP,KAAKJ,EAAUM,QACf,KAAKN,EAAUgB,SACd,IAAMC,EAAgBH,EAAKJ,EACrBQ,EAAgBH,EAAKJ,EACrBQ,EAAef,GAAaJ,EAAUM,QAAWW,EAASC,EAASD,EAASC,EAAWD,EAASC,EAASD,EAASC,EACxHR,GAAMS,EACNR,GAAMQ,EACN,MAED,KAAKnB,EAAUoB,SACd,OAAO,IAAI3W,EAAAkP,KAAKiB,UAAUgG,EAAIC,EAAIC,EAAIC,GAQxC,OALAP,EAAKI,GAAOP,GAASN,EAAMsB,UAAYhB,GAASN,EAAMuB,aAAejB,GAASN,EAAMwB,YAAe,EACjGlB,GAASN,EAAMyB,WAAanB,GAASN,EAAM0B,cAAgBpB,GAASN,EAAM2B,aAAiBZ,EAAKJ,GAAOI,EAAKJ,GAAM,GACpHD,EAAKI,GAAOR,GAASN,EAAMsB,UAAYhB,GAASN,EAAM4B,YAActB,GAASN,EAAMyB,UAAa,EAC9FnB,GAASN,EAAMwB,aAAelB,GAASN,EAAM6B,eAAiBvB,GAASN,EAAM2B,aAAiBX,EAAKJ,GAAOI,EAAKJ,GAAM,GAEhH,IAAIlW,EAAAkP,KAAKiB,UAAU4F,EAAIC,EAAIC,EAAIC,IAIxCV,EApCA,GAAavV,EAAAuV,MAAKA,EArBL,CAAAxV,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCAV,SAAUA,IAAI,SAAAC,GAEb,IAAAmX,EAAA,WAQC,SAAAA,EAAYC,QAAA,IAAAA,IAAAA,EAAA,MACPA,EACHxS,KAAKwK,IAAIgI,IAETxS,KAAKyS,WAAazS,KAAK0S,WAAa,KACpC1S,KAAK2S,UAAY3S,KAAK0S,WAAWxX,OACjC8E,KAAK4S,SAAU,GAEhB5S,KAAK6S,QAAU,KACf7S,KAAK8S,oBAAqB,EA+E5B,OAlEQP,EAAAtS,UAAAuK,IAAP,SAAWgI,GACVxS,KAAKyS,WAAaD,EAAOrO,SACzBnE,KAAK+S,SAGCR,EAAAtS,UAAA+S,IAAP,WACKhT,KAAK4S,SAAW5S,KAAK8S,oBACxB9S,KAAK+S,QAEN,IAAMzO,EAAelH,KAAK8Q,MAAM9Q,KAAK0Q,SAAW9N,KAAK2S,WAC/CnF,EAAUxN,KAAK0S,WAAWpO,GAC5BiI,GAAiB,EAOrB,OANIvM,KAAK6S,UAAStG,EAASvM,KAAK6S,QAAQrF,IACpCjB,IACHvM,KAAK0S,WAAW1R,OAAOsD,EAAO,GAC9BtE,KAAK2S,UAAY3S,KAAK0S,WAAWxX,OACjC8E,KAAK4S,QAA4B,GAAlB5S,KAAK2S,WAEdnF,GAGD+E,EAAAtS,UAAA8S,MAAP,WACC/S,KAAK0S,WAAa1S,KAAKyS,WAAWtO,SAClCnE,KAAK2S,UAAY3S,KAAK0S,WAAWxX,OACjC8E,KAAK4S,QAA4B,GAAlB5S,KAAK2S,WAGdJ,EAAAtS,UAAAgT,aAAP,WACC,OAAOjT,KAAK2S,WAGNJ,EAAAtS,UAAAiT,WAAP,WACC,OAAOlT,KAAK4S,SAGNL,EAAAtS,UAAAkT,sBAAP,WACC,OAAOnT,KAAK8S,oBAGNP,EAAAtS,UAAAmT,sBAAP,SAA6BC,GAC5BrT,KAAK8S,mBAAqBO,GAGbd,EAAAe,cAAd,SAA4BlH,GAE3B,IAAK,IADCoG,EAAkB,IAAIjO,MAAM6H,GACzBvL,EAAW,EAAGA,EAAIuL,IAASvL,EAAG2R,EAAO3R,GAAKA,EACnD,OAAO,IAAI0R,EAAeC,IAoB5BD,EAhGA,GAAanX,EAAAmX,OAAMA,EAFN,CAAApX,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCAV,SAAUA,IAAI,SAAAC,GAEb,IAAAmY,EAAA,WAQC,SAAAA,EAAYC,EAAkBC,EAAqB/E,QAAvC,IAAA8E,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,QAAqB,IAAA/E,IAAAA,GAAA,GAClD1O,KAAK0T,SAASF,EAAO9E,GACrB1O,KAAK2T,YAAYF,EAAU/E,GAsE7B,OAzDQ6E,EAAAtT,UAAA2T,SAAP,SAAgBlF,GACf,YADe,IAAAA,IAAAA,GAAA,GACRA,EAAS1O,KAAKwT,MAAsB,IAAbxT,KAAKwT,MAAcpW,KAAKE,IAGhDiW,EAAAtT,UAAAyT,SAAP,SAAgBF,EAAc9E,QAAA,IAAAA,IAAAA,GAAA,GAC7B1O,KAAKwT,MAAQ9E,EAAS8E,EAASA,EAAQpW,KAAKE,GAAK,KAG3CiW,EAAAtT,UAAA4T,YAAP,SAAmBnF,GAClB,YADkB,IAAAA,IAAAA,GAAA,GACXA,EAAS1O,KAAKyT,SAA4B,IAAhBzT,KAAKyT,SAAiBrW,KAAKE,IAGtDiW,EAAAtT,UAAA0T,YAAP,SAAmBF,EAAiB/E,QAAA,IAAAA,IAAAA,GAAA,GACnC1O,KAAKyT,SAAW/E,EAAS+E,EAAYA,EAAWrW,KAAKE,GAAK,KAGpDiW,EAAAtT,UAAA6T,OAAP,WACC9T,KAAKwT,OAASxT,KAAKyT,UAGbF,EAAAtT,UAAA8T,OAAP,SAAc7Y,GACb,YADa,IAAAA,IAAAA,EAAA,GACNA,EAASkC,KAAKI,IAAIwC,KAAKwT,QAGxBD,EAAAtT,UAAA+T,OAAP,SAAc9Y,GACb,YADa,IAAAA,IAAAA,EAAA,GACNA,EAASkC,KAAKC,IAAI2C,KAAKwT,QAGxBD,EAAAtT,UAAAgU,OAAP,SAAc/Y,GACb,YADa,IAAAA,IAAAA,EAAA,GACNA,EAASkC,KAAK8W,IAAIlU,KAAKwT,QAGxBD,EAAAtT,UAAAkU,aAAP,SAAoBjZ,GACnB,YADmB,IAAAA,IAAAA,EAAA,GACZA,GAAU,EAAIkC,KAAKI,IAAIwC,KAAKwT,QAAU,GAGvCD,EAAAtT,UAAAmU,UAAP,SAAiBlZ,EAAmBmZ,GACnC,QADgB,IAAAnZ,IAAAA,EAAA,QAAmB,IAAAmZ,IAAAA,EAAA,MACzB,MAANA,EAIH,OAASnY,EAAG8D,KAAKgU,OAAO9Y,GAASqP,EAAGvK,KAAK+T,OAAO7Y,IAHhDmZ,EAAGnY,EAAI8D,KAAKgU,OAAO9Y,GACnBmZ,EAAG9J,EAAIvK,KAAK+T,OAAO7Y,IAkBtBqY,EAhFA,GAAanY,EAAAmY,QAAOA,EAFP,CAAApY,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,U1BAV,SAAUA,IAAI,SAAAC,GAEb,IAAYkZ,GAAZ,SAAYA,GACXA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SALD,CAAYA,EAAAlZ,EAAAkZ,cAAAlZ,EAAAkZ,iBAwBZ,IAAAC,EAAA,WAAA,SAAAA,KAaA,OAXQA,EAAAtU,UAAAuU,QAAP,SAAezZ,KAGRwZ,EAAAtU,UAAA3E,KAAP,SAAYP,KAGLwZ,EAAAtU,UAAAwU,KAAP,SAAY1Z,KAGLwZ,EAAAtU,UAAAyU,MAAP,SAAa3Z,KAEdwZ,EAbA,GAAanZ,EAAAmZ,YAAWA,EAmBxB,IAAAI,EAAA,WAAA,SAAAA,KAiBA,OAfQA,EAAA1U,UAAAuU,QAAP,SAAezZ,GACdmK,QAAQ0P,MAAMrZ,MAAM2J,QAASX,MAAMtE,UAAUmF,MAAMhE,MAAM,aAAa+C,OAAOpJ,MAGvE4Z,EAAA1U,UAAA3E,KAAP,SAAYP,GACXmK,QAAQC,IAAI5J,MAAM2J,QAASX,MAAMtE,UAAUmF,MAAMhE,MAAM,aAAa+C,OAAOpJ,MAGrE4Z,EAAA1U,UAAAwU,KAAP,SAAY1Z,GACXmK,QAAQuP,KAAKlZ,MAAM2J,QAASX,MAAMtE,UAAUmF,MAAMhE,MAAM,aAAa+C,OAAOpJ,MAGtE4Z,EAAA1U,UAAAyU,MAAP,SAAa3Z,GACZmK,QAAQwP,MAAMnZ,MAAM2J,QAASX,MAAMtE,UAAUmF,MAAMhE,MAAM,aAAa+C,OAAOpJ,MAE/E4Z,EAjBA,GAAavZ,EAAAuZ,eAAcA,EAuB3B,IAAAE,EAAA,WAEC,SAAAA,EAAYC,EAAiBC,GAC5B/U,KAAK8U,IAAMA,EACX9U,KAAK+U,KAAOA,EA8Bd,OA3BQF,EAAA5U,UAAAuU,QAAP,SAAezZ,GACdiF,KAAKgV,MAAM,YAAaja,IAGlB8Z,EAAA5U,UAAA3E,KAAP,SAAYP,GACXiF,KAAKgV,MAAM,YAAaja,IAGlB8Z,EAAA5U,UAAAwU,KAAP,SAAY1Z,GACXiF,KAAKgV,MAAM,YAAaja,IAGlB8Z,EAAA5U,UAAAyU,MAAP,SAAa3Z,GACZiF,KAAKgV,MAAM,YAAaja,IAGjB8Z,EAAA5U,UAAA+U,MAAR,SAAcC,EAAela,GAC5B,IAAMma,EAAcna,EAASoa,KAAK,MAAQ,KACtCnV,KAAK+U,KACR/U,KAAK8U,IAAIM,UAAYF,EAAOlV,KAAK8U,IAAIM,UAErCpV,KAAK8U,IAAIO,UAAYH,EAAOlV,KAAK8U,IAAIO,WAMxCR,EAlCA,GAAazZ,EAAAyZ,WAAUA,EAwCvB,IAAAS,EAAA,WAEC,SAAAA,EAAYC,GACXvV,KAAKuV,QAAUA,EAgCjB,OA7BQD,EAAArV,UAAAuU,QAAP,SAAezZ,GAEd,IAAK,IADCsS,EAAWrN,KAAKuV,QAAQra,OACrB2F,EAAW,EAAGA,EAAIwM,IAAKxM,EAC/Bb,KAAKuV,QAAQ1U,GAAG2T,QAAQjZ,MAAMyE,KAAMjF,IAI/Bua,EAAArV,UAAA3E,KAAP,SAAYP,GAEX,IAAK,IADCsS,EAAWrN,KAAKuV,QAAQra,OACrB2F,EAAW,EAAGA,EAAIwM,IAAKxM,EAC/Bb,KAAKuV,QAAQ1U,GAAGvF,KAAKC,MAAMyE,KAAMjF,IAI5Bua,EAAArV,UAAAwU,KAAP,SAAY1Z,GAEX,IAAK,IADCsS,EAAWrN,KAAKuV,QAAQra,OACrB2F,EAAW,EAAGA,EAAIwM,IAAKxM,EAC/Bb,KAAKuV,QAAQ1U,GAAG4T,KAAKlZ,MAAMyE,KAAMjF,IAI5Bua,EAAArV,UAAAyU,MAAP,SAAa3Z,GAEZ,IAAK,IADCsS,EAAWrN,KAAKuV,QAAQra,OACrB2F,EAAW,EAAGA,EAAIwM,IAAKxM,EAC/Bb,KAAKuV,QAAQ1U,GAAG6T,MAAMnZ,MAAMyE,KAAMjF,IAKrCua,EAnCA,GAAala,EAAAka,gBAAeA,EAyC5B,IAAAja,EAAA,WA6BC,SAAAA,KACD,OAzBeA,EAAAmZ,QAAd,eAAsB,IAAAzZ,KAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACjBK,EAAOma,OAASlB,EAAYmB,SAASpa,EAAOqa,OAAOlB,QAAQzZ,IAGlDM,EAAAC,KAAd,eAAmB,IAAAP,KAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACdK,EAAOma,OAASlB,EAAYqB,MAAMta,EAAOqa,OAAOpa,KAAKP,IAG5CM,EAAAoZ,KAAd,eAAmB,IAAA1Z,KAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACdK,EAAOma,OAASlB,EAAYsB,MAAMva,EAAOqa,OAAOjB,KAAK1Z,IAG5CM,EAAAqZ,MAAd,eAAoB,IAAA3Z,KAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACfK,EAAOma,OAASlB,EAAY1R,OAAOvH,EAAOqa,OAAOhB,MAAM3Z,IAG9CM,EAAAQ,OAAd,SAAqBH,EAAYC,EAAgBC,QAAA,IAAAA,IAAAA,GAAA,GAC5CP,EAAOma,OAASlB,EAAYsB,MAAQha,GAAWP,EAAOqa,OAAOjB,MAAM9Y,EAAU,MAAQD,KAG5EL,EAAAU,QAAd,SAAsBL,EAAYC,EAAiBC,QAAA,IAAAA,IAAAA,GAAA,GAC9CP,EAAOma,OAASlB,EAAY1R,OAAShH,GAAWP,EAAOqa,OAAOhB,OAAO/Y,EAAU,MAAQD,KAxB9EL,EAAAma,MAAelB,EAAYmB,QAC3Bpa,EAAAqa,OAAkB,IAAIf,EA2BrCtZ,EA9BA,GAAaD,EAAAC,OAAMA,EArJN,CAAAF,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,U2BAV,SAAUA,IAAI,SAAAC,GAEb,IAEAya,EAAA,SAAApU,GAQC,SAAAoU,EAAYC,EAAwBC,QAAxB,IAAAD,IAAAA,EAAA,UAAwB,IAAAC,IAAAA,EAAA,GAApC,IAAA5T,EACCV,EAAAL,KAAApB,OAAOA,YAoEAmC,EAAA6T,aAAe,WACtB7T,EAAK8T,WAAa9T,EAAK+T,mBACrB/T,EAAKgU,aACP,IAAIC,GAAsB,EACtBjU,EAAK4T,YAAc,GAAK5T,EAAKgU,cAAgBhU,EAAK4T,aACrDK,GAAc,EACdjU,EAAKkU,QACKlU,EAAKmU,WAAanU,EAAK2T,UACjC3T,EAAKoU,cAAcpU,EAAK2T,UAEzB3T,EAAKqU,SAASpb,EAAAqb,WAAWC,MACrBN,GACHjU,EAAKqU,SAASpb,EAAAqb,WAAW3U,WA/E1BK,EAAK2T,SAAWA,EAChB3T,EAAK4T,YAAcA,EACnB5T,EAAKwU,WAAY,EACjBxU,EAAKyU,KAAO,EACZzU,EAAK4Q,UAiHP,OA/H2BpR,UAAAkU,EAAApU,GA2BnBoU,EAAA5V,UAAA4W,MAAP,WACK7W,KAAK2W,YACT3W,KAAK2W,WAAY,EACjB3W,KAAKiW,WAAajW,KAAKkW,iBACvBlW,KAAKuW,eAAiC,GAAnBvW,KAAK8W,UAAkB9W,KAAK8W,UAAY9W,KAAK8V,YAG1DD,EAAA5V,UAAAoW,KAAP,WACMrW,KAAK2W,YACV3W,KAAK2W,WAAY,EACjB3W,KAAK8W,UAAY9W,KAAKkW,iBAAmBlW,KAAKiW,WAC9CjW,KAAK+W,iBAGClB,EAAA5V,UAAA8S,MAAP,WACC/S,KAAKqW,OACLrW,KAAKmW,aAAe,EACpBnW,KAAK8W,WAAa,GAGZjB,EAAA5V,UAAA+W,QAAP,WACChX,KAAK+S,QACL/S,KAAK6W,SAOEhB,EAAA5V,UAAAiW,eAAR,WACC,OAAO,IAAI5O,MAAO2P,WAGXpB,EAAA5V,UAAAsW,cAAR,SAAsBT,GACrB9V,KAAK+W,eACL/W,KAAKsW,UAAYR,EACjB9V,KAAK4W,IAAMjR,OAAOkC,YAAY7H,KAAKgW,aAAchW,KAAKsW,YAG/CT,EAAA5V,UAAA8W,aAAR,YACkB,GAAb/W,KAAK4W,MACR7O,cAAc/H,KAAK4W,KACnB5W,KAAK4W,KAAO,IAINf,EAAA5V,UAAAuW,SAAR,SAAiB9V,GAChBV,KAAKmB,cAAc,IAAI/F,EAAAqb,WAAW/V,EAAWV,KAAMA,KAAKmW,aAAcnW,KAAK+V,YAAa/V,KAAKiT,kBA6BvF4C,EAAA5V,UAAAiX,aAAP,WAAgC,OAAOlX,KAAK2W,WAGrCd,EAAA5V,UAAAkX,YAAP,WAA8B,OAAOnX,KAAK8V,UACnCD,EAAA5V,UAAA4H,YAAP,SAAmBiO,GAAwB9V,KAAK8V,SAAWA,GAGpDD,EAAA5V,UAAAmX,eAAP,WAAiC,OAAOpX,KAAKkW,iBAAmBlW,KAAKiW,YAE9DJ,EAAA5V,UAAAoX,YAAP,WAA8B,OAAOrX,KAAK8V,SAAW9V,KAAKoX,kBAEnDvB,EAAA5V,UAAAqX,gBAAP,WAAkC,OAAOtX,KAAKmW,cAGvCN,EAAA5V,UAAAsX,eAAP,WAAiC,OAAOvX,KAAK+V,aACtCF,EAAA5V,UAAAuX,eAAP,SAAsBpL,GAAqBpM,KAAK+V,YAAc3J,GAGvDyJ,EAAA5V,UAAAgT,aAAP,WAA+B,OAAOjT,KAAK+V,YAAc/V,KAAKmW,cAM/DN,EA/HA,CAFyB1a,EAAIyE,MAAMW,iBAEtBnF,EAAAya,MAAKA,EAJL,CAAA1a,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCAV,SAAUA,IAAI,SAAAC,GAEb,IAEAqb,EAAA,SAAAhV,GAqBC,SAAAgV,EAAY/V,EAAkBgB,EAAwByU,EAAyBJ,EAAwBpD,QAAzE,IAAAjR,IAAAA,EAAA,WAAwB,IAAAyU,IAAAA,EAAA,QAAyB,IAAAJ,IAAAA,EAAA,QAAwB,IAAApD,IAAAA,EAAA,GAAvG,IAAAxQ,EACCV,EAAAL,KAAApB,KAAMU,EAAWgB,IAAY1B,YAC7BmC,EAAKgU,aAAeA,EACpBhU,EAAK4T,YAAcA,EACnB5T,EAAKwQ,UAAYA,IAkCnB,OA3DgChR,UAAA8U,EAAAhV,GAsCxBgV,EAAAxW,UAAA2B,MAAP,WACC,OAAO,IAAI6U,EAAWzW,KAAKE,UAAWF,KAAKG,YAAaH,KAAKmW,aAAcnW,KAAK+V,YAAa/V,KAAK2S,YAG5F8D,EAAAxW,UAAA4B,SAAP,WACC,MAAO,uBAAyB7B,KAAKE,UAAY,oBAAsBF,KAAKmW,aAAe,iBAAmBnW,KAAK+V,YAAc,eAAiB/V,KAAK2S,WAnC1I8D,EAAAC,KAAc,OACdD,EAAA3U,SAAkB,WAkDjC2U,EA3DA,CAFetb,EAAIyE,MAAMC,OAEZzE,EAAAqb,WAAUA,EAJV,CAAAtb,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCAV,SAAUA,IAAI,SAAAC,GAEb,IAAAqc,EAAA,WAwCC,SAAAA,KACD,OAvCeA,EAAAC,OAAd,SAAqBhc,EAAeic,EAAgB5Q,EAAiBC,EAAuB4Q,EAA6BC,EAAkClV,QAA/D,IAAAiV,IAAAA,EAAA,SAA6B,IAAAC,IAAAA,GAAA,QAAkC,IAAAlV,IAAAA,GAAA,GAC1J,IAAImV,GAAatK,MAAOuK,SAASrc,EAAOsc,IAAI,aACtCC,EAAkB,IAAI3W,IAAIsF,MAAMkR,GAAKtK,MAAOmK,GAAW,KAAM5Q,EAAUC,EAAQ,WAChF2Q,EAAU,IACU,IAAnBC,GAAuBlc,EAAOsc,IAAI,UAAWJ,GAC7CC,GAAkBnc,EAAOsc,IAAI,aAAc,aAE9C,WACFtc,EAAOsc,IAAI,UAAWF,EAAS,QAC7B,WACEH,GAAW,IACS,IAAnBC,GAAuBlc,EAAOsc,IAAI,UAAW,QAC7CH,GAAkBnc,EAAOsc,IAAI,aAAc,aAIjD,OADIrV,GAASsV,EAAMtV,UACZsV,GAGMR,EAAAS,aAAd,SAA2Bxc,EAAeqL,EAAiBC,EAAuB4Q,EAA6BC,EAAkClV,GAChJ,YADiF,IAAAiV,IAAAA,EAAA,SAA6B,IAAAC,IAAAA,GAAA,QAAkC,IAAAlV,IAAAA,GAAA,GACzI8U,EAAWC,OAAOhc,EAAQ,EAAGqL,EAAUC,EAAQ4Q,EAAiBC,EAAkBlV,IAG5E8U,EAAAU,cAAd,SAA4Bzc,EAAeqL,EAAiBC,EAAuB4Q,EAA6BC,EAAkClV,GACjJ,YADkF,IAAAiV,IAAAA,EAAA,SAA6B,IAAAC,IAAAA,GAAA,QAAkC,IAAAlV,IAAAA,GAAA,GAC1I8U,EAAWC,OAAOhc,EAAQ,EAAGqL,EAAUC,EAAQ4Q,EAAiBC,EAAkBlV,IAG5E8U,EAAAxH,SAAd,WAIC,IAAI,IADAC,EAFEC,KACAC,EAAiBC,SAASC,OAAOC,UAAU,GAAGC,MAAM,KAElD3P,EAAW,EAAGuP,EAAMvP,KAAMA,EAEjCsP,GADAD,EAAOE,EAAMvP,GAAG2P,MAAM,MACX,IAAMN,EAAK,GAEvB,OAAOC,GAITsH,EAzCA,GAAarc,EAAAqc,WAAUA,EAFV,CAAAtc,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCAV,SAAUA,IAAI,SAAAC,GAEb,IAAAgd,EAAA,WAmBC,SAAAA,KACD,OAlBeA,EAAA/B,KAAd,SAAmB/S,GAElB,OADIA,GAASA,EAAQP,YACd,MAGMqV,EAAAjM,SAAd,SAAuBxJ,OAAiB,IAAAoB,KAAA/I,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA+I,EAAA/I,EAAA,GAAAC,UAAAD,GACvC,IAAMqB,EAAe,IAAIiF,IAAIgI,OAG7B,OAFAjN,EAAE2H,WAAUzI,MAAZc,EAAgB0H,GACZpB,GAAStG,EAAEsG,UACRtG,GAGM+b,EAAAC,OAAd,SAAqB1V,EAAiBW,GAErC,OADIX,GAAWW,GAASA,EAAQX,UACzBW,GAIT8U,EApBA,GAAahd,EAAAgd,YAAWA,EAFX,CAAAjd,EAAAC,OAAAD,EAAAC,UAAd,CAAUD,MAAAA,UCAV,SAAUA,IAAI,SAAAmd,GAEb,IAAO/X,EAAkBpF,EAAIyE,MAAMW,gBAEnCgY,EAAA,WAQC,SAAAA,IACCvY,KAAKwY,YAAa,EAElBxY,KAAKyY,aAAe,EACpBzY,KAAK0Y,WAAa,EAElB1Y,KAAK2Y,kBACL3Y,KAAK4Y,mBAAqB,EAE1B5Y,KAAK6Y,oBACL7Y,KAAK8Y,gBAEL9Y,KAAK+Y,iBACL/Y,KAAKgZ,qBAELhZ,KAAKkG,gBAAkB,IAAI3F,EAsO7B,OAzNQgY,EAAAtY,UAAAgZ,kBAAP,SAAyBC,GACxB,OAAOlZ,KAAKmZ,SAAS,cAAeD,OAG9BX,EAAAtY,UAAAmZ,oBAAP,SAA2BF,GAC1B,OAAOlZ,KAAKmZ,SAAS,gBAAiBD,OAe/BX,EAAAtY,UAAAkZ,SAAR,SAAiBrZ,EAAaoZ,EAAYG,GACzC,GAAIrZ,KAAK8Y,aAAaI,GAAM,OAAOlZ,KAAK8Y,aAAaI,GAAKI,GAE1D,IAAMnJ,EAAoB,IAAIoJ,EAS9B,OARApJ,EAAMmJ,GAAKE,OAAOjB,EAAYe,IAC9BnJ,EAAMrQ,KAAOA,EACbqQ,EAAM+I,IAAMA,EACZ/I,EAAMkJ,MAAQA,EACdrZ,KAAK2Y,eAAe7X,KAAKqP,GACzBnQ,KAAK6Y,iBAAiB1I,EAAMmJ,IAAMnJ,EAClCnQ,KAAK8Y,aAAa3I,EAAM+I,KAAO/I,IAC7BoI,EAAYe,GACPnJ,EAAMmJ,IAGPf,EAAAtY,UAAAwZ,KAAP,WACKzZ,KAAKwY,aACTxY,KAAKwY,YAAa,EAClBxY,KAAK4Y,mBAAqB,EAC1B5Y,KAAKyJ,SAGE8O,EAAAtY,UAAAwJ,KAAR,WAAA,IAAAtH,EAAAnC,KAQC,GAPAA,KAAKyY,aAAezY,KAAK4Y,kBAAoB,EAC7C5Y,KAAK0Y,WAAa1Y,KAAK2Y,eAAezd,OAElC8E,KAAKyY,aAAe,GACvBzY,KAAKkG,gBAAgB/E,cAAc,IAAImX,EAAAoB,iBAAiBpB,EAAAoB,iBAAiBC,SAAU3Z,KAAMA,KAAKyY,aAAezY,KAAK0Y,WAAY1Y,KAAKyY,aAAczY,KAAK0Y,aAGnJ1Y,KAAKyY,aAAezY,KAAK0Y,WAAY,CACxC1Y,KAAK4Y,oBACL,IAAMgB,EAAoB5Z,KAAK2Y,eAAe3Y,KAAK4Y,mBAInD,OAHAgB,EAAMC,WAAY,EAClBD,EAAME,gBAAiB,EACvBhf,MAAM,6BAAoC8e,EAAMV,IAAM,SAAWU,EAAM9Z,KAAO,KACtE8Z,EAAM9Z,MAIb,IAAK,cACJia,OAAOC,QACNJ,EAAMV,IACN,SAACnZ,GACA6Z,EAAMC,WAAY,EAClBD,EAAME,gBAAiB,EACvBF,EAAMK,QAAUla,EACZ6Z,EAAMP,MAAMa,QACfN,EAAMP,MAAMa,OAAOna,GACpBoC,EAAKsH,SAGP,MAID,IAAK,gBACJ,IAAIyP,EAAaU,EAAMV,IAEjBiB,GAD6B,IAAIC,MAAMC,eACRZ,KACpCP,EACA,SAACiB,GACAP,EAAMC,WAAY,EAClBD,EAAME,gBAAiB,EACvBF,EAAMK,QAAUE,EACZP,EAAMP,MAAMa,QACfN,EAAMP,MAAMa,OAAOC,GACpBhY,EAAKsH,QAEN,SAAC7J,KAED,SAACA,GACAga,EAAMC,WAAY,EAClBD,EAAME,gBAAiB,EACnBF,EAAMP,MAAMiB,SACfV,EAAMP,MAAMiB,QAAQ1a,EAAME,KAAO,MAAQF,EAAMjE,SAChDwG,EAAKsH,SAGPzJ,KAAK+Y,cAAca,EAAMV,KAAOiB,EAChCna,KAAKgZ,kBAAkBY,EAAMN,IAAMa,EACnC,MA+CD,QACCna,KAAKyJ,aAGPzJ,KAAKwY,YAAa,EAClBxY,KAAK2Y,kBACL3Y,KAAK4Y,mBAAqB,EAC1B5Y,KAAKkG,gBAAgB/E,cAAc,IAAImX,EAAAoB,iBAAiBpB,EAAAoB,iBAAiB5X,SAAU9B,KAAMA,KAAKyY,aAAezY,KAAK0Y,WAAY1Y,KAAKyY,aAAczY,KAAK0Y,cAIjJH,EAAAtY,UAAAsa,sBAAP,SAA6B5Z,GAC5BX,KAAKkG,gBAAgBzF,iBAAiB6X,EAAAoB,iBAAiBC,SAAUhZ,IAG3D4X,EAAAtY,UAAAua,yBAAP,SAAgC7Z,GAC/BX,KAAKkG,gBAAgBnF,oBAAoBuX,EAAAoB,iBAAiBC,SAAUhZ,IAG9D4X,EAAAtY,UAAAwa,wBAAP,SAA+B9Z,GAC9BX,KAAKkG,gBAAgBzF,iBAAiB6X,EAAAoB,iBAAiB5X,SAAUnB,IAG3D4X,EAAAtY,UAAAya,2BAAP,SAAkC/Z,GACjCX,KAAKkG,gBAAgBnF,oBAAoBuX,EAAAoB,iBAAiB5X,SAAUnB,IAG9D4X,EAAAtY,UAAA0a,kBAAP,SAAyBC,GACxB,OAAO5a,KAAK6Y,iBAAiB+B,IAIvBrC,EAAAtY,UAAA4a,cAAP,SAAqB3B,GACpB,OAAOlZ,KAAK8Y,aAAaI,IAanBX,EAAAtY,UAAA4Z,UAAP,WAA6B,OAAO7Z,KAAKwY,YAGlCD,EAAAtY,UAAA6a,gBAAP,WAAkC,OAAO9a,KAAKyY,cAGvCF,EAAAtY,UAAA8a,cAAP,WAAgC,OAAO/a,KAAK0Y,YAGrCH,EAAAtY,UAAA+a,iBAAP,SAAwB9B,GAA4B,OAAOlZ,KAAK+Y,cAAcG,IAGvEX,EAAAtY,UAAAgb,qBAAP,SAA4BC,GAAkC,OAAOlb,KAAKgZ,kBAAkBkC,IAU7E3C,EAAAe,GAAY,EAC5Bf,EA7PA,GAAaD,EAAAC,YAAWA,EAmQxB,IAAAgB,EAAA,WAaA,OAZC,WACCvZ,KAAK6Z,WAAY,EACjB7Z,KAAK8Z,gBAAiB,GAHxB,GAAaxB,EAAAiB,YAAWA,EAvQX,CAAApe,EAAAggB,SAAAhgB,EAAAggB,YAAd,CAAUhgB,MAAAA,UCAV,SAAUA,IAAI,SAAAggB,GAEb,IAEAzB,EAAA,SAAAjY,GAsBC,SAAAiY,EAAYhZ,EAAkBgB,EAAwB0Z,EAAqBC,EAAwB3C,EAAuBuB,QAA5F,IAAAvY,IAAAA,EAAA,WAAwB,IAAA0Z,IAAAA,EAAA,QAAqB,IAAAC,IAAAA,EAAA,QAAwB,IAAA3C,IAAAA,EAAA,QAAuB,IAAAuB,IAAAA,EAAA,MAA1H,IAAA9X,EACCV,EAAAL,KAAApB,KAAMU,EAAWgB,IAAY1B,YAC7BmC,EAAKiZ,SAAWA,EAChBjZ,EAAKkZ,YAAcA,EACnBlZ,EAAKuW,WAAaA,EAClBvW,EAAK8X,QAAUA,IAmCjB,OA9DsCtY,UAAA+X,EAAAjY,GAwC9BiY,EAAAzZ,UAAA2B,MAAP,WACC,OAAO,IAAI8X,EAAiB1Z,KAAKE,UAAWF,KAAKG,YAAaH,KAAKob,SAAUpb,KAAKqb,YAAarb,KAAK0Y,WAAY1Y,KAAKia,UAG/GP,EAAAzZ,UAAA4B,SAAP,WACC,MAAO,6BAA+B7B,KAAKE,UAAY,gBAAkBF,KAAKob,SAAW,mBAAqBpb,KAAKqb,YAAc,kBAAoBrb,KAAK0Y,YArCpJgB,EAAAC,SAAkB,WAClBD,EAAA5X,SAAkB,WAClB4X,EAAA4B,MAAe,QAoDvB5B,EA9DA,CAFeve,EAAIyE,MAAMC,OAEZsb,EAAAzB,iBAAgBA,EAJhB,CAAAve,EAAAggB,SAAAhgB,EAAAggB,YAAd,CAAUhgB,MAAAA,UCAV,SAAUA,IAAI,SAAAogB,GAEb,IAEAC,EAAA,SAAA/Z,GAQC,SAAA+Z,EAAYC,QAAA,IAAAA,IAAAA,EAAA,MAAZ,IAAAtZ,EACCV,EAAAL,KAAApB,OAAOA,YACPmC,EAAKsZ,KAAOA,EACZtZ,EAAKuZ,gBAAiB,EACtBvZ,EAAKwZ,eAAgB,EACrBxZ,EAAKyZ,SAAU,EACfzZ,EAAK0Z,WAAY,EACjB1Z,EAAK2Z,SAAU,EACf3Z,EAAK4Z,UAAW,EAChB5Z,EAAK6Z,kBAAmB,EACxB7Z,EAAK8Z,KAAO,GACZ9Z,EAAKmX,GAAKkC,EAAKlC,GAEfkC,EAAKU,UAAUV,EAAKlC,IAAMnX,IACxBqZ,EAAKlC,KA2MT,OAjO4C3X,UAAA6Z,EAAA/Z,GAmCpC+Z,EAAAvb,UAAAkc,WAAP,WACKnc,KAAK0b,gBAAkB1b,KAAK2b,gBAChC3b,KAAK0b,gBAAiB,EACtB1b,KAAKyb,KAAOzb,KAAKoc,iBACjBtgB,WAAWkE,KAAKic,MAAQjc,KAAM,gBAAiBA,KAAKyb,MACpDzb,KAAKqc,MAAK,GACVrc,KAAK0b,gBAAiB,EACtB1b,KAAK2b,eAAgB,IAGfH,EAAAvb,UAAAqc,MAAP,WACKtc,KAAK4b,UACT9f,WAAWkE,KAAKic,MAAQjc,KAAM,gDAAiDA,KAAK2b,eACpF3b,KAAKuc,YACLvc,KAAK4b,SAAU,IAGTJ,EAAAvb,UAAAuc,SAAP,WACCxc,KAAKyc,gBAGCjB,EAAAvb,UAAAyc,KAAP,SAAYC,QAAA,IAAAA,IAAAA,GAAA,GACP3c,KAAK8b,SACT9b,KAAK4c,eAAeD,GAAeha,WAG7B6Y,EAAAvb,UAAAoc,KAAP,SAAYM,QAAA,IAAAA,IAAAA,GAAA,GACN3c,KAAK8b,SACV9b,KAAK6c,eAAeF,GAAeha,WAG7B6Y,EAAAvb,UAAA2c,eAAP,SAAsBD,GAAtB,IAAAxa,EAAAnC,UAAsB,IAAA2c,IAAAA,GAAA,GACrB,IAAMrZ,EAAqB,IAAIhC,IAAIgI,OA6BnC,OA5BAhG,EAAQU,WACP,IAAI1C,IAAIwD,KAAK,WACR3C,EAAK2Z,UACThgB,WAAWqG,EAAK8Z,MAAQ9Z,EAAM,yDAA0DA,EAAKwZ,eAC7FlgB,UAAU0G,EAAK8Z,MAAQ9Z,EAAM,mDAAoDA,EAAKyZ,SACtFzZ,EAAK2Z,SAAU,EACf3Z,EAAK0Z,WAAY,EACjB1Z,EAAK4Z,UAAW,EAEZ5Z,EAAK2a,cACR3a,EAAK2a,YAAY/Z,YACjBZ,EAAK2a,YAAc,MAEhB3a,EAAK4a,cACR5a,EAAK4a,YAAYha,YACjBZ,EAAK4a,YAAc,MAGpB5a,EAAK2a,YAAcxZ,EACnBA,EAAQc,cACPjC,EAAK6a,SAAS7a,EAAKsZ,KAAMkB,GACzB,IAAIrb,IAAIwD,KAAK,WACZ3C,EAAK2a,YAAc,KACnB3a,EAAK0Z,WAAY,SAKdvY,GAGDkY,EAAAvb,UAAA4c,eAAP,SAAsBF,GAAtB,IAAAxa,EAAAnC,UAAsB,IAAA2c,IAAAA,GAAA,GACrB,IAAMrZ,EAAqB,IAAIhC,IAAIgI,OA+BnC,OA9BAhG,EAAQU,WACP,IAAI1C,IAAIwD,KAAK,WACP3C,EAAK2Z,UACL3Z,EAAKuZ,iBACT5f,WAAWqG,EAAK8Z,MAAQ9Z,EAAM,yDAA0DA,EAAKwZ,eAC7FlgB,UAAU0G,EAAK8Z,MAAQ9Z,EAAM,mDAAoDA,EAAKyZ,UAEvFzZ,EAAK2Z,SAAU,EACf3Z,EAAK0Z,WAAY,EACjB1Z,EAAK4Z,UAAW,EAEZ5Z,EAAK2a,cACR3a,EAAK2a,YAAY/Z,YACjBZ,EAAK2a,YAAc,MAEhB3a,EAAK4a,cACR5a,EAAK4a,YAAYha,YACjBZ,EAAK4a,YAAc,MAGpB5a,EAAK4a,YAAczZ,EACnBA,EAAQc,cACPjC,EAAK8a,SAAS9a,EAAKsZ,KAAMkB,GACzB,IAAIrb,IAAIwD,KAAK,WACZ3C,EAAK4a,YAAc,KACnB5a,EAAK4Z,UAAW,SAKbzY,GAGDkY,EAAAvb,UAAAid,kBAAP,WACC,OAAOld,KAAK0b,gBAGNF,EAAAvb,UAAAkd,iBAAP,WACC,OAAOnd,KAAK2b,eAGNH,EAAAvb,UAAAmd,WAAP,WACC,OAAOpd,KAAK4b,SAGNJ,EAAAvb,UAAAod,aAAP,WACC,OAAOrd,KAAK6b,WAGNL,EAAAvb,UAAAqd,WAAP,WACC,OAAOtd,KAAK8b,SAGNN,EAAAvb,UAAAsd,YAAP,WACC,OAAOvd,KAAK+b,UAGNP,EAAAvb,UAAAud,YAAP,WACC,OAAQxd,KAAK8b,SAGPN,EAAAvb,UAAAwd,QAAP,WACC,OAAOzd,KAAKyb,MAGND,EAAAvb,UAAAyd,oBAAP,WACC,OAAO1d,KAAKgc,kBAGNR,EAAAvb,UAAA0d,oBAAP,SAA2BnQ,GAC1BxN,KAAKgc,iBAAmBxO,GAGlBgO,EAAAvb,UAAA2d,QAAP,WACC,OAAO5d,KAAKic,MAGNT,EAAAvb,UAAA4d,QAAP,SAAerQ,GACdxN,KAAKic,KAAOzO,GAiBCgO,EAAAsC,YAAd,SAA0BxE,GACzB,OAAOkC,EAAKU,UAAU5C,IA0BRkC,EAAAlC,GAAY,EACZkC,EAAAU,aAChBV,EAjOA,CAFyBrgB,EAAIyE,MAAMW,iBAEbgb,EAAAC,KAAIA,EAJb,CAAArgB,EAAAsgB,OAAAtgB,EAAAsgB,UAAd,CAAUtgB,MAAAA,UCAV,SAAUA,IAAI,SAAA4iB,GAEb,IAAAC,EAAA,WA4FC,SAAAA,KACD,OArFgBA,EAAA7B,WAAf,WACC,IAAInc,KAAK2b,cAAT,CACA3b,KAAK2b,eAAgB,EAErB,IAAMsC,EAAWtY,OAAOuY,UAAUC,UAAUC,cAE5Cpe,KAAKqe,UAAqC,GAAzBJ,EAAErR,QAAQ,aAA2C,GAAvBqR,EAAErR,QAAQ,WAC/B,GAAtBqR,EAAErR,QAAQ,UACgB,GAAzBqR,EAAErR,QAAQ,aAA4C,GAAxBqR,EAAErR,QAAQ,YACf,GAAzBqR,EAAErR,QAAQ,aAA4C,GAAxBqR,EAAErR,QAAQ,YACjB,GAAxBqR,EAAErR,QAAQ,YACY,GAAtBqR,EAAErR,QAAQ,UACgB,GAA1BqR,EAAErR,QAAQ,YAEd5M,KAAKse,UAAqC,GAAzBL,EAAErR,QAAQ,aAA2C,GAAvBqR,EAAErR,QAAQ,WAC7B,GAAxBqR,EAAErR,QAAQ,YACY,GAAtBqR,EAAErR,QAAQ,UACgB,GAAzBqR,EAAErR,QAAQ,aAA4C,GAAxBqR,EAAErR,QAAQ,YACf,GAAzBqR,EAAErR,QAAQ,aAA4C,GAAxBqR,EAAErR,QAAQ,YACb,GAA5BqR,EAAErR,QAAQ,cAEd5M,KAAKue,WAAave,KAAKqe,WAAare,KAAKse,SAEzCte,KAAKwe,OAA8B,GAAtBP,EAAErR,QAAQ,UAAyC,GAAxBqR,EAAErR,QAAQ,YAAyC,GAAtBqR,EAAErR,QAAQ,QAC/E5M,KAAKye,WAAqC,GAAzBR,EAAErR,QAAQ,aAA4C,GAAxBqR,EAAErR,QAAQ,UAEzD5M,KAAK0e,SAAkD,GAAvCthB,KAAKuhB,MAAMhZ,OAAOiZ,oBAGrBZ,EAAAa,aAAd,WAEC,OADA7e,KAAKmc,aACEnc,KAAKue,WAGCP,EAAAc,YAAd,WAEC,OADA9e,KAAKmc,aACEnc,KAAKqe,UAGCL,EAAAe,YAAd,WAEC,OADA/e,KAAKmc,aACEnc,KAAKse,UAGCN,EAAAgB,SAAd,WAEC,OADAhf,KAAKmc,aACEnc,KAAKwe,OAGCR,EAAAiB,aAAd,WAEC,OADAjf,KAAKmc,aACEnc,KAAKye,WAGCT,EAAAkB,YAAd,WAEC,OADAlf,KAAKmc,aACEnc,KAAK0e,UAsBEV,EAAArC,eAAwB,EAOxCqC,EA7FA,GAAaD,EAAAC,WAAUA,EAFV,CAAA7iB,EAAA4iB,UAAA5iB,EAAA4iB,aAAd,CAAU5iB,MAAAA,UCAV,SAAUA,IAAI,SAAA4iB,GAEb,IAAAoB,EAAA,WAsHC,SAAAA,KACD,OAxGeA,EAAAC,KAAd,SAAmBxX,EAAY4F,EAAW6R,GACzC,QADyC,IAAAA,IAAAA,GAAoB,IACxDF,EAAaG,cAAe,OAAO,EACxC,IAAMC,GAA8C/R,MAAMgS,KAAKC,UAAUjS,GAAQ6R,UAAWA,GAE5F,OADAK,aAAaC,QAAQ/X,EAAK4X,KAAKC,UAAUF,KAClC,GASMJ,EAAAS,aAAd,SAA2BhY,EAAY4F,EAAWnE,QAAA,IAAAA,IAAAA,GAAuB,GACxE,IAAMgW,EAAmBhW,EAAe,GAAI,IAAI/B,MAAOvB,UAAYsD,GAAe,EAClF,OAAO8V,EAAaC,KAAKxX,EAAK4F,EAAO6R,IAQxBF,EAAA1F,KAAd,SAAmB7R,EAAYiY,GAC9B,QAD8B,IAAAA,IAAAA,EAAA,OACzBV,EAAaG,cAAe,OAAOO,EACxC,IAAMN,EAA4CC,KAAKM,MAAMJ,aAAaK,QAAQnY,IAClF,OAAI2X,EAECA,EAAOF,UAAY,GAElB,IAAI/X,MAAOvB,UAAYwZ,EAAOF,UAE1BG,KAAKM,MAAMP,EAAO/R,QAGzBkS,aAAaM,WAAWpY,GACjBiY,GAIDL,KAAKM,MAAMP,EAAO/R,OAInBqS,GAQKV,EAAAc,OAAd,SAAqBrY,GACfuX,EAAaG,eAClBI,aAAaM,WAAWpY,IAOXuX,EAAAG,YAAd,WACC,GAAiC,MAA7BH,EAAae,aAChB,IACCR,aAAaC,QAAQ,YAAa,aAClCD,aAAaM,WAAW,aACxBb,EAAae,cAAe,EAC3B,MAAOxL,GACRyK,EAAae,cAAe,EAG9B,OAAOf,EAAae,cAYPf,EAAAgB,eAAd,SAA6BC,EAAkBzQ,EAAkBC,EAAoBC,EAAoBxG,GACxG,YAD4B,IAAA+W,IAAAA,EAAA,QAAkB,IAAAzQ,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,QAAoB,IAAAC,IAAAA,EAAA,QAAoB,IAAAxG,IAAAA,EAAA,GACjGA,EAAwE,KAAxDwG,EAAkD,IAAvCD,EAAiC,IAAtBD,EAAgB,GAARyQ,MAavCjB,EAAAe,aAAuB,KAOvCf,EAvHA,GAAapB,EAAAoB,aAAYA,EAFZ,CAAAhkB,EAAA4iB,UAAA5iB,EAAA4iB,aAAd,CAAU5iB,MAAAA,UCAV,SAAUA,IAAI,SAAA4iB,GAGb,IAAOxd,EAAkBpF,EAAIyE,MAAMW,iBAGnC,SAAY8f,GACXA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,KAAA,IAAA,OAEAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,UAAA,IAAA,YAEAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,OAAA,IAAA,SAEAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OAEAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,UAAA,IAAA,YAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IAEAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,UAAA,IAAA,YAEAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UAEAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,IAAA,KAAA,MACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,OAAA,KAAA,SAEAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,IAAA,KAAA,MACAA,EAAAA,EAAA,IAAA,KAAA,MACAA,EAAAA,EAAA,IAAA,KAAA,MAEAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,WAAA,KAAA,aAEAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,OAAA,KAAA,SACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,KAAA,KAAA,OACAA,EAAAA,EAAA,OAAA,KAAA,SACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,YAAA,KAAA,cAEAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,MAAA,KAAA,QA9HD,CAAYtC,EAAAsC,UAAAtC,EAAAsC,aAqIZ,IAAAC,EAAA,WA2GC,SAAAA,KACD,OApGgBA,EAAAnE,WAAf,WACKnc,KAAK2b,gBACT3b,KAAK2b,eAAgB,EAErB3b,KAAKkG,gBAAkB,IAAI3F,IAGd+f,EAAAzJ,MAAd,WACC,IAAI7W,KAAK2W,UAAT,CACA3W,KAAK2W,WAAY,EAEjB3W,KAAKmc,aACLrhB,MAAM,sBAEN,IAAMylB,EAAiBxG,OAAOpU,QAC9B4a,EAAQC,GAAG,UAAWxgB,KAAKygB,sBAC3BF,EAAQC,GAAG,QAASxgB,KAAK0gB,sBAIZJ,EAAAjK,KAAd,WACC,GAAKrW,KAAK2W,UAAV,CACA3W,KAAK2W,WAAY,EAEjB3W,KAAKmc,aACLrhB,MAAM,qBAEN,IAAMylB,EAAiBxG,OAAOpU,QAC9B4a,EAAQI,IAAI,UAAW3gB,KAAKygB,sBAC5BF,EAAQI,IAAI,QAAS3gB,KAAK0gB,sBAGbJ,EAAA7f,iBAAd,SAA+BC,EAAkBC,GAChDX,KAAKmc,aACLnc,KAAKkG,gBAAgBzF,iBAAiBC,EAAWC,IAGpC2f,EAAAvf,oBAAd,SAAkCL,EAAkBC,GACnDX,KAAKmc,aACLnc,KAAKkG,gBAAgBnF,oBAAoBL,EAAWC,IAqCvC2f,EAAApJ,aAAd,WAAuC,OAAOlX,KAAK2W,WAGrC2J,EAAAM,mBAAd,WAA6C,OAAO5gB,KAAK6gB,gBAAkB,GAG7DP,EAAAQ,gBAAd,SAA8BC,GAA0B,OAA8C,MAAvC/gB,KAAKghB,sBAAsBD,IAI5ET,EAAAW,4BAAd,WAAsD,OAAOjhB,KAAKkhB,0BACpDZ,EAAAa,4BAAd,SAA0C9N,GAAwBrT,KAAKkhB,yBAA2B7N,GAzCnFiN,EAAAG,qBAAuB,SAAC7gB,GACtC,IAAMmhB,EAAiBnhB,EAAMmhB,QACoB,MAA7CT,EAAWU,sBAAsBD,IACpCT,EAAWU,sBAAsBD,IAAW,IAC1CT,EAAWO,gBACbP,EAAWpa,gBAAgB/E,cAAc,IAAI4c,EAAAqD,gBAAgBrD,EAAAqD,gBAAgBC,SAAUf,EAAY1gB,KACzF0gB,EAAWY,0BACrBZ,EAAWpa,gBAAgB/E,cAAc,IAAI4c,EAAAqD,gBAAgBrD,EAAAqD,gBAAgBC,SAAUf,EAAY1gB,KAItF0gB,EAAAI,mBAAqB,SAAC9gB,GACpC,IAAMmhB,EAAiBnhB,EAAMmhB,QACoB,MAA7CT,EAAWU,sBAAsBD,YAC7BT,EAAWU,sBAAsBD,KACtCT,EAAWO,gBACbP,EAAWpa,gBAAgB/E,cAAc,IAAI4c,EAAAqD,gBAAgBrD,EAAAqD,gBAAgBE,OAAQhB,EAAY1gB,MAepF0gB,EAAA3J,WAAoB,EAGpB2J,EAAAO,gBAAyB,EAGzBP,EAAAU,yBAKAV,EAAAY,0BAAmC,EAEnCZ,EAAA3E,eAAwB,EACxB2E,EAAAiB,WAAmB,KACnBjB,EAAAkB,eAAwB,EACxBlB,EAAApa,gBAAkC,KAOlDoa,EA5GA,GAAavC,EAAAuC,WAAUA,EA3IV,CAAAnlB,EAAA4iB,UAAA5iB,EAAA4iB,aAAd,CAAU5iB,MAAAA,UCAV,SAAUA,IAAI,SAAA4iB,GAEb,IAEAqD,EAAA,SAAA3f,GAqBC,SAAA2f,EAAY1gB,EAAkBgB,EAAwB+f,QAAxB,IAAA/f,IAAAA,EAAA,WAAwB,IAAA+f,IAAAA,EAAA,MAAtD,IAAAtf,EACCV,EAAAL,KAAApB,KAAMU,EAAWgB,IAAY1B,YAC7BmC,EAAKsf,YAAcA,EACnBtf,EAAKyF,IAAMzF,EAAKsf,YAAY7Z,IAC5BzF,EAAK4e,QAAU5e,EAAKsf,YAAYV,QAChC5e,EAAKuf,OAASvf,EAAKsf,YAAYC,OAC/Bvf,EAAKwf,QAAUxf,EAAKsf,YAAYE,QAChCxf,EAAKyf,SAAWzf,EAAKsf,YAAYG,WAqCnC,OAjEqCjgB,UAAAyf,EAAA3f,GAyC7B2f,EAAAnhB,UAAA2B,MAAP,WACC,OAAO,IAAIwf,EAAgBphB,KAAKE,UAAWF,KAAKG,YAAaH,KAAKyhB,cAG5DL,EAAAnhB,UAAA4B,SAAP,WACC,MAAO,4BAA8B7B,KAAKE,UAAY,WAAaF,KAAK4H,IAAM,eAAiB5H,KAAK+gB,QAAU,cAAgB/gB,KAAK0hB,OAAS,eAAiB1hB,KAAK2hB,QAAU,gBAAkB3hB,KAAK4hB,UAtC7LR,EAAAE,OAAgB,QAChBF,EAAAC,SAAkB,UAwD1BD,EAjEA,CAFejmB,EAAIyE,MAAMC,OAEZke,EAAAqD,gBAAeA,EAJf,CAAAjmB,EAAA4iB,UAAA5iB,EAAA4iB,aAAd,CAAU5iB,MAAAA,UCAV,SAAUA,IAAI,SAAA4iB,GAEb,IAAOxd,EAAkBpF,EAAIyE,MAAMW,gBAEnCshB,EAAA,WAgHC,SAAAA,KACD,OAzGgBA,EAAA1F,WAAf,WACKnc,KAAK2b,gBACT3b,KAAK2b,eAAgB,EAErB3b,KAAKkG,gBAAkB,IAAI3F,IAGdshB,EAAAhL,MAAd,WACK7W,KAAK2W,YACT3W,KAAK2W,WAAY,EAEjB3W,KAAKmc,aACLrhB,MAAM,yBAENif,OAAOpU,QAAQ6a,GAAG,SAAUxgB,KAAK8hB,qBACjC/H,OAAOpU,QAAQ6a,GAAG,SAAUxgB,KAAK8hB,qBACjC9hB,KAAKzE,UAGQsmB,EAAAxL,KAAd,WACMrW,KAAK2W,YACV3W,KAAK2W,WAAY,EAEjB3W,KAAKmc,aACLrhB,MAAM,wBAENif,OAAOpU,QAAQgb,IAAI,SAAU3gB,KAAK8hB,qBAClC/H,OAAOpU,QAAQgb,IAAI,SAAU3gB,KAAK8hB,uBAGrBD,EAAAtmB,MAAd,WACC,IAAMglB,EAAiBxG,OAAOpU,QAE9B3F,KAAK+hB,YAAcxB,EAAQhV,QAC3BvL,KAAKgiB,aAAezB,EAAQ/U,SAE5BxL,KAAKiiB,UAAY1B,EAAQ0B,YACzBjiB,KAAKkiB,aAAeliB,KAAKiiB,UAAYjiB,KAAKgiB,cAG7BH,EAAAphB,iBAAd,SAA+BC,EAAkBC,GAChDX,KAAKmc,aACLnc,KAAKkG,gBAAgBzF,iBAAiBC,EAAWC,IAGpCkhB,EAAA9gB,oBAAd,SAAkCL,EAAkBC,GACnDX,KAAKmc,aACLnc,KAAKkG,gBAAgBnF,oBAAoBL,EAAWC,IAGvCkhB,EAAAM,qBAAd,SAAmC5X,GAClC,OAAOA,EAAIvK,KAAKiiB,WAGHJ,EAAAO,0BAAd,SAAwC7X,GACvC,OAAOvK,KAAKmiB,qBAAqB5X,GAAKvK,KAAKgiB,cA2B9BH,EAAA3K,aAAd,WAAuC,OAAOlX,KAAK2W,WAGrCkL,EAAAQ,aAAd,WAAsC,OAAOriB,KAAKiiB,WAGpCJ,EAAAS,gBAAd,WAAyC,OAAOtiB,KAAKkiB,cAGvCL,EAAAU,eAAd,WAAwC,OAAOviB,KAAK+hB,aAGtCF,EAAAW,gBAAd,WAAyC,OAAOxiB,KAAKgiB,cAhCtCH,EAAAC,oBAAsB,SAACliB,GACrCiiB,EAActmB,QACdsmB,EAAc3b,gBAAgB/E,cAAc,IAAI4c,EAAA0E,mBAAmB1E,EAAA0E,mBAAmBC,OAAQb,EAAejiB,EAAOiiB,EAAcI,UAAWJ,EAAcK,aAAcL,EAAcE,YAAaF,EAAcG,gBAGpMH,EAAAc,oBAAsB,SAAC/iB,GACrCiiB,EAActmB,QACdsmB,EAAc3b,gBAAgB/E,cAAc,IAAI4c,EAAA0E,mBAAmB1E,EAAA0E,mBAAmBG,OAAQf,EAAejiB,EAAOiiB,EAAcI,UAAWJ,EAAcK,aAAcL,EAAcE,YAAaF,EAAcG,gBAcpMH,EAAAlL,WAAoB,EASpBkL,EAAAE,YAAqB,EAGrBF,EAAAG,aAAsB,EAEtBH,EAAAlG,eAAwB,EACxBkG,EAAA3b,gBAAkC,KAOlD2b,EAjHA,GAAa9D,EAAA8D,cAAaA,EAJb,CAAA1mB,EAAA4iB,UAAA5iB,EAAA4iB,aAAd,CAAU5iB,MAAAA,UCAV,SAAUA,IAAI,SAAA4iB,GAEb,IAEA0E,EAAA,SAAAhhB,GAqBC,SAAAghB,EAAY/hB,EAAkBgB,EAAwB+f,EAAiCQ,EAAsBC,EAAyBH,EAAwBC,QAAhI,IAAAtgB,IAAAA,EAAA,WAAwB,IAAA+f,IAAAA,EAAA,WAAiC,IAAAQ,IAAAA,EAAA,QAAsB,IAAAC,IAAAA,EAAA,QAAyB,IAAAH,IAAAA,EAAA,QAAwB,IAAAC,IAAAA,EAAA,GAA9J,IAAA7f,EACCV,EAAAL,KAAApB,KAAMU,EAAWgB,IAAY1B,YAC7BmC,EAAKsf,YAAcA,EACnBtf,EAAK8f,UAAYA,EACjB9f,EAAK+f,aAAeA,EACpB/f,EAAK4f,YAAcA,EACnB5f,EAAK6f,aAAeA,IAoCtB,OA/DwCrgB,UAAA8gB,EAAAhhB,GAwChCghB,EAAAxiB,UAAA2B,MAAP,WACC,OAAO,IAAI6gB,EAAmBziB,KAAKE,UAAWF,KAAKG,YAAaH,KAAKyhB,YAAazhB,KAAKiiB,UAAWjiB,KAAKkiB,aAAcliB,KAAK+hB,YAAa/hB,KAAKgiB,eAGtIS,EAAAxiB,UAAA4B,SAAP,WACC,MAAO,+BAAiC7B,KAAKE,UAAY,iBAAmBF,KAAKiiB,UAAY,oBAAsBjiB,KAAKkiB,aAAe,mBAAqBliB,KAAK+hB,YAAc,oBAAsB/hB,KAAKgiB,cArCpMS,EAAAC,OAAgB,SAChBD,EAAAG,OAAgB,SAsDxBH,EA/DA,CAFetnB,EAAIyE,MAAMC,OAEZke,EAAA0E,mBAAkBA,EAJlB,CAAAtnB,EAAA4iB,UAAA5iB,EAAA4iB,aAAd,CAAU5iB,MAAAA,UCAV,SAAU0nB,GAET,IAAOxnB,EAASF,IAAIC,KAAKC,OAGzBynB,EAAA,SAAArhB,GAQC,SAAAqhB,EAAY7G,GAAZ,IAAA9Z,EACCV,EAAAL,KAAApB,OAAOA,YACPmC,EAAK8Z,KAAOA,EACZ9Z,EAAKI,MAAQsgB,EAAAE,WAAWC,OACxB7gB,EAAKO,OAAS,KACdP,EAAK8gB,kBACL9gB,EAAK+gB,YAAc,EACnB/gB,EAAKghB,WAAY,EACjBhhB,EAAK+X,OAAS,KACd/X,EAAKihB,SAAW,KAChBjhB,EAAKkhB,SAAW,KAChBlhB,EAAKmhB,QAAU,KACfnhB,EAAKohB,SAAW,KAChBphB,EAAKqhB,UAAY,OA8TnB,OAnV2B7hB,UAAAmhB,EAAArhB,GAkCnBqhB,EAAA7iB,UAAAwjB,SAAP,SAAgBC,GACf,GAAIA,EAAO,CACV,IAAMC,EAAmBD,EAAMzH,KAC/B,IAAIjc,KAAKijB,eAAeU,GAMvB,QAHE3jB,KAAKkjB,YACPQ,EAAMhhB,OAAS1C,KACfA,KAAKijB,eAAeU,GAAaD,EAC1BA,EALProB,EAAOoZ,KAAK,WAAazU,KAAKic,KAAO,+CAAiD0H,EAAY,gCAQnGtoB,EAAOoZ,KAAK,WAAazU,KAAKic,KAAO,kDAEtC,OAAO,MAGD6G,EAAA7iB,UAAA2jB,YAAP,SAAmBF,GAClB,GAAIA,EAAO,CACV,IAAMC,EAAmBD,EAAMzH,KAC/B,GAAIjc,KAAKijB,eAAeU,GAIvB,QAHE3jB,KAAKkjB,YACPQ,EAAMhhB,OAAS,YACR1C,KAAKijB,eAAeU,GACpBD,EAEProB,EAAOoZ,KAAK,WAAazU,KAAKic,KAAO,kDAAoD0H,EAAY,4BAGtGtoB,EAAOoZ,KAAK,WAAazU,KAAKic,KAAO,qDAEtC,OAAO,MAGD6G,EAAA7iB,UAAA4jB,YAAP,SAAmBC,GAIlB,IAAK,IADDznB,EAFE0nB,KACA1W,EAAWyW,EAAS5oB,OAEjB2F,EAAW,EAAGA,EAAIwM,IAAKxM,GAC/BxE,EAAI2D,KAAKyjB,SAASK,EAASjjB,MAE1BkjB,EAAcjjB,KAAKzE,GAGrB,OAAO0nB,GAGDjB,EAAA7iB,UAAA+jB,eAAP,SAAsBF,GAIrB,IAAK,IADDznB,EAFE4nB,KACA5W,EAAWyW,EAAS5oB,OAEjB2F,EAAW,EAAGA,EAAIwM,IAAKxM,GAC/BxE,EAAI2D,KAAK4jB,YAAYE,EAASjjB,MAE7BojB,EAAgBnjB,KAAKzE,GAGvB,OAAO4nB,GAGDnB,EAAA7iB,UAAAikB,kBAAP,WACC,IACIR,EADEI,KAEN,IAAK,IAAIK,KAAQnkB,KAAKijB,gBACrBS,EAAQ1jB,KAAKijB,eAAekB,IACtBzhB,OAAS,KACfohB,EAAShjB,KAAK4iB,GAIf,OAFA1jB,KAAKijB,kBACLjjB,KAAKkjB,YAAc,EACZY,GAGDhB,EAAA7iB,UAAAmkB,SAAP,SAAgBV,GACf,QAAIA,GAC0E,MAAtE1jB,KAAKijB,eAA+B,iBAATS,EAAoBA,EAAQA,EAAMzH,OAM/D6G,EAAA7iB,UAAA2d,QAAP,WACC,OAAO5d,KAAKic,MAGN6G,EAAA7iB,UAAAyD,SAAP,WACC,OAAO1D,KAAKuC,OAGNugB,EAAA7iB,UAAAokB,aAAP,WACC,OAAOrkB,KAAKskB,WAGNxB,EAAA7iB,UAAA0D,UAAP,WACC,OAAO3D,KAAK0C,QAGNogB,EAAA7iB,UAAAskB,eAAP,SAAsBtI,GACrB,OAAOjc,KAAKijB,eAAehH,IAGrB6G,EAAA7iB,UAAAukB,eAAP,WACC,OAAOxkB,KAAKkjB,aAGNJ,EAAA7iB,UAAAwkB,WAAP,WACC,OAAIzkB,KAAK0C,OACD1C,KAAK0C,OAAO+hB,cAEnBppB,EAAOoZ,KAAK,WAAazU,KAAKic,KAAO,0EAE/B,OAGD6G,EAAA7iB,UAAAykB,QAAP,WACC,IAAMC,EAAuB3kB,KAAKykB,aAClC,GAAIE,EAAS,CAGZ,IAFA,IAAMC,GAAkB5kB,KAAKic,MACzB4I,EAAc7kB,KACX6kB,EAAQA,EAAMniB,QACpBkiB,EAAME,QAAQD,EAAM5I,MAErB,OAAO0I,EAAQI,oBAAoBH,GAIpC,OAFCvpB,EAAOoZ,KAAK,WAAazU,KAAKic,KAAO,uEAE/B,MAGD6G,EAAA7iB,UAAA+kB,UAAP,SAAiBC,GAChBjlB,KAAKykB,aAAaS,KAAKD,IAOjBnC,EAAA7iB,UAAAklB,MAAP,SAAaC,GAAb,IAAAjjB,EAAAnC,KACCA,KAAKolB,aAAeA,EACpBplB,KAAKuC,MAAQsgB,EAAAE,WAAWsC,QACxBrlB,KAAKmjB,WAAY,EACjB,IAAM7f,EAAqB,IAAIhC,IAAIgI,OAClC,WACCnH,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAWC,KAAMpjB,IACnD,IAAM9F,EAAuC,mBAAhB8F,EAAW,OAAkBA,EAAK+X,SAAW/X,EAAKqjB,aAC3EnpB,GAAGiH,EAAQc,cAAc/H,IAE9B,WACC8F,EAAKmiB,UAAYniB,EAAKI,MACtBJ,EAAKI,MAAQsgB,EAAAE,WAAWC,OACxB7gB,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAWG,cAAetjB,MAG9DmB,EAAQX,WAGFmgB,EAAA7iB,UAAAylB,QAAP,SAAeN,GAAf,IAAAjjB,EAAAnC,KACCA,KAAKolB,aAAeA,EACpBplB,KAAKuC,MAAQsgB,EAAAE,WAAW4C,UACxB3lB,KAAKmjB,WAAY,EACjB,IAAM7f,EAAqB,IAAIhC,IAAIgI,OAClC,WACCnH,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAWM,OAAQzjB,IACrD,IAAM9F,EAAyC,mBAAlB8F,EAAa,SAAkBA,EAAKihB,WAAajhB,EAAK0jB,eAC/ExpB,GAAGiH,EAAQc,cAAc/H,IAE9B,WACC8F,EAAKmiB,UAAYniB,EAAKI,MACtBJ,EAAKI,MAAQsgB,EAAAE,WAAWC,OACxB7gB,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAWQ,gBAAiB3jB,MAGhEmB,EAAQX,WAGFmgB,EAAA7iB,UAAA8lB,QAAP,SAAeX,GAAf,IAAAjjB,EAAAnC,KACCA,KAAKolB,aAAeA,EACpBplB,KAAKuC,MAAQsgB,EAAAE,WAAWiD,SACxBhmB,KAAKmjB,WAAY,EACjB,IAAM7f,EAAqB,IAAIhC,IAAIgI,OAClC,WACCnH,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAWW,OAAQ9jB,IACrD,IAAM9F,EAAyC,mBAAlB8F,EAAa,SAAkBA,EAAKkhB,WAAalhB,EAAK+jB,eAC/E7pB,GAAGiH,EAAQc,cAAc/H,IAE9B,WACC8F,EAAKmiB,UAAYniB,EAAKI,MACtBJ,EAAKI,MAAQsgB,EAAAE,WAAWC,OACxB7gB,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAWa,gBAAiBhkB,MAGhEmB,EAAQX,WAGFmgB,EAAA7iB,UAAAmmB,OAAP,SAAchB,GAAd,IAAAjjB,EAAAnC,KACCA,KAAKolB,aAAeA,EACpBplB,KAAKuC,MAAQsgB,EAAAE,WAAWsD,QACxBrmB,KAAKmjB,WAAY,EACjB,IAAM7f,EAAqB,IAAIhC,IAAIgI,OAClC,WACCnH,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAWgB,MAAOnkB,IACpD,IAAM9F,EAAwC,mBAAjB8F,EAAY,QAAkBA,EAAKmhB,UAAYnhB,EAAKokB,cAC7ElqB,GAAGiH,EAAQc,cAAc/H,IAE9B,WACC8F,EAAKmiB,UAAYniB,EAAKI,MACtBJ,EAAKI,MAAQsgB,EAAAE,WAAWC,OACxB7gB,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAWkB,eAAgBrkB,MAG/DmB,EAAQX,WAGFmgB,EAAA7iB,UAAAwmB,QAAP,SAAerB,GAAf,IAAAjjB,EAAAnC,KACCA,KAAKolB,aAAeA,EACpBplB,KAAKuC,MAAQsgB,EAAAE,WAAW2D,UACxB1mB,KAAKmjB,WAAY,EACjB,IAAM7f,EAAqB,IAAIhC,IAAIgI,OAClC,WACCnH,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAWqB,OAAQxkB,IACrD,IAAM9F,EAAyC,mBAAlB8F,EAAa,SAAkBA,EAAKohB,WAAaphB,EAAKykB,eAC/EvqB,GAAGiH,EAAQc,cAAc/H,IAE9B,WACC8F,EAAKmiB,UAAYniB,EAAKI,MACtBJ,EAAKI,MAAQsgB,EAAAE,WAAWC,OACxB7gB,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAWuB,gBAAiB1kB,MAGhEmB,EAAQX,WAGFmgB,EAAA7iB,UAAA6mB,SAAP,SAAgB1B,GAAhB,IAAAjjB,EAAAnC,KACCA,KAAKolB,aAAeA,EACpBplB,KAAKuC,MAAQsgB,EAAAE,WAAWgE,WACxB/mB,KAAKmjB,WAAY,EACjB,IAAM7f,EAAqB,IAAIhC,IAAIgI,OAClC,WACCnH,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAW0B,QAAS7kB,IACtD,IAAM9F,EAA0C,mBAAnB8F,EAAc,UAAkBA,EAAKqhB,YAAcrhB,EAAK8kB,gBACjF5qB,GAAGiH,EAAQc,cAAc/H,IAE9B,WACC8F,EAAKmiB,UAAYniB,EAAKI,MACtBJ,EAAKI,MAAQsgB,EAAAE,WAAWC,OACxB7gB,EAAKhB,cAAc,IAAI0hB,EAAAyC,WAAWzC,EAAAyC,WAAW4B,iBAAkB/kB,MAGjEmB,EAAQX,WAOCmgB,EAAA7iB,UAAAulB,WAAV,WACC,OAAO,IAAIlkB,IAAIS,SAGN+gB,EAAA7iB,UAAA4lB,aAAV,WACC,OAAO,IAAIvkB,IAAIS,SAGN+gB,EAAA7iB,UAAAimB,aAAV,WACC,OAAO,IAAI5kB,IAAIS,SAGN+gB,EAAA7iB,UAAAsmB,YAAV,WACC,OAAO,IAAIjlB,IAAIS,SAGN+gB,EAAA7iB,UAAA2mB,aAAV,WACC,OAAO,IAAItlB,IAAIS,SAGN+gB,EAAA7iB,UAAAgnB,cAAV,WACC,OAAO,IAAI3lB,IAAIS,SA6BjB+gB,EAnVA,CAFyB3nB,IAAIyE,MAAMW,iBAEtBsiB,EAAAC,MAAKA,EALnB,CAAUD,MAAAA,UCAV,SAAUA,GAET,IAEAyC,EAAA,SAAA7jB,GAgCC,SAAA6jB,EAAY5kB,EAAkBgB,eAAA,IAAAA,IAAAA,EAAA,MAC7BD,EAAAL,KAAApB,KAAMU,EAAWgB,IAAY1B,KA8B/B,OA/DgC2B,UAAA2jB,EAAA7jB,GA8CxB6jB,EAAArlB,UAAA2B,MAAP,WACC,OAAO,IAAI0jB,EAAWtlB,KAAKE,UAAWF,KAAKG,cAGrCmlB,EAAArlB,UAAA4B,SAAP,WACC,MAAO,uBAAyB7B,KAAKE,WA3CxBolB,EAAAC,KAAc,OACdD,EAAAM,OAAgB,SAChBN,EAAAW,OAAgB,SAChBX,EAAAgB,MAAe,QACfhB,EAAAqB,OAAgB,SAChBrB,EAAA0B,QAAiB,UAEjB1B,EAAAG,cAAuB,eACvBH,EAAAQ,gBAAyB,iBACzBR,EAAAa,gBAAyB,iBACzBb,EAAAkB,eAAwB,gBACxBlB,EAAAuB,gBAAyB,iBACzBvB,EAAA4B,iBAA0B,kBA2CzC5B,EA/DA,CAFenqB,IAAIyE,MAAMC,OAEZgjB,EAAAyC,WAAUA,EAJxB,CAAUzC,MAAAA,UCAV,SAAUA,GAET,IAAOxnB,EAASF,IAAIC,KAAKC,OAClBiZ,EAAcnZ,IAAIC,KAAKkZ,YAG9B6S,EAAA,SAAA1lB,GAQC,SAAA0lB,EAAYlL,QAAA,IAAAA,IAAAA,EAAA,IAAZ,IAAA9Z,EACCV,EAAAL,KAAApB,OAAOA,YAkZAmC,EAAAilB,yBAA2B,SAACxnB,GACnCuC,EAAKklB,aAAatmB,oBAAoB8hB,EAAAyC,WAAWG,cAAetjB,EAAKilB,0BACrEjlB,EAAKmiB,UAAYzB,EAAAE,WAAWsC,UAC1BljB,EAAKmlB,WACPnlB,EAAKolB,cAGEplB,EAAAqlB,2BAA6B,SAAC5nB,GACrCuC,EAAKklB,aAAatmB,oBAAoB8hB,EAAAyC,WAAWQ,gBAAiB3jB,EAAKqlB,4BACvErlB,EAAKmiB,UAAYzB,EAAAE,WAAW4C,YAC1BxjB,EAAKmlB,WACPnlB,EAAKolB,cAGEplB,EAAAslB,2BAA6B,SAAC7nB,GACrCuC,EAAKklB,aAAatmB,oBAAoB8hB,EAAAyC,WAAWa,gBAAiBhkB,EAAKslB,4BACvEtlB,EAAKmiB,UAAYzB,EAAAE,WAAWiD,WAC1B7jB,EAAKmlB,WACPnlB,EAAKolB,cAGEplB,EAAAulB,0BAA4B,SAAC9nB,GACpCuC,EAAKklB,aAAatmB,oBAAoB8hB,EAAAyC,WAAWkB,eAAgBrkB,EAAKulB,2BACtEvlB,EAAKmiB,UAAYzB,EAAAE,WAAWsD,UAC1BlkB,EAAKmlB,WACPnlB,EAAKolB,cAGEplB,EAAAwlB,2BAA6B,SAAC/nB,GACrCuC,EAAKklB,aAAatmB,oBAAoB8hB,EAAAyC,WAAWuB,gBAAiB1kB,EAAKwlB,4BACvExlB,EAAKmiB,UAAYzB,EAAAE,WAAW2D,YAC1BvkB,EAAKmlB,WACPnlB,EAAKolB,cAGEplB,EAAAylB,4BAA8B,SAAChoB,GACtCuC,EAAKklB,aAAatmB,oBAAoB8hB,EAAAyC,WAAW4B,iBAAkB/kB,EAAKylB,6BACxEzlB,EAAKmiB,UAAYzB,EAAAE,WAAWgE,aAC1B5kB,EAAKmlB,WACPnlB,EAAKolB,cAxbLplB,EAAK8Z,KAAOA,EACZ9Z,EAAK0lB,KAAO,IAAIhF,EAAAiF,KAAKC,UAAU5lB,GAC/BA,EAAKklB,aAAe,KAEpBllB,EAAK6lB,aACL7lB,EAAK8lB,eAAiB,EACtB9lB,EAAKmiB,UAAYzB,EAAAE,WAAWC,OAC5B7gB,EAAKmlB,YAAc,EACnBnlB,EAAK+lB,YAAc,EACnB/lB,EAAKijB,aAAe,OAsctB,OAzdkCzjB,UAAAwlB,EAAA1lB,GAgC1B0lB,EAAAlnB,UAAA4W,MAAP,WACCxb,EAAOmZ,QAAQ,mCACfxU,KAAKklB,KAAK,MAGJiC,EAAAlnB,UAAAilB,KAAP,SAAYD,GAIX,GAHAA,EAAOjlB,KAAKmoB,YAAYlD,IAGpBjlB,KAAKolB,cAAgBplB,KAAKolB,aAAagD,sBAAwBnD,EAAnE,CAKA,IAAIoD,KASJ,IAPCA,GAD0B,GAAvBroB,KAAKioB,cACOjoB,KAAKsoB,gBAAgBtoB,KAAKgoB,UAAUhoB,KAAKioB,eAAevD,UAAWO,IAGlE,IAAIpC,EAAAiF,KAAKS,SAAS,IAAK,KAIvBrtB,OAAS,EAAG,CAC5B,IAAMstB,EAAoD,MAArBxoB,KAAKolB,aAErCoD,GAMJntB,EAAOmZ,QAAQ,0BACfnZ,EAAOmZ,QAAQ,oBAAsBxU,KAAKioB,eAC1CjoB,KAAKgoB,UAAYhoB,KAAKgoB,UAAU5iB,MAAM,EAAGpF,KAAKioB,cAAgB,GAAG9jB,OAAOkkB,EAAajjB,MAAM,IAC3FpF,KAAKyoB,aAAazoB,KAAKgoB,WACvBhoB,KAAK0oB,cAAc1oB,KAAKgoB,aATxBhoB,KAAKioB,cAAgB,EACrBjoB,KAAKsnB,WAAa,IAChBtnB,KAAKkoB,WACPloB,KAAKgoB,UAAYK,GASlBroB,KAAKolB,aAAe,IAAIvC,EAAA8F,kBAAkB3oB,KAAKkoB,WAAYloB,KAAKgoB,UAAUhoB,KAAKioB,eAAevD,UAAW1kB,KAAKgoB,UAAUhoB,KAAKgoB,UAAU9sB,OAAS,GAAGwpB,WAE9I8D,GACJxoB,KAAKmB,cAAc,IAAI0hB,EAAA+F,kBAAkB/F,EAAA+F,kBAAkBC,eAAgB7oB,OAG5EA,KAAKunB,gBAIAJ,EAAAlnB,UAAAkoB,YAAP,SAAmBlD,GAEH,KAAXA,EAAK,KAEPA,EADGjlB,KAAKqnB,aACDrnB,KAAKqnB,aAAa3C,UAAY,IAAMO,EAEpC,IAAMA,GAOf,IAAK,IAFCL,EAAiBK,EAAKzU,MAAM,KAC5BsY,KACGjoB,EAAW,EAAGA,EAAI+jB,EAAM1pB,SAAU2F,EAAG,CAC7C,IAAMkoB,EAAcnE,EAAM/jB,GACd,IAARkoB,IACQ,KAARA,IACQ,MAARA,EAIJD,EAAWhoB,KAAKioB,GAHfD,EAAWE,QAMb,MAAO,IAAMF,EAAW3T,KAAK,MAGvBgS,EAAAlnB,UAAAgpB,WAAP,SAAkBhE,EAAaiE,QAAA,IAAAA,IAAAA,GAAA,GAK9B,IAAK,IAJDC,GAAkB,EAChBvE,EAAiB5kB,KAAKopB,oBAAoBnE,GAC1C5X,EAAWuX,EAAM1pB,OACnB2pB,EAAc7kB,KAAK6nB,KACdhnB,EAAW,EAAGA,EAAIwM,IAAKxM,EAAG,CAClC,IAAMwoB,EAAczE,EAAM/jB,GACtBA,GAAKwM,EAAI,EACRwX,EAAMT,SAASiF,GAClBhuB,EAAOoZ,KAAK,kBAAoBzU,KAAKic,KAAO,2CAA6CgJ,EAAO,wBAEhGJ,EAAQA,EAAMpB,SAAS,IAAIZ,EAAAC,MAAMuG,IACjCF,GAAU,GAIVtE,EADGA,EAAMT,SAASiF,GACVxE,EAAMN,eAAe8E,GAErBxE,EAAMpB,SAAS,IAAIZ,EAAAC,MAAMuG,IAIpC,OAAOF,EAAUtE,EAAQ,MAGnBsC,EAAAlnB,UAAA2d,QAAP,WACC,OAAO5d,KAAKic,MAGNkL,EAAAlnB,UAAAqpB,QAAP,WACC,OAAOtpB,KAAK6nB,MAGNV,EAAAlnB,UAAAspB,eAAP,SAAsBtE,GAIrB,IAAK,IAHCL,EAAiB5kB,KAAKopB,oBAAoBnE,GAC1C5X,EAAWuX,EAAM1pB,OACnB2pB,EAAc7kB,KAAK6nB,KACdhnB,EAAW,EAAGA,EAAIwM,IAAKxM,EAC/BgkB,EAAQA,EAAMN,eAAeK,EAAM/jB,IAEpC,OAAOgkB,GAGDsC,EAAAlnB,UAAAmpB,oBAAP,SAA2BnE,GAC1B,MAAe,KAARA,GAAe,IAAMjlB,KAAKmoB,YAAYlD,GAAMzU,MAAM,MAGnD2W,EAAAlnB,UAAAupB,qBAAP,SAA4B5E,GAC3B,OAAOA,EAAM1pB,OAAS,GAGhBisB,EAAAlnB,UAAA8kB,oBAAP,SAA2BH,GAC1B,OAAuB,GAAhBA,EAAM1pB,OAAc,IAAsB,GAAhB0pB,EAAM1pB,OAAe,IAAM0pB,EAAM,GAAMA,EAAMzP,KAAK,MAG5EgS,EAAAlnB,UAAAqoB,gBAAR,SAAwBmB,EAAsBC,GAC7C,GAAID,GAAiBC,EAEpB,OADAruB,EAAOoZ,KAAK,uEAAyEgV,EAAgB,QAItGpuB,EAAOmZ,QAAQ,0BAEf,IAAMwT,GACL,IAAInF,EAAAiF,KAAKS,SAASkB,EAAezpB,KAAKwpB,qBAAqBxpB,KAAKopB,oBAAoBK,MAG/EE,EAA0B3pB,KAAKopB,oBAAoBK,GACnDG,EAA4B5pB,KAAKopB,oBAAoBM,GAE3DruB,EAAOmZ,QAAQ,YACfnZ,EAAOmZ,QAAQ,yBAA2BiV,EAAgB,KAC1DpuB,EAAOmZ,QAAQ,yBAA2BkV,EAAkB,KAE5DruB,EAAOmZ,QAAQ,aACfnZ,EAAOmZ,QAAQ,mBAAqBmV,EAAezuB,OAAS,WAAayuB,EAAiB,KAC1FtuB,EAAOmZ,QAAQ,uBAAyBoV,EAAiB1uB,OAAS,OAAS0uB,EAAmB,KAG9F,IAEIC,EAFAC,EAAsB,EACtBC,KAEJ,GAAuB,KAAnBL,EACHI,GAAgB,EAChBC,KACAF,EAAc,QACR,CACN,OAAa,CACZ,GAAIF,EAAeG,IAAiBF,EAAiBE,GAG9C,GACJA,EACF,MAJAC,EAAajpB,KAAK6oB,EAAeG,MAC/BA,EAMJD,EAAc7pB,KAAK+kB,oBAAoBgF,GAGxC1uB,EAAOmZ,QAAQ,eACfnZ,EAAOmZ,QAAQ,sBAAwBqV,GACvCxuB,EAAOmZ,QAAQ,sBAAwBsV,GACvCzuB,EAAOmZ,QAAQ,iBAAmBuV,EAAa7uB,OAAS,QAAU6uB,EAAe,KAMhF,IAAK,IAFCnF,EAAiB+E,EAAexlB,SAClC6lB,EAAkBP,EACb5oB,EAAW8oB,EAAezuB,OAAS,EAAG2F,EAAIipB,EAAe,IAAKjpB,EAAG,CACzE+jB,EAAMoE,MAEN,IADM/D,EAAcjlB,KAAK+kB,oBAAoBH,KACjCoF,EAAU,CACfxU,EAAexV,KAAKwpB,qBAAqB5E,GAC/CoD,EAAUlnB,KAAK,IAAI+hB,EAAAiF,KAAKS,SAAStD,EAAMzP,IACvCwU,EAAW/E,GAKd,GAAI4E,GAAeH,GAAmBI,EAAe,EAAG,CAE3BA,GAAgB9B,EAAUA,EAAU9sB,OAAS,GAAG+uB,WAAapH,EAAAiF,KAAKoC,UAAUC,QAAUtH,EAAAiF,KAAKoC,UAAUE,OACjIpC,EAAUlnB,KAAK,IAAI+hB,EAAAiF,KAAKS,SAASsB,EAAaC,SAQ9C,IAAK,IAJClF,EAAiBmF,EAAa5lB,SAC9BkmB,EAAqBrC,EAAUA,EAAU9sB,OAAS,GACpD8uB,EAAkBK,EAAK3F,UAElB7jB,GADcwpB,EAAKJ,WACRH,EAAe,GAAGjpB,EAAI+oB,EAAiB1uB,SAAU2F,EAAG,CACvE,IAAMypB,EAAcV,EAAiB/oB,GACrC+jB,EAAM9jB,KAAKwpB,GACX,IAAMrF,EAAcjlB,KAAK+kB,oBAAoBH,GAC7C,GAAIK,GAAQ+E,EAAU,CACrB,IAAMxU,EAAexV,KAAKwpB,qBAAqB5E,GAC/CoD,EAAUlnB,KAAK,IAAI+hB,EAAAiF,KAAKS,SAAStD,EAAMzP,IAC3BA,EACZwU,EAAW/E,GAYd,OANAjlB,KAAKyoB,aAAaT,GAEd3sB,EAAOma,OAASlB,EAAYmB,SAC/BzV,KAAK0oB,cAAcV,GAGbA,GAGAb,EAAAlnB,UAAAwoB,aAAR,SAAqBT,GAIpB,IAAK,IADDtd,EAFE2C,EAAW2a,EAAU9sB,OACvBmvB,EAAqB,KAEhBxpB,EAAW,EAAGA,EAAIwM,IAAKxM,EAAG,CAElC,GADA6J,EAAQsd,EAAUnnB,GACdA,EAAI,EAAG,CACV,IAAMvE,EAAWoO,EAAMuf,WAAaI,EAAKJ,WACzCvf,EAAM6f,SAASjuB,EAAI,EAAIumB,EAAAiF,KAAKoC,UAAUM,QAAUluB,EAAI,EAAIumB,EAAAiF,KAAKoC,UAAUE,OAASvH,EAAAiF,KAAKoC,UAAUC,SAC/FE,EAAKI,OAAO/f,EAAMnC,WAEnB8hB,EAAO3f,IAIDyc,EAAAlnB,UAAAyoB,cAAR,SAAsBV,GACrB3sB,EAAOmZ,QAAQ,iBAEf,IAAK,IADCnH,EAAW2a,EAAU9sB,OAClB2F,EAAW,EAAGA,EAAIwM,IAAKxM,EAC/BxF,EAAOmZ,QAAQ,YAAc3T,EAAI,KAAOmnB,EAAUnnB,IAEnDxF,EAAOmZ,QAAQ,KAOR2S,EAAAlnB,UAAAsnB,WAAR,WAKC,GAJAzsB,MAAM,eAAiB+nB,EAAI6H,oBAAoB1qB,KAAKskB,YAIhDtkB,KAAKioB,eAAiBjoB,KAAKgoB,UAAU9sB,OAAQ,CAChDG,EAAOmZ,QAAQ,uCACf,IAAMmW,EAAuB3qB,KAAKolB,aAAawF,gBAO/C,OANA5qB,KAAKioB,cAAgBjoB,KAAKgoB,UAAU9sB,OAAS,EAC7C8E,KAAKmB,cAAc,IAAI0hB,EAAA+F,kBAAkB/F,EAAA+F,kBAAkBiC,kBAAmB7qB,YAC1E2qB,GAAiB3qB,KAAKolB,aAAawF,kBACtC5qB,KAAKskB,UAAYzB,EAAAE,WAAWC,OAC5BhjB,KAAKolB,aAAe,OAKtB,GAAIplB,KAAKqnB,aAAc,CACtB,IAAMyD,EAAgC9qB,KAAKgoB,UAAUhoB,KAAKioB,eAI1D,GAHAjoB,KAAKqnB,aAAernB,KAAKupB,eAAeuB,EAAgBpG,WAGpD1kB,KAAKgoB,UAAU9sB,OAAS,GAA2B,GAAtB8E,KAAKioB,cAIrC,OAHAntB,MAAM,mBAGFkF,KAAKskB,WAAazB,EAAAE,WAAWsD,SAAWrmB,KAAKqnB,aAAahD,gBAAkBxB,EAAAE,WAAWiD,UAC1F3qB,EAAOmZ,QAAQxU,KAAKsnB,WAAa,eAAiBtnB,KAAKqnB,aAAa3C,UAAY,KAChF1kB,KAAKqnB,aAAa5mB,iBAAiBoiB,EAAAyC,WAAWkB,eAAgBxmB,KAAK0nB,gCACnE1nB,KAAKqnB,aAAajB,OAAOpmB,KAAKolB,eAK3BplB,KAAKskB,WAAazB,EAAAE,WAAW4C,WAAcmF,EAAgBziB,SAAWwa,EAAAiF,KAAKoC,UAAUC,SAAWW,EAAgBziB,SAAWwa,EAAAiF,KAAKoC,UAAUE,UAS3IpqB,KAAKioB,mBACPjoB,KAAKunB,iBATHvnB,KAAKioB,cACP5sB,EAAOmZ,QAAQxU,KAAKsnB,WAAa,eAAiBtnB,KAAKqnB,aAAa3C,UAAY,KAChF1kB,KAAKqnB,aAAa5mB,iBAAiBoiB,EAAAyC,WAAWQ,gBAAiB9lB,KAAKwnB,iCACpExnB,KAAKqnB,aAAa3B,QAAQ1lB,KAAKolB,eAYjC,GAAIplB,KAAKioB,cAAgB,GAAKjoB,KAAKioB,cAAgBjoB,KAAKgoB,UAAU9sB,OAAS,EAAG,CAI7E,GAHAJ,MAAM,iBAGFkF,KAAKskB,WAAazB,EAAAE,WAAWsC,UAAYyF,EAAgBviB,WAAasa,EAAAiF,KAAKoC,UAAUC,SAAWW,EAAgBviB,WAAasa,EAAAiF,KAAKoC,UAAUM,SAI/I,OAHAnvB,EAAOmZ,QAAQxU,KAAKsnB,WAAa,eAAiBtnB,KAAKqnB,aAAa3C,UAAY,KAChF1kB,KAAKqnB,aAAa5mB,iBAAiBoiB,EAAAyC,WAAWG,cAAezlB,KAAKonB,+BAClEpnB,KAAKqnB,aAAalC,MAAMnlB,KAAKolB,cAK9B,GAAIplB,KAAKskB,WAAazB,EAAAE,WAAW2D,WAAaoE,EAAgBviB,WAAasa,EAAAiF,KAAKoC,UAAUE,OAIzF,OAHA/uB,EAAOmZ,QAAQxU,KAAKsnB,WAAa,eAAiBtnB,KAAKqnB,aAAa3C,UAAY,KAChF1kB,KAAKqnB,aAAa5mB,iBAAiBoiB,EAAAyC,WAAWuB,gBAAiB7mB,KAAK2nB,iCACpE3nB,KAAKqnB,aAAaZ,QAAQzmB,KAAKolB,cAKhC,GAAIplB,KAAKskB,WAAazB,EAAAE,WAAW4C,YAAcmF,EAAgBziB,SAAWwa,EAAAiF,KAAKoC,UAAUC,SAAWW,EAAgBziB,SAAWwa,EAAAiF,KAAKoC,UAAUE,QAK7I,QAJEpqB,KAAKioB,cACP5sB,EAAOmZ,QAAQxU,KAAKsnB,WAAa,eAAiBtnB,KAAKqnB,aAAa3C,UAAY,KAChF1kB,KAAKqnB,aAAa5mB,iBAAiBoiB,EAAAyC,WAAWQ,gBAAiB9lB,KAAKwnB,iCACpExnB,KAAKqnB,aAAa3B,QAAQ1lB,KAAKolB,cAKhC,GAAIplB,KAAKskB,WAAazB,EAAAE,WAAWgE,YAAc+D,EAAgBziB,SAAWwa,EAAAiF,KAAKoC,UAAUM,QAKxF,QAJExqB,KAAKioB,cACP5sB,EAAOmZ,QAAQxU,KAAKsnB,WAAa,eAAiBtnB,KAAKqnB,aAAa3C,UAAY,KAChF1kB,KAAKqnB,aAAa5mB,iBAAiBoiB,EAAAyC,WAAW4B,iBAAkBlnB,KAAK4nB,kCACrE5nB,KAAKqnB,aAAaP,SAAS9mB,KAAKolB,cAMlC,GAAIplB,KAAKioB,eAAiBjoB,KAAKgoB,UAAU9sB,OAAS,EAAG,CAIpD,GAHAJ,MAAM,qBAGFkF,KAAKskB,WAAazB,EAAAE,WAAWsC,UAAYyF,EAAgBviB,WAAasa,EAAAiF,KAAKoC,UAAUC,SAAWW,EAAgBviB,WAAasa,EAAAiF,KAAKoC,UAAUM,SAI/I,OAHAnvB,EAAOmZ,QAAQxU,KAAKsnB,WAAa,eAAiBtnB,KAAKqnB,aAAa3C,UAAY,KAChF1kB,KAAKqnB,aAAa5mB,iBAAiBoiB,EAAAyC,WAAWG,cAAezlB,KAAKonB,+BAClEpnB,KAAKqnB,aAAalC,MAAMnlB,KAAKolB,cAK9B,GAAIplB,KAAKskB,WAAazB,EAAAE,WAAWiD,SAKhC,QAJEhmB,KAAKioB,cACP5sB,EAAOmZ,QAAQxU,KAAKsnB,WAAa,eAAiBtnB,KAAKqnB,aAAa3C,UAAY,KAChF1kB,KAAKqnB,aAAa5mB,iBAAiBoiB,EAAAyC,WAAWa,gBAAiBnmB,KAAKynB,iCACpEznB,KAAKqnB,aAAatB,QAAQ/lB,KAAKolB,oBAMjCtqB,MAAM,cAGNkF,KAAKskB,UAAYzB,EAAAE,WAAWC,OAC5BhjB,KAAKqnB,aAAernB,KAAK6nB,KACzBxsB,EAAOmZ,QAAQxU,KAAKsnB,WAAa,eAAiBtnB,KAAKqnB,aAAa3C,UAAY,KAChF1kB,KAAKqnB,aAAa5mB,iBAAiBoiB,EAAAyC,WAAWG,cAAezlB,KAAKonB,0BAClEpnB,KAAKqnB,aAAalC,MAAMnlB,KAAKolB,eAkEhC+B,EAzdA,CAFyBhsB,IAAIyE,MAAMW,iBAEtBsiB,EAAAsE,aAAYA,EAN1B,CAAUtE,MAAAA,UCAV,SAAUA,GAET,IAEA+F,EAAA,SAAAnnB,GAqBC,SAAAmnB,EAAYloB,EAAkBgB,eAAA,IAAAA,IAAAA,EAAA,MAC7BD,EAAAL,KAAApB,KAAMU,EAAWgB,IAAY1B,KA8B/B,OApDuC2B,UAAAinB,EAAAnnB,GAmC/BmnB,EAAA3oB,UAAA2B,MAAP,WACC,OAAO,IAAIgnB,EAAkB5oB,KAAKE,UAAWF,KAAKG,cAG5CyoB,EAAA3oB,UAAA4B,SAAP,WACC,MAAO,8BAAgC7B,KAAKE,WAhC/B0oB,EAAAC,eAAwB,gBACxBD,EAAAiC,kBAA2B,mBA2C1CjC,EApDA,CAFeztB,IAAIyE,MAAMC,OAEZgjB,EAAA+F,kBAAiBA,EAJ/B,CAAU/F,MAAAA,UCAV,SAAUA,GAET,IAAA8F,EAAA,WAQC,SAAAA,EAAYT,EAAmBuB,EAAsBC,GACpD1pB,KAAKkoB,WAAaA,EAClBloB,KAAKypB,cAAgBA,EACrBzpB,KAAK0pB,gBAAkBA,EACvB1pB,KAAK+qB,MAAQ,KAwCf,OA3BQpC,EAAA1oB,UAAA2qB,cAAP,WACC,OAAO5qB,KAAKkoB,YAGNS,EAAA1oB,UAAA+qB,iBAAP,WACC,OAAOhrB,KAAKypB,eAGNd,EAAA1oB,UAAAmoB,mBAAP,WACC,OAAOpoB,KAAK0pB,iBAkBdf,EApDA,GAAa9F,EAAA8F,kBAAiBA,EAF/B,CAAU9F,MAAAA,UCAV,SAAUA,GAET,IAAYE,GAAZ,SAAYA,GACXA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,WAAA,GAAA,aAPD,CAAYA,EAAAF,EAAAE,aAAAF,EAAAE,gBAUIF,EAAA6H,oBAAhB,SAAoCnoB,GACnC,OAAQA,GACP,KAAKwgB,EAAWC,OACf,MAAO,SACR,KAAKD,EAAWsC,QACf,MAAO,UACR,KAAKtC,EAAW4C,UACf,MAAO,YACR,KAAK5C,EAAWiD,SACf,MAAO,WACR,KAAKjD,EAAWsD,QACf,MAAO,UACR,KAAKtD,EAAW2D,UACf,MAAO,YACR,KAAK3D,EAAWgE,WACf,MAAO,aAET,MAAO,IA7BT,CAAUlE,MAAAA,UCAV,SAAUA,IAAI,SAAAiF,GAEb,IAAYoC,GAAZ,SAAYA,GACXA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,UAJD,CAAYA,EAAApC,EAAAoC,YAAApC,EAAAoC,eAOIpC,EAAAmD,mBAAhB,SAAmCC,GAClC,OAAQA,GACP,KAAKhB,EAAUiB,OACd,MAAO,SACR,KAAKjB,EAAUC,QACd,MAAO,UACR,KAAKD,EAAUE,OACd,MAAO,SACR,KAAKF,EAAUM,QACd,MAAO,UAET,MAAO,IApBK,CAAA3H,EAAAiF,OAAAjF,EAAAiF,UAAd,CAAUjF,MAAAA,UCAV,SAAUA,IAAI,SAAAiF,GAEb,IAAAC,EAAA,SAAAtmB,GAQC,SAAAsmB,EAAYpD,GAAZ,IAAAxiB,EACCV,EAAAL,KAAApB,KAAM,KAAGA,YACTmC,EAAKwiB,QAAUA,IA4BjB,OAtC+BhjB,UAAAomB,EAAAtmB,GAuBvBsmB,EAAA9nB,UAAAwkB,WAAP,WACC,OAAOzkB,KAAK2kB,SAcdoD,EAtCA,CAA+BlF,EAAAC,OAAlBgF,EAAAC,UAASA,EAFT,CAAAlF,EAAAiF,OAAAjF,EAAAiF,UAAd,CAAUjF,MAAAA,SCAV,IAAUA,KAAV,SAAUA,IAAI,SAAAiF,GAEb,IAAAS,EAAA,WAQC,SAAAA,EAAYtD,EAAazP,GACxBxV,KAAKilB,KAAOA,EACZjlB,KAAKwV,MAAQA,EACbxV,KAAK8G,KAAOghB,EAAAoC,UAAUiB,OACtBnrB,KAAK6G,GAAKihB,EAAAoC,UAAUiB,OAuDtB,OA1CQ5C,EAAAtoB,UAAAykB,QAAP,WACC,OAAO1kB,KAAKilB,MAGNsD,EAAAtoB,UAAAgqB,SAAP,WACC,OAAOjqB,KAAKwV,OAGN+S,EAAAtoB,UAAAsI,QAAP,WACC,OAAOvI,KAAK8G,MAGNyhB,EAAAtoB,UAAAoI,MAAP,WACC,OAAOrI,KAAK6G,IAGN0hB,EAAAtoB,UAAAsqB,SAAP,SAAgBzjB,GACf9G,KAAK8G,KAAOA,GAGNyhB,EAAAtoB,UAAAwqB,OAAP,SAAc5jB,GACb7G,KAAK6G,GAAKA,GAGJ0hB,EAAAtoB,UAAA4B,SAAP,WACC,MAAO,sBAAwB7B,KAAKilB,KAAO,cAAgBjlB,KAAKwV,MAAQ,YAAcsS,EAAAmD,mBAAmBjrB,KAAK8G,MAAQ,UAAYghB,EAAAmD,mBAAmBjrB,KAAK6G,KAiB5J0hB,EAnEA,GAAaT,EAAAS,SAAQA,EAFR,CAAA1F,EAAAiF,OAAAjF,EAAAiF,UAAd,CAAUjF,MAAAA,SCsDV,IAAU1nB,KAAV,SAAUA,GAGT,SAAAiwB,IACC,MAAO,QADQjwB,EAAAiwB,WAAUA,EAK1B,IAAMC,EAAe,cACfrW,EAAiB9P,QAAQ0P,MAC/BI,EAAM,wDAAyDqW,GAC/DrW,EAAM,kBAAmBqW,GACzBrW,EAAM,oBAA+BqW,GACrCrW,EAAM,0BAA2BqW,GACjCrW,EAAM,8CAA+CqW,GACrDrW,EAAM,wDAAyDqW,GAC/DrW,EAAM,IAhBP,CAAU7Z,MAAAA","file":"alumican.min.js","sourcesContent":["/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\texport enum LoggerLevel {\n\t\tVerbose = 0,\n\t\tInfo = 1,\n\t\tWarn = 2,\n\t\tError = 3,\n\t\tSilent = 4,\n\t}\n\n\n\n\n\n\texport interface ILogging {\n\n\t\tverbose(messages:any[]):void;\n\t\tinfo(messages:any[]):void;\n\t\twarn(messages:any[]):void;\n\t\terror(messages:any[]):void;\n\t}\n\n\n\n\n\n\texport class NullLogging implements ILogging {\n\n\t\tpublic verbose(messages:any[]):void {\n\t\t}\n\n\t\tpublic info(messages:any[]):void {\n\t\t}\n\n\t\tpublic warn(messages:any[]):void {\n\t\t}\n\n\t\tpublic error(messages:any[]):void {\n\t\t}\n\t}\n\n\n\n\n\n\texport class ConsoleLogging implements ILogging {\n\n\t\tpublic verbose(messages:any[]):void {\n\t\t\tconsole.debug.apply(console, Array.prototype.slice.call([\"Verbose: \"].concat(messages)));\n\t\t}\n\n\t\tpublic info(messages:any[]):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call([\"Info   : \"].concat(messages)));\n\t\t}\n\n\t\tpublic warn(messages:any[]):void {\n\t\t\tconsole.warn.apply(console, Array.prototype.slice.call([\"Warn   : \"].concat(messages)));\n\t\t}\n\n\t\tpublic error(messages:any[]):void {\n\t\t\tconsole.error.apply(console, Array.prototype.slice.call([\"Error  : \"].concat(messages)));\n\t\t}\n\t}\n\n\n\n\n\n\texport class DOMLogging implements ILogging {\n\n\t\tconstructor(dom:HTMLElement, html:boolean) {\n\t\t\tthis.dom = dom;\n\t\t\tthis.html = html;\n\t\t}\n\n\t\tpublic verbose(messages:any[]):void {\n\t\t\tthis.print(\"Verbose: \", messages);\n\t\t}\n\n\t\tpublic info(messages:any[]):void {\n\t\t\tthis.print(\"Info   : \", messages);\n\t\t}\n\n\t\tpublic warn(messages:any[]):void {\n\t\t\tthis.print(\"Warn   : \", messages);\n\t\t}\n\n\t\tpublic error(messages:any[]):void {\n\t\t\tthis.print(\"Error  : \", messages);\n\t\t}\n\n\t\tprivate print(prefix:string, messages:any[]):void {\n\t\t\tconst line:string = messages.join(\", \") + \"\\n\";\n\t\t\tif (this.html) {\n\t\t\t\tthis.dom.innerHTML = line + this.dom.innerHTML;\n\t\t\t} else {\n\t\t\t\tthis.dom.innerText = line + this.dom.innerText;\n\t\t\t}\n\t\t}\n\n\t\tprivate dom:HTMLElement;\n\t\tprivate html:boolean;\n\t}\n\n\n\n\n\n\texport class ParallelLogging implements ILogging {\n\n\t\tconstructor(loggers:ILogging[]) {\n\t\t\tthis.loggers = loggers;\n\t\t}\n\n\t\tpublic verbose(messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].verbose.apply(this, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic info(messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].info.apply(this, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic warn(messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].warn.apply(this, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic error(messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].error.apply(this, messages);\n\t\t\t}\n\t\t}\n\n\t\tprivate loggers:ILogging[];\n\t}\n\n\n\n\n\n\texport class Logger {\n\n\t\tpublic static level:number = LoggerLevel.Verbose;\n\t\tpublic static logger:ILogging = new ConsoleLogging();\n\n\t\tpublic static verbose(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) Logger.logger.verbose(messages);\n\t\t}\n\n\t\tpublic static info(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) Logger.logger.info(messages);\n\t\t}\n\n\t\tpublic static warn(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) Logger.logger.warn(messages);\n\t\t}\n\n\t\tpublic static error(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) Logger.logger.error(messages);\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) Logger.logger.warn([message + \" : \" + target]);\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) Logger.logger.error([message + \" : \" + target]);\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n\n\n\n\n\n\t/*\n\texport class Logger {\n\n\t\tpublic static level:number = LoggerLevel.Verbose;\n\n\t\tpublic static verbose(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) console.debug.apply(console, Array.prototype.slice.call([\"Verbose: \"].concat(messages)));\n\t\t}\n\n\t\tpublic static info(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) console.log.apply(console, Array.prototype.slice.call([\"Info   : \"].concat(messages)));\n\t\t}\n\n\t\tpublic static warn(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) console.warn.apply(console, Array.prototype.slice.call([\"Warn   : \"].concat(messages)));\n\t\t}\n\n\t\tpublic static error(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) console.error.apply(console, Array.prototype.slice.call([\"Error  : \"].concat(messages)));\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) Logger.warn(message + \" : \", target);\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) Logger.error(message + \" : \", target);\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n\t*/\n}\n\nfunction trace(...messages:any[]):void {\n\talm.util.Logger.info.apply(trace.caller, arguments);\n}\n\nfunction throwWarn(target:any, message:string, condition:boolean = true):void {\n\talm.util.Logger.warnIf.apply(null, arguments);\n}\n\nfunction throwError(target:any, message:string, condition:boolean = true):void {\n\talm.util.Logger.errorIf.apply(null, arguments);\n}","namespace alm.util {\n\n\texport type EasingFunction = (x:number, t:number, b:number, c:number, d:number)=>number;\n\n\texport class Easing {\n\n\t\tpublic static linear(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn c * t / d + b;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuad(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn c * (t /= d) * t + b;\n\t\t}\n\n\t\tpublic static easeOutQuad(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn (-c) * (t /= d) * (t - 2) + b;\n\t\t}\n\n\t\tpublic static easeInOutQuad(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\tif ((t /= d / 2) < 1) return c / 2 * t * t + b;\n\t\t\treturn (-c) / 2 * ((--t) * (t - 2) - 1) + b;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCubic(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn c * (t /= d) * t * t + b;\n\t\t}\n\n\t\tpublic static easeOutCubic(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn c * ((t = t / d - 1) * t * t + 1) + b;\n\t\t}\n\n\t\tpublic static easeInOutCubic(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\tif ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\n\t\t\treturn c / 2 * ((t -= 2) * t * t + 2) + b;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuart(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn c * (t /= d) * t * t * t + b;\n\t\t}\n\n\t\tpublic static easeOutQuart(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn (-c) * ((t = t / d - 1) * t * t * t - 1) + b;\n\t\t}\n\n\t\tpublic static easeInOutQuart(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\tif ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\n\t\t\treturn (-c) / 2 * ((t -= 2) * t * t * t - 2) + b;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuint(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn c * (t /= d) * t * t * t * t + b;\n\t\t}\n\n\t\tpublic static easeOutQuint(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n\t\t}\n\n\t\tpublic static easeInOutQuint(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\tif ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\n\t\t\treturn c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInSine(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn (-c) * Math.cos(t / d * (Math.PI / 2)) + c + b;\n\t\t}\n\n\t\tpublic static easeOutSine(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn c * Math.sin(t / d * (Math.PI / 2)) + b;\n\t\t}\n\n\t\tpublic static easeInOutSine(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn (-c) / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInExpo(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\tif (t == 0) return b;\n\t\t\treturn c * Math.pow(2, 10 * (t / d - 1)) + b;\n\t\t}\n\n\t\tpublic static easeOutExpo(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\tif (t == d) return b + c;\n\t\t\treturn c * (-Math.pow(2, -10 * t / d) + 1) + b;\n\t\t}\n\n\t\tpublic static easeInOutExpo(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\tif (t == 0) return b;\n\t\t\tif (t == d) return b + c;\n\t\t\tif ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n\t\t\treturn c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCirc(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn (-c) * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\t\t}\n\n\t\tpublic static easeOutCirc(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\t\t}\n\n\t\tpublic static easeInOutCirc(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\tif ((t /= d / 2) < 1) return (-c) / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n\t\t\treturn c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n\t\t}\n\n\n\n\n\n\t\tpublic static createEaseInElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (x:number, t:number, b:number, c:number, d:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = c;\n\t\t\t\tif (t == 0) return b;\n\t\t\t\tif ((t /= d) == 1) return b + c;\n\t\t\t\tif (p == 0) p = d * 0.3;\n\t\t\t\tif (a < Math.abs(c)) {\n\t\t\t\t\ta = c;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(c / a);\n\t\t\t\t}\n\t\t\t\treturn (-a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p )) + b;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (x:number, t:number, b:number, c:number, d:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = c;\n\t\t\t\tif (t == 0) return b;\n\t\t\t\tif ((t /= d) == 1) return b + c;\n\t\t\t\tif (p == 0) p = d * 0.3;\n\t\t\t\tif (a < Math.abs(c)) {\n\t\t\t\t\ta = c;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(c / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (x:number, t:number, b:number, c:number, d:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = c;\n\t\t\t\tif (t == 0) return b;\n\t\t\t\tif ((t /= d / 2) == 2) return b + c;\n\t\t\t\tif (p == 0) p = d * (0.3 * 1.5);\n\t\t\t\tif (a < Math.abs(c)) {\n\t\t\t\t\ta = c;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(c / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1) return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInElastic(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(x, t, b, c, d);\n\t\t}\n\n\t\tpublic static easeOutElastic(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn Easing.defaultEaseOutElastic(x, t, b, c, d);\n\t\t}\n\n\t\tpublic static easeInOutElastic(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn Easing.defaultEaseInOutElastic(x, t, b, c, d);\n\t\t}\n\n\t\tprivate static defaultEaseInElastic:EasingFunction = Easing.createEaseInElastic();\n\t\tprivate static defaultEaseOutElastic:EasingFunction = Easing.createEaseOutElastic();\n\t\tprivate static defaultEaseInOutElastic:EasingFunction = Easing.createEaseInOutElastic();\n\n\n\n\n\n\t\tpublic static createEaseInBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (x:number, t:number, b:number, c:number, d:number) {\n\t\t\t\treturn c * (t /= d) * t * ((s + 1) * t - s) + b;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (x:number, t:number, b:number, c:number, d:number) {\n\t\t\t\treturn c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (x:number, t:number, b:number, c:number, d:number) {\n\t\t\t\tif ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n\t\t\t\treturn c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInBack(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(x, t, b, c, d);\n\t\t}\n\n\t\tpublic static easeOutBack(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn Easing.defaultEaseOutBack(x, t, b, c, d);\n\t\t}\n\n\t\tpublic static easeInOutBack(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn Easing.defaultEaseInOutBack(x, t, b, c, d);\n\t\t}\n\n\t\tprivate static defaultEaseInBack:EasingFunction = Easing.createEaseInBack();\n\t\tprivate static defaultEaseOutBack:EasingFunction = Easing.createEaseOutBack();\n\t\tprivate static defaultEaseInOutBack:EasingFunction = Easing.createEaseInOutBack();\n\n\n\n\n\n\t\tpublic static easeInBounce(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\treturn c - Easing.easeOutBounce(x, d - t, 0, c, d) + b;\n\t\t}\n\n\t\tpublic static easeOutBounce(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\tif ((t /= d) < (1 / 2.75)) {\n\t\t\t\treturn c * (7.5625 * t * t) + b;\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n\t\t\t} else {\n\t\t\t\treturn c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInOutBounce(x:number, t:number, b:number, c:number, d:number):number {\n\t\t\tif (t < d / 2) return Easing.easeInBounce(x, t * 2, 0, c, d) * 0.5 + b;\n\t\t\treturn Easing.easeOutBounce(x, t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\t\t}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\r\n\r\nnamespace alm.event {\r\n\r\n\texport class Event {\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// CONSTRUCTOR\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tconstructor(type:string, target:Object, data:any = null) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.target = target;\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\t\tpublic getType():string {\r\n\t\t\treturn this.type;\r\n\t\t}\r\n\r\n\t\tpublic getTarget():Object {\r\n\t\t\treturn this.target;\r\n\t\t}\r\n\r\n\t\tpublic getData():any {\r\n\t\t\treturn this.data;\r\n\t\t}\r\n\r\n\t\tpublic setData(data:any):void {\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// MEMBER\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tprivate type:string;\r\n\t\tprivate target:Object;\r\n\t\tprivate data:any;\r\n\t}\r\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.event {\n\n\texport type EventListener = (event:Event) => void;\n\n\texport class EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:any = null) {\n\t\t\tthis.target = target || this;\n\t\t\tthis.listeners = {};\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != \"function\") return;\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) return;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.listeners[eventType] = listeners = [];\n\t\t\t}\n\t\t\tlisteners.push(listener);\n\t\t}\n\n\t\tpublic removeEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != \"function\") return;\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) {\n\t\t\t\t\t\tlisteners.splice(i,  1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (listeners.length == 0) {\n\t\t\t\t\tdelete this.listeners[eventType];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic removeAllEventListener(eventType:string = null):void {\n\t\t\tif (eventType) {\n\t\t\t\tdelete this.listeners[eventType];\n\t\t\t} else {\n\t\t\t\tthis.listeners = {};\n\t\t\t}\n\t\t}\n\n\t\tpublic hasEventListener(eventType:string):boolean {\n\t\t\treturn this.listeners[eventType] != null;\n\t\t}\n\n\t\tpublic dispatchEvent(event:Event):void {\n\t\t\tlet listeners:EventListener[] = this.listeners[event.getType()];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tlisteners[i].call(this.target, event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic dispatchEventType(eventType:string, target:Object = null, data:any = null):void {\n\t\t\tthis.dispatchEvent(new Event(eventType, target, data));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:any;\n\t\tprivate listeners:Hash<EventListener[]>;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\texport enum CommandState {\n\t\tSleeping     = 0,\n\t\tExecuting    = 1,\n\t\tInterrupting = 2,\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class CommandEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static COMPLETE:string = \"complete\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():CommandEvent {\n\t\t\treturn new CommandEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[CommandEvent] type = \" + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Command extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(executeFunction:Function = null, interruptFunction:Function = null, destroyFunction:Function = null) {\n\t\t\tsuper();\n\n\t\t\tthis.setExecuteFunction(executeFunction);\n\t\t\tthis.setInterruptFunction(interruptFunction);\n\t\t\tthis.setDestroyFunction(destroyFunction);\n\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.self = this;\n\t\t\tthis.parent = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic execute():void {\n\t\t\tif (this.state > CommandState.Sleeping) {\n\t\t\t\tthrow new Error('[Command.execute] + Command is already executing.');\n\t\t\t}\n\t\t\tthis.state = CommandState.Executing;\n\t\t\tthis.getExecuteFunction().call(this, this);\n\t\t}\n\n\t\tpublic interrupt():void {\n\t\t\tif (this.state == CommandState.Executing) {\n\t\t\t\tthis.state = CommandState.Interrupting;\n\t\t\t\tthis.getInterruptFunction().call(this, this);\n\t\t\t}\n\t\t}\n\n\t\tpublic destroy():void {\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.getDestroyFunction().call(this, this);\n\t\t\tthis.parent = null;\n\t\t\tthis.executeFunction = null;\n\t\t\tthis.interruptFunction = null;\n\t\t\tthis.destroyFunction = null;\n\t\t}\n\n\t\tprotected notifyComplete():void {\n\t\t\tswitch (this.state) {\n\t\t\t\tcase CommandState.Sleeping:\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Executing:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Interrupting:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getExecuteFunction():Function { return this.executeFunction || this.implExecuteFunction };\n\t\tpublic setExecuteFunction(func:Function):void { this.executeFunction = func; }\n\t\tprivate executeFunction:Function;\n\n\t\tpublic getInterruptFunction():Function { return this.interruptFunction || this.implInterruptFunction };\n\t\tpublic setInterruptFunction(func:Function):void { this.interruptFunction = func; }\n\t\tprivate interruptFunction:Function;\n\n\t\tpublic getDestroyFunction():Function { return this.destroyFunction || this.implDestroyFunction };\n\t\tpublic setDestroyFunction(func:Function):void { this.destroyFunction = func; }\n\t\tprivate destroyFunction:Function;\n\n\t\tpublic getState():CommandState { return this.state; }\n\t\tprivate state:CommandState;\n\n\t\tpublic getParent():Command { return this.parent; }\n\t\tpublic setParent(parent:Command):void { this.parent = parent; }\n\t\tprivate parent:Command;\n\n\t\tpublic getSelf():Command { return this.self; }\n\t\tprivate self:Command;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\texport abstract class CommandList extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper();\n\t\t\tthis.commands = [];\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tthis.commands = this.getCommands().concat(<Command[]>commands);\n\t\t\t}\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(0, ...commands);\n\t\t}\n\n\t\tprotected insertCommandAt(index:number, ...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tArray.prototype.splice.apply(this.getCommands(), (<any[]>[index, 0]).concat(commands));\n\t\t\t}\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprotected insertCommandArrayAt(index:number, commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(index, ...commands);\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn this.commands.length;\n\t\t}\n\n\t\tpublic getCommandByIndex(index:number):Command { return this.commands[index]; }\n\t\tpublic getCommands():Command[] { return this.commands; }\n\n\t\tprivate preProcess(commands:(Command|Function)[]):void {\n\t\t\tconst numCommands:number = commands.length;\n\t\t\tlet command:Command|Function;\n\t\t\tfor (let i:number = 0; i < numCommands; ++i) {\n\t\t\t\tcommand = commands[i];\n\t\t\t\tif (typeof(command) == \"function\") commands[i] = command = new Func(command);\n\t\t\t\tcommand.setParent(this);\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\t\tprotected abstract implNotifyBreak():void;\n\t\tprotected abstract implNotifyReturn():void;\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate commands:Command[];\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\texport class Break extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()[\"notifyBreak\"];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\texport class Return extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()[\"notifyReturn\"];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\texport class Log extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...messages:any[]) {\n\t\t\tsuper();\n\t\t\tthis.messages = messages;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call(this.messages));\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.messages = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getMessages():any[] { return this.messages; }\n\t\tpublic setMessages(messages:any[]):void { this.messages = messages; }\n\t\tprivate messages:any[];\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\texport class Wait extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(time:number = 1000) {\n\t\t\tsuper();\n\t\t\tthis.time = time;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.timerId = window.setTimeout(this.completeHandler, this.time);\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearTimeout(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTime():number { return this.time; }\n\t\tpublic setTime(time:number):void { this.time = time; }\n\t\tprivate time:number;\n\n\t\tprivate timerId:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Func extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(func:Function = null, args:any[] = [], eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.func = func;\n\t\t\tthis.args = args;\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t\tthis.func(...this.args);\n\t\t\t} else {\n\t\t\t\tthis.func(...this.args);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.func = null;\n\t\t\tthis.args = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t\tthis.eventType = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getFunction():Function { return this.func; }\n\t\tpublic setFunction(func:Function):void { this.func = func; }\n\t\tprivate func:Function;\n\n\t\tpublic getArguments():any[] { return this.args; }\n\t\tpublic setArguments(args:any[]):void { this.args = args; }\n\t\tprivate args:any[];\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Listen extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.eventType = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\timport Easing = alm.util.Easing;\n\timport EasingFunction = alm.util.EasingFunction;\n\n\texport type TweenCallbackFunction = (progressTime:number, progressValue:number) => void;\n\n\texport class Tween extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:Object, to:Object, from:Object = null, duration:number = 1000, easing:EasingFunction = Easing.linear, onStart:TweenCallbackFunction = null, onUpdate:TweenCallbackFunction = null, onComplete:TweenCallbackFunction = null) {\n\t\t\tsuper();\n\t\t\tthis.tweenTarget = target;\n\t\t\tthis.to = to;\n\t\t\tthis.from = from;\n\t\t\tthis.duration = duration;\n\t\t\tthis.easing = easing;\n\t\t\tthis.onStart = onStart;\n\t\t\tthis.onUpdate = onUpdate;\n\t\t\tthis.onComplete = onComplete;\n\t\t\tthis.progressTime = 0;\n\t\t\tthis.progressValue = 0;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.internalFrom = {};\n\t\t\tlet value0:number;\n\t\t\tlet value1:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue1 = this.to[key];\n\t\t\t\tif (this.from && this.from[key] != null) {\n\t\t\t\t\tthis.internalFrom[key] = this.from[key];\n\t\t\t\t} else {\n\t\t\t\t\tthis.internalFrom[key] = this.tweenTarget[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.duration > 0) {\n\t\t\t\tthis.timerId = window.setInterval(this.intervalHandler, Tween.updateInterval);\n\t\t\t\tthis.startTime = new Date().getTime();\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t\tthis.apply(1);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\n\t\t\tthis.tweenTarget = null;\n\t\t\tthis.to = null;\n\t\t\tthis.from = null;\n\t\t\tthis.easing = null;\n\t\t\tthis.onStart = null;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.onComplete = null;\n\t\t\tthis.internalFrom = null;\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearInterval(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate apply(timeRatio:number):void {\n\t\t\tthis.progressTime = timeRatio;\n\t\t\tthis.progressValue = this.easing(0, this.progressTime, 0, 1, 1);\n\t\t\tlet value0:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue0 = this.internalFrom[key];\n\t\t\t\tthis.tweenTarget[key] = value0 + (this.to[key] - value0) * this.progressValue;\n\t\t\t}\n\t\t}\n\n\t\tprivate intervalHandler = ():void => {\n\t\t\tconst elapsedTime:number = new Date().getTime() - this.startTime;\n\t\t\tif (elapsedTime < this.duration) {\n\t\t\t\tthis.apply(elapsedTime / this.duration);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(1);\n\t\t\t\tthis.cancel();\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTarget():Object { return this.tweenTarget; }\n\t\tpublic setTarget(target:Object):void { this.tweenTarget = target; }\n\t\tprivate tweenTarget:Object;\n\n\t\tpublic getDuration():number { return this.duration; }\n\t\tpublic setDuration(duration:number):void { this.duration = duration; }\n\t\tprivate duration:number;\n\n\t\tpublic getTo():Object { return this.to; }\n\t\tpublic setTo(to:Object):void { this.to = to; }\n\t\tprivate to:Object;\n\n\t\tpublic getFrom():Object { return this.from; }\n\t\tpublic setFrom(from:Object):void { this.from = from; }\n\t\tprivate from:Object;\n\n\t\tpublic getEasing():EasingFunction { return this.easing; }\n\t\tpublic setEasing(easing:EasingFunction):void { this.easing = easing; }\n\t\tprivate easing:EasingFunction;\n\n\t\tpublic getOnStart():TweenCallbackFunction { return this.onStart; }\n\t\tpublic setOnStart(func:TweenCallbackFunction):void { this.onStart = func; }\n\t\tprivate onStart:TweenCallbackFunction;\n\n\t\tpublic getOnUpdate():TweenCallbackFunction { return this.onUpdate; }\n\t\tpublic setOnUpdate(func:TweenCallbackFunction):void { this.onUpdate = func; }\n\t\tprivate onUpdate:TweenCallbackFunction;\n\n\t\tpublic getOnComplete():TweenCallbackFunction { return this.onComplete; }\n\t\tpublic setOnComplete(func:TweenCallbackFunction):void { this.onComplete = func; }\n\t\tprivate onComplete:TweenCallbackFunction;\n\n\t\tpublic getProgressTime():number { return this.progressTime; }\n\t\tprivate progressTime:number;\n\n\t\tpublic getProgressValue():number { return this.progressValue; }\n\t\tprivate progressValue:number;\n\n\t\tprivate startTime:number;\n\t\tprivate timerId:number;\n\t\tprivate internalFrom:Object;\n\n\t\tpublic getUpdateInterval():number { return Tween.updateInterval; }\n\t\tpublic setUpdateInterval(milliseconds:number):void { Tween.updateInterval = milliseconds; }\n\t\tprivate static updateInterval:number = 1000 / 60;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Serial extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.currentCommand = null;\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.insertCommandAt(this.position + 1, ...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCommand = this.getCommandByIndex(this.position);\n\t\t\tthis.currentCommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand.execute();\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand = null;\n\t\t\tif (++this.position >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.position = 0;\n\t\t\tif (this.getLength() > 0) {\n\t\t\t\tthis.next();\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.destroy();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()[\"notifyReturn\"];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getPosition():number { return this.position; }\n\t\tprivate position:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Parallel extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.completeCount = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tif (++this.completeCount >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.completeCount = 0;\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.execute();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.interrupt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()[\"notifyReturn\"];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getCompleteCount():number { return this.completeCount; }\n\t\tprivate completeCount:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.geom {\n\n\texport class Vector2 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0) {\n\t\t\tthis.set(x, y);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic copyTo(point:Vector2):void {\n\t\t\tpoint.set(this.x, this.y);\n\t\t}\n\n\t\tpublic getClone():Vector2 {\n\t\t\treturn new Vector2(this.x, this.y);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector2):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tpublic getDistance(point:Vector2):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.geom {\n\n\texport class Vector3 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, z:number = 0) {\n\t\t\tthis.set(x, y, z);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, z:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic copyTo(point:Vector3):void {\n\t\t\tpoint.set(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic getClone():Vector3 {\n\t\t\treturn new Vector3(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t\tthis.z /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector3):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\tconst dz:number = point.z - this.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tpublic getDistance(point:Vector3):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic z:number;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.geom {\n\n\texport class Rectangle {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0) {\n\t\t\tthis.set(x, y, width, height);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, width:number, height:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tpublic copyTo(rect:Rectangle):void {\n\t\t\trect.set(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getClone():Rectangle {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getTop():number {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tpublic getBottom():number {\n\t\t\treturn this.y + this.height;\n\t\t}\n\n\t\tpublic getLeft():number {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tpublic getRight():number {\n\t\t\treturn this.x + this.width;\n\t\t}\n\n\t\tpublic getTopLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getTop());\n\t\t}\n\n\t\tpublic getTopRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getTop());\n\t\t}\n\n\t\tpublic getBottomLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getBottom());\n\t\t}\n\n\t\tpublic getBottomRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getBottom());\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic width:number;\n\t\tpublic height:number;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\texport class Arr {\n\n\t\t/**\n\t\t * 等差数列を生成する\n\t\t * @param {number} count 要素数\n\t\t * @param {number} init 初期値\n\t\t * @param {number} step 等差\n\t\t * @returns {number[]} 出力配列\n\t\t */\n\t\tpublic static sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\t\tconst result:number[] = new Array(count);\n\t\t\tlet v:number = init;\n\t\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\t\tresult[i] = v;\n\t\t\t\tv += step;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * 重複を削除したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static unique<T>(list:T[]):T[] {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) === i;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * 重複のみを抽出したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\t\tif (unique) {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2つの入力配列に対して総当たり戦をおこなう\n\t\t * @param {T[]} list1 入力配列1\n\t\t * @param {T[]} list2 入力配列2\n\t\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t\t * @param callback.count コールバックの呼ばれた回数\n\t\t * @param callback.index1 入力配列1の現在のインデックス\n\t\t * @param callback.index2 入力配列2の現在のインデックス\n\t\t * @param callback.element1 入力配列1の現在の要素\n\t\t * @param callback.element2 入力配列2の現在の要素\n\t\t */\n\t\tpublic static roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\t\tlet i:number, j:number, p:number = 1;\n\t\t\tconst m:number = list1.length;\n\t\t\tconst n:number = list2.length;\n\t\t\tfor (i = 0; i < m; ++i) {\n\t\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\texport class Num {\n\n\t\t/**\n\t\t * 値を特定の範囲内にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcMin マッピング元の最小値\n\t\t * @param {number} srcMax マッピング元の最大値\n\t\t * @param {number} dstMin マッピング先の最小値\n\t\t * @param {number} dstMax マッピング先の最大値\n\t\t * @param {boolean} clamp trueの場合は入力値をsrcMin, srcMaxの範囲内に丸める\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static map(value:number, srcMin:number, srcMax:number, dstMin:number, dstMax:number, clamp:boolean = true):number {\n\t\t\tif (srcMin == srcMax) return dstMin;\n\t\t\tif (clamp) {\n\t\t\t\tif (srcMin < srcMax) {\n\t\t\t\t\tif (value < srcMin) value = srcMin;\n\t\t\t\t\telse if (value > srcMax) value = srcMax;\n\t\t\t\t} else {\n\t\t\t\t\tif (value < srcMax) value = srcMax;\n\t\t\t\t\telse if (value > srcMin) value = srcMin;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (value - srcMin) * (dstMax - dstMin) / (srcMax - srcMin) + dstMin;\n\t\t}\n\n\t\t/**\n\t\t * 乱数（小数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static random(min:number = 0, max:number = 1):number {\n\t\t\treturn min + (max - min) * Math.random();\n\t\t}\n\n\t\t/**\n\t\t * 乱数（整数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static randomInt(min:number = 0, max:number = 1):number {\n\t\t\treturn Math.floor(Num.random(min, max));\n\t\t}\n\n\t\t/**\n\t\t * 値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clamp(value:number, min:number, max:number):number {\n\t\t\treturn value < min ? min : (value > max ? max : value);\n\t\t}\n\n\t\t/**\n\t\t * 2点間の距離を取得する\n\t\t * @param {number} x1 点1のx座標\n\t\t * @param {number} y1 点1のy座標\n\t\t * @param {number} x2 点2のx座標\n\t\t * @param {number} y2 点2のy座標\n\t\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t\t * @returns {number} 距離\n\t\t */\n\t\tpublic static dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\t\tconst dx:number = x2 - x1;\n\t\t\tconst dy:number = y2 - y1;\n\t\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\n\t\t/**\n\t\t * 値をラジアン法から弧度法に変換する\n\t\t * @param {number} radian ラジアン法\n\t\t * @returns {number} 弧度法\n\t\t */\n\t\tpublic static radToDeg(radian:number):number {\n\t\t\treturn radian * Num.RAD2DEG;\n\t\t}\n\n\t\t/**\n\t\t * 値を弧度法からラジアン法に変換する\n\t\t * @param {number} radian 弧度法\n\t\t * @returns {number} ラジアン法\n\t\t */\n\t\tpublic static degToRad(degree:number):number {\n\t\t\treturn degree * Num.DEG2RAD;\n\t\t}\n\n\t\t/**\n\t\t * ある角度からある角度への回転角度を取得する\n\t\t * @param {number} from 元の角度\n\t\t * @param {number} to 目標の角度\n\t\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t\t * @returns {number} 回転角度\n\t\t */\n\t\tpublic static turn(from:number, to:number, radian:boolean = true):number {\n\t\t\treturn radian ? ((to - from + Num.PI3) % Num.PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONST\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static PI2:number = Math.PI * 2;\n\t\tpublic static PI3:number = Math.PI * 3;\n\t\tpublic static PI4:number = Math.PI * 4;\n\t\tpublic static PI5:number = Math.PI * 5;\n\t\tpublic static PI6:number = Math.PI * 6;\n\t\tpublic static PI_2:number = Math.PI / 2;\n\t\tpublic static PI_3:number = Math.PI / 3;\n\t\tpublic static PI_4:number = Math.PI / 4;\n\t\tpublic static PI_6:number = Math.PI / 6;\n\n\t\tprivate static RAD2DEG:number = 180 / Math.PI;\n\t\tprivate static DEG2RAD:number = Math.PI / 180;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\texport class Str {\n\n\t\t/**\n\t\t * 時間を h:mm:ss の形式で取得する\n\t\t * @param {number} hours 時\n\t\t * @param {number} minutes 分\n\t\t * @param {number} seconds 秒\n\t\t * @returns {string} h:mm:ss 形式の文字列\n\t\t */\n\t\tpublic static toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\t\tseconds += minutes * 60 + hours * 3600;\n\t\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\t\tlet s:string = (\"0\" + Math.floor(seconds % 60)).substr(-2, 2);\n\t\t\tif (h != \"0\") {\n\t\t\t\treturn h + \":\" + (\"0\" + m).substr(-2, 2) + \":\" + s;\n\t\t\t} else {\n\t\t\t\treturn m + \":\" + s;\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\texport class Loc {\n\n\t\tpublic static getQuery():alm.Hash<string> {\n\t\t\tconst query:alm.Hash<string> = {};\n\t\t\tconst pairs:string[] = location.search.substring(1).split(\"&\");\n\t\t\tlet pair:string[];\n\t\t\tfor(let i:number = 0; pairs[i]; ++i) {\n\t\t\t\tpair = pairs[i].split(\"=\");\n\t\t\t\tquery[pair[0]] = pair[1];\n\t\t\t}\n\t\t\treturn query;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\texport enum Align {\n\t\tTop_Left,\n\t\tTop_Center,\n\t\tTop_Right,\n\t\tMiddle_Left,\n\t\tMiddle_Center,\n\t\tMiddle_Right,\n\t\tBottom_Left,\n\t\tBottom_Center,\n\t\tBottom_Right\n\t}\n\n\texport enum ScaleMode {\n\t\tExactFit,\n\t\tShowAll,\n\t\tNoBorder,\n\t\tNoScale,\n\t}\n\n\texport class Boxer {\n\n\t\tpublic static resize(target:geom.Rectangle, bounds:geom.Rectangle, scaleMode:ScaleMode = ScaleMode.ShowAll, align:Align = Align.Middle_Center):geom.Rectangle {\n\t\t\tlet tx:number = target.x;\n\t\t\tlet ty:number = target.y;\n\t\t\tlet tw:number = target.width;\n\t\t\tlet th:number = target.height;\n\n\t\t\tconst bx:number = bounds.x;\n\t\t\tconst by:number = bounds.y;\n\t\t\tconst bw:number = bounds.width;\n\t\t\tconst bh:number = bounds.height;\n\n\t\t\tswitch (scaleMode) {\n\t\t\t\tcase ScaleMode.ShowAll:\n\t\t\t\tcase ScaleMode.NoBorder:\n\t\t\t\t\tconst ratioW:number = bw / tw;\n\t\t\t\t\tconst ratioH:number = bh / th;\n\t\t\t\t\tconst ratio:number = scaleMode == ScaleMode.ShowAll ? (ratioW < ratioH ? ratioW : ratioH) : (ratioW > ratioH ? ratioW : ratioH);\n\t\t\t\t\ttw *= ratio;\n\t\t\t\t\tth *= ratio;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ScaleMode.ExactFit:\n\t\t\t\t\treturn new geom.Rectangle(bx, by, bw, bh);\n\t\t\t}\n\n\t\t\ttx = bx + ((align == Align.Top_Left || align == Align.Middle_Left || align == Align.Bottom_Left) ? 0 :\n\t\t\t\t(align == Align.Top_Right || align == Align.Middle_Right || align == Align.Bottom_Right) ? (bw - tw) : (bw - tw) / 2);\n\t\t\tty = by + ((align == Align.Top_Left || align == Align.Top_Center || align == Align.Top_Right) ? 0 :\n\t\t\t\t(align == Align.Bottom_Left || align == Align.Bottom_Center || align == Align.Bottom_Right) ? (bh - th) : (bh - th) / 2);\n\n\t\t\treturn new geom.Rectangle(tx, ty, tw, th);\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\texport class Raffle<T = any> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(values:T[] = null) {\n\t\t\tif (values) {\n\t\t\t\tthis.set(values);\n\t\t\t} else {\n\t\t\t\tthis.initValues = this.restValues = null;\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = true;\n\t\t\t}\n\t\t\tthis.onCheck = null;\n\t\t\tthis.isAutoResetEnabled = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(values:T[]):void {\n\t\t\tthis.initValues = values.concat();\n\t\t\tthis.reset();\n\t\t}\n\n\t\tpublic get():T {\n\t\t\tif (this.isEmpty && this.isAutoResetEnabled) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\tconst index:number = Math.floor(Math.random() * this.restCount);\n\t\t\tconst value:T = this.restValues[index];\n\t\t\tlet result:boolean = true;\n\t\t\tif (this.onCheck) result = this.onCheck(value);\n\t\t\tif (result) {\n\t\t\t\tthis.restValues.splice(index, 1);\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.restValues = this.initValues.concat();\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t}\n\n\t\tpublic getRestCount():number {\n\t\t\treturn this.restCount;\n\t\t}\n\n\t\tpublic getIsEmply():boolean {\n\t\t\treturn this.isEmpty;\n\t\t}\n\n\t\tpublic getIsAutoResetEnabled():boolean {\n\t\t\treturn this.isAutoResetEnabled;\n\t\t}\n\n\t\tpublic setIsAutoResetEnabled(enabled:boolean):void {\n\t\t\tthis.isAutoResetEnabled = enabled;\n\t\t}\n\n\t\tpublic static createIndices(count:number):Raffle<number> {\n\t\t\tconst values:number[] = new Array(count);\n\t\t\tfor (let i:number = 0; i < count; ++i) values[i] = i;\n\t\t\treturn new Raffle<number>(values);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic onCheck:(value:T) => boolean;\n\n\t\tprivate isAutoResetEnabled:boolean;\n\t\tprivate isEmpty:boolean;\n\t\tprivate restCount:number;\n\t\tprivate restValues:T[];\n\t\tprivate initValues:T[];\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\texport class Rotator {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(angle:number = 0, velocity:number = 0, radian:boolean = true) {\n\t\t\tthis.setAngle(angle, radian);\n\t\t\tthis.setVelocity(velocity, radian);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getAngle(radian:boolean = true):number {\n\t\t\treturn radian ? this.angle : (this.angle * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setAngle(angle:number, radian:boolean = true):void {\n\t\t\tthis.angle = radian ? angle : (angle * Math.PI / 180);\n\t\t}\n\n\t\tpublic getVelocity(radian:boolean = true):number {\n\t\t\treturn radian ? this.velocity : (this.velocity * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setVelocity(velocity:number, radian:boolean = true):void {\n\t\t\tthis.velocity = radian ? velocity : (velocity * Math.PI / 180);\n\t\t}\n\n\t\tpublic update():void {\n\t\t\tthis.angle += this.velocity;\n\t\t}\n\n\t\tpublic getSin(length:number = 1):number {\n\t\t\treturn length * Math.sin(this.angle);\n\t\t}\n\n\t\tpublic getCos(length:number = 1):number {\n\t\t\treturn length * Math.cos(this.angle);\n\t\t}\n\n\t\tpublic getTan(length:number = 1):number {\n\t\t\treturn length * Math.tan(this.angle);\n\t\t}\n\n\t\tpublic getMagnitude(length:number = 1):number {\n\t\t\treturn length * (1 + Math.sin(this.angle)) / 2;\n\t\t}\n\n\t\tpublic getVector(length:number = 1, xy:{ x:number, y:number } = null):{ x:number, y:number } {\n\t\t\tif (xy != null) {\n\t\t\t\txy.x = this.getCos(length);\n\t\t\t\txy.y = this.getSin(length);\n\t\t\t} else {\n\t\t\t\treturn { x: this.getCos(length), y: this.getSin(length) };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate angle:number;\n\t\tprivate velocity:number;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Timer extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(interval:number = 1000, repeatCount:number = 0) {\n\t\t\tsuper();\n\t\t\tthis.interval = interval;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tId = -1;\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\t\t\tthis.tStartTime = this.getCurrentTime();\n\t\t\tthis.startInterval(this.tRestTime != -1 ? this.tRestTime : this.interval);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tRestTime = this.getCurrentTime() - this.tStartTime;\n\t\t\tthis.stopInterval();\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.stop();\n\t\t\tthis.elapsedCount = 0;\n\t\t\tthis.tRestTime = -1;\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tthis.reset();\n\t\t\tthis.start();\n\t\t}\n\n\n\n\n\n\t\tprivate getCurrentTime():number {\n\t\t\treturn new Date().valueOf();\n\t\t}\n\n\t\tprivate startInterval(interval:number):void {\n\t\t\tthis.stopInterval();\n\t\t\tthis.tInterval = interval;\n\t\t\tthis.tId = window.setInterval(this.timerHandler, this.tInterval);\n\t\t}\n\n\t\tprivate stopInterval():void {\n\t\t\tif (this.tId != -1) {\n\t\t\t\tclearInterval(this.tId);\n\t\t\t\tthis.tId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatch(eventType:string):void {\n\t\t\tthis.dispatchEvent(new TimerEvent(eventType, this, this.elapsedCount, this.repeatCount, this.getRestCount()));\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.tStartTime = this.getCurrentTime();\n\t\t\t++this.elapsedCount;\n\t\t\tlet isCompleted:boolean = false;\n\t\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\t\tisCompleted = true;\n\t\t\t\tthis.stop();\n\t\t\t} else if (this.tInterval != this.interval) {\n\t\t\t\tthis.startInterval(this.interval);\n\t\t\t}\n\t\t\tthis.dispatch(TimerEvent.TICK);\n\t\t\tif (isCompleted) {\n\t\t\t\tthis.dispatch(TimerEvent.COMPLETE);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsRunning():boolean { return this.isRunning; }\n\t\tprivate isRunning:boolean;\n\n\t\tpublic getInterval():number { return this.interval; }\n\t\tpublic setInterval(interval:number):void { this.interval = interval; }\n\t\tprivate interval:number;\n\n\t\tpublic getElapsedTime():number { return this.getCurrentTime() - this.tStartTime; }\n\n\t\tpublic getRestTime():number { return this.interval - this.getElapsedTime(); }\n\n\t\tpublic getElapsedCount():number { return this.elapsedCount; }\n\t\tprivate elapsedCount:number;\n\n\t\tpublic getRepeatCount():number { return this.repeatCount; }\n\t\tpublic setRepeatCount(count:number):void { this.repeatCount = count; }\n\t\tprivate repeatCount:number;\n\n\t\tpublic getRestCount():number { return this.repeatCount - this.elapsedCount; }\n\n\t\tprivate tStartTime:number;\n\t\tprivate tRestTime:number;\n\t\tprivate tInterval:number;\n\t\tprivate tId:number;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\timport Event = alm.event.Event;\n\n\texport class TimerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = \"tick\";\n\t\tpublic static COMPLETE:string = \"complete\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, elapsedCount:number = 0, repeatCount:number = 0, restCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.elapsedCount = elapsedCount;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.restCount = restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():TimerEvent {\n\t\t\treturn new TimerEvent(this.getType(), this.getTarget(), this.elapsedCount, this.repeatCount, this.restCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[TimerEvent] type = \" + this.getType() + \", elapsedCount = \" + this.elapsedCount + \", repeatCount=\" + this.repeatCount + \", restCount=\" + this.restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic elapsedCount:number;\n\t\tpublic repeatCount:number;\n\t\tpublic restCount:number;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\texport class JQueryUtil {\n\n\t\tpublic static fadeTo(target:JQuery, opacity:number, duration:number, easing:EasingFunction, switchDisplayTo:string = \"\", switchVisibility:boolean = false, execute:boolean = true):cmd.Tween {\n\t\t\tlet o:Object = { value: parseInt(target.css(\"opacity\")) };\n\t\t\tconst tween:cmd.Tween = new cmd.Tween(o, { value: opacity }, null, duration, easing, ():void => {\n\t\t\t\tif (opacity > 0) {\n\t\t\t\t\tif (switchDisplayTo != \"\") target.css(\"display\", switchDisplayTo);\n\t\t\t\t\tif (switchVisibility) target.css(\"visibility\", \"visible\");\n\t\t\t\t}\n\t\t\t}, ():void => {\n\t\t\t\ttarget.css(\"opacity\", o[\"value\"]);\n\t\t\t}, ():void => {\n\t\t\t\tif (opacity <= 0) {\n\t\t\t\t\tif (switchDisplayTo != \"\") target.css(\"display\", \"none\");\n\t\t\t\t\tif (switchVisibility) target.css(\"visibility\", \"hidden\");\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (execute) tween.execute();\n\t\t\treturn tween;\n\t\t}\n\n\t\tpublic static fadeInJquery(target:JQuery, duration:number, easing:EasingFunction, switchDisplayTo:string = \"\", switchVisibility:boolean = false, execute:boolean = true):cmd.Tween {\n\t\t\treturn JQueryUtil.fadeTo(target, 1, duration, easing, switchDisplayTo, switchVisibility, execute);\n\t\t}\n\n\t\tpublic static fadeOutJquery(target:JQuery, duration:number, easing:EasingFunction, switchDisplayTo:string = \"\", switchVisibility:boolean = false, execute:boolean = true):cmd.Tween {\n\t\t\treturn JQueryUtil.fadeTo(target, 0, duration, easing, switchDisplayTo, switchVisibility, execute);\n\t\t}\n\n\t\tpublic static getQuery():alm.Hash<string> {\n\t\t\tconst query:alm.Hash<string> = {};\n\t\t\tconst pairs:string[] = location.search.substring(1).split(\"&\");\n\t\t\tlet pair:string[];\n\t\t\tfor(let i:number = 0; pairs[i]; ++i) {\n\t\t\t\tpair = pairs[i].split(\"=\");\n\t\t\t\tquery[pair[0]] = pair[1];\n\t\t\t}\n\t\t\treturn query;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.util {\n\n\texport class CommandUtil {\n\n\t\tpublic static stop(command:cmd.Command):any {\n\t\t\tif (command) command.interrupt();\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic static sequence(execute:boolean, ...commands:(cmd.Command|Function)[]):cmd.Serial {\n\t\t\tconst c:cmd.Serial = new cmd.Serial();\n\t\t\tc.addCommand(...commands);\n\t\t\tif (execute) c.execute();\n\t\t\treturn c;\n\t\t}\n\n\t\tpublic static single(execute:boolean, command:cmd.Command):cmd.Command {\n\t\t\tif (execute && command) command.execute();\n\t\t\treturn command;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.loader {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class AssetLoader {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.isLoading_ = false;\n\n\t\t\tthis.currentCount = 0;\n\t\t\tthis.totalCount = 0;\n\n\t\t\tthis.loadingQueries = [];\n\t\t\tthis.loadingQueryIndex = -1;\n\n\t\t\tthis.queriesByQueryId = {};\n\t\t\tthis.queriesByUrl = {};\n\n\t\t\tthis.texturesByUrl = {};\n\t\t\tthis.texturesByQueryId = {};\n\n\t\t\tthis.eventDispatcher = new EventDispatcher();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic requireJQueryJson(url:string):string {\n\t\t\treturn this.addQuery(\"jQuery.JSON\", url, {});\n\t\t}\n\n\t\tpublic requireThreeTexture(url:string):string {\n\t\t\treturn this.addQuery(\"THREE.Texture\", url, {});\n\t\t}\n\n\t\t//public requireJQueryJson(url:string, onLoad?:(data:any)=>void):string {\n\t\t//\treturn this.addQuery(\"jQuery.JSON\", url, { onLoad: onLoad });\n\t\t//}\n\n\t\t//public requireThreeTexture(url:string, onLoad?:(texture:THREE.Texture)=>void, onError?:(message:string)=>void):string {\n\t\t//\treturn this.addQuery(\"THREE.Texture\", url, { onLoad: onLoad, onError: onError });\n\t\t//}\n\n\t\t//public requireThreeTextureAtlas(baseUrl:string, onLoad?:(texture:THREE.Texture)=>void, onError?:(message:string)=>void):string {\n\t\t//\treturn this.addQuery(\"THREE.TextureAtlas\", baseUrl, { onLoad: onLoad, onError: onError });\n\t\t//}\n\n\t\tprivate addQuery(type:string, url:string, param:any):string {\n\t\t\tif (this.queriesByUrl[url]) return this.queriesByUrl[url].id;\n\n\t\t\tconst query:LoaderQuery = new LoaderQuery();\n\t\t\tquery.id = String(AssetLoader.id);\n\t\t\tquery.type = type;\n\t\t\tquery.url = url;\n\t\t\tquery.param = param;\n\t\t\tthis.loadingQueries.push(query);\n\t\t\tthis.queriesByQueryId[query.id] = query;\n\t\t\tthis.queriesByUrl[query.url] = query;\n\t\t\t++AssetLoader.id;\n\t\t\treturn query.id;\n\t\t}\n\n\t\tpublic load():void {\n\t\t\tif (this.isLoading_) return;\n\t\t\tthis.isLoading_ = true;\n\t\t\tthis.loadingQueryIndex = -1;\n\t\t\tthis.next();\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCount = this.loadingQueryIndex + 1;\n\t\t\tthis.totalCount = this.loadingQueries.length;\n\n\t\t\tif (this.currentCount > 0) {\n\t\t\t\tthis.eventDispatcher.dispatchEvent(new AssetLoaderEvent(AssetLoaderEvent.PROGRESS, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\n\t\t\tif (this.currentCount < this.totalCount) {\n\t\t\t\tthis.loadingQueryIndex++;\n\t\t\t\tconst query:LoaderQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\tquery.isLoading = true;\n\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\ttrace(\"[AssetLoader] loading... \" + \"'\" + query.url + \"' as '\" + query.type + \"'\");\n\t\t\t\tswitch (query.type) {\n\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\t// jQuery JSON\n\t\t\t\t\tcase \"jQuery.JSON\":\n\t\t\t\t\t\tjQuery.getJSON(\n\t\t\t\t\t\t\tquery.url,\n\t\t\t\t\t\t\t(data:any):void => {\n\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\tquery.content = data;\n\t\t\t\t\t\t\t\tif (query.param.onLoad)\n\t\t\t\t\t\t\t\t\tquery.param.onLoad(data);\n\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\t// Three.js Texture\n\t\t\t\t\tcase \"THREE.Texture\":\n\t\t\t\t\t\tlet url:string = query.url;\n\t\t\t\t\t\tconst loader:THREE.TextureLoader = new THREE.TextureLoader();\n\t\t\t\t\t\tconst texture:THREE.Texture = loader.load(\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t(texture:THREE.Texture):void => {\n\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\tquery.content = texture;\n\t\t\t\t\t\t\t\tif (query.param.onLoad)\n\t\t\t\t\t\t\t\t\tquery.param.onLoad(texture);\n\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(event:ProgressEvent):void => {\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(event:ErrorEvent):void => {\n\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\tif (query.param.onError)\n\t\t\t\t\t\t\t\t\tquery.param.onError(event.type + \" : \" + event.message);\n\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.texturesByUrl[query.url] = texture;\n\t\t\t\t\t\tthis.texturesByQueryId[query.id] = texture;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t/*\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\t// Three.js Texture Atlas\n\t\t\t\t\tcase \"THREE.TextureAtlas\":\n\t\t\t\t\t\tjQuery.getJSON(\n\t\t\t\t\t\t\tquery.url + \".json\",\n\t\t\t\t\t\t\t(json:any):void => {\n\t\t\t\t\t\t\t\tTHREE.ImageUtils.loadTexture(\n\t\t\t\t\t\t\t\t\tquery.url,\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t(textureAtlas:THREE.Texture):void => {\n\t\t\t\t\t\t\t\t\t\tconst textureAtlasWidth:number = textureAtlas.image.width;\n\t\t\t\t\t\t\t\t\t\tconst textureAtlasHeight:number = textureAtlas.image.height;\n\t\t\t\t\t\t\t\t\t\tconst texturesByTextureId:Hash<THREE.Texture> = {};\n\t\t\t\t\t\t\t\t\t\tconst texture:THREE.Texture;\n\t\t\t\t\t\t\t\t\t\tconst textureFrame:any;\n\t\t\t\t\t\t\t\t\t\tfor (let textureId in json.frames) {\n\t\t\t\t\t\t\t\t\t\t\ttexture = textureAtlas.clone();\n\t\t\t\t\t\t\t\t\t\t\ttextureFrame = json.frames[textureId].frame;\n\t\t\t\t\t\t\t\t\t\t\ttexture.repeat.x = textureFrame.w / textureAtlasWidth;\n\t\t\t\t\t\t\t\t\t\t\ttexture.repeat.y = textureFrame.h / textureAtlasHeight;\n\t\t\t\t\t\t\t\t\t\t\ttexture.offset.x = Math.abs(textureFrame.x) / textureAtlasWidth;\n\t\t\t\t\t\t\t\t\t\t\ttexture.offset.y = Math.abs(textureFrame.y) / textureAtlasHeight;\n\t\t\t\t\t\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\t\t\t\t\t\ttexturesByTextureId[textureId] = texture;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\t\t\tquery.content = texturesByTextureId;\n\t\t\t\t\t\t\t\t\t\tquery.param.onLoad(texturesByTextureId);\n\t\t\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t(message:string):void => {\n\t\t\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\t\t\tquery.param.onError(message);\n\t\t\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t*/\n\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.next();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.isLoading_ = false;\n\t\t\t\tthis.loadingQueries = [];\n\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\tthis.eventDispatcher.dispatchEvent(new AssetLoaderEvent(AssetLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\t\t}\n\n\t\tpublic addLoadUpdateListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.addEventListener(AssetLoaderEvent.PROGRESS, listener);\n\t\t}\n\n\t\tpublic removeLoadUpdateListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.removeEventListener(AssetLoaderEvent.PROGRESS, listener);\n\t\t}\n\n\t\tpublic addLoadCompleteListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.addEventListener(AssetLoaderEvent.COMPLETE, listener);\n\t\t}\n\n\t\tpublic removeLoadCompleteListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.removeEventListener(AssetLoaderEvent.COMPLETE, listener);\n\t\t}\n\n\t\tpublic getQueryByQueryId(queryId:string):LoaderQuery {\n\t\t\treturn this.queriesByQueryId[queryId];\n\t\t}\n\n\n\t\tpublic getQueryByUrl(url:string):LoaderQuery {\n\t\t\treturn this.queriesByUrl[url];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic isLoading():boolean { return this.isLoading_; }\n\t\tprivate isLoading_:boolean;\n\n\t\tpublic getCurrentCount():number { return this.currentCount; }\n\t\tprivate currentCount:number;\n\n\t\tpublic getTotalCount():number { return this.totalCount; }\n\t\tprivate totalCount:number;\n\n\t\tpublic getTexturesByUrl(url:string):THREE.Texture { return this.texturesByUrl[url]; }\n\t\tprivate texturesByUrl:Hash<THREE.Texture>;\n\n\t\tpublic getTexturesByQueryId(textureId:string):THREE.Texture { return this.texturesByQueryId[textureId]; }\n\t\tprivate texturesByQueryId:Hash<THREE.Texture>;\n\n\t\tprivate loadingQueries:LoaderQuery[];\n\t\tprivate loadingQueryIndex:number;\n\n\t\tprivate queriesByQueryId:Hash<LoaderQuery>;\n\t\tprivate queriesByUrl:Hash<LoaderQuery>;\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tprivate static id:number = 0;\n\t}\n\n\n\n\n\n\texport class LoaderQuery {\n\t\tconstructor() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.isLoadComplete = false;\n\t\t}\n\n\t\tpublic id:string;\n\t\tpublic type:string;\n\t\tpublic url:string;\n\t\tpublic param:any;\n\t\tpublic content:any;\n\t\tpublic isLoading:boolean;\n\t\tpublic isLoadComplete:boolean;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.loader {\n\n\timport Event = alm.event.Event;\n\n\texport class AssetLoaderEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic PROGRESS:string = \"progress\";\n\t\tstatic COMPLETE:string = \"complete\";\n\t\tstatic ERROR:string = \"error\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, progress:number = 0, loadedCount:number = 0, totalCount:number = 0, content:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.progress = progress;\n\t\t\tthis.loadedCount = loadedCount;\n\t\t\tthis.totalCount = totalCount;\n\t\t\tthis.content = content;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():AssetLoaderEvent {\n\t\t\treturn new AssetLoaderEvent(this.getType(), this.getTarget(), this.progress, this.loadedCount, this.totalCount, this.content);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[AssetLoaderEvent] type = \" + this.getType() + \", progress = \" + this.progress + \", loadedCount = \" + this.loadedCount + \", totalCount = \" + this.totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic progress:number;\n\t\tpublic loadedCount:number;\n\t\tpublic totalCount:number;\n\t\tpublic content:any;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.view {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport abstract class View<T = any> extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(view:T = null) {\n\t\t\tsuper();\n\t\t\tthis.view = view;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.isReady = false;\n\t\t\tthis.isShowing = false;\n\t\t\tthis.isShown = true;\n\t\t\tthis.isHiding = false;\n\t\t\tthis.autoHideWithInit = true;\n\t\t\tthis.name = \"\";\n\t\t\tthis.id = View.id;\n\n\t\t\tView.viewsById[View.id] = this;\n\t\t\t++View.id;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic initialize():void {\n\t\t\tif (this.isInitializing || this.isInitialized) return;\n\t\t\tthis.isInitializing = true;\n\t\t\tthis.view = this.implInitialize();\n\t\t\tthrowError(this.name || this, \"view is null\", !this.view);\n\t\t\tthis.hide(false);\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = true;\n\t\t}\n\n\t\tpublic ready():void {\n\t\t\tif (this.isReady) return;\n\t\t\tthrowError(this.name || this, \"ready() was called without being initialized\", !this.isInitialized);\n\t\t\tthis.implReady();\n\t\t\tthis.isReady = true;\n\t\t}\n\n\t\tpublic finalize():void {\n\t\t\tthis.implFinalize();\n\t\t}\n\n\t\tpublic show(useTransition:boolean = true):void {\n\t\t\tif (this.isShown) return;\n\t\t\tthis.getShowCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic hide(useTransition:boolean = true):void {\n\t\t\tif (!this.isShown) return;\n\t\t\tthis.getHideCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic getShowCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (this.isShown) return;\n\t\t\t\t\tthrowError(this.name || this, \"getShowCommand() was called without being initialized\", !this.isInitialized);\n\t\t\t\t\tthrowWarn(this.name || this, \"getShowCommand() was called without being ready\", !this.isReady);\n\t\t\t\t\tthis.isShown = true;\n\t\t\t\t\tthis.isShowing = true;\n\t\t\t\t\tthis.isHiding = false;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.showCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implShow(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getHideCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (!this.isShown) return;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthrowError(this.name || this, \"getHideCommand() was called without being initialized\", !this.isInitialized);\n\t\t\t\t\t\tthrowWarn(this.name || this, \"getHideCommand() was called without being ready\", !this.isReady);\n\t\t\t\t\t}\n\t\t\t\t\tthis.isShown = false;\n\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\tthis.isHiding = true;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hideCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implHide(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t\t\tthis.isHiding = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getIsInitializing():boolean {\n\t\t\treturn this.isInitializing;\n\t\t}\n\n\t\tpublic getIsInitialized():boolean {\n\t\t\treturn this.isInitialized;\n\t\t}\n\n\t\tpublic getIsReady():boolean {\n\t\t\treturn this.isReady;\n\t\t}\n\n\t\tpublic getIsShowing():boolean {\n\t\t\treturn this.isShowing;\n\t\t}\n\n\t\tpublic getIsShown():boolean {\n\t\t\treturn this.isShown;\n\t\t}\n\n\t\tpublic getIsHiding():boolean {\n\t\t\treturn this.isHiding;\n\t\t}\n\n\t\tpublic getIsHidden():boolean {\n\t\t\treturn !this.isShown;\n\t\t}\n\n\t\tpublic getView():T {\n\t\t\treturn this.view;\n\t\t}\n\n\t\tpublic getAutoHideWithInit():boolean {\n\t\t\treturn this.autoHideWithInit;\n\t\t}\n\n\t\tpublic setAutoHideWithInit(value:boolean):void {\n\t\t\tthis.autoHideWithInit = value;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic setName(value:string):void {\n\t\t\tthis.name = value;\n\t\t}\n\n\n\n\n\n\t\tprotected abstract implInitialize():T;\n\t\tprotected abstract implReady():void;\n\t\tprotected abstract implFinalize():void;\n\t\tprotected abstract implShow(view:T, useTransition:boolean):cmd.Command;\n\t\tprotected abstract implHide(view:T, useTransition:boolean):cmd.Command;\n\n\n\n\n\n\t\tpublic static getViewById(id:number):View {\n\t\t\treturn View.viewsById[id];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isInitializing:boolean;\n\t\tprivate isInitialized:boolean;\n\t\tprivate isReady:boolean;\n\t\tprivate isShowing:boolean;\n\t\tprivate isShown:boolean;\n\t\tprivate isHiding:boolean;\n\t\tprivate view:T;\n\t\tprivate autoHideWithInit:boolean;\n\t\tprivate name:string;\n\t\tprivate showCommand:cmd.Command;\n\t\tprivate hideCommand:cmd.Command;\n\t\tprivate id:number;\n\n\t\tprivate static id:number = 0;\n\t\tprivate static viewsById:Hash<View> = {};\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.browser {\n\n\texport class DeviceInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tconst u:string = window.navigator.userAgent.toLowerCase();\n\n\t\t\tthis.isTablet = (u.indexOf(\"windows\") != -1 && u.indexOf(\"touch\") != -1)\n\t\t\t\t|| u.indexOf(\"ipad\") != -1\n\t\t\t\t|| (u.indexOf(\"android\") != -1 && u.indexOf(\"mobile\") == -1)\n\t\t\t\t|| (u.indexOf(\"firefox\") != -1 && u.indexOf(\"tablet\") != -1)\n\t\t\t\t|| u.indexOf(\"kindle\") != -1\n\t\t\t\t|| u.indexOf(\"silk\") != -1\n\t\t\t\t|| u.indexOf(\"playbook\") != -1;\n\n\t\t\tthis.isMobile = (u.indexOf(\"windows\") != -1 && u.indexOf(\"phone\") != -1)\n\t\t\t\t|| u.indexOf(\"iphone\") != -1\n\t\t\t\t|| u.indexOf(\"ipod\") != -1\n\t\t\t\t|| (u.indexOf(\"android\") != -1 && u.indexOf(\"mobile\") != -1)\n\t\t\t\t|| (u.indexOf(\"firefox\") != -1 && u.indexOf(\"mobile\") != -1)\n\t\t\t\t|| u.indexOf(\"blackberry\") != -1;\n\n\t\t\tthis.isDesktop = !this.isTablet && !this.isMobile;\n\n\t\t\tthis.isIOS = u.indexOf(\"ipad\") != -1 || u.indexOf(\"iphone\") != -1 || u.indexOf(\"ipod\") != -1;\n\t\t\tthis.isAndroid = u.indexOf(\"android\") != -1 && u.indexOf(\"mobile\") != -1;\n\n\t\t\tthis.isRetina = Math.round(window.devicePixelRatio) == 2;\n\t\t}\n\n\t\tpublic static getIsDesktop():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDesktop;\n\t\t}\n\n\t\tpublic static getIsTablet():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTablet;\n\t\t}\n\n\t\tpublic static getIsMobile():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isMobile;\n\t\t}\n\n\t\tpublic static getIsIOS():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIOS;\n\t\t}\n\n\t\tpublic static getIsAndroid():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isAndroid;\n\t\t}\n\n\t\tpublic static getIsRetina():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isRetina;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isDesktop:boolean;\n\t\tprivate static isTablet:boolean;\n\t\tprivate static isMobile:boolean;\n\n\t\tprivate static isRetina:boolean;\n\n\t\tprivate static isIOS:boolean;\n\t\tprivate static isAndroid:boolean;\n\n\t\tprivate static isInitialized:boolean = false;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.browser {\n\n\texport class LocalStorage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param expiredAt 有効期限（UNIXミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any, expiredAt:number = -1):boolean {\n\t\t\tif (!LocalStorage.isAvailable()) return false;\n\t\t\tconst record:{ value:string; expiredAt:number } = { value:JSON.stringify(value), expiredAt: expiredAt };\n\t\t\tlocalStorage.setItem(key, JSON.stringify(record));\n\t\t\treturn true;\n\t\t}\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param minutes 保存期間（分）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static saveWithTerm(key:string, value:any, milliseconds:number = -1):boolean {\n\t\t\tconst expiredAt:number = milliseconds > 0 ? new Date().getTime() + milliseconds :-1;\n\t\t\treturn LocalStorage.save(key, value, expiredAt);\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!LocalStorage.isAvailable()) return defaultValue;\n\t\t\tconst record:{ value:string; expiredAt:number } = JSON.parse(localStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\t// データが見つかった\n\t\t\t\tif (record.expiredAt > 0) {\n\t\t\t\t\t// 期限付きデータ\n\t\t\t\t\tif (new Date().getTime() < record.expiredAt) {\n\t\t\t\t\t\t// 有効期限内\n\t\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 有効期限を過ぎているので破棄\n\t\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t\t\treturn defaultValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 永続データ\n\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!LocalStorage.isAvailable()) return;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (LocalStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem(\"__CKECK__\", \"__CKECK__\");\n\t\t\t\t\tlocalStorage.removeItem(\"__CKECK__\");\n\t\t\t\t\tLocalStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLocalStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn LocalStorage.isAvailable_;\n\t\t}\n\n\t\t/**\n\t\t * 各時間の尺度ミリ秒で合算する\n\t\t * @param dates 日\n\t\t * @param hours 時\n\t\t * @param minutes 分\n\t\t * @param seconds 秒\n\t\t * @param milliseconds ミリ秒\n\t\t * @returns {number} 合算されたミリ秒\n\t\t */\n\t\tpublic static toMilliseconds(dates:number = 0, hours:number = 0, minutes:number = 0, seconds:number = 0, milliseconds:number = 0):number {\n\t\t\treturn milliseconds + (seconds + (minutes + (hours + dates * 24) * 60) * 60) * 1000;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.browser {\n\n\timport Timer = alm.util.Timer;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\t// https://github.com/nfriend/ts-keycode-enum\n\texport enum KeyCode {\n\t\tBackspace = 8,\n\t\tTab = 9,\n\t\tEnter = 13,\n\t\tShift = 16,\n\t\tCtrl = 17,\n\t\tAlt = 18,\n\t\tPauseBreak = 19,\n\t\tCapsLock = 20,\n\t\tEscape = 27,\n\t\tSpace = 32,\n\t\tPageUp = 33,\n\t\tPageDown = 34,\n\t\tEnd = 35,\n\t\tHome = 36,\n\n\t\tLeftArrow = 37,\n\t\tUpArrow = 38,\n\t\tRightArrow = 39,\n\t\tDownArrow = 40,\n\n\t\tInsert = 45,\n\t\tDelete = 46,\n\n\t\tKey0 = 48,\n\t\tKey1 = 49,\n\t\tKey2 = 50,\n\t\tKey3 = 51,\n\t\tKey4 = 52,\n\t\tKey5 = 53,\n\t\tKey6 = 54,\n\t\tKey7 = 55,\n\t\tKey8 = 56,\n\t\tKey9 = 57,\n\n\t\tClosedParen = Key0,\n\t\tExclamationMark = Key1,\n\t\tAtSign = Key2,\n\t\tPoundSign = Key3,\n\t\tHash = PoundSign,\n\t\tDollarSign = Key4,\n\t\tPercentSign = Key5,\n\t\tCaret = Key6,\n\t\tHat = Caret,\n\t\tAmpersand = Key7,\n\t\tStar = Key8,\n\t\tAsterik = Star,\n\t\tOpenParen = Key9,\n\n\t\tA = 65,\n\t\tB = 66,\n\t\tC = 67,\n\t\tD = 68,\n\t\tE = 69,\n\t\tF = 70,\n\t\tG = 71,\n\t\tH = 72,\n\t\tI = 73,\n\t\tJ = 74,\n\t\tK = 75,\n\t\tL = 76,\n\t\tM = 77,\n\t\tN = 78,\n\t\tO = 79,\n\t\tP = 80,\n\t\tQ = 81,\n\t\tR = 82,\n\t\tS = 83,\n\t\tT = 84,\n\t\tU = 85,\n\t\tV = 86,\n\t\tW = 87,\n\t\tX = 88,\n\t\tY = 89,\n\t\tZ = 90,\n\n\t\tLeftWindowKey = 91,\n\t\tRightWindowKey = 92,\n\t\tSelectKey = 93,\n\n\t\tNumpad0 = 96,\n\t\tNumpad1 = 97,\n\t\tNumpad2 = 98,\n\t\tNumpad3 = 99,\n\t\tNumpad4 = 100,\n\t\tNumpad5 = 101,\n\t\tNumpad6 = 102,\n\t\tNumpad7 = 103,\n\t\tNumpad8 = 104,\n\t\tNumpad9 = 105,\n\n\t\tMultiply = 106,\n\t\tAdd = 107,\n\t\tSubtract = 109,\n\t\tDecimalPoint = 110,\n\t\tDivide = 111,\n\n\t\tF1 = 112,\n\t\tF2 = 113,\n\t\tF3 = 114,\n\t\tF4 = 115,\n\t\tF5 = 116,\n\t\tF6 = 117,\n\t\tF7 = 118,\n\t\tF8 = 119,\n\t\tF9 = 120,\n\t\tF10 = 121,\n\t\tF11 = 122,\n\t\tF12 = 123,\n\n\t\tNumLock = 144,\n\t\tScrollLock = 145,\n\n\t\tSemiColon = 186,\n\t\tEquals = 187,\n\t\tComma = 188,\n\t\tDash = 189,\n\t\tPeriod = 190,\n\t\tUnderScore = Dash,\n\t\tPlusSign = Equals,\n\t\tForwardSlash = 191,\n\t\tTilde = 192,\n\t\tGraveAccent = Tilde,\n\n\t\tOpenBracket = 219,\n\t\tClosedBracket = 221,\n\t\tQuote = 222\n\t}\n\n\n\n\n\n\texport class KeyWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[KeyWatcher] start\");\n\n\t\t\tconst $window:JQuery = jQuery(window);\n\t\t\t$window.on(\"keydown\", this.windowKeyDownHandler);\n\t\t\t$window.on(\"keyup\", this.windowKeyUpHandler);\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[KeyWatcher] stop\");\n\n\t\t\tconst $window:JQuery = jQuery(window);\n\t\t\t$window.off(\"keydown\", this.windowKeyDownHandler);\n\t\t\t$window.off(\"keyup\", this.windowKeyUpHandler);\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowKeyDownHandler = (event:JQuery.Event):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] == null) {\n\t\t\t\tKeyWatcher.isKeyPressedByKeyCode[keyCode] = true;\n\t\t\t\t++KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t} else if (KeyWatcher.isContinuousPressEnabled) {\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\t\tprivate static windowKeyUpHandler = (event:JQuery.Event):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] != null) {\n\t\t\t\tdelete KeyWatcher.isKeyPressedByKeyCode[keyCode];\n\t\t\t\t--KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_UP, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getIsAnyKeyPressed():boolean { return this.pressedKeyCount > 0; }\n\t\tprivate static pressedKeyCount:number = 0;\n\n\t\tpublic static getIsKeyPressed(keyCode:number):boolean { return this.isKeyPressedByKeyCode[keyCode] != null; }\n\t\tprivate static isKeyPressedByKeyCode:Hash<boolean> = {};\n\n\n\t\tpublic static getIsContinuousPressEnabled():boolean { return this.isContinuousPressEnabled; }\n\t\tpublic static setIsContinuousPressEnabled(enabled:boolean):void { this.isContinuousPressEnabled = enabled; }\n\t\tprivate static isContinuousPressEnabled:boolean = false;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static pressTimer:Timer = null;\n\t\tprivate static isLongPressed:boolean = false;\n\t\tprivate static eventDispatcher:EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.browser {\n\n\timport Event = alm.event.Event;\n\n\texport class KeyWatcherEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic KEY_UP:string = \"keyUp\";\n\t\tstatic KEY_DOWN:string = \"keyDown\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, jqueryEvent:JQuery.Event = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.jqueryEvent = jqueryEvent;\n\t\t\tthis.key = this.jqueryEvent.key;\n\t\t\tthis.keyCode = this.jqueryEvent.keyCode;\n\t\t\tthis.altKey = this.jqueryEvent.altKey;\n\t\t\tthis.ctrlKey = this.jqueryEvent.ctrlKey;\n\t\t\tthis.shiftKey = this.jqueryEvent.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():KeyWatcherEvent {\n\t\t\treturn new KeyWatcherEvent(this.getType(), this.getTarget(), this.jqueryEvent);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[KeyWatcherEvent] type = \" + this.getType() + \", key = \" + this.key + \", keyCode = \" + this.keyCode + \", altKey = \" + this.altKey + \", ctrlKey = \" + this.ctrlKey + \", shiftKey = \" + this.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic jqueryEvent:JQuery.Event;\n\t\tpublic key:string;\n\t\tpublic keyCode:number;\n\t\tpublic altKey:boolean;\n\t\tpublic ctrlKey:boolean;\n\t\tpublic shiftKey:boolean;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.browser {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class WindowWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[WindowWatcher] start\");\n\n\t\t\tjQuery(window).on(\"resize\", this.windowScrollHandler);\n\t\t\tjQuery(window).on(\"scroll\", this.windowScrollHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[WindowWatcher] stop\");\n\n\t\t\tjQuery(window).off(\"resize\", this.windowScrollHandler);\n\t\t\tjQuery(window).off(\"scroll\", this.windowScrollHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tconst $window:JQuery = jQuery(window);\n\n\t\t\tthis.windowWidth = $window.width();\n\t\t\tthis.windowHeight = $window.height();\n\n\t\t\tthis.scrollTop = $window.scrollTop();\n\t\t\tthis.scrollBottom = this.scrollTop + this.windowHeight;\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static calcScrolledPosition(y:number):number {\n\t\t\treturn y - this.scrollTop;\n\t\t};\n\n\t\tpublic static calcScrolledPositionRatio(y:number):number {\n\t\t\treturn this.calcScrolledPosition(y) / this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\tprivate static windowScrollHandler = (event:JQuery.Event):void => {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.SCROLL, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\t\tprivate static windowResizeHandler = (event:JQuery.Event):void => {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.RESIZE, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getScrollTop():number { return this.scrollTop; }\n\t\tprivate static scrollTop:number;\n\n\t\tpublic static getScrollBottom():number { return this.scrollBottom; }\n\t\tprivate static scrollBottom:number;\n\n\t\tpublic static getWindowWidth():number { return this.windowWidth; }\n\t\tprivate static windowWidth:number = 0;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace alm.browser {\n\n\timport Event = alm.event.Event;\n\n\texport class WindowWatcherEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SCROLL:string = \"scroll\";\n\t\tstatic RESIZE:string = \"resize\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, jqueryEvent:JQuery.Event = null, scrollTop:number = 0, scrollBottom:number = 0, windowWidth:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.jqueryEvent = jqueryEvent;\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollBottom = scrollBottom;\n\t\t\tthis.windowWidth = windowWidth;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():WindowWatcherEvent {\n\t\t\treturn new WindowWatcherEvent(this.getType(), this.getTarget(), this.jqueryEvent, this.scrollTop, this.scrollBottom, this.windowWidth, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[WindowWatcherEvent] type = \" + this.getType() + \", scrollTop = \" + this.scrollTop + \", scrollBottom = \" + this.scrollBottom + \", windowWidth = \" + this.windowWidth + \", windowHeight = \" + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic jqueryEvent:JQuery.Event;\n\t\tpublic scrollTop:number;\n\t\tpublic scrollBottom:number;\n\t\tpublic windowWidth:number;\n\t\tpublic windowHeight:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace scn {\n\n\timport Logger = alm.util.Logger;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Scene extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.state = SceneState.Idling;\n\t\t\tthis.parent = null;\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\tthis.isEntered = false;\n\t\t\tthis.onLoad = null;\n\t\t\tthis.onUnload = null;\n\t\t\tthis.onArrive = null;\n\t\t\tthis.onLeave = null;\n\t\t\tthis.onAscend = null;\n\t\t\tthis.onDescend = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\tLogger.warn(\"[Scene '\" + this.name + \"'] addChild was failed, because child name '\" + childName + \"' is already contained.\");\n\t\t\t\t} else {\n\t\t\t\t\t++this.numChildren;\n\t\t\t\t\tchild.parent = this;\n\t\t\t\t\tthis.childrenByName[childName] = child;\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn(\"[Scene '\" + this.name + \"'] addChild was failed, because child is null.\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic removeChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\t--this.numChildren;\n\t\t\t\t\tchild.parent = null;\n\t\t\t\t\tdelete this.childrenByName[childName];\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn(\"[Scene '\" + this.name + \"'] removeChild was failed, because child name '\" + childName + \"' is not contained.\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn(\"[Scene '\" + this.name + \"'] removeChild was failed, because child is null.\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic addChildren(children:Scene[]):Scene[] {\n\t\t\tconst addedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.addChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\taddedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn addedChildren;\n\t\t}\n\n\t\tpublic removeChildren(children:Scene[]):Scene[] {\n\t\t\tconst removedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.removeChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\tremovedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn removedChildren;\n\t\t}\n\n\t\tpublic removeAllChildren():Scene[] {\n\t\t\tconst children:Scene[] = [];\n\t\t\tlet child:Scene;\n\t\t\tfor (let name in this.childrenByName) {\n\t\t\t\tchild = this.childrenByName[name];\n\t\t\t\tchild.parent = null;\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\treturn children;\n\t\t}\n\n\t\tpublic contains(child:Scene|string):boolean {\n\t\t\tif (child) {\n\t\t\t\treturn this.childrenByName[typeof child == \"string\" ? child : child.name] != null;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getState():SceneState {\n\t\t\treturn this.state;\n\t\t}\n\n\t\tpublic getLastState():SceneState {\n\t\t\treturn this.lastState;\n\t\t}\n\n\t\tpublic getParent():Scene {\n\t\t\treturn this.parent;\n\t\t}\n\n\t\tpublic getChildByName(name:string):Scene {\n\t\t\treturn this.childrenByName[name];\n\t\t}\n\n\t\tpublic getNumChildren():number {\n\t\t\treturn this.numChildren;\n\t\t}\n\n\t\tpublic getManager():SceneManager {\n\t\t\tif (this.parent) {\n\t\t\t\treturn this.parent.getManager();\n\t\t\t} else {\n\t\t\t\tLogger.warn(\"[Scene '\" + this.name + \"'] getManager was failed, check whether if scene is connected to root.\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getPath():string {\n\t\t\tconst manager:SceneManager = this.getManager();\n\t\t\tif (manager) {\n\t\t\t\tconst names:string[] = [this.name];\n\t\t\t\tlet scene:Scene = this;\n\t\t\t\twhile (scene = scene.parent) {\n\t\t\t\t\tnames.unshift(scene.name);\n\t\t\t\t}\n\t\t\t\treturn manager.getScenePathByNames(names);\n\t\t\t} else {\n\t\t\t\tLogger.warn(\"[Scene '\" + this.name + \"'] getPath was failed, check whether if scene is connected to root.\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic gotoScene(path:string):void {\n\t\t\tthis.getManager().goto(path);\n\t\t}\n\n\n\n\n\n\t\tpublic _load(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Loading;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLoad) == \"function\" ? this.onLoad() : this.implOnLoad();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _unload(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Unloading;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onUnload) == \"function\" ? this.onUnload() : this.implOnUnload();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _arrive(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Arriving;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onArrive) == \"function\" ? this.onArrive() : this.implOnArrive();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _leave(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Leaving;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLeave) == \"function\" ? this.onLeave() : this.implOnLeave();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _ascend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Ascending;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onAscend) == \"function\" ? this.onAscend() : this.implOnAscend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _descend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Descending;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onDescend) == \"function\" ? this.onDescend() : this.implOnDescend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\n\n\n\n\t\tprotected implOnLoad():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnUnload():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnArrive():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnLeave():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnAscend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnDescend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t// The callback function is called preferentially over the override\n\t\tpublic onLoad:() => cmd.Command;\n\t\tpublic onUnload:() => cmd.Command;\n\t\tpublic onArrive:() => cmd.Command;\n\t\tpublic onLeave:() => cmd.Command;\n\t\tpublic onAscend:() => cmd.Command;\n\t\tpublic onDescend:() => cmd.Command;\n\n\t\tprivate isEntered:boolean;\n\t\tprivate name:string;\n\t\tprivate state:SceneState;\n\t\tprivate lastState:SceneState;\n\t\tprivate parent:Scene;\n\t\tprivate childrenByName:alm.Hash<Scene>;\n\t\tprivate numChildren:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static LOAD:string = \"load\";\n\t\tpublic static UNLOAD:string = \"unload\";\n\t\tpublic static ARRIVE:string = \"arrive\";\n\t\tpublic static LEAVE:string = \"leave\";\n\t\tpublic static ASCEND:string = \"ascend\";\n\t\tpublic static DESCEND:string = \"descend\";\n\n\t\tpublic static LOAD_COMPLETE:string = \"loadComplete\";\n\t\tpublic static UNLOAD_COMPLETE:string = \"unloadComplete\";\n\t\tpublic static ARRIVE_COMPLETE:string = \"arriveComplete\";\n\t\tpublic static LEAVE_COMPLETE:string = \"leaveComplete\";\n\t\tpublic static ASCEND_COMPLETE:string = \"ascendComplete\";\n\t\tpublic static DESCEND_COMPLETE:string = \"descendComplete\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneEvent {\n\t\t\treturn new SceneEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[SceneEvent] type = \" + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace scn {\n\n\timport Logger = alm.util.Logger;\n\timport LoggerLevel = alm.util.LoggerLevel;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class SceneManager extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string = \"\") {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.root = new core.RootScene(this);\n\t\t\tthis.currentScene = null;\n\n\t\t\tthis.waypoints = [];\n\t\t\tthis.waypointIndex = -1;\n\t\t\tthis.lastState = SceneState.Idling;\n\t\t\tthis.eventIndex = -1;\n\t\t\tthis.transferId = -1;\n\t\t\tthis.transferInfo = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tLogger.verbose(\"----- scene manager start -----\");\n\t\t\tthis.goto(\"/\");\n\t\t}\n\n\t\tpublic goto(path:string):void {\n\t\t\tpath = this.resolvePath(path);\n\n\t\t\t// Return if current destination and new destination is same.\n\t\t\tif (this.transferInfo && this.transferInfo.getDestinationPath() == path) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Build waypoints\n\t\t\tlet newWaypoints:core.Waypoint[] = [];\n\t\t\tif (this.waypointIndex != -1) {\n\t\t\t\tnewWaypoints = this.createWaypoints(this.waypoints[this.waypointIndex].getPath(), path);\n\t\t\t} else {\n\t\t\t\t// Init\n\t\t\t\tnewWaypoints = [new core.Waypoint(\"/\", 0)];\n\t\t\t}\n\n\t\t\t// Transfer\n\t\t\tif (newWaypoints.length > 0) {\n\t\t\t\tconst isDestinationChanged:boolean = this.transferInfo != null;\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.waypointIndex = 0;\n\t\t\t\t\tthis.eventIndex = 0;\n\t\t\t\t\t++this.transferId;\n\t\t\t\t\tthis.waypoints = newWaypoints;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.verbose(\"destination is changed\");\n\t\t\t\t\tLogger.verbose(\"waypoint index : \" + this.waypointIndex);\n\t\t\t\t\tthis.waypoints = this.waypoints.slice(0, this.waypointIndex + 1).concat(newWaypoints.slice(1));\n\t\t\t\t\tthis.setDirection(this.waypoints);\n\t\t\t\t\tthis.printWaypoint(this.waypoints);\n\t\t\t\t}\n\n\t\t\t\tthis.transferInfo = new SceneTransferInfo(this.transferId, this.waypoints[this.waypointIndex].getPath(), this.waypoints[this.waypoints.length - 1].getPath());\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_START, this));\n\t\t\t\t}\n\n\t\t\t\tthis.checkState();\n\t\t\t}\n\t\t}\n\n\t\tpublic resolvePath(path:string):string {\n\t\t\t// Relative to absolute\n\t\t\tif (path[0] != \"/\") {\n\t\t\t\tif (this.currentScene) {\n\t\t\t\t\tpath = this.currentScene.getPath() + \"/\" + path;\n\t\t\t\t} else {\n\t\t\t\t\tpath = \"/\" + path;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Normalize\n\t\t\tconst names:string[] = path.split(\"/\");\n\t\t\tconst normalized:string[] = [];\n\t\t\tfor (let i:number = 0; i < names.length; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (name == \"\") continue;\n\t\t\t\tif (name == \".\") continue;\n\t\t\t\tif (name == \"..\") {\n\t\t\t\t\tnormalized.pop();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnormalized.push(name);\n\t\t\t}\n\n\t\t\treturn \"/\" + normalized.join(\"/\");\n\t\t}\n\n\t\tpublic addSceneAt(path:string, createScene:boolean = false):Scene {\n\t\t\tlet success:boolean = false;\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (i == n - 1) {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tLogger.warn(\"[SceneManager '\" + this.name + \"'] addSceneAt was failed, because path '\" + path + \"' is already exist.\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tscene = scene.getChildByName(name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn success ? scene : null;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getRoot():Scene {\n\t\t\treturn this.root;\n\t\t}\n\n\t\tpublic getSceneByPath(path:string):Scene {\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tscene = scene.getChildByName(names[i]);\n\t\t\t}\n\t\t\treturn scene;\n\t\t}\n\n\t\tpublic getSceneNamesByPath(path:string):string[] {\n\t\t\treturn path == \"/\" ? [\"\"] : this.resolvePath(path).split(\"/\");\n\t\t}\n\n\t\tpublic getSceneLevelByNames(names:string[]):number {\n\t\t\treturn names.length - 1;\n\t\t}\n\n\t\tpublic getScenePathByNames(names:string[]):string {\n\t\t\treturn names.length == 0 ? \"/\" : names.length == 1 ? (\"/\" + names[0]) : names.join(\"/\");\n\t\t}\n\n\t\tprivate createWaypoints(departurePath:string, destinationPath:string):core.Waypoint[] {\n\t\t\tif (departurePath == destinationPath) {\n\t\t\t\tLogger.warn(\"[SceneManager] departure path and destination path is same, path = '\" + departurePath + \"'\");\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tLogger.verbose(\"----- scene flow -----\");\n\n\t\t\tconst waypoints:core.Waypoint[] = [\n\t\t\t\tnew core.Waypoint(departurePath, this.getSceneLevelByNames(this.getSceneNamesByPath(departurePath)))\n\t\t\t];\n\n\t\t\tconst departureNames:string[] = this.getSceneNamesByPath(departurePath);\n\t\t\tconst destinationNames:string[] = this.getSceneNamesByPath(destinationPath);\n\n\t\t\tLogger.verbose(\"    path\");\n\t\t\tLogger.verbose(\"        current    : '\" + departurePath + \"'\");\n\t\t\tLogger.verbose(\"        destination: '\" + destinationPath + \"'\");\n\n\t\t\tLogger.verbose(\"    names\");\n\t\t\tLogger.verbose(\"        current(\" + departureNames.length + \")    : '\" + departureNames + \"'\");\n\t\t\tLogger.verbose(\"        destination(\" + destinationNames.length + \"): '\" + destinationNames + \"'\");\n\n\t\t\t// 折り返しを見つける\n\t\t\tlet turningLevel:number = 0;\n\t\t\tlet turningNames:string[] = [];\n\t\t\tlet turningPath:string;\n\t\t\tif (destinationPath == \"/\") {\n\t\t\t\tturningLevel = -1;\n\t\t\t\tturningNames = [];\n\t\t\t\tturningPath = \"/\";\n\t\t\t} else {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (departureNames[turningLevel] == destinationNames[turningLevel]) {\n\t\t\t\t\t\tturningNames.push(departureNames[turningLevel]);\n\t\t\t\t\t\t++turningLevel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t--turningLevel;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tturningPath = this.getScenePathByNames(turningNames);\n\t\t\t}\n\n\t\t\tLogger.verbose(\"    turning\");\n\t\t\tLogger.verbose(\"        path     : \" + turningPath);\n\t\t\tLogger.verbose(\"        level    : \" + turningLevel);\n\t\t\tLogger.verbose(\"        names(\" + turningNames.length + \") : '\" + turningNames + \"'\");\n\n\t\t\t// 出発シーンから折り返しまで\n\t\t\t{\n\t\t\t\tconst names:string[] = departureNames.concat();\n\t\t\t\tlet prevPath:string = departurePath;\n\t\t\t\tfor (let i:number = departureNames.length - 1; i > turningLevel + 1; --i) {\n\t\t\t\t\tnames.pop();\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (turningPath == destinationPath && turningLevel > 0) {\n\t\t\t\t// 折り返しと到着シーンが同一\n\t\t\t\tconst from:core.Direction = turningLevel == waypoints[waypoints.length - 1].getLevel() ? core.Direction.Sibling : core.Direction.Ascend;\n\t\t\t\twaypoints.push(new core.Waypoint(turningPath, turningLevel));\n\t\t\t} else {\n\n\t\t\t\t// 折り返しから到達シーンまで\n\t\t\t\tconst names:string[] = turningNames.concat();\n\t\t\t\tconst prev:core.Waypoint = waypoints[waypoints.length - 1];\n\t\t\t\tlet prevPath:string = prev.getPath();\n\t\t\t\tlet prevLevel:number = prev.getLevel();\n\t\t\t\tfor (let i:number = turningLevel + 1; i < destinationNames.length; ++i) {\n\t\t\t\t\tconst name:string = destinationNames[i];\n\t\t\t\t\tnames.push(name);\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevLevel = level;\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 進行方向\n\t\t\tthis.setDirection(waypoints);\n\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tthis.printWaypoint(waypoints);\n\t\t\t}\n\n\t\t\treturn waypoints;\n\t\t}\n\n\t\tprivate setDirection(waypoints:core.Waypoint[]):void {\n\t\t\tconst n:number = waypoints.length;\n\t\t\tlet prev:core.Waypoint = null;\n\t\t\tlet point:core.Waypoint;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tpoint = waypoints[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tconst d:number = point.getLevel() - prev.getLevel();\n\t\t\t\t\tpoint._setFrom(d > 0 ? core.Direction.Descend : d < 0 ? core.Direction.Ascend : core.Direction.Sibling);\n\t\t\t\t\tprev._setTo(point.getFrom());\n\t\t\t\t}\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tprivate printWaypoint(waypoints:core.Waypoint[]):void {\n\t\t\tLogger.verbose(\"    waypoints\");\n\t\t\tconst n:number = waypoints.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tLogger.verbose(\"        [\" + i + \"] \" + waypoints[i]);\n\t\t\t}\n\t\t\tLogger.verbose(\"\");\n\t\t}\n\n\n\n\n\n\t\tprivate checkState():void {\n\t\t\ttrace(\"lastState : \" + scn.getSceneStateString(this.lastState));\n\n\t\t\t//trace(this.waypointIndex + \" / \" + this.waypoints.length);\n\n\t\t\tif (this.waypointIndex >= this.waypoints.length) {\n\t\t\t\tLogger.verbose(\"----- scene transfer complete -----\");\n\t\t\t\tconst tmpTransferId:number = this.transferInfo.getTransferId();\n\t\t\t\tthis.waypointIndex = this.waypoints.length - 1;\n\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_COMPLETE, this));\n\t\t\t\tif (tmpTransferId == this.transferInfo.getTransferId()) {\n\t\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentScene) {\n\t\t\t\tconst currentWaypoint:core.Waypoint = this.waypoints[this.waypointIndex];\n\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypoint.getPath());\n\n\t\t\t\t// Departure scene\n\t\t\t\tif (this.waypoints.length > 1 && this.waypointIndex == 0) {\n\t\t\t\t\ttrace(\"Departure scene\");\n\n\t\t\t\t\t// Leave\n\t\t\t\t\tif (this.lastState != SceneState.Leaving && this.currentScene.getLastState() == SceneState.Arriving) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + \" Leave   : '\" + this.currentScene.getPath() + \"'\");\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._leave(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + \" Unload  : '\" + this.currentScene.getPath() + \"'\");\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Departure to child\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tthis.checkState();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Through scene\n\t\t\t\tif (this.waypointIndex > 0 && this.waypointIndex < this.waypoints.length - 1) {\n\t\t\t\t\ttrace(\"Through scene\");\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + \" Load    : '\" + this.currentScene.getPath() + \"'\");\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ascend\n\t\t\t\t\tif (this.lastState != SceneState.Ascending && currentWaypoint.getFrom() == core.Direction.Ascend) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + \" Ascend  : '\" + this.currentScene.getPath() + \"'\");\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._ascend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + \" Unload  : '\" + this.currentScene.getPath() + \"'\");\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Descend\n\t\t\t\t\tif (this.lastState != SceneState.Descending && currentWaypoint.getTo() == core.Direction.Descend) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + \" Descend : '\" + this.currentScene.getPath() + \"'\");\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._descend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Destination scene\n\t\t\t\tif (this.waypointIndex == this.waypoints.length - 1) {\n\t\t\t\t\ttrace(\"Destination scene\");\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + \" Load    : '\" + this.currentScene.getPath() + \"'\");\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Arrive\n\t\t\t\t\tif (this.lastState != SceneState.Arriving) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + \" Arrive  : '\" + this.currentScene.getPath() + \"'\");\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._arrive(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\ttrace(\"Init scene\");\n\n\t\t\t\t// Init\n\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\tthis.currentScene = this.root;\n\t\t\t\tLogger.verbose(this.eventIndex + \" Load    : '\" + this.currentScene.getPath() + \"'\");\n\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t}\n\t\t}\n\n\t\tprivate sceneLoadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Loading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneUnloadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Unloading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneArriveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Arriving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneLeaveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Leaving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneAscendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Ascending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneDescendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Descending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate name:string;\n\t\tprivate root:Scene;\n\t\tprivate currentScene:Scene;\n\n\t\tprivate waypoints:core.Waypoint[];\n\t\tprivate waypointIndex:number;\n\t\tprivate lastState:SceneState;\n\t\tprivate eventIndex:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t\tprivate transferId:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TRANSFER_START:string = \"transferStart\";\n\t\tpublic static TRANSFER_COMPLETE:string = \"transferComplete\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerEvent {\n\t\t\treturn new SceneManagerEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[SceneManagerEvent] type = \" + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace scn {\n\n\texport class SceneTransferInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(transferId:number, departurePath:string, destinationPath:string) {\n\t\t\tthis.transferId = transferId;\n\t\t\tthis.departurePath = departurePath;\n\t\t\tthis.destinationPath = destinationPath;\n\t\t\tthis.relay = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTransferId():number {\n\t\t\treturn this.transferId;\n\t\t}\n\n\t\tpublic getDeparturePath():string {\n\t\t\treturn this.departurePath;\n\t\t}\n\n\t\tpublic getDestinationPath():string {\n\t\t\treturn this.destinationPath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic relay:any;\n\n\t\tprivate transferId:number;\n\t\tprivate departurePath:string;\n\t\tprivate destinationPath:string;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace scn {\n\n\texport enum SceneState {\n\t\tIdling,\n\t\tLoading,\n\t\tUnloading,\n\t\tArriving,\n\t\tLeaving,\n\t\tAscending,\n\t\tDescending,\n\t}\n\n\texport function getSceneStateString(state:SceneState):string {\n\t\tswitch (state) {\n\t\t\tcase SceneState.Idling:\n\t\t\t\treturn \"idling\";\n\t\t\tcase SceneState.Loading:\n\t\t\t\treturn \"loading\";\n\t\t\tcase SceneState.Unloading:\n\t\t\t\treturn \"unloading\";\n\t\t\tcase SceneState.Arriving:\n\t\t\t\treturn \"arriving\";\n\t\t\tcase SceneState.Leaving:\n\t\t\t\treturn \"leaving\";\n\t\t\tcase SceneState.Ascending:\n\t\t\t\treturn \"ascending\";\n\t\t\tcase SceneState.Descending:\n\t\t\t\treturn \"descending\";\n\t\t}\n\t\treturn \"\";\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace scn.core {\n\n\texport enum Direction {\n\t\tStatic,\n\t\tSibling,\n\t\tAscend,\n\t\tDescend,\n\t}\n\n\texport function getDirectionString(direction:Direction):string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.Static:\n\t\t\t\treturn \"static\";\n\t\t\tcase Direction.Sibling:\n\t\t\t\treturn \"sibling\";\n\t\t\tcase Direction.Ascend:\n\t\t\t\treturn \"ascend\";\n\t\t\tcase Direction.Descend:\n\t\t\t\treturn \"descend\";\n\t\t}\n\t\treturn \"\";\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace scn.core {\n\n\texport class RootScene extends Scene {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(manager:SceneManager) {\n\t\t\tsuper(\"\");\n\t\t\tthis.manager = manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getManager():SceneManager {\n\t\t\treturn this.manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate manager:SceneManager;\n\t}\n}","/// <reference path=\"../../reference.ts\" />\n\nnamespace scn.core {\n\n\texport class Waypoint {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(path:string, level:number) {\n\t\t\tthis.path = path;\n\t\t\tthis.level = level;\n\t\t\tthis.from = Direction.Static;\n\t\t\tthis.to = Direction.Static;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getPath():string {\n\t\t\treturn this.path;\n\t\t}\n\n\t\tpublic getLevel():number {\n\t\t\treturn this.level;\n\t\t}\n\n\t\tpublic getFrom():Direction {\n\t\t\treturn this.from;\n\t\t}\n\n\t\tpublic getTo():Direction {\n\t\t\treturn this.to;\n\t\t}\n\n\t\tpublic _setFrom(from:Direction):void {\n\t\t\tthis.from = from;\n\t\t}\n\n\t\tpublic _setTo(to:Direction):void {\n\t\t\tthis.to = to;\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[Waypoint] path = '\" + this.path + \"', level = \" + this.level + \", from = \" + getDirectionString(this.from) + \", to = \" + getDirectionString(this.to);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate path:string;\n\t\tprivate level:number;\n\t\tprivate from:Direction;\n\t\tprivate to:Direction;\n\t}\n}","/* ---------- project ---------- */\n/// <reference path=\"alm/util/Easing.ts\" />\n/// <reference path=\"alm/event/Event.ts\" />\n/// <reference path=\"alm/event/EventDispatcher.ts\" />\n\n/// <reference path=\"cmd/CommandState.ts\" />\n/// <reference path=\"cmd/CommandEvent.ts\" />\n/// <reference path=\"cmd/Command.ts\" />\n/// <reference path=\"cmd/CommandList.ts\" />\n/// <reference path=\"cmd/Break.ts\" />\n/// <reference path=\"cmd/Return.ts\" />\n/// <reference path=\"cmd/Log.ts\" />\n/// <reference path=\"cmd/Wait.ts\" />\n/// <reference path=\"cmd/Func.ts\" />\n/// <reference path=\"cmd/Listen.ts\" />\n/// <reference path=\"cmd/Tween.ts\" />\n/// <reference path=\"cmd/Serial.ts\" />\n/// <reference path=\"cmd/Parallel.ts\" />\n\n/// <reference path=\"alm/geom/Vector2.ts\" />\n/// <reference path=\"alm/geom/Vector3.ts\" />\n/// <reference path=\"alm/geom/Rectangle.ts\" />\n/// <reference path=\"alm/util/Hash.ts\" />\n/// <reference path=\"alm/util/Arr.ts\" />\n/// <reference path=\"alm/util/Num.ts\" />\n/// <reference path=\"alm/util/Str.ts\" />\n/// <reference path=\"alm/util/Loc.ts\" />\n/// <reference path=\"alm/util/Boxer.ts\" />\n/// <reference path=\"alm/util/Raffle.ts\" />\n/// <reference path=\"alm/util/Rotator.ts\" />\n/// <reference path=\"alm/util/Logger.ts\" />\n/// <reference path=\"alm/util/Timer.ts\" />\n/// <reference path=\"alm/util/TimerEvent.ts\" />\n/// <reference path=\"alm/util/JQueryUtil.ts\" />\n/// <reference path=\"alm/util/CommandUtil.ts\" />\n/// <reference path=\"alm/loader/AssetLoader.ts\" />\n/// <reference path=\"alm/loader/AssetLoaderEvent.ts\" />\n/// <reference path=\"alm/view/View.ts\" />\n/// <reference path=\"alm/browser/DeviceInfo.ts\" />\n/// <reference path=\"alm/browser/LocalStorage.ts\" />\n/// <reference path=\"alm/browser/KeyWatcher.ts\" />\n/// <reference path=\"alm/browser/KeyWatcherEvent.ts\" />\n/// <reference path=\"alm/browser/WindowWatcher.ts\" />\n/// <reference path=\"alm/browser/WindowWatcherEvent.ts\" />\n\n/// <reference path=\"scn/Scene.ts\" />\n/// <reference path=\"scn/SceneEvent.ts\" />\n/// <reference path=\"scn/SceneManager.ts\" />\n/// <reference path=\"scn/SceneManagerEvent.ts\" />\n/// <reference path=\"scn/SceneTransferInfo.ts\" />\n/// <reference path=\"scn/SceneState.ts\" />\n/// <reference path=\"scn/core/Direction.ts\" />\n/// <reference path=\"scn/core/RootScene.ts\" />\n/// <reference path=\"scn/core/Waypoint.ts\" />\n\n\nnamespace alm {\n\n\t// Library version info\n\texport function getVersion():string {\n\t\treturn \"0.0.1\";\n\t}\n\n\t// Credit info\n\tconst style:string = \"color:#999;\";\n\tconst print:Function = console.debug;\n\tprint(\"%c+ + + + + + + + + + + + + + + + + + + + + + + + + +\", style);\n\tprint(\"%c+ alumican.js\", style);\n\tprint(\"%c+ version \" + getVersion(), style);\n\tprint(\"%c+ http://alumican.net\", style);\n\tprint(\"%c+ https://github.com/alumican/alumican.js\", style);\n\tprint(\"%c+ + + + + + + + + + + + + + + + + + + + + + + + + +\", style);\n\tprint(\"\");\n}"]}
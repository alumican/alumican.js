{"version":3,"sources":["../src/util/Logger.ts","../src/util/Arr.ts","../src/util/Boxer.ts","../src/util/CommandUtil.ts","../src/util/DeviceInfo.ts","../src/util/JQueryUtil.ts","../src/util/LocalStorage.ts","../src/util/Num.ts","../src/util/Raffle.ts","../src/util/Rotator.ts","../src/util/Str.ts","../src/geom/Vector2.ts","../src/geom/Vector3.ts","../src/geom/Rectangle.ts","../src/job/Timer.ts","../src/event/TimerEvent.ts","../src/job/KeyWatcher.ts","../src/event/KeyWatcherEvent.ts","../src/var/KeyCode.ts","../src/job/ResizeWatcher.ts","../src/event/ResizeWatcherEvent.ts","../src/job/ScrollWatcher.ts","../src/event/ScrollWatcherEvent.ts","../src/job/AssetLoader.ts","../src/event/AssetLoaderEvent.ts","../src/view/View.ts"],"names":["trace","messages","_i","arguments","length","alm","Logger","info","apply","caller","throwWarn","target","message","condition","warnIf","throwError","errorIf","Arr","sequence","count","init","step","result","Array","v","i","unique","list","filter","x","self","indexOf","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","p","m","n","Align","ScaleMode","Boxer","resize","bounds","scaleMode","align","ShowAll","Middle_Center","tx","ty","y","tw","width","th","height","bx","by","bw","bh","NoBorder","ratioW","ratioH","ratio","ExactFit","Rectangle","Top_Left","Middle_Left","Bottom_Left","Top_Right","Middle_Right","Bottom_Right","Top_Center","Bottom_Center","CommandUtil","stop","command","interrupt","execute","commands","c","cmd","Serial","addCommand","DeviceInfo","initialize","this","isInitialized","u","window","navigator","userAgent","toLowerCase","isTablet","isMobile","isDesktop","isIOS","isAndroid","isRetina","Math","round","devicePixelRatio","getIsDesktop","getIsTablet","getIsMobile","getIsIOS","getIsAndroid","getIsRetina","JQueryUtil","fadeTo","opacity","duration","easing","switchDisplayTo","switchVisibility","o","value","parseInt","css","tween","Tween","fadeInJquery","fadeOutJquery","LocalStorage","save","key","expiredAt","isAvailable","record","JSON","stringify","localStorage","setItem","saveWithTerm","milliseconds","Date","getTime","load","defaultValue","parse","getItem","removeItem","remove","isAvailable_","error","toMilliseconds","dates","hours","minutes","seconds","LoggerLevel","verbose","level","Verbose","console","debug","prototype","slice","call","concat","Info","log","warn","Warn","Error","Num","map","srcMin","srcMax","dstMin","dstMax","clamp","random","min","max","dist","x1","y1","x2","y2","squared","dx","dy","sqrt","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","from","to","PI3","PI2","PI","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","project","Raffle","values","set","initValues","restValues","restCount","isEmpty","onCheck","isAutoResetEnabled","reset","get","index","floor","splice","getRestCount","getIsEmply","getIsAutoResetEnabled","setIsAutoResetEnabled","enabled","createIndices","Rotator","angle","velocity","setAngle","setVelocity","getAngle","getVelocity","update","getSin","sin","getCos","cos","getTan","tan","getMagnitude","getVector","xy","Str","toTimeString","h","toString","s","substr","Vector2","copyTo","point","getClone","zero","normalize","l","getLength","getSquareDistance","getDistance","Vector3","z","dz","rect","getTop","getBottom","getLeft","getRight","getTopLeft","getTopRight","getBottomLeft","getBottomRight","Timer","_super","interval","repeatCount","_this","timerHandler","tStartTime","getCurrentTime","elapsedCount","isCompleted","tInterval","startInterval","dispatch","TimerEvent","TICK","COMPLETE","isRunning","tId","__extends","start","tRestTime","stopInterval","restart","valueOf","setInterval","clearInterval","eventType","dispatchEvent","getIsRunning","getInterval","getElapsedTime","getRestTime","getElapsedCount","getRepeatCount","setRepeatCount","EventDispatcher","eventTarget","clone","getType","getTarget","Event","KeyWatcher","eventDispatcher","$window","jQuery","on","windowKeyDownHandler","windowKeyUpHandler","off","addEventListener","listener","removeEventListener","getIsAnyKeyPressed","pressedKeyCount","getIsKeyPressed","keyCode","isKeyPressedByKeyCode","getIsContinuousPressEnabled","isContinuousPressEnabled","setIsContinuousPressEnabled","event","KeyWatcherEvent","KEY_DOWN","KEY_UP","pressTimer","isLongPressed","jqueryEvent","altKey","ctrlKey","shiftKey","KeyCode","ResizeWatcher","windowResizeHandler","windowWidth","windowHeight","getWindowWidth","getWindowHeight","ResizeWatcherEvent","RESIZE","ScrollWatcher","windowScrollHandler","scrollTop","scrollBottom","calcScrolledPosition","calcScrolledPositionRatio","getScrollTop","getScrollBottom","ScrollWatcherEvent","SCROLL","AssetLoader","isLoading_","currentCount","totalCount","loadingQueries","loadingQueryIndex","queriesByQueryId","queriesByUrl","texturesByUrl","texturesByQueryId","requireJQueryJson","url","addQuery","requireThreeTexture","type","param","id","query","LoaderQuery","String","push","next","AssetLoaderEvent","PROGRESS","query_1","isLoading","isLoadComplete","getJSON","data","content","onLoad","texture","THREE","TextureLoader","onError","addLoadUpdateListener","removeLoadUpdateListener","addLoadCompleteListener","removeLoadCompleteListener","getQueryByQueryId","queryId","getQueryByUrl","getCurrentCount","getTotalCount","getTexturesByUrl","getTexturesByQueryId","textureId","progress","loadedCount","ERROR","View","view","isInitializing","isReady","isShowing","isShown","isHiding","autoHideWithInit","name","implInitialize","hide","ready","implReady","finalize","implFinalize","show","useTransition","getShowCommand","getHideCommand","Func","showCommand","hideCommand","insertCommand","implShow","implHide","getIsInitializing","getIsInitialized","getIsReady","getIsShowing","getIsShown","getIsHiding","getIsHidden","getView","getAutoHideWithInit","setAutoHideWithInit","getName","setName"],"mappings":"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","file":"alumican.min.js","sourcesContent":["/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport enum LoggerLevel {\n\t\tVerbose = 0,\n\t\tInfo = 1,\n\t\tWarn = 2,\n\t\tError = 3,\n\t\tSilent = 4,\n\t}\n\n\texport class Logger {\n\n\t\tpublic static level: number = LoggerLevel.Verbose;\n\n\t\tpublic static verbose(...messages:any[]): void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) console.debug.apply(console, Array.prototype.slice.call([\"Verbose: \"].concat(messages)));\n\t\t}\n\n\t\tpublic static info(...messages:any[]): void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) console.log.apply(console, Array.prototype.slice.call([\"Info   : \"].concat(messages)));\n\t\t}\n\n\t\tpublic static warn(...messages:any[]): void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) console.warn.apply(console, Array.prototype.slice.call([\"Warn   : \"].concat(messages)));\n\t\t}\n\n\t\tpublic static error(...messages:any[]): void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) console.error.apply(console, Array.prototype.slice.call([\"Error  : \"].concat(messages)));\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true): void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) Logger.warn(message + \" : \", target);\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true): void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) Logger.error(message + \" : \", target);\n\t\t}\n\t}\n}\n\nfunction trace(...messages:any[]):void {\n\talm.Logger.info.apply(trace.caller, arguments);\n}\n\nfunction throwWarn(target:any, message:string, condition:boolean = true):void {\n\talm.Logger.warnIf.apply(null, arguments);\n}\n\nfunction throwError(target:any, message:string, condition:boolean = true):void {\n\talm.Logger.errorIf.apply(null, arguments);\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Arr {\n\n\t\t/**\n\t\t * 等差数列を生成する\n\t\t * @param {number} count 要素数\n\t\t * @param {number} init 初期値\n\t\t * @param {number} step 等差\n\t\t * @returns {number[]} 出力配列\n\t\t */\n\t\tpublic static sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\t\tconst result:number[] = new Array(count);\n\t\t\tlet v:number = init;\n\t\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\t\tresult[i] = v;\n\t\t\t\tv += step;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * 重複を削除したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static unique<T>(list:T[]):T[] {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) === i;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * 重複のみを抽出したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\t\tif (unique) {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2つの入力配列に対して総当たり戦をおこなう\n\t\t * @param {T[]} list1 入力配列1\n\t\t * @param {T[]} list2 入力配列2\n\t\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t\t * @param callback.count コールバックの呼ばれた回数\n\t\t * @param callback.index1 入力配列1の現在のインデックス\n\t\t * @param callback.index2 入力配列2の現在のインデックス\n\t\t * @param callback.element1 入力配列1の現在の要素\n\t\t * @param callback.element2 入力配列2の現在の要素\n\t\t */\n\t\tpublic static roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\t\tlet i:number, j:number, p:number = 1;\n\t\t\tconst m:number = list1.length;\n\t\t\tconst n:number = list2.length;\n\t\t\tfor (i = 0; i < m; ++i) {\n\t\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport enum Align {\n\t\tTop_Left,\n\t\tTop_Center,\n\t\tTop_Right,\n\t\tMiddle_Left,\n\t\tMiddle_Center,\n\t\tMiddle_Right,\n\t\tBottom_Left,\n\t\tBottom_Center,\n\t\tBottom_Right\n\t}\n\n\texport enum ScaleMode {\n\t\tExactFit,\n\t\tShowAll,\n\t\tNoBorder,\n\t\tNoScale,\n\t}\n\n\texport class Boxer {\n\n\t\tpublic static resize(target:Rectangle, bounds:Rectangle, scaleMode:ScaleMode = ScaleMode.ShowAll, align:Align = Align.Middle_Center):Rectangle {\n\t\t\tlet tx:number = target.x;\n\t\t\tlet ty:number = target.y;\n\t\t\tlet tw:number = target.width;\n\t\t\tlet th:number = target.height;\n\n\t\t\tconst bx:number = bounds.x;\n\t\t\tconst by:number = bounds.y;\n\t\t\tconst bw:number = bounds.width;\n\t\t\tconst bh:number = bounds.height;\n\n\t\t\tswitch (scaleMode) {\n\t\t\t\tcase ScaleMode.ShowAll:\n\t\t\t\tcase ScaleMode.NoBorder:\n\t\t\t\t\tconst ratioW:number = bw / tw;\n\t\t\t\t\tconst ratioH:number = bh / th;\n\t\t\t\t\tconst ratio:number = scaleMode == ScaleMode.ShowAll ? (ratioW < ratioH ? ratioW : ratioH) : (ratioW > ratioH ? ratioW : ratioH);\n\t\t\t\t\ttw *= ratio;\n\t\t\t\t\tth *= ratio;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ScaleMode.ExactFit:\n\t\t\t\t\treturn new Rectangle(bx, by, bw, bh);\n\t\t\t}\n\n\t\t\ttx = bx + ((align == Align.Top_Left || align == Align.Middle_Left || align == Align.Bottom_Left) ? 0 :\n\t\t\t\t(align == Align.Top_Right || align == Align.Middle_Right || align == Align.Bottom_Right) ? (bw - tw) : (bw - tw) / 2);\n\t\t\tty = by + ((align == Align.Top_Left || align == Align.Top_Center || align == Align.Top_Right) ? 0 :\n\t\t\t\t(align == Align.Bottom_Left || align == Align.Bottom_Center || align == Align.Bottom_Right) ? (bh - th) : (bh - th) / 2);\n\n\t\t\treturn new Rectangle(tx, ty, tw, th);\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class CommandUtil {\n\n\t\tpublic static stop(command:cmd.Command):any {\n\t\t\tif (command) command.interrupt();\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic static sequence(execute:boolean, ...commands:(cmd.Command|Function)[]):cmd.Serial {\n\t\t\tconst c:cmd.Serial = new cmd.Serial();\n\t\t\tc.addCommand(...commands);\n\t\t\tif (execute) c.execute();\n\t\t\treturn c;\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class DeviceInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tconst u:string = window.navigator.userAgent.toLowerCase();\n\n\t\t\tthis.isTablet = (u.indexOf(\"windows\") != -1 && u.indexOf(\"touch\") != -1)\n\t\t\t\t|| u.indexOf(\"ipad\") != -1\n\t\t\t\t|| (u.indexOf(\"android\") != -1 && u.indexOf(\"mobile\") == -1)\n\t\t\t\t|| (u.indexOf(\"firefox\") != -1 && u.indexOf(\"tablet\") != -1)\n\t\t\t\t|| u.indexOf(\"kindle\") != -1\n\t\t\t\t|| u.indexOf(\"silk\") != -1\n\t\t\t\t|| u.indexOf(\"playbook\") != -1;\n\n\t\t\tthis.isMobile = (u.indexOf(\"windows\") != -1 && u.indexOf(\"phone\") != -1)\n\t\t\t\t|| u.indexOf(\"iphone\") != -1\n\t\t\t\t|| u.indexOf(\"ipod\") != -1\n\t\t\t\t|| (u.indexOf(\"android\") != -1 && u.indexOf(\"mobile\") != -1)\n\t\t\t\t|| (u.indexOf(\"firefox\") != -1 && u.indexOf(\"mobile\") != -1)\n\t\t\t\t|| u.indexOf(\"blackberry\") != -1;\n\n\t\t\tthis.isDesktop = !this.isTablet && !this.isMobile;\n\n\t\t\tthis.isIOS = u.indexOf(\"ipad\") != -1 || u.indexOf(\"iphone\") != -1 || u.indexOf(\"ipod\") != -1;\n\t\t\tthis.isAndroid = u.indexOf(\"android\") != -1 && u.indexOf(\"mobile\") != -1;\n\n\t\t\tthis.isRetina = Math.round(window.devicePixelRatio) == 2;\n\t\t}\n\n\t\tpublic static getIsDesktop():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDesktop;\n\t\t}\n\n\t\tpublic static getIsTablet():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTablet;\n\t\t}\n\n\t\tpublic static getIsMobile():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isMobile;\n\t\t}\n\n\t\tpublic static getIsIOS():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIOS;\n\t\t}\n\n\t\tpublic static getIsAndroid():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isAndroid;\n\t\t}\n\n\t\tpublic static getIsRetina():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isRetina;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isDesktop:boolean;\n\t\tprivate static isTablet:boolean;\n\t\tprivate static isMobile:boolean;\n\n\t\tprivate static isRetina:boolean;\n\n\t\tprivate static isIOS:boolean;\n\t\tprivate static isAndroid:boolean;\n\n\t\tprivate static isInitialized:boolean = false;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class JQueryUtil {\n\n\t\tpublic static fadeTo(target:JQuery, opacity:number, duration:number, easing:cmd.EasingFunction, switchDisplayTo:string = \"\", switchVisibility:boolean = false, execute:boolean = true):cmd.Tween {\n\t\t\tlet o:Object = { value: parseInt(target.css(\"opacity\")) };\n\t\t\tconst tween:cmd.Tween = new cmd.Tween(o, { value: opacity }, null, duration, easing, ():void => {\n\t\t\t\tif (opacity > 0) {\n\t\t\t\t\tif (switchDisplayTo != \"\") target.css(\"display\", switchDisplayTo);\n\t\t\t\t\tif (switchVisibility) target.css(\"visibility\", \"visible\");\n\t\t\t\t}\n\t\t\t}, ():void => {\n\t\t\t\ttarget.css(\"opacity\", o[\"value\"]);\n\t\t\t}, ():void => {\n\t\t\t\tif (opacity <= 0) {\n\t\t\t\t\tif (switchDisplayTo != \"\") target.css(\"display\", \"none\");\n\t\t\t\t\tif (switchVisibility) target.css(\"visibility\", \"hidden\");\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (execute) tween.execute();\n\t\t\treturn tween;\n\t\t}\n\n\t\tpublic static fadeInJquery(target:JQuery, duration:number, easing:cmd.EasingFunction, switchDisplayTo:string = \"\", switchVisibility:boolean = false, execute:boolean = true):cmd.Tween {\n\t\t\treturn JQueryUtil.fadeTo(target, 1, duration, easing, switchDisplayTo, switchVisibility, execute);\n\t\t}\n\n\t\tpublic static fadeOutJquery(target:JQuery, duration:number, easing:cmd.EasingFunction, switchDisplayTo:string = \"\", switchVisibility:boolean = false, execute:boolean = true):cmd.Tween {\n\t\t\treturn JQueryUtil.fadeTo(target, 0, duration, easing, switchDisplayTo, switchVisibility, execute);\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class LocalStorage {\n\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param expiredAt 有効期限（UNIXミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any, expiredAt:number = -1):boolean {\n\t\t\tif (!LocalStorage.isAvailable()) return false;\n\t\t\tconst record:{ value:string; expiredAt:number } = { value:JSON.stringify(value), expiredAt: expiredAt };\n\t\t\tlocalStorage.setItem(key, JSON.stringify(record));\n\t\t\treturn true;\n\t\t}\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param minutes 保存期間（分）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static saveWithTerm(key:string, value:any, milliseconds:number = -1):boolean {\n\t\t\tconst expiredAt:number = milliseconds > 0 ? new Date().getTime() + milliseconds :-1;\n\t\t\treturn LocalStorage.save(key, value, expiredAt);\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!LocalStorage.isAvailable()) return defaultValue;\n\t\t\tconst record:{ value:string; expiredAt:number } = JSON.parse(localStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\t// データが見つかった\n\t\t\t\tif (record.expiredAt > 0) {\n\t\t\t\t\t// 期限付きデータ\n\t\t\t\t\tif (new Date().getTime() < record.expiredAt) {\n\t\t\t\t\t\t// 有効期限内\n\t\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 有効期限を過ぎているので破棄\n\t\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t\t\treturn defaultValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 永続データ\n\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!LocalStorage.isAvailable()) return;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (LocalStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem(\"__CKECK__\", \"__CKECK__\");\n\t\t\t\t\tlocalStorage.removeItem(\"__CKECK__\");\n\t\t\t\t\tLocalStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLocalStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn LocalStorage.isAvailable_;\n\t\t}\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\t\t/**\n\t\t * 各時間の尺度ミリ秒で合算する\n\t\t * @param dates 日\n\t\t * @param hours 時\n\t\t * @param minutes 分\n\t\t * @param seconds 秒\n\t\t * @param milliseconds ミリ秒\n\t\t * @returns {number} 合算されたミリ秒\n\t\t */\n\t\tpublic static toMilliseconds(dates:number = 0, hours:number = 0, minutes:number = 0, seconds:number = 0, milliseconds:number = 0):number {\n\t\t\treturn milliseconds + (seconds + (minutes + (hours + dates * 24) * 60) * 60) * 1000;\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Num {\n\n\t\t/**\n\t\t * 値を特定の範囲内にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcMin マッピング元の最小値\n\t\t * @param {number} srcMax マッピング元の最大値\n\t\t * @param {number} dstMin マッピング先の最小値\n\t\t * @param {number} dstMax マッピング先の最大値\n\t\t * @param {boolean} clamp trueの場合は入力値をsrcMin, srcMaxの範囲内に丸める\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static map(value:number, srcMin:number, srcMax:number, dstMin:number, dstMax:number, clamp:boolean = true):number {\n\t\t\tif (srcMin == srcMax) return dstMin;\n\t\t\tif (clamp) {\n\t\t\t\tif (srcMin < srcMax) {\n\t\t\t\t\tif (value < srcMin) value = srcMin;\n\t\t\t\t\telse if (value > srcMax) value = srcMax;\n\t\t\t\t} else {\n\t\t\t\t\tif (value < srcMax) value = srcMax;\n\t\t\t\t\telse if (value > srcMin) value = srcMin;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (value - srcMin) * (dstMax - dstMin) / (srcMax - srcMin) + dstMin;\n\t\t}\n\n\t\t/**\n\t\t * 乱数を取得する\n\t\t * @param {number} min 最小知\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static random(min:number = 0, max:number = 1):number {\n\t\t\treturn min + (max - min) * Math.random();\n\t\t}\n\n\t\t/**\n\t\t * 値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clamp(value:number, min:number, max:number):number {\n\t\t\treturn value < min ? min : (value > max ? max : value);\n\t\t}\n\n\t\t/**\n\t\t * 2点間の距離を取得する\n\t\t * @param {number} x1 点1のx座標\n\t\t * @param {number} y1 点1のy座標\n\t\t * @param {number} x2 点2のx座標\n\t\t * @param {number} y2 点2のy座標\n\t\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t\t * @returns {number} 距離\n\t\t */\n\t\tpublic static dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\t\tconst dx:number = x2 - x1;\n\t\t\tconst dy:number = y2 - y1;\n\t\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\n\t\t/**\n\t\t * 値をラジアン法から弧度法に変換する\n\t\t * @param {number} radian ラジアン法\n\t\t * @returns {number} 弧度法\n\t\t */\n\t\tpublic static radToDeg(radian:number):number {\n\t\t\treturn radian * Num.RAD2DEG;\n\t\t}\n\n\t\t/**\n\t\t * 値を弧度法からラジアン法に変換する\n\t\t * @param {number} radian 弧度法\n\t\t * @returns {number} ラジアン法\n\t\t */\n\t\tpublic static degToRad(degree:number):number {\n\t\t\treturn degree * Num.DEG2RAD;\n\t\t}\n\n\t\t/**\n\t\t * ある角度からある角度への回転角度を取得する\n\t\t * @param {number} from 元の角度\n\t\t * @param {number} to 目標の角度\n\t\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t\t * @returns {number} 回転角度\n\t\t */\n\t\tpublic static turn(from:number, to:number, radian:boolean = true):number {\n\t\t\treturn radian ? ((to - from + Num.PI3) % Num.PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONST\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static PI2:number = Math.PI * 2;\n\t\tpublic static PI3:number = Math.PI * 3;\n\t\tpublic static PI4:number = Math.PI * 4;\n\t\tpublic static PI5:number = Math.PI * 5;\n\t\tpublic static PI6:number = Math.PI * 6;\n\t\tpublic static PI_2:number = Math.PI / 2;\n\t\tpublic static PI_3:number = Math.PI / 3;\n\t\tpublic static PI_4:number = Math.PI / 4;\n\t\tpublic static PI_6:number = Math.PI / 6;\n\n\t\tprivate static RAD2DEG:number = 180 / Math.PI;\n\t\tprivate static DEG2RAD:number = Math.PI / 180;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace project {\n\n\texport class Raffle<T = any> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(values:T[] = null) {\n\t\t\tif (values) {\n\t\t\t\tthis.set(values);\n\t\t\t} else {\n\t\t\t\tthis.initValues = this.restValues = null;\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = true;\n\t\t\t}\n\t\t\tthis.onCheck = null;\n\t\t\tthis.isAutoResetEnabled = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(values:T[]):void {\n\t\t\tthis.initValues = values.concat();\n\t\t\tthis.reset();\n\t\t}\n\n\t\tpublic get():T {\n\t\t\tif (this.isEmpty && this.isAutoResetEnabled) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\tconst index:number = Math.floor(Math.random() * this.restCount);\n\t\t\tconst value:T = this.restValues[index];\n\t\t\tlet result:boolean = true;\n\t\t\tif (this.onCheck) result = this.onCheck(value);\n\t\t\tif (result) {\n\t\t\t\tthis.restValues.splice(index, 1);\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.restValues = this.initValues.concat();\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t}\n\n\t\tpublic getRestCount():number {\n\t\t\treturn this.restCount;\n\t\t}\n\n\t\tpublic getIsEmply():boolean {\n\t\t\treturn this.isEmpty;\n\t\t}\n\n\t\tpublic getIsAutoResetEnabled():boolean {\n\t\t\treturn this.isAutoResetEnabled;\n\t\t}\n\n\t\tpublic setIsAutoResetEnabled(enabled:boolean):void {\n\t\t\tthis.isAutoResetEnabled = enabled;\n\t\t}\n\n\t\tpublic static createIndices(count:number):Raffle<number> {\n\t\t\tconst values:number[] = new Array(count);\n\t\t\tfor (let i:number = 0; i < count; ++i) values[i] = i;\n\t\t\treturn new Raffle<number>(values);\n\t\t}\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic onCheck:(value:T) => boolean;\n\n\t\tprivate isAutoResetEnabled:boolean;\n\t\tprivate isEmpty:boolean;\n\t\tprivate restCount:number;\n\t\tprivate restValues:T[];\n\t\tprivate initValues:T[];\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Rotator {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(angle:number = 0, velocity:number = 0, radian:boolean = true) {\n\t\t\tthis.setAngle(angle, radian);\n\t\t\tthis.setVelocity(velocity, radian);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getAngle(radian:boolean = true):number {\n\t\t\treturn radian ? this.angle : (this.angle * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setAngle(angle:number, radian:boolean = true):void {\n\t\t\tthis.angle = radian ? angle : (angle * Math.PI / 180);\n\t\t}\n\n\t\tpublic getVelocity(radian:boolean = true):number {\n\t\t\treturn radian ? this.velocity : (this.velocity * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setVelocity(velocity:number, radian:boolean = true):void {\n\t\t\tthis.velocity = radian ? velocity : (velocity * Math.PI / 180);\n\t\t}\n\n\t\tpublic update():void {\n\t\t\tthis.angle += this.velocity;\n\t\t}\n\n\t\tpublic getSin(length:number = 1):number {\n\t\t\treturn length * Math.sin(this.angle);\n\t\t}\n\n\t\tpublic getCos(length:number = 1):number {\n\t\t\treturn length * Math.cos(this.angle);\n\t\t}\n\n\t\tpublic getTan(length:number = 1):number {\n\t\t\treturn length * Math.tan(this.angle);\n\t\t}\n\n\t\tpublic getMagnitude(length:number = 1):number {\n\t\t\treturn length * (1 + Math.sin(this.angle)) / 2;\n\t\t}\n\n\t\tpublic getVector(length:number = 1, xy:{ x:number, y:number } = null):{ x:number, y:number } {\n\t\t\tif (xy != null) {\n\t\t\t\txy.x = this.getCos(length);\n\t\t\t\txy.y = this.getSin(length);\n\t\t\t} else {\n\t\t\t\treturn { x: this.getCos(length), y: this.getSin(length) };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate angle:number;\n\t\tprivate velocity:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace project {\n\n\texport class Str {\n\n\t\t/**\n\t\t * 時間を h:mm:ss の形式で取得する\n\t\t * @param {number} hours 時\n\t\t * @param {number} minutes 分\n\t\t * @param {number} seconds 秒\n\t\t * @returns {string} h:mm:ss 形式の文字列\n\t\t */\n\t\tpublic static toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\t\tseconds += minutes * 60 + hours * 3600;\n\t\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\t\tlet s:string = (\"0\" + Math.floor(seconds % 60)).substr(-2, 2);\n\t\t\tif (h != \"0\") {\n\t\t\t\treturn h + \":\" + (\"0\" + m).substr(-2, 2) + \":\" + s;\n\t\t\t} else {\n\t\t\t\treturn m + \":\" + s;\n\t\t\t}\n\t\t}\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Vector2 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0) {\n\t\t\tthis.set(x, y);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic copyTo(point:Vector2):void {\n\t\t\tpoint.set(this.x, this.y);\n\t\t}\n\n\t\tpublic getClone():Vector2 {\n\t\t\treturn new Vector2(this.x, this.y);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector2):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tpublic getDistance(point:Vector2):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Vector3 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, z:number = 0) {\n\t\t\tthis.set(x, y, z);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, z:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic copyTo(point:Vector3):void {\n\t\t\tpoint.set(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic getClone():Vector3 {\n\t\t\treturn new Vector3(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t\tthis.z /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector3):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\tconst dz:number = point.z - this.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tpublic getDistance(point:Vector3):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic z:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Rectangle {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0) {\n\t\t\tthis.set(x, y, width, height);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, width:number, height:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tpublic copyTo(rect:Rectangle):void {\n\t\t\trect.set(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getClone():Rectangle {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getTop():number {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tpublic getBottom():number {\n\t\t\treturn this.y + this.height;\n\t\t}\n\n\t\tpublic getLeft():number {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tpublic getRight():number {\n\t\t\treturn this.x + this.width;\n\t\t}\n\n\t\tpublic getTopLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getTop());\n\t\t}\n\n\t\tpublic getTopRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getTop());\n\t\t}\n\n\t\tpublic getBottomLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getBottom());\n\t\t}\n\n\t\tpublic getBottomRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getBottom());\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic width:number;\n\t\tpublic height:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class Timer extends cmd.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(interval:number = 1000, repeatCount:number = 0) {\n\t\t\tsuper();\n\t\t\tthis.interval = interval;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tId = -1;\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\t\t\tthis.tStartTime = this.getCurrentTime();\n\t\t\tthis.startInterval(this.tRestTime != -1 ? this.tRestTime : this.interval);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tRestTime = this.getCurrentTime() - this.tStartTime;\n\t\t\tthis.stopInterval();\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.stop();\n\t\t\tthis.elapsedCount = 0;\n\t\t\tthis.tRestTime = -1;\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tthis.reset();\n\t\t\tthis.start();\n\t\t}\n\n\n\n\n\n\t\tprivate getCurrentTime():number {\n\t\t\treturn new Date().valueOf();\n\t\t}\n\n\t\tprivate startInterval(interval:number):void {\n\t\t\tthis.stopInterval();\n\t\t\tthis.tInterval = interval;\n\t\t\tthis.tId = window.setInterval(this.timerHandler, this.tInterval);\n\t\t}\n\n\t\tprivate stopInterval():void {\n\t\t\tif (this.tId != -1) {\n\t\t\t\tclearInterval(this.tId);\n\t\t\t\tthis.tId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatch(eventType:string):void {\n\t\t\tthis.dispatchEvent(new TimerEvent(eventType, this, this.elapsedCount, this.repeatCount, this.getRestCount()));\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.tStartTime = this.getCurrentTime();\n\t\t\t++this.elapsedCount;\n\t\t\tlet isCompleted:boolean = false;\n\t\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\t\tisCompleted = true;\n\t\t\t\tthis.stop();\n\t\t\t} else if (this.tInterval != this.interval) {\n\t\t\t\tthis.startInterval(this.interval);\n\t\t\t}\n\t\t\tthis.dispatch(TimerEvent.TICK);\n\t\t\tif (isCompleted) {\n\t\t\t\tthis.dispatch(TimerEvent.COMPLETE);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsRunning():boolean { return this.isRunning; }\n\t\tprivate isRunning:boolean;\n\n\t\tpublic getInterval():number { return this.interval; }\n\t\tpublic setInterval(interval:number):void { this.interval = interval; }\n\t\tprivate interval:number;\n\n\t\tpublic getElapsedTime():number { return this.getCurrentTime() - this.tStartTime; }\n\n\t\tpublic getRestTime():number { return this.interval - this.getElapsedTime(); }\n\n\t\tpublic getElapsedCount():number { return this.elapsedCount; }\n\t\tprivate elapsedCount:number;\n\n\t\tpublic getRepeatCount():number { return this.repeatCount; }\n\t\tpublic setRepeatCount(count:number):void { this.repeatCount = count; }\n\t\tprivate repeatCount:number;\n\n\t\tpublic getRestCount():number { return this.repeatCount - this.elapsedCount; }\n\n\t\tprivate tStartTime:number;\n\t\tprivate tRestTime:number;\n\t\tprivate tInterval:number;\n\t\tprivate tId:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class TimerEvent extends cmd.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = \"tick\";\n\t\tpublic static COMPLETE:string = \"complete\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, elapsedCount:number = 0, repeatCount:number = 0, restCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.elapsedCount = elapsedCount;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.restCount = restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():TimerEvent {\n\t\t\treturn new TimerEvent(this.getType(), this.getTarget(), this.elapsedCount, this.repeatCount, this.restCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[TimerEvent] type = \" + this.getType() + \", elapsedCount = \" + this.elapsedCount + \", repeatCount=\" + this.repeatCount + \", restCount=\" + this.restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic elapsedCount:number;\n\t\tpublic repeatCount:number;\n\t\tpublic restCount:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class KeyWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new cmd.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[KeyWatcher] start\");\n\n\t\t\tconst $window:JQuery = jQuery(window);\n\t\t\t$window.on(\"keydown\", this.windowKeyDownHandler);\n\t\t\t$window.on(\"keyup\", this.windowKeyUpHandler);\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[KeyWatcher] stop\");\n\n\t\t\tconst $window:JQuery = jQuery(window);\n\t\t\t$window.off(\"keydown\", this.windowKeyDownHandler);\n\t\t\t$window.off(\"keyup\", this.windowKeyUpHandler);\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowKeyDownHandler = (event:JQuery.Event):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] == null) {\n\t\t\t\tKeyWatcher.isKeyPressedByKeyCode[keyCode] = true;\n\t\t\t\t++KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t} else if (KeyWatcher.isContinuousPressEnabled) {\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\t\tprivate static windowKeyUpHandler = (event:JQuery.Event):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] != null) {\n\t\t\t\tdelete KeyWatcher.isKeyPressedByKeyCode[keyCode];\n\t\t\t\t--KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_UP, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getIsAnyKeyPressed():boolean { return this.pressedKeyCount > 0; }\n\t\tprivate static pressedKeyCount:number = 0;\n\n\t\tpublic static getIsKeyPressed(keyCode:number):boolean { return this.isKeyPressedByKeyCode[keyCode] != null; }\n\t\tprivate static isKeyPressedByKeyCode:cmd.Hash<boolean> = {};\n\n\n\t\tpublic static getIsContinuousPressEnabled():boolean { return this.isContinuousPressEnabled; }\n\t\tpublic static setIsContinuousPressEnabled(enabled:boolean):void { this.isContinuousPressEnabled = enabled; }\n\t\tprivate static isContinuousPressEnabled:boolean = false;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static pressTimer:alm.Timer = null;\n\t\tprivate static isLongPressed:boolean = false;\n\t\tprivate static eventDispatcher:cmd.EventDispatcher = null;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class KeyWatcherEvent extends cmd.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic KEY_UP:string = \"keyUp\";\n\t\tstatic KEY_DOWN:string = \"keyDown\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, jqueryEvent:JQuery.Event = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.jqueryEvent = jqueryEvent;\n\t\t\tthis.key = this.jqueryEvent.key;\n\t\t\tthis.keyCode = this.jqueryEvent.keyCode;\n\t\t\tthis.altKey = this.jqueryEvent.altKey;\n\t\t\tthis.ctrlKey = this.jqueryEvent.ctrlKey;\n\t\t\tthis.shiftKey = this.jqueryEvent.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():KeyWatcherEvent {\n\t\t\treturn new KeyWatcherEvent(this.getType(), this.getTarget(), this.jqueryEvent);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[KeyWatcherEvent] type = \" + this.getType() + \", key = \" + this.key + \", keyCode = \" + this.keyCode + \", altKey = \" + this.altKey + \", ctrlKey = \" + this.ctrlKey + \", shiftKey = \" + this.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic jqueryEvent:JQuery.Event;\n\t\tpublic key:string;\n\t\tpublic keyCode:number;\n\t\tpublic altKey:boolean;\n\t\tpublic ctrlKey:boolean;\n\t\tpublic shiftKey:boolean;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\n// Original\n// https://github.com/nfriend/ts-keycode-enum\n// License MIT\n\nnamespace alm {\n\n\texport enum KeyCode {\n\n\t\tBackspace = 8,\n\t\tTab = 9,\n\t\tEnter = 13,\n\t\tShift = 16,\n\t\tCtrl = 17,\n\t\tAlt = 18,\n\t\tPauseBreak = 19,\n\t\tCapsLock = 20,\n\t\tEscape = 27,\n\t\tSpace = 32,\n\t\tPageUp = 33,\n\t\tPageDown = 34,\n\t\tEnd = 35,\n\t\tHome = 36,\n\n\t\tLeftArrow = 37,\n\t\tUpArrow = 38,\n\t\tRightArrow = 39,\n\t\tDownArrow = 40,\n\n\t\tInsert = 45,\n\t\tDelete = 46,\n\n\t\tKey0 = 48,\n\t\tKey1 = 49,\n\t\tKey2 = 50,\n\t\tKey3 = 51,\n\t\tKey4 = 52,\n\t\tKey5 = 53,\n\t\tKey6 = 54,\n\t\tKey7 = 55,\n\t\tKey8 = 56,\n\t\tKey9 = 57,\n\n\t\tClosedParen = Key0,\n\t\tExclamationMark = Key1,\n\t\tAtSign = Key2,\n\t\tPoundSign = Key3,\n\t\tHash = PoundSign,\n\t\tDollarSign = Key4,\n\t\tPercentSign = Key5,\n\t\tCaret = Key6,\n\t\tHat = Caret,\n\t\tAmpersand = Key7,\n\t\tStar = Key8,\n\t\tAsterik = Star,\n\t\tOpenParen = Key9,\n\n\t\tA = 65,\n\t\tB = 66,\n\t\tC = 67,\n\t\tD = 68,\n\t\tE = 69,\n\t\tF = 70,\n\t\tG = 71,\n\t\tH = 72,\n\t\tI = 73,\n\t\tJ = 74,\n\t\tK = 75,\n\t\tL = 76,\n\t\tM = 77,\n\t\tN = 78,\n\t\tO = 79,\n\t\tP = 80,\n\t\tQ = 81,\n\t\tR = 82,\n\t\tS = 83,\n\t\tT = 84,\n\t\tU = 85,\n\t\tV = 86,\n\t\tW = 87,\n\t\tX = 88,\n\t\tY = 89,\n\t\tZ = 90,\n\n\t\tLeftWindowKey = 91,\n\t\tRightWindowKey = 92,\n\t\tSelectKey = 93,\n\n\t\tNumpad0 = 96,\n\t\tNumpad1 = 97,\n\t\tNumpad2 = 98,\n\t\tNumpad3 = 99,\n\t\tNumpad4 = 100,\n\t\tNumpad5 = 101,\n\t\tNumpad6 = 102,\n\t\tNumpad7 = 103,\n\t\tNumpad8 = 104,\n\t\tNumpad9 = 105,\n\n\t\tMultiply = 106,\n\t\tAdd = 107,\n\t\tSubtract = 109,\n\t\tDecimalPoint = 110,\n\t\tDivide = 111,\n\n\t\tF1 = 112,\n\t\tF2 = 113,\n\t\tF3 = 114,\n\t\tF4 = 115,\n\t\tF5 = 116,\n\t\tF6 = 117,\n\t\tF7 = 118,\n\t\tF8 = 119,\n\t\tF9 = 120,\n\t\tF10 = 121,\n\t\tF11 = 122,\n\t\tF12 = 123,\n\n\t\tNumLock = 144,\n\t\tScrollLock = 145,\n\n\t\tSemiColon = 186,\n\t\tEquals = 187,\n\t\tComma = 188,\n\t\tDash = 189,\n\t\tPeriod = 190,\n\t\tUnderScore = Dash,\n\t\tPlusSign = Equals,\n\t\tForwardSlash = 191,\n\t\tTilde = 192,\n\t\tGraveAccent = Tilde,\n\n\t\tOpenBracket = 219,\n\t\tClosedBracket = 221,\n\t\tQuote = 222\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class ResizeWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new cmd.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[ResizeWatcher] start\");\n\n\t\t\tjQuery(window).on(\"resize\", this.windowResizeHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[ResizeWatcher] stop\");\n\n\t\t\tjQuery(window).off(\"resize\", this.windowResizeHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tconst $window:JQuery = jQuery(window);\n\t\t\tResizeWatcher.windowWidth = $window.width();\n\t\t\tResizeWatcher.windowHeight = $window.height();\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:ResizeWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:ResizeWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowResizeHandler = (event:JQuery.Event):void => {\n\t\t\tResizeWatcher.apply();\n\t\t\tResizeWatcher.eventDispatcher.dispatchEvent(new ResizeWatcherEvent(ResizeWatcherEvent.RESIZE, ResizeWatcher, event, ResizeWatcher.windowWidth, ResizeWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getWindowWidth():number { return this.windowWidth; }\n\t\tprivate static windowWidth:number = 0;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:cmd.EventDispatcher = null;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class ResizeWatcherEvent extends cmd.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic RESIZE:string = \"resize\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, jqueryEvent:JQuery.Event = null, windowWidth:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.jqueryEvent = jqueryEvent;\n\t\t\tthis.windowWidth = windowWidth;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():ResizeWatcherEvent {\n\t\t\treturn new ResizeWatcherEvent(this.getType(), this.getTarget(), this.jqueryEvent, this.windowWidth, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[ResizeWatcherEvent] type = \" + this.getType() + \", windowWidth = \" + this.windowWidth + \", windowHeight = \" + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic jqueryEvent:JQuery.Event;\n\t\tpublic windowWidth:number;\n\t\tpublic windowHeight:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class ScrollWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new cmd.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[ScrollWatcher] start\");\n\n\t\t\tjQuery(window).on(\"resize\", this.windowScrollHandler);\n\t\t\tjQuery(window).on(\"scroll\", this.windowScrollHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace(\"[ScrollWatcher] stop\");\n\n\t\t\tjQuery(window).off(\"resize\", this.windowScrollHandler);\n\t\t\tjQuery(window).off(\"scroll\", this.windowScrollHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tconst $window:JQuery = jQuery(window);\n\t\t\tthis.windowHeight = $window.height();\n\t\t\tthis.scrollTop = $window.scrollTop();\n\t\t\tthis.scrollBottom = this.scrollTop + this.windowHeight;\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:ScrollWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:ScrollWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static calcScrolledPosition(y:number):number {\n\t\t\treturn y - this.scrollTop;\n\t\t};\n\n\t\tpublic static calcScrolledPositionRatio(y:number):number {\n\t\t\treturn this.calcScrolledPosition(y) / this.windowHeight;\n\t\t}\n\n\n\n\n\n\n\t\tprivate static windowScrollHandler = (event:JQuery.Event):void => {\n\t\t\tScrollWatcher.apply();\n\t\t\tScrollWatcher.eventDispatcher.dispatchEvent(new ScrollWatcherEvent(ScrollWatcherEvent.SCROLL, ScrollWatcher, event, ScrollWatcher.scrollTop, ScrollWatcher.scrollBottom, ScrollWatcher.windowHeight));\n\t\t};\n\n\t\tprivate static windowResizeHandler = (event:JQuery.Event):void => {\n\t\t\tScrollWatcher.apply();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getScrollTop():number { return this.scrollTop; }\n\t\tprivate static scrollTop:number;\n\n\t\tpublic static getScrollBottom():number { return this.scrollBottom; }\n\t\tprivate static scrollBottom:number;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:cmd.EventDispatcher = null;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class ScrollWatcherEvent extends cmd.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SCROLL:string = \"scroll\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, jqueryEvent:JQuery.Event = null, scrollTop:number = 0, scrollBottom:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.jqueryEvent = jqueryEvent;\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollBottom = scrollBottom;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():ScrollWatcherEvent {\n\t\t\treturn new ScrollWatcherEvent(this.getType(), this.getTarget(), this.jqueryEvent, this.scrollTop, this.scrollBottom, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[ScrollWatcherEvent] type = \" + this.getType() + \", scrollTop = \" + this.scrollTop + \", scrollBottom = \" + this.scrollBottom + \", windowHeight = \" + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic jqueryEvent:JQuery.Event;\n\t\tpublic scrollTop:number;\n\t\tpublic scrollBottom:number;\n\t\tpublic windowHeight:number;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class AssetLoader {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.isLoading_ = false;\n\n\t\t\tthis.currentCount = 0;\n\t\t\tthis.totalCount = 0;\n\n\t\t\tthis.loadingQueries = [];\n\t\t\tthis.loadingQueryIndex = -1;\n\n\t\t\tthis.queriesByQueryId = {};\n\t\t\tthis.queriesByUrl = {};\n\n\t\t\tthis.texturesByUrl = {};\n\t\t\tthis.texturesByQueryId = {};\n\n\t\t\tthis.eventDispatcher = new cmd.EventDispatcher();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic requireJQueryJson(url:string):string {\n\t\t\treturn this.addQuery(\"jQuery.JSON\", url, {});\n\t\t}\n\n\t\tpublic requireThreeTexture(url:string):string {\n\t\t\treturn this.addQuery(\"THREE.Texture\", url, {});\n\t\t}\n\n\t\t//public requireJQueryJson(url:string, onLoad?:(data:any)=>void):string {\n\t\t//\treturn this.addQuery(\"jQuery.JSON\", url, { onLoad: onLoad });\n\t\t//}\n\n\t\t//public requireThreeTexture(url:string, onLoad?:(texture:THREE.Texture)=>void, onError?:(message:string)=>void):string {\n\t\t//\treturn this.addQuery(\"THREE.Texture\", url, { onLoad: onLoad, onError: onError });\n\t\t//}\n\n\t\t//public requireThreeTextureAtlas(baseUrl:string, onLoad?:(texture:THREE.Texture)=>void, onError?:(message:string)=>void):string {\n\t\t//\treturn this.addQuery(\"THREE.TextureAtlas\", baseUrl, { onLoad: onLoad, onError: onError });\n\t\t//}\n\n\t\tprivate addQuery(type:string, url:string, param:any):string {\n\t\t\tif (this.queriesByUrl[url]) return this.queriesByUrl[url].id;\n\n\t\t\tconst query:LoaderQuery = new LoaderQuery();\n\t\t\tquery.id = String(AssetLoader.id);\n\t\t\tquery.type = type;\n\t\t\tquery.url = url;\n\t\t\tquery.param = param;\n\t\t\tthis.loadingQueries.push(query);\n\t\t\tthis.queriesByQueryId[query.id] = query;\n\t\t\tthis.queriesByUrl[query.url] = query;\n\t\t\t++AssetLoader.id;\n\t\t\treturn query.id;\n\t\t}\n\n\t\tpublic load():void {\n\t\t\tif (this.isLoading_) return;\n\t\t\tthis.isLoading_ = true;\n\t\t\tthis.loadingQueryIndex = -1;\n\t\t\tthis.next();\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCount = this.loadingQueryIndex + 1;\n\t\t\tthis.totalCount = this.loadingQueries.length;\n\n\t\t\tif (this.currentCount > 0) {\n\t\t\t\tthis.eventDispatcher.dispatchEvent(new AssetLoaderEvent(AssetLoaderEvent.PROGRESS, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\n\t\t\tif (this.currentCount < this.totalCount) {\n\t\t\t\tthis.loadingQueryIndex++;\n\t\t\t\tconst query:LoaderQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\tquery.isLoading = true;\n\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\ttrace(\"[AssetLoader] loading... \" + \"'\" + query.url + \"' as '\" + query.type + \"'\");\n\t\t\t\tswitch (query.type) {\n\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\t// jQuery JSON\n\t\t\t\t\tcase \"jQuery.JSON\":\n\t\t\t\t\t\tjQuery.getJSON(\n\t\t\t\t\t\t\tquery.url,\n\t\t\t\t\t\t\t(data:any):void => {\n\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\tquery.content = data;\n\t\t\t\t\t\t\t\tif (query.param.onLoad)\n\t\t\t\t\t\t\t\t\tquery.param.onLoad(data);\n\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\t// Three.js Texture\n\t\t\t\t\tcase \"THREE.Texture\":\n\t\t\t\t\t\tlet url:string = query.url;\n\t\t\t\t\t\tconst loader:THREE.TextureLoader = new THREE.TextureLoader();\n\t\t\t\t\t\tconst texture:THREE.Texture = loader.load(\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t(texture:THREE.Texture):void => {\n\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\tquery.content = texture;\n\t\t\t\t\t\t\t\tif (query.param.onLoad)\n\t\t\t\t\t\t\t\t\tquery.param.onLoad(texture);\n\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(event:ProgressEvent):void => {\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(event:ErrorEvent):void => {\n\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\tif (query.param.onError)\n\t\t\t\t\t\t\t\t\tquery.param.onError(event.type + \" : \" + event.message);\n\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.texturesByUrl[query.url] = texture;\n\t\t\t\t\t\tthis.texturesByQueryId[query.id] = texture;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t/*\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\t// Three.js Texture Atlas\n\t\t\t\t\tcase \"THREE.TextureAtlas\":\n\t\t\t\t\t\tjQuery.getJSON(\n\t\t\t\t\t\t\tquery.url + \".json\",\n\t\t\t\t\t\t\t(json:any):void => {\n\t\t\t\t\t\t\t\tTHREE.ImageUtils.loadTexture(\n\t\t\t\t\t\t\t\t\tquery.url,\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t(textureAtlas:THREE.Texture):void => {\n\t\t\t\t\t\t\t\t\t\tconst textureAtlasWidth:number = textureAtlas.image.width;\n\t\t\t\t\t\t\t\t\t\tconst textureAtlasHeight:number = textureAtlas.image.height;\n\t\t\t\t\t\t\t\t\t\tconst texturesByTextureId:Hash<THREE.Texture> = {};\n\t\t\t\t\t\t\t\t\t\tconst texture:THREE.Texture;\n\t\t\t\t\t\t\t\t\t\tconst textureFrame:any;\n\t\t\t\t\t\t\t\t\t\tfor (let textureId in json.frames) {\n\t\t\t\t\t\t\t\t\t\t\ttexture = textureAtlas.clone();\n\t\t\t\t\t\t\t\t\t\t\ttextureFrame = json.frames[textureId].frame;\n\t\t\t\t\t\t\t\t\t\t\ttexture.repeat.x = textureFrame.w / textureAtlasWidth;\n\t\t\t\t\t\t\t\t\t\t\ttexture.repeat.y = textureFrame.h / textureAtlasHeight;\n\t\t\t\t\t\t\t\t\t\t\ttexture.offset.x = Math.abs(textureFrame.x) / textureAtlasWidth;\n\t\t\t\t\t\t\t\t\t\t\ttexture.offset.y = Math.abs(textureFrame.y) / textureAtlasHeight;\n\t\t\t\t\t\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\t\t\t\t\t\ttexturesByTextureId[textureId] = texture;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\t\t\tquery.content = texturesByTextureId;\n\t\t\t\t\t\t\t\t\t\tquery.param.onLoad(texturesByTextureId);\n\t\t\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t(message:string):void => {\n\t\t\t\t\t\t\t\t\t\tquery.isLoading = false;\n\t\t\t\t\t\t\t\t\t\tquery.isLoadComplete = true;\n\t\t\t\t\t\t\t\t\t\tquery.param.onError(message);\n\t\t\t\t\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t*/\n\n\t\t\t\t\t// --------------------------------------------------\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.next();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.isLoading_ = false;\n\t\t\t\tthis.loadingQueries = [];\n\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\tthis.eventDispatcher.dispatchEvent(new AssetLoaderEvent(AssetLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\t\t}\n\n\t\tpublic addLoadUpdateListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.addEventListener(AssetLoaderEvent.PROGRESS, listener);\n\t\t}\n\n\t\tpublic removeLoadUpdateListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.removeEventListener(AssetLoaderEvent.PROGRESS, listener);\n\t\t}\n\n\t\tpublic addLoadCompleteListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.addEventListener(AssetLoaderEvent.COMPLETE, listener);\n\t\t}\n\n\t\tpublic removeLoadCompleteListener(listener:(event:AssetLoaderEvent) => void):void {\n\t\t\tthis.eventDispatcher.removeEventListener(AssetLoaderEvent.COMPLETE, listener);\n\t\t}\n\n\t\tpublic getQueryByQueryId(queryId:string):LoaderQuery {\n\t\t\treturn this.queriesByQueryId[queryId];\n\t\t}\n\n\n\t\tpublic getQueryByUrl(url:string):LoaderQuery {\n\t\t\treturn this.queriesByUrl[url];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic isLoading():boolean { return this.isLoading_; }\n\t\tprivate isLoading_:boolean;\n\n\t\tpublic getCurrentCount():number { return this.currentCount; }\n\t\tprivate currentCount:number;\n\n\t\tpublic getTotalCount():number { return this.totalCount; }\n\t\tprivate totalCount:number;\n\n\t\tpublic getTexturesByUrl(url:string):THREE.Texture { return this.texturesByUrl[url]; }\n\t\tprivate texturesByUrl:cmd.Hash<THREE.Texture>;\n\n\t\tpublic getTexturesByQueryId(textureId:string):THREE.Texture { return this.texturesByQueryId[textureId]; }\n\t\tprivate texturesByQueryId:cmd.Hash<THREE.Texture>;\n\n\t\tprivate loadingQueries:LoaderQuery[];\n\t\tprivate loadingQueryIndex:number;\n\n\t\tprivate queriesByQueryId:cmd.Hash<LoaderQuery>;\n\t\tprivate queriesByUrl:cmd.Hash<LoaderQuery>;\n\t\tprivate eventDispatcher:cmd.EventDispatcher;\n\n\t\tprivate static id:number = 0;\n\t}\n\n\n\n\n\n\texport class LoaderQuery {\n\t\tconstructor() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.isLoadComplete = false;\n\t\t}\n\n\t\tpublic id:string;\n\t\tpublic type:string;\n\t\tpublic url:string;\n\t\tpublic param:any;\n\t\tpublic content:any;\n\t\tpublic isLoading:boolean;\n\t\tpublic isLoadComplete:boolean;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport class AssetLoaderEvent extends cmd.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic PROGRESS:string = \"progress\";\n\t\tstatic COMPLETE:string = \"complete\";\n\t\tstatic ERROR:string = \"error\";\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, progress:number = 0, loadedCount:number = 0, totalCount:number = 0, content:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.progress = progress;\n\t\t\tthis.loadedCount = loadedCount;\n\t\t\tthis.totalCount = totalCount;\n\t\t\tthis.content = content;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():AssetLoaderEvent {\n\t\t\treturn new AssetLoaderEvent(this.getType(), this.getTarget(), this.progress, this.loadedCount, this.totalCount, this.content);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn \"[AssetLoaderEvent] type = \" + this.getType() + \", progress = \" + this.progress + \", loadedCount = \" + this.loadedCount + \", totalCount = \" + this.totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic progress:number;\n\t\tpublic loadedCount:number;\n\t\tpublic totalCount:number;\n\t\tpublic content:any;\n\t}\n}","/// <reference path=\"../reference.ts\" />\n\nnamespace alm {\n\n\texport abstract class View<T> extends cmd.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(view:T = null) {\n\t\t\tsuper();\n\t\t\tthis.view = view;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.isReady = false;\n\t\t\tthis.isShowing = false;\n\t\t\tthis.isShown = true;\n\t\t\tthis.isHiding = false;\n\t\t\tthis.autoHideWithInit = true;\n\t\t\tthis.name = \"\";\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic initialize():void {\n\t\t\tif (this.isInitializing || this.isInitialized) return;\n\t\t\tthis.isInitializing = true;\n\t\t\tthis.view = this.implInitialize();\n\t\t\tthrowError(this.name || this, \"view is null\", !this.view);\n\t\t\tthis.hide(false);\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = true;\n\t\t}\n\n\t\tpublic ready():void {\n\t\t\tif (this.isReady) return;\n\t\t\tthrowError(this.name || this, \"ready() was called without being initialized\", !this.isInitialized);\n\t\t\tthis.implReady();\n\t\t\tthis.isReady = true;\n\t\t}\n\n\t\tpublic finalize():void {\n\t\t\tthis.implFinalize();\n\t\t}\n\n\t\tpublic show(useTransition:boolean = true):void {\n\t\t\tif (this.isShown) return;\n\t\t\tthis.getShowCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic hide(useTransition:boolean = true):void {\n\t\t\tif (!this.isShown) return;\n\t\t\tthis.getHideCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic getShowCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (this.isShown) return;\n\t\t\t\t\tthrowError(this.name || this, \"getShowCommand() was called without being initialized\", !this.isInitialized);\n\t\t\t\t\tthrowWarn(this.name || this, \"getShowCommand() was called without being ready\", !this.isReady);\n\t\t\t\t\tthis.isShown = true;\n\t\t\t\t\tthis.isShowing = true;\n\t\t\t\t\tthis.isHiding = false;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.showCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implShow(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getHideCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (!this.isShown) return;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthrowError(this.name || this, \"getHideCommand() was called without being initialized\", !this.isInitialized);\n\t\t\t\t\t\tthrowWarn(this.name || this, \"getHideCommand() was called without being ready\", !this.isReady);\n\t\t\t\t\t}\n\t\t\t\t\tthis.isShown = false;\n\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\tthis.isHiding = true;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hideCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implHide(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t\t\tthis.isHiding = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tprotected abstract implInitialize():T;\n\t\tprotected abstract implReady():void;\n\t\tprotected abstract implFinalize():void;\n\t\tprotected abstract implShow(view:T, useTransition:boolean):cmd.Command;\n\t\tprotected abstract implHide(view:T, useTransition:boolean):cmd.Command;\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsInitializing():boolean { return this.isInitializing; }\n\t\tprivate isInitializing:boolean;\n\n\t\tpublic getIsInitialized():boolean { return this.isInitialized; }\n\t\tprivate isInitialized:boolean;\n\n\t\tpublic getIsReady():boolean { return this.isReady; }\n\t\tprivate isReady:boolean;\n\n\t\tpublic getIsShowing():boolean { return this.isShowing; }\n\t\tprivate isShowing:boolean;\n\n\t\tpublic getIsShown():boolean { return this.isShown; }\n\t\tprivate isShown:boolean;\n\n\t\tpublic getIsHiding():boolean { return this.isHiding; }\n\t\tprivate isHiding:boolean;\n\n\t\tpublic getIsHidden():boolean { return !this.isShown; }\n\n\t\tpublic getView():T { return this.view; }\n\t\tprivate view:T;\n\n\t\tpublic getAutoHideWithInit():boolean { return this.autoHideWithInit; }\n\t\tpublic setAutoHideWithInit(value:boolean):void { this.autoHideWithInit = value; }\n\t\tprivate autoHideWithInit:boolean;\n\n\t\tpublic getName():string { return this.name; }\n\t\tpublic setName(value:string):void { this.name = value; }\n\t\tprivate name:string;\n\n\t\tprivate showCommand:cmd.Command;\n\t\tprivate hideCommand:cmd.Command;\n\t}\n}"]}
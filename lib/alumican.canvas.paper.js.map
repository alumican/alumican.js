{"version":3,"sources":["../src/alumican.canvas.paper/alm/canvas/PaperApp.ts","../src/alumican.canvas.paper/include.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAEA,IAAU,GAAG,CAiEZ;AAjED,WAAU,GAAG;IAAC,IAAA,MAAM,CAiEnB;IAjEa,WAAA,QAAM;QAEnB,IAAO,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC;QAE3C;YAA8B,4BAAO;YAQpC,kBAAY,MAAkB,EAAE,mBAAkC,EAAE,cAA6B;gBAAjE,oCAAA,EAAA,0BAAkC;gBAAE,+BAAA,EAAA,qBAA6B;uBAChG,kBAAM,MAAM,EAAE,mBAAmB,EAAE,CAAC,cAAc,CAAC,CAAC;YACrD,CAAC;YAYS,kCAAe,GAAzB,UAA0B,oBAA0B;gBACnD,KAAK,CAAC,oCAAoC,EAAE,oBAAoB,CAAC,CAAC;gBAElE,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,EAAE,CAAC;gBACpC,IAAI,oBAAoB,CAAC,CAAC,CAAC,EAAE;oBAC5B,KAAK,CAAC,2CAA2C,CAAC,CAAC;oBACnD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC1B;gBACD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CAAC;YAES,mCAAgB,GAA1B;YACA,CAAC;YAES,mCAAgB,GAA1B,UAA2B,UAAiB,EAAE,WAAkB;gBAI/D,IAAM,gBAAgB,GAAU,UAAU,CAAC,mBAAmB,EAAE,CAAC;gBACjE,IAAM,QAAQ,GAAc,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACrD,QAAQ,CAAC,KAAK,GAAG,UAAU,GAAG,gBAAgB,CAAC;gBAC/C,QAAQ,CAAC,MAAM,GAAG,WAAW,GAAG,gBAAgB,CAAC;gBAEjD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,UAAU,GAAG,gBAAgB,CAAC;gBAC3D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW,GAAG,gBAAgB,CAAC;YAC9D,CAAC;YAaF,eAAC;QAAD,CA5DA,AA4DC,CA5D6B,SAAA,OAAO,GA4DpC;QA5DY,iBAAQ,WA4DpB,CAAA;IACF,CAAC,EAjEa,MAAM,GAAN,UAAM,KAAN,UAAM,QAiEnB;AAAD,CAAC,EAjES,GAAG,KAAH,GAAG,QAiEZ","file":"alumican.canvas.paper.js","sourcesContent":["/// <reference path=\"../../include.ts\" />\n\nnamespace alm.canvas {\n\n\timport DeviceInfo = alm.browser.DeviceInfo;\n\n\texport class PaperApp extends BaseApp {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(canvas:HTMLElement, isAutoResizeEnabled:boolean = true, useGlobalPaper:boolean = true) {\n\t\t\tsuper(canvas, isAutoResizeEnabled, [useGlobalPaper]);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected onPlatformSetup(platformSetupOptions:any[]):void {\n\t\t\ttrace(\"[PaperApp] platformSetupOptions : \", platformSetupOptions);\n\n\t\t\tthis.paper = new paper.PaperScope();\n\t\t\tif (platformSetupOptions[0]) {\n\t\t\t\ttrace(\"[PaperApp] setup paper.js in window.paper\");\n\t\t\t\tthis.paper.install(paper);\n\t\t\t}\n\t\t\tthis.paper.setup(this.getCanvas().get(0));\n\t\t}\n\n\t\tprotected onPlatformRender():void {\n\t\t}\n\n\t\tprotected onPlatformResize(stageWidth:number, stageHeight:number):void {\n\t\t\t//this.getCanvas().attr({ width: stageWidth, height: stageHeight });\n\t\t\t//this.getCanvas().css({ width: stageWidth, height: stageHeight });\n\n\t\t\tconst devicePixelRatio:number = DeviceInfo.getDevicePixelRatio();\n\t\t\tconst viewSize:paper.Size = this.paper.view.viewSize;\n\t\t\tviewSize.width = stageWidth * devicePixelRatio;\n\t\t\tviewSize.height = stageHeight * devicePixelRatio;\n\n\t\t\tthis.paper.view.size.width = stageWidth * devicePixelRatio;\n\t\t\tthis.paper.view.size.height = stageHeight * devicePixelRatio;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected paper:paper.PaperScope;\n\t}\n}","/* ---------- dependency ---------- */\n/// <reference types='jquery' />\n/// <reference types='paper' />\n/// <reference path='../../lib/alumican.d.ts' />\n/// <reference path='../../lib/alumican.canvas.d.ts' />\n\n/* ---------- project ---------- */\n/// <reference path='alm/canvas/PaperApp.ts' />"]}
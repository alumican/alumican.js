{"version":3,"sources":["../src/alumican.multitouch/alm/multitouch/Multitouch.ts","../src/alumican.multitouch/alm/multitouch/MultitouchPointer.ts","../src/alumican.multitouch/alm/multitouch/MultitouchEvent.ts","../src/alumican.multitouch/alm/multitouch/TouchUtil.ts","../src/alumican.multitouch/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/// <reference path=\"../../index.ts\" />\n\nnamespace alm.multitouch {\n\n\timport Hash = alm.util.Hash;\n\n\texport class Multitouch extends EventTarget {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(startHitArea:HTMLElement | Window, moveEndHitArea:HTMLElement | Window = null) {\n\t\t\tsuper();\n\n\t\t\tthis.startHitArea = startHitArea;\n\t\t\tthis.moveEndHitArea = moveEndHitArea || window;\n\t\t\tthis.isTouchEventEnabled = TouchUtil.getIsTouchEventSupported();\n\t\t\tthis.touchingPointersByPointerId = {};\n\t\t\tthis.touchingPointerIds = [];\n\t\t\tthis.touchingCount = 0;\n\n\t\t\tconsole.debug('[Multitouch] touchEvent enabled :', this.isTouchEventEnabled);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tconsole.debug('[Multitouch] start');\n\n\t\t\tif (this.isTouchEventEnabled) {\n\t\t\t\tthis.startHitArea.addEventListener('touchstart', this.hitAreaTouchStartHandler);\n\t\t\t\tthis.moveEndHitArea.addEventListener('touchmove', this.hitAreaTouchMoveHandler);\n\t\t\t\tthis.moveEndHitArea.addEventListener('touchend', this.hitAreaTouchEndHandler);\n\t\t\t} else {\n\t\t\t\tthis.startHitArea.addEventListener('mousedown', this.hitAreaMouseDownHandler);\n\t\t\t\tthis.moveEndHitArea.addEventListener('mousemove', this.hitAreaMouseMoveHandler);\n\t\t\t\tthis.moveEndHitArea.addEventListener('mouseup', this.hitAreaMouseUpHandler);\n\t\t\t}\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tconsole.debug('[Multitouch] stop');\n\n\t\t\tif (this.isTouchEventEnabled) {\n\t\t\t\tthis.startHitArea.removeEventListener('touchstart', this.hitAreaTouchStartHandler);\n\t\t\t\tthis.moveEndHitArea.removeEventListener('touchmove', this.hitAreaTouchMoveHandler);\n\t\t\t\tthis.moveEndHitArea.removeEventListener('touchend', this.hitAreaTouchEndHandler);\n\t\t\t} else {\n\t\t\t\tthis.startHitArea.removeEventListener('mousedown', this.hitAreaMouseDownHandler);\n\t\t\t\tthis.moveEndHitArea.removeEventListener('mousemove', this.hitAreaMouseMoveHandler);\n\t\t\t\tthis.moveEndHitArea.removeEventListener('mouseup', this.hitAreaMouseUpHandler);\n\t\t\t}\n\t\t}\n\n\t\tpublic dispose():void {\n\t\t\tthis.stop();\n\t\t\tthis.startHitArea = null;\n\t\t\tthis.moveEndHitArea = null;\n\t\t\tthis.touchingPointersByPointerId = null;\n\t\t\tthis.touchingPointerIds = null;\n\t\t}\n\n\n\t\tprivate hitAreaTouchStartHandler = (event:TouchEvent):void => {\n\t\t\tfor (let pointerId in this.touchingPointersByPointerId) {\n\t\t\t\tconst pointer = this.touchingPointersByPointerId[pointerId];\n\t\t\t\tpointer.isLastTouch = false;\n\t\t\t\tpointer.isLatestTouch = false;\n\t\t\t}\n\n\t\t\tconst changedTouches = event.changedTouches;\n\t\t\tconst changedTouchCount = changedTouches.length;\n\t\t\tfor (let i = 0; i < changedTouchCount; ++i) {\n\t\t\t\tconst touch = changedTouches.item(i);\n\t\t\t\tconst pointer = this.getTouchPointer(touch);\n\t\t\t\tpointer.isTouching = true;\n\n\t\t\t\tconst localPosition = TouchUtil.getLocalTouchPosition(touch, this.startHitArea);\n\t\t\t\tpointer.x = localPosition.offsetX;\n\t\t\t\tpointer.y = localPosition.offsetY;\n\n\t\t\t\t// last touch\n\t\t\t\tif (i === changedTouchCount - 1) {\n\t\t\t\t\tpointer.isLastTouch = true;\n\t\t\t\t\tpointer.isLatestTouch = true;\n\t\t\t\t\tpointer.latestStartTime = performance.now();\n\t\t\t\t}\n\n\t\t\t\t// 0 touching -> 1 touching\n\t\t\t\tif (!this.isTouching && (this.touchingCount === 1)) {\n\t\t\t\t\tpointer.isFirstTouch = true;\n\t\t\t\t\tpointer.isOldestTouch = true;\n\t\t\t\t\tpointer.oldestStartTime = performance.now();\n\t\t\t\t}\n\n\t\t\t\tthis.isTouching = this.touchingCount > 0;\n\n\t\t\t\tthis.dispatchDefaultEvent(MultitouchEventType.touchStart, pointer);\n\t\t\t}\n\t\t};\n\n\t\tprivate hitAreaTouchMoveHandler = (event:TouchEvent):void => {\n\t\t\tif (this.touchingCount === 0) return;\n\n\t\t\tconst changedTouches = event.changedTouches;\n\t\t\tconst changedTouchCount = changedTouches.length;\n\t\t\tfor (let i = 0; i < changedTouchCount; ++i) {\n\t\t\t\tconst touch = changedTouches.item(i);\n\t\t\t\tconst pointer = this.getTouchPointer(touch);\n\t\t\t\tpointer.isTouching = true;\n\n\t\t\t\tconst localPosition = TouchUtil.getLocalTouchPosition(touch, this.startHitArea);\n\t\t\t\tpointer.x = localPosition.offsetX;\n\t\t\t\tpointer.y = localPosition.offsetY;\n\n\t\t\t\tthis.dispatchDefaultEvent(MultitouchEventType.touchMove, pointer);\n\t\t\t}\n\t\t};\n\n\t\tprivate hitAreaTouchEndHandler = (event:TouchEvent):void => {\n\t\t\tif (this.touchingCount === 0) return;\n\n\t\t\tconst changedTouches = event.changedTouches;\n\t\t\tconst changedTouchCount = changedTouches.length;\n\t\t\tfor (let i = 0; i < changedTouchCount; ++i) {\n\t\t\t\tconst touch = changedTouches.item(i);\n\t\t\t\tconst pointer = this.getTouchPointer(touch);\n\t\t\t\tpointer.isTouching = false;\n\t\t\t\tpointer.isOldestTouch = false;\n\t\t\t\tpointer.isLatestTouch = false;\n\n\t\t\t\tconst localPosition = TouchUtil.getLocalTouchPosition(touch, this.startHitArea);\n\t\t\t\tpointer.x = localPosition.offsetX;\n\t\t\t\tpointer.y = localPosition.offsetY;\n\n\t\t\t\tconst pointerIndex = this.touchingPointerIds.indexOf(pointer.pointerId);\n\t\t\t\tif (pointerIndex !== -1) {\n\t\t\t\t\tthis.touchingPointerIds.splice(pointerIndex, 1);\n\t\t\t\t\tthis.touchingCount = this.touchingPointerIds.length;\n\t\t\t\t}\n\t\t\t\tdelete this.touchingPointersByPointerId[pointer.pointerId];\n\t\t\t\tthis.isTouching = this.touchingCount > 0;\n\n\t\t\t\tthis.dispatchDefaultEvent(MultitouchEventType.touchEnd, pointer);\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tconst pointer = this.getOldestPointer();\n\t\t\t\tif (pointer && !pointer.isOldestTouch) {\n\t\t\t\t\tpointer.isOldestTouch = true;\n\t\t\t\t\tpointer.oldestStartTime = performance.now();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tconst pointer = this.getLatestPointer();\n\t\t\t\tif (pointer && !pointer.isLatestTouch) {\n\t\t\t\t\tpointer.isLatestTouch = true;\n\t\t\t\t\tpointer.latestStartTime = performance.now();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tprivate getTouchPointer(touch:Touch):MultitouchPointer {\n\t\t\tconst touchId = touch.identifier;\n\t\t\tlet pointer = this.touchingPointersByPointerId[touchId];\n\t\t\tif (!pointer) {\n\t\t\t\tpointer = this.touchingPointersByPointerId[touchId] = new MultitouchPointer(touchId);\n\t\t\t\tthis.touchingPointerIds.push(pointer.pointerId);\n\t\t\t\tthis.touchingCount = this.touchingPointerIds.length;\n\t\t\t}\n\t\t\treturn pointer;\n\t\t}\n\n\t\tprivate hitAreaMouseDownHandler = (event:MouseEvent):void => {\n\t\t\tthis.touchingCount = 1;\n\t\t\tthis.isTouching = true;\n\n\t\t\tthis.mousePointerId = ++Multitouch.mousePointerId;\n\n\t\t\tconst localPosition = TouchUtil.getLocalPosition(event.clientX, event.clientY, this.startHitArea);\n\t\t\tconst pointer = new MultitouchPointer(this.mousePointerId, localPosition.offsetX, localPosition.offsetY);\n\t\t\tpointer.isTouching = true;\n\t\t\tpointer.isFirstTouch = true;\n\t\t\tpointer.isLastTouch = true;\n\t\t\tpointer.isOldestTouch = true;\n\t\t\tpointer.isLatestTouch = true;\n\n\t\t\tthis.touchingPointersByPointerId[pointer.pointerId] = pointer;\n\t\t\tthis.touchingPointerIds.push(pointer.pointerId);\n\n\t\t\tthis.dispatchDefaultEvent(MultitouchEventType.touchStart, pointer);\n\t\t};\n\n\t\tprivate hitAreaMouseMoveHandler = (event:MouseEvent):void => {\n\t\t\tif (this.touchingCount === 0) return;\n\n\t\t\tconst pointer = this.touchingPointersByPointerId[this.mousePointerId];\n\t\t\tpointer.isTouching = true;\n\n\t\t\tconst localPosition = TouchUtil.getLocalPosition(event.clientX, event.clientY, this.startHitArea);\n\t\t\tpointer.x = localPosition.offsetX;\n\t\t\tpointer.y = localPosition.offsetY;\n\n\t\t\tthis.dispatchDefaultEvent(MultitouchEventType.touchMove, pointer);\n\t\t};\n\n\t\tprivate hitAreaMouseUpHandler = (event:MouseEvent):void => {\n\t\t\tif (this.touchingCount === 0) return;\n\t\t\tthis.touchingCount = 0;\n\t\t\tthis.isTouching = false;\n\n\t\t\tconst pointer = this.touchingPointersByPointerId[this.mousePointerId];\n\t\t\tpointer.isTouching = false;\n\t\t\tpointer.isOldestTouch = false;\n\t\t\tpointer.isLatestTouch = false;\n\t\t\tpointer.touchEndTime = performance.now();\n\n\t\t\tthis.mousePointerId = -1;\n\n\t\t\tconst localPosition = TouchUtil.getLocalPosition(event.clientX, event.clientY, this.startHitArea);\n\t\t\tpointer.x = localPosition.offsetX;\n\t\t\tpointer.y = localPosition.offsetY;\n\n\t\t\tdelete this.touchingPointersByPointerId[pointer.pointerId];\n\t\t\tthis.touchingPointerIds.pop();\n\n\t\t\tthis.dispatchDefaultEvent(MultitouchEventType.touchEnd, pointer);\n\t\t};\n\n\t\tprivate dispatchDefaultEvent(eventType:MultitouchEventType, pointer:MultitouchPointer):void {\n\t\t\tthis.dispatchEvent(new MultitouchEvent(eventType, { detail: { pointer: pointer } }));\n\t\t}\n\n\n\t\tpublic getIsTouching():boolean {\n\t\t\treturn this.isTouching;\n\t\t}\n\n\t\tpublic getTouchingCount():number {\n\t\t\treturn this.touchingCount;\n\t\t}\n\n\t\tpublic getTouchingPointerIds():number[] {\n\t\t\treturn this.touchingPointerIds.concat();\n\t\t}\n\n\t\tpublic getTouchingPointer(pointerId:number):MultitouchPointer {\n\t\t\treturn this.touchingPointersByPointerId[pointerId];\n\t\t}\n\n\t\tpublic getOldestPointer():MultitouchPointer {\n\t\t\treturn this.touchingCount > 0 ? this.touchingPointersByPointerId[this.touchingPointerIds[0]] : null;\n\t\t}\n\n\t\tpublic getLatestPointer():MultitouchPointer {\n\t\t\treturn this.touchingCount > 0 ? this.touchingPointersByPointerId[this.touchingPointerIds[this.touchingCount - 1]] : null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate touchingPointersByPointerId:Hash<MultitouchPointer>;\n\t\tprivate touchingPointerIds:number[];\n\t\tprivate touchingCount:number;\n\t\tprivate isTouching:boolean;\n\n\t\tprivate readonly isTouchEventEnabled:boolean;\n\t\tprivate startHitArea:HTMLElement | Window;\n\t\tprivate moveEndHitArea:HTMLElement | Window;\n\n\t\tprivate mousePointerId:number;\n\t\tprivate static mousePointerId:number = -1;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.multitouch {\n\n\texport class MultitouchPointer {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(pointerId:number, x:number = 0, y:number = 0) {\n\t\t\tthis.pointerId = pointerId;\n\t\t\tthis.isTouching = false;\n\t\t\tthis.isFirstTouch = false;\n\t\t\tthis.isLastTouch = false;\n\t\t\tthis.isOldestTouch = false;\n\t\t\tthis.isLatestTouch = false;\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.touchStartTime = performance.now();\n\t\t\tthis.touchEndTime = -1;\n\t\t\tthis.oldestStartTime = -1;\n\t\t\tthis.latestStartTime = -1;\n\t\t}\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly pointerId:number;\n\t\tpublic isTouching:boolean;\n\t\tpublic isFirstTouch:boolean;\n\t\tpublic isLastTouch:boolean;\n\t\tpublic isOldestTouch:boolean;\n\t\tpublic isLatestTouch:boolean;\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic touchStartTime:number;\n\t\tpublic touchEndTime:number;\n\t\tpublic oldestStartTime:number;\n\t\tpublic latestStartTime:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.multitouch {\n\n\texport enum MultitouchEventType {\n\t\ttouchStart = 'touchstart',\n\t\ttouchMove = 'touchmove',\n\t\ttouchEnd = 'touchend',\n\t}\n\n\texport interface MultitouchEventDetail {\n\t\tpointer:MultitouchPointer;\n\t}\n\n\texport class MultitouchEvent extends CustomEvent<MultitouchEventDetail> {\n\t\tconstructor(type:MultitouchEventType, options:CustomEventInit<MultitouchEventDetail>) {\n\t\t\tsuper(type, options);\n\t\t}\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.multitouch {\n\n\texport class TouchUtil {\n\n\t\tpublic static getIsTouchEventSupported():boolean {\n\t\t\treturn (window.document['ontouchstart'] !== undefined) || (window.navigator.maxTouchPoints > 0);\n\t\t}\n\n\t\tpublic static getLocalTouchPosition(touch:Touch, local:HTMLElement | Window):{ offsetX:number, offsetY:number } {\n\t\t\treturn TouchUtil.getLocalPosition(touch.clientX, touch.clientY, local);\n\t\t}\n\n\t\tpublic static getLocalPosition(clientX:number, clientY:number, local:HTMLElement | Window):{ offsetX:number, offsetY:number } {\n\t\t\tif (local['getBoundingClientRect']) {\n\t\t\t\tconst rect = (<HTMLElement>local).getBoundingClientRect();\n\t\t\t\treturn { offsetX: clientX - window.scrollX - rect.left, offsetY: clientY - window.scrollY - rect.top };\n\t\t\t} else {\n\t\t\t\treturn { offsetX: clientX, offsetY: clientY };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\tprivate constructor() {\n\t\t}\n\t}\n}\n","/* ---------- project dependencies ---------- */\n\n/// <reference types='alumican' />\n\n\n/* ---------- project scripts ---------- */\n\n/// <reference path=\"alm/multitouch/Multitouch.ts\" />\n/// <reference path=\"alm/multitouch/MultitouchPointer.ts\" />\n/// <reference path=\"alm/multitouch/MultitouchEvent.ts\" />\n/// <reference path=\"alm/multitouch/TouchUtil.ts\" />\n"]}
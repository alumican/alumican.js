{"version":3,"sources":["../src/alumican.canvas/alm/canvas/Pointer.ts","../src/alumican.canvas/alm/canvas/BaseApp.ts"],"names":["alm","canvas","BaseApp","_super","canvasId","isAutoResizeEnabled","platformSetupOptions","_i","arguments","length","_this","call","this","mouseOverHandler","event","getMousePointer","mouseOutHandler","pointer","pointersById","mousePointerId","pointerIndex","pointerIds","indexOf","splice","pointingCount","notifyLeave","onPointerLeave","mouseDownHandler","notifyTouch","onPointerTouch","mouseUpHandler","notifyRelease","onPointerRelease","mouseMoveHandler","notifyMove","clientX","clientY","onPointerMove","isDragging","onPointerDrag","touchStartHandler","touch","id","touches","changedTouches","touchCount","i","item","getPointerId","identifier","Pointer","push","notifyEnter","onPointerEnter","touchEndHandler","touchCancelHandler","touchMoveHandler","canvasTouchMoveHandler","originalEvent","preventDefault","keyDownHandler","onKeyDown","key","keyUpHandler","onKeyUp","resizeHandler","resize","$","window","width","height","requestAnimationFrame","elapsedFrameCount","elapsedTime","Date","getTime","startTime","onUpdate","onPlatformRender","jQuery","trace","on","onPlatformSetup","apply","onSetup","__extends","prototype","onResize","stageWidth","stageHeight","onPlatformResize","touchId","getPointerIds","getFirstPointer","getPointerById","getLastPointer","getPointingCount","getStageWidth","getStageHeight","getElapsedFrameCount","getElapsedTime","getCanvas","getIsAutoResizeEnabled","setIsAutoResizeEnabled","value","EventDispatcher","isHovering","isTouching","x","y","prevX","prevY","dragX","dragY","velocityX","velocityY","touchBeginX","touchBeginY"],"mappings":"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","file":"alumican.canvas.min.js","sourcesContent":["/// <reference path=\"../../include.ts\" />\n\nnamespace alm.canvas {\n\n\texport class Pointer {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(id:string) {\n\t\t\tthis.id = id;\n\n\t\t\tthis.isHovering = false;\n\t\t\tthis.isTouching = false;\n\t\t\tthis.isDragging = false;\n\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\n\t\t\tthis.prevX = 0;\n\t\t\tthis.prevY = 0;\n\n\t\t\tthis.dragX = 0;\n\t\t\tthis.dragY = 0;\n\n\t\t\tthis.velocityX = 0;\n\t\t\tthis.velocityY = 0;\n\n\t\t\tthis.touchBeginX = 0;\n\t\t\tthis.touchBeginY = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic notifyEnter(x:number, y:number):void {\n\t\t\tthis.prevX = this.x = x;\n\t\t\tthis.prevY = this.y = y;\n\t\t\tthis.isHovering = true;\n\t\t}\n\n\t\tpublic notifyLeave():void {\n\t\t\tthis.isHovering = false;\n\t\t}\n\n\t\tpublic notifyTouch():void {\n\t\t\tthis.isTouching = true;\n\t\t\tthis.touchBeginX = this.x;\n\t\t\tthis.touchBeginY = this.y;\n\t\t}\n\n\t\tpublic notifyRelease():void {\n\t\t\tthis.isTouching = false;\n\t\t\tthis.isDragging = false;\n\t\t\tthis.dragX = 0;\n\t\t\tthis.dragY = 0;\n\t\t}\n\n\t\tpublic notifyMove(x:number, y:number):void {\n\t\t\tthis.prevX = this.x;\n\t\t\tthis.prevY = this.y;\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\tthis.velocityX = this.x - this.prevX;\n\t\t\tthis.velocityY = this.y - this.prevY;\n\n\t\t\tif (this.isTouching) {\n\t\t\t\tthis.isDragging = true;\n\t\t\t}\n\n\t\t\tif (this.isDragging) {\n\t\t\t\tthis.dragX = this.x - this.touchBeginX;\n\t\t\t\tthis.dragY = this.y - this.touchBeginY;\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic id:string;\n\t\tpublic isHovering:boolean;\n\t\tpublic isTouching:boolean;\n\t\tpublic isDragging:boolean;\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\n\t\tpublic prevX:number;\n\t\tpublic prevY:number;\n\n\t\tpublic dragX:number;\n\t\tpublic dragY:number;\n\n\t\tpublic velocityX:number;\n\t\tpublic velocityY:number;\n\n\t\tpublic touchBeginX:number;\n\t\tpublic touchBeginY:number;\n\t}\n}","/// <reference path=\"../../include.ts\" />\n\nnamespace alm.canvas {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport abstract class BaseApp extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(canvasId:string, isAutoResizeEnabled:boolean = true, ...platformSetupOptions:any[]) {\n\t\t\tsuper();\n\n\t\t\tthis.canvas = <JQuery<HTMLCanvasElement>>jQuery(canvasId);\n\t\t\tthis.isAutoResizeEnabled = isAutoResizeEnabled;\n\n\t\t\ttrace(\"[BaseApp] canvasId : \" + canvasId);\n\t\t\ttrace(\"[BaseApp] isAutoResizeEnabled : \" + this.isAutoResizeEnabled);\n\n\t\t\tthis.pointerIds = [];\n\t\t\tthis.pointersById = {};\n\t\t\tthis.pointingCount = 0;\n\n\t\t\tthis.elapsedFrameCount = 0;\n\t\t\tthis.startTime = new Date().getTime();\n\t\t\tthis.mousePointerId = 'mouse';\n\n\t\t\tjQuery(window).on('mouseover', this.mouseOverHandler);\n\t\t\tjQuery(window).on('mouseout', this.mouseOutHandler);\n\t\t\tjQuery(window).on('mousedown', this.mouseDownHandler);\n\t\t\tjQuery(window).on('mouseup', this.mouseUpHandler);\n\t\t\tjQuery(window).on('mousemove', this.mouseMoveHandler);\n\t\t\tjQuery(window).on('touchstart', this.touchStartHandler);\n\t\t\tjQuery(window).on('touchend', this.touchEndHandler);\n\t\t\tjQuery(window).on('touchcancel', this.touchCancelHandler);\n\t\t\tjQuery(window).on('touchmove', this.touchMoveHandler);\n\t\t\tjQuery(window).on('keydown', this.keyDownHandler);\n\t\t\tjQuery(window).on('keyup', this.keyUpHandler);\n\t\t\tthis.canvas.on('touchmove', this.canvasTouchMoveHandler);\n\t\t\trequestAnimationFrame(this.requestAnimationFrame);\n\n\t\t\tthis.onPlatformSetup.apply(this, platformSetupOptions);\n\t\t\tthis.onSetup();\n\n\t\t\tif (this.isAutoResizeEnabled) {\n\t\t\t\tjQuery(window).on('resize', this.resizeHandler);\n\t\t\t\tthis.resizeHandler(null);\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic onSetup():void {\n\t\t}\n\n\t\tpublic onUpdate():void {\n\t\t}\n\n\t\tpublic onPointerEnter(pointer:Pointer):void {\n\t\t}\n\n\t\tpublic onPointerLeave(pointer:Pointer,):void {\n\t\t}\n\n\t\tpublic onPointerTouch(pointer:Pointer):void {\n\t\t}\n\n\t\tpublic onPointerRelease(pointer:Pointer):void {\n\t\t}\n\n\t\tpublic onPointerMove(pointer:Pointer):void {\n\t\t}\n\n\t\tpublic onPointerDrag(pointer:Pointer):void {\n\t\t}\n\n\t\tpublic onKeyDown(key:string):void {\n\t\t}\n\n\t\tpublic onKeyUp(key:string):void {\n\t\t}\n\n\t\tpublic onResize(stageWidth:number, stageHeight:number):void {\n\t\t}\n\n\t\tprotected onPlatformSetup(...platformSetupOptions:any[]):void {\n\t\t}\n\n\t\tprotected onPlatformRender():void {\n\t\t}\n\n\t\tprotected onPlatformResize(stageWidth:number, stageHeight:number):void {\n\t\t}\n\n\t\tpublic resize(width:number, height:number):void {\n\t\t\tthis.stageWidth = width;\n\t\t\tthis.stageHeight = height;\n\t\t\ttrace('[BaseApp] resize : width = ' + this.stageWidth + ', height = ' + this.stageHeight);\n\t\t\tthis.onPlatformResize(this.stageWidth, this.stageHeight);\n\t\t\tthis.onResize(this.stageWidth, this.stageHeight);\n\t\t}\n\n\t\t// --------------------------------------------------\n\t\t// Mouse Event\n\n\t\tprivate mouseOverHandler = (event:JQuery.Event):void => {\n\t\t\tconst pointer:Pointer = this.getMousePointer(event);\n\t\t};\n\n\t\tprivate mouseOutHandler = (event:JQuery.Event):void => {\n\t\t\tconst pointer:Pointer = this.getMousePointer(event);\n\t\t\tdelete this.pointersById[this.mousePointerId];\n\t\t\tconst pointerIndex = this.pointerIds.indexOf(this.mousePointerId);\n\t\t\tif (pointerIndex != -1) {\n\t\t\t\tthis.pointerIds.splice(pointerIndex, 1);\n\t\t\t}\n\t\t\t--this.pointingCount;\n\t\t\tpointer.notifyLeave();\n\t\t\tthis.onPointerLeave(pointer);\n\t\t};\n\n\t\tprivate mouseDownHandler = (event:JQuery.Event):void => {\n\t\t\tconst pointer:Pointer = this.getMousePointer(event);\n\t\t\tpointer.notifyTouch();\n\t\t\tthis.onPointerTouch(pointer);\n\t\t};\n\n\t\tprivate mouseUpHandler = (event:JQuery.Event):void => {\n\t\t\tconst pointer:Pointer = this.getMousePointer(event);\n\t\t\tpointer.notifyRelease();\n\t\t\tthis.onPointerRelease(pointer);\n\t\t};\n\n\t\tprivate mouseMoveHandler = (event:JQuery.Event):void => {\n\t\t\tconst pointer:Pointer = this.getMousePointer(event);\n\t\t\tpointer.notifyMove(event.clientX, event.clientY);\n\t\t\tthis.onPointerMove(pointer);\n\t\t\tif (pointer.isDragging) {\n\t\t\t\tthis.onPointerDrag(pointer);\n\t\t\t}\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Touch Event\n\n\t\tprivate touchStartHandler = (event:JQuery.Event):void => {\n\t\t\tconst touches:TouchList = event.changedTouches;\n\t\t\tconst touchCount:number = event.changedTouches.length;\n\t\t\tlet touch:Touch;\n\t\t\tlet id:string;\n\t\t\tlet pointer:Pointer;\n\t\t\tfor (let i:number = 0; i < touchCount; ++i) {\n\t\t\t\ttouch = touches.item(i);\n\t\t\t\tid = BaseApp.getPointerId(touch.identifier);\n\t\t\t\tpointer = new Pointer(id);\n\t\t\t\tthis.pointersById[id] = pointer;\n\t\t\t\tthis.pointerIds.push(id);\n\t\t\t\t++this.pointingCount;\n\t\t\t\tpointer.notifyEnter(touch.clientX, touch.clientY);\n\t\t\t\tpointer.notifyTouch();\n\t\t\t\tthis.onPointerEnter(pointer);\n\t\t\t\tthis.onPointerTouch(pointer);\n\t\t\t}\n\t\t};\n\n\t\tprivate touchEndHandler = (event:JQuery.Event):void => {\n\t\t\tconst touches:TouchList = event.changedTouches;\n\t\t\tconst touchCount:number = event.changedTouches.length;\n\t\t\tlet touch:Touch;\n\t\t\tlet id:string;\n\t\t\tlet pointer:Pointer;\n\t\t\tfor (let i:number = 0; i < touchCount; ++i) {\n\t\t\t\ttouch = touches.item(i);\n\t\t\t\tid = BaseApp.getPointerId(touch.identifier);\n\t\t\t\tpointer = this.pointersById[id];\n\t\t\t\tdelete this.pointersById[id];\n\t\t\t\tconst pointerIndex = this.pointerIds.indexOf(id);\n\t\t\t\tif (pointerIndex != -1) {\n\t\t\t\t\tthis.pointerIds.splice(pointerIndex, 1);\n\t\t\t\t}\n\t\t\t\t--this.pointingCount;\n\t\t\t\tpointer.notifyRelease();\n\t\t\t\tpointer.notifyLeave();\n\t\t\t\tthis.onPointerRelease(pointer);\n\t\t\t\tthis.onPointerLeave(pointer);\n\t\t\t}\n\t\t};\n\n\t\tprivate touchCancelHandler = (event:JQuery.Event):void => {\n\t\t\tthis.touchEndHandler(event);\n\t\t};\n\n\t\tprivate touchMoveHandler = (event:JQuery.Event):void => {\n\t\t\tconst touches:TouchList = event.changedTouches;\n\t\t\tconst touchCount:number = event.changedTouches.length;\n\t\t\tlet touch:Touch;\n\t\t\tlet id:string;\n\t\t\tlet pointer:Pointer;\n\t\t\tfor (let i:number = 0; i < touchCount; ++i) {\n\t\t\t\ttouch = touches.item(i);\n\t\t\t\tid = BaseApp.getPointerId(touch.identifier);\n\t\t\t\tpointer = this.pointersById[id];\n\t\t\t\tpointer.notifyMove(touch.clientX, touch.clientY);\n\t\t\t\tif (pointer.isDragging) {\n\t\t\t\t\tthis.onPointerDrag(pointer);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tprivate canvasTouchMoveHandler = (event:JQuery.Event):void => {\n\t\t\tevent.originalEvent.preventDefault();\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Key Event\n\n\t\tprivate keyDownHandler = (event:JQuery.Event):void => {\n\t\t\tthis.onKeyDown(event.key);\n\t\t};\n\n\t\tprivate keyUpHandler = (event:JQuery.Event):void => {\n\t\t\tthis.onKeyUp(event.key);\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Other Event\n\n\t\tprivate resizeHandler = (event:JQuery.Event):void => {\n\t\t\tthis.resize($(window).width(), $(window).height());\n\t\t};\n\n\t\tprivate requestAnimationFrame = ():void => {\n\t\t\t++this.elapsedFrameCount;\n\t\t\tthis.elapsedTime = (new Date().getTime() - this.startTime) / 1000;\n\t\t\tthis.onUpdate();\n\t\t\tthis.onPlatformRender();\n\t\t\trequestAnimationFrame(this.requestAnimationFrame);\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Util\n\n\t\tprivate getMousePointer(event:JQuery.Event):Pointer {\n\t\t\tlet pointer:Pointer = this.pointersById[this.mousePointerId];\n\t\t\tif (pointer == null) {\n\t\t\t\tpointer = new Pointer(this.mousePointerId);\n\t\t\t\tthis.pointersById[this.mousePointerId] = pointer;\n\t\t\t\tthis.pointerIds.push(this.mousePointerId);\n\t\t\t\t++this.pointingCount;\n\t\t\t\tpointer.notifyEnter(event.clientX, event.clientY);\n\t\t\t\tthis.onPointerEnter(pointer);\n\t\t\t}\n\t\t\treturn pointer;\n\t\t}\n\n\t\tpublic static getPointerId(touchId:number):string {\n\t\t\treturn 'touch_' + touchId;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getPointerIds():string[] { return this.pointerIds; }\n\t\tprivate pointerIds:string[];\n\n\t\tpublic getFirstPointer():Pointer { return this.pointingCount > 0 ? this.getPointerById(this.pointerIds[0]) : null; }\n\t\tpublic getLastPointer():Pointer { return this.pointingCount > 0 ? this.getPointerById(this.pointerIds[this.pointingCount - 1]) : null; }\n\n\t\tpublic getPointerById(id:string):Pointer { return this.pointersById[id]; }\n\t\tprivate pointersById:alm.util.Hash<Pointer>;\n\n\t\tpublic getPointingCount():number { return this.pointingCount; }\n\t\tprivate pointingCount:number;\n\n\t\tpublic getStageWidth():number { return this.stageWidth; }\n\t\tprivate stageWidth:number;\n\n\t\tpublic getStageHeight():number { return this.stageHeight; }\n\t\tprivate stageHeight:number;\n\n\t\tpublic getElapsedFrameCount():number { return this.elapsedFrameCount; }\n\t\tprivate elapsedFrameCount:number;\n\n\t\tpublic getElapsedTime():number { return this.elapsedTime; }\n\t\tprivate elapsedTime:number;\n\n\t\tpublic getCanvas():JQuery<HTMLCanvasElement> { return this.canvas; }\n\t\tprivate canvas:JQuery<HTMLCanvasElement>;\n\n\t\tpublic getIsAutoResizeEnabled():boolean { return this.isAutoResizeEnabled; }\n\t\tpublic setIsAutoResizeEnabled(value:boolean):void { this.isAutoResizeEnabled = value; }\n\t\tprivate isAutoResizeEnabled:boolean;\n\n\t\tprivate startTime:number;\n\t\tprivate mousePointerId:string;\n\t}\n}"]}
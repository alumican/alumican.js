{"version":3,"sources":["../src/alumican.videoplayer/alm/video/core/VideoClip.ts","../src/alumican.videoplayer/alm/video/VideoPlayerEvent.ts","../src/alumican.videoplayer/alm/video/core/VideoClipEvent.ts","../src/alumican.videoplayer/alm/video/core/SimpleVideoClip.ts","../src/alumican.videoplayer/alm/video/core/LoopPointVideoClip.ts","../src/alumican.videoplayer/alm/video/core/StaticImageClip.ts","../src/alumican.videoplayer/alm/video/VideoPlayer.ts"],"names":["alm","video","Cmd","util","Easing","math","EventDispatcher","event","VideoClip","constructor","volume","super","this","defaultVolume","isInitializing","setup","isShowing","isPlaying","opacity","view","document","createElement","classList","add","implSetup","hide","start","duration","show","stop","delay","rewind","implRewind","restart","implStart","dispose","displayTween","implDispose","remove","getView","cmd","Tween","easeOutQuad","style","display","toString","applyVolume","execute","tween","implStop","Serial","Wait","implUpdateVolume","dispatchVideoEvent","eventType","dispatchEvent","VideoClipEvent","getIsPlaying","getDefaultVolume","getVolume","getOpacity","Event","target","complete","SimpleVideoClip","url","videoCanplaythroughHandler","isReady","videoTimeupdateHandler","update","videoEndedHandler","timerHandler","intervalId","setAttribute","playsInline","controls","autoplay","preload","loop","muted","src","addEventListener","load","appendChild","paused","play","startTimer","pause","currentTime","stopTimer","removeChild","removeAttribute","window","setInterval","clearInterval","LoopPointVideoClip","loopStartPosition","loopEndPosition","phase","StaticImageClip","imageLoadHandler","timerId","image","Image","removeEventListener","setTimeout","clearTimeout","VideoPlayer","container","className","clipCompleteHandler","isLoop","switchClip","currentClipId","VideoPlayerEvent","clipIndicesById","clips","clipsById","clipIdsByIndex","clipCount","isCrossOverEnabled","crossFadeDuration","oldClipId","id","loadInternal","loadWithLoopPoint","loadImage","clipFactory","console","debug","clip","index","push","unload","playById","useTransition","playByIndex","let","i","clipId","useRewind","getContainer","setIsCrossOverEnabled","isEnabled","getIsCrossOverEnabled","setCrossFadeDuration","getCrossFadeDuration","getIsLoop","getClipCount","getCurrentClipId","getOldClipId","getCurrentClipIndex","getOldClipIndex","clipIndex"],"mappings":"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","file":"index.min.js","sourcesContent":["/// <reference path=\"../../../index.ts\" />\n\nnamespace alm.video {\n\n\timport Cmd = alm.util.Cmd;\n\timport Easing = alm.math.Easing;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class VideoClip extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(volume:number) {\n\t\t\tsuper();\n\t\t\tthis.volume = this.defaultVolume = volume;\n\t\t\tthis.isInitializing = true;\n\t\t}\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected setup():void {\n\t\t\tthis.isShowing = true;\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.opacity = 1;\n\t\t\tthis.view = document.createElement('div');\n\t\t\tthis.view.classList.add('video-clip');\n\t\t\tthis.implSetup(this.view, this.volume);\n\t\t\tthis.hide(0, 0);\n\t\t\tthis.isInitializing = false;\n\t\t}\n\n\t\tpublic start(duration:number):void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\t\t\tthis.show(duration);\n\t\t}\n\n\t\tpublic stop(duration:number, delay:number):void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.hide(duration, delay);\n\t\t}\n\n\t\tpublic rewind():void {\n\t\t\tthis.implRewind(this.view);\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tif (this.isPlaying) {\n\t\t\t\tthis.implRewind(this.view);\n\t\t\t\tthis.implStart(this.view);\n\t\t\t} else {\n\t\t\t\tthis.start(0);\n\t\t\t}\n\t\t}\n\n\t\tpublic dispose():void {\n\t\t\tthis.displayTween = Cmd.stop(this.displayTween);\n\t\t\tthis.implDispose(this.view);\n\t\t\tif (this.view) {\n\t\t\t\tthis.view.remove();\n\t\t\t\tthis.view = null;\n\t\t\t}\n\t\t}\n\n\t\tprivate show(duration:number):void {\n\t\t\tif (this.isShowing) return;\n\t\t\tthis.isShowing = true;\n\n\t\t\tconst view = this.getView();\n\t\t\tif (this.displayTween) {\n\t\t\t\tthis.displayTween = Cmd.stop(this.displayTween);\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\t// animate\n\t\t\t\tthis.displayTween = new cmd.Tween(this, { opacity: 1 }, null, duration, Easing.easeOutQuad, ():void => {\n\t\t\t\t\tview.style.display = 'block';\n\t\t\t\t\tthis.implStart(this.view);\n\t\t\t\t}, ():void => {\n\t\t\t\t\tview.style.opacity = this.opacity.toString();\n\t\t\t\t\tthis.applyVolume();\n\t\t\t\t}, ():void => {\n\t\t\t\t\tthis.displayTween = null;\n\t\t\t\t});\n\t\t\t\tthis.displayTween.execute();\n\n\t\t\t} else {\n\t\t\t\t// no animation\n\t\t\t\tview.style.display = 'block';\n\t\t\t\tthis.implStart(this.view);\n\t\t\t\tthis.opacity = 1;\n\t\t\t\tview.style.opacity = this.opacity.toString();\n\t\t\t\tthis.applyVolume();\n\t\t\t}\n\t\t}\n\n\t\tprivate hide(duration:number, delay:number):void {\n\t\t\tif (!this.isShowing) return;\n\t\t\tthis.isShowing = false;\n\n\t\t\tconst view = this.getView();\n\t\t\tif (this.displayTween) {\n\t\t\t\tthis.displayTween = Cmd.stop(this.displayTween);\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\t// animate\n\t\t\t\tconst tween = new cmd.Tween(this, { opacity: 0 }, null, duration, Easing.easeOutQuad, null, ():void => {\n\t\t\t\t\tview.style.opacity = this.opacity.toString();\n\t\t\t\t\tthis.applyVolume();\n\t\t\t\t}, ():void => {\n\t\t\t\t\tview.style.display = 'none';\n\t\t\t\t\tthis.displayTween = null;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthis.implStop(this.view);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (delay > 0) {\n\t\t\t\t\tthis.displayTween = new cmd.Serial(\n\t\t\t\t\t\tnew cmd.Wait(delay),\n\t\t\t\t\t\ttween,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.displayTween = tween;\n\t\t\t\t}\n\t\t\t\tthis.displayTween.execute();\n\n\t\t\t} else {\n\t\t\t\t// no animation\n\t\t\t\tthis.opacity = 0;\n\t\t\t\tview.style.opacity = this.opacity.toString();\n\t\t\t\tthis.applyVolume();\n\t\t\t\tview.style.display = 'none';\n\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\tthis.implStop(this.view);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate applyVolume():void {\n\t\t\tif (this.defaultVolume > 0) {\n\t\t\t\tthis.volume = this.defaultVolume * this.opacity;\n\t\t\t\tthis.implUpdateVolume(this.volume);\n\t\t\t}\n\t\t}\n\n\t\tprotected dispatchVideoEvent(eventType:string):void {\n\t\t\tthis.dispatchEvent(new VideoClipEvent(eventType, this));\n\t\t}\n\n\t\tpublic getView():HTMLElement {\n\t\t\treturn this.view;\n\t\t}\n\n\t\tpublic getIsPlaying():boolean {\n\t\t\treturn this.isPlaying;\n\t\t}\n\n\t\tpublic getDefaultVolume():number {\n\t\t\treturn this.defaultVolume;\n\t\t}\n\n\t\tpublic getVolume():number {\n\t\t\treturn this.volume;\n\t\t}\n\n\t\tpublic getOpacity():number {\n\t\t\treturn this.opacity;\n\t\t}\n\n\n\n\n\n\t\tprotected implSetup(view:HTMLElement, volume:number):void {\n\t\t}\n\n\t\tprotected implStart(view:HTMLElement):void {\n\t\t}\n\n\t\tprotected implStop(view:HTMLElement):void {\n\t\t}\n\n\t\tprotected implRewind(view:HTMLElement):void {\n\t\t}\n\n\t\tprotected implDispose(view:HTMLElement):void {\n\t\t}\n\n\t\tprotected implUpdateVolume(volume:number):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate view:HTMLElement;\n\t\tprivate isInitializing:boolean;\n\t\tprivate isPlaying:boolean;\n\t\tprivate isShowing:boolean;\n\t\tprivate defaultVolume:number;\n\t\tprivate opacity:number;\n\t\tprivate volume:number;\n\t\tprivate displayTween:cmd.Command;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.video {\n\n\texport class VideoPlayerEvent extends alm.event.Event {\n\n\t\tpublic static readonly complete:string = 'VideoPlayerEvent.complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, target:object, clipId:string, clipIndex:number) {\n\t\t\tsuper(eventType, target);\n\t\t\tthis.clipId = clipId;\n\t\t\tthis.clipIndex = clipIndex;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly clipId:string;\n\t\tpublic readonly clipIndex:number;\n\t}\n}\n","/// <reference path=\"../../../index.ts\" />\n\nnamespace alm.video {\n\n\texport class VideoClipEvent extends alm.event.Event {\n\n\t\tpublic static readonly complete:string = 'VideoClipEvent.complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, target:object) {\n\t\t\tsuper(eventType, target);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path=\"../../../index.ts\" />\n\nnamespace alm.video {\n\n\texport class SimpleVideoClip extends VideoClip {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(url:string, volume:number) {\n\t\t\tsuper(volume);\n\t\t\tthis.url = url;\n\t\t\tthis.intervalId = -1;\n\t\t\tthis.setup();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implSetup(view:HTMLElement, volume:number):void {\n\t\t\tthis.isReady = false;\n\n\t\t\tthis.video = document.createElement('video');\n\t\t\tthis.video.setAttribute('muted', 'muted');\n\t\t\tthis.video.classList.add('video-media');\n\t\t\tthis.video.playsInline = true;\n\t\t\tthis.video.controls = false;\n\t\t\tthis.video.autoplay = false;\n\t\t\tthis.video.preload = 'auto';\n\t\t\tthis.video.loop = false;\n\t\t\tthis.video.volume = volume;\n\t\t\tthis.video.muted = volume === 0;\n\t\t\tthis.video.src = this.url;\n\t\t\tthis.video.addEventListener('canplaythrough', this.videoCanplaythroughHandler);\n\t\t\t//this.video.addEventListener('timeupdate', this.videoTimeupdateHandler);\n\t\t\tthis.video.addEventListener('ended', this.videoEndedHandler);\n\t\t\tthis.video.load();\n\t\t\tthis.getView().appendChild(this.video);\n\t\t}\n\n\t\tprotected implStart(view:HTMLElement):void {\n\t\t\tif (this.video.paused) {\n\t\t\t\tthis.video.play();\n\t\t\t}\n\t\t\tthis.startTimer();\n\t\t}\n\n\t\tprotected implStop(view:HTMLElement):void {\n\t\t\tif (!this.video.paused) {\n\t\t\t\tthis.video.pause();\n\t\t\t}\n\t\t\tthis.video.currentTime = 0;\n\t\t\tthis.stopTimer();\n\t\t}\n\n\t\tprotected implRewind(view:HTMLElement):void {\n\t\t\tthis.video.currentTime = 0;\n\t\t}\n\n\t\tprotected implDispose(view:HTMLElement):void {\n\t\t\tview.removeChild(this.video);\n\t\t\tthis.video.pause();\n\t\t\tthis.video.removeAttribute('src');\n\t\t\tthis.video.load();\n\t\t\tthis.video = null;\n\t\t\tthis.stopTimer();\n\t\t}\n\n\t\tprotected implUpdateVolume(volume:number):void {\n\t\t\tthis.video.volume = volume;\n\t\t}\n\n\t\tprivate videoCanplaythroughHandler = (event:Event):void => {\n\t\t\tif (this.isReady) return;\n\t\t\tthis.isReady = true;\n\t\t};\n\n\t\tprivate videoTimeupdateHandler = (event:Event):void => {\n\t\t\tthis.update();\n\t\t};\n\n\t\tprivate videoEndedHandler = (event:Event):void => {\n\t\t\t//if (!this.video.paused) {\n\t\t\t//\tthis.video.pause();\n\t\t\t//}\n\t\t\t//this.dispatchVideoEvent(VideoClipEvent.complete);\n\t\t};\n\n\t\tprivate update():void {\n\t\t\tif (this.video.currentTime >= this.video.duration) {\n\t\t\t\tif (!this.video.paused) {\n\t\t\t\t\tthis.video.pause();\n\t\t\t\t}\n\t\t\t\tthis.stopTimer();\n\t\t\t\tthis.dispatchVideoEvent(VideoClipEvent.complete);\n\t\t\t}\n\t\t}\n\n\t\tprivate startTimer():void {\n\t\t\tif (this.intervalId !== -1) return;\n\t\t\tthis.intervalId = window.setInterval(this.timerHandler, 1000 / 60);\n\t\t}\n\n\t\tprivate stopTimer():void {\n\t\t\tif (this.intervalId === -1) return;\n\t\t\twindow.clearInterval(this.intervalId);\n\t\t\tthis.intervalId = -1;\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.update();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate url:string;\n\t\tprivate video:HTMLVideoElement;\n\t\tprivate isReady:boolean;\n\t\tprivate intervalId:number;\n\t}\n}\n","/// <reference path=\"../../../index.ts\" />\n\nnamespace alm.video {\n\n\texport class LoopPointVideoClip extends VideoClip {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(url:string, volume:number, loopStartPosition:number, loopEndPosition:number) {\n\t\t\tsuper(volume);\n\t\t\tthis.url = url;\n\t\t\tthis.loopStartPosition = loopStartPosition;\n\t\t\tthis.loopEndPosition = loopEndPosition;\n\t\t\tthis.intervalId = -1;\n\t\t\tthis.setup();\n\t\t}\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implSetup(view:HTMLElement, volume:number):void {\n\t\t\tthis.isReady = false;\n\t\t\tthis.phase = 0;\n\n\t\t\tthis.video = document.createElement('video');\n\t\t\tthis.video.classList.add('video-media');\n\t\t\tthis.video.playsInline = true;\n\t\t\tthis.video.controls = false;\n\t\t\tthis.video.autoplay = false;\n\t\t\tthis.video.preload = 'auto';\n\t\t\tthis.video.loop = false;\n\t\t\tthis.video.volume = volume;\n\t\t\tthis.video.muted = volume === 0;\n\t\t\tthis.video.src = this.url;\n\t\t\tthis.video.addEventListener('canplaythrough', this.videoCanplaythroughHandler);\n\t\t\t//this.video.addEventListener('timeupdate', this.videoTimeupdateHandler);\n\t\t\tthis.video.addEventListener('ended', this.videoEndedHandler);\n\t\t\tthis.video.load();\n\t\t\tthis.getView().appendChild(this.video);\n\t\t}\n\n\t\tprotected implStart(view:HTMLElement):void {\n\t\t\tthis.phase = 0;\n\t\t\tthis.video.currentTime = 0;\n\t\t\tif (this.video.paused) {\n\t\t\t\tthis.video.play();\n\t\t\t}\n\t\t\tthis.startTimer();\n\t\t}\n\n\t\tprotected implStop(view:HTMLElement):void {\n\t\t\tthis.phase = 2;\n\t\t\tthis.video.currentTime = this.loopEndPosition;\n\t\t}\n\n\t\tprotected implRewind(view:HTMLElement):void {\n\t\t\tthis.phase = 0;\n\t\t\tthis.video.currentTime = 0;\n\t\t}\n\n\t\tprotected implUpdateVolume(volume:number):void {\n\t\t\tthis.video.volume = volume;\n\t\t}\n\n\t\tprotected implDispose(view:HTMLElement):void {\n\t\t\tview.removeChild(this.video);\n\t\t\tthis.video.pause();\n\t\t\tthis.video.removeAttribute('src');\n\t\t\tthis.video.load();\n\t\t\tthis.video = null;\n\t\t\tthis.stopTimer();\n\t\t}\n\n\t\tprivate videoCanplaythroughHandler = (event:Event):void => {\n\t\t\tif (this.isReady) return;\n\t\t\tthis.isReady = true;\n\t\t};\n\n\t\tprivate videoTimeupdateHandler = (event:Event):void => {\n\t\t\tthis.update();\n\t\t};\n\n\t\tprivate videoEndedHandler = (event:Event):void => {\n\t\t};\n\n\t\tprivate update():void {\n\t\t\tconst currentTime = this.video.currentTime;\n\n\t\t\tif (this.phase === 0 && currentTime >= this.loopStartPosition) {\n\t\t\t\tthis.phase = 1;\n\t\t\t}\n\n\t\t\tif (this.phase === 1 && currentTime >= this.loopEndPosition) {\n\t\t\t\tthis.video.currentTime = this.loopStartPosition;\n\t\t\t\tif (this.video.paused) {\n\t\t\t\t\tthis.video.play();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.phase === 2 && currentTime >= this.video.duration) {\n\t\t\t\tthis.phase = 3;\n\t\t\t\tthis.video.currentTime = this.video.duration;\n\t\t\t\tif (!this.video.paused) {\n\t\t\t\t\tthis.video.pause();\n\t\t\t\t}\n\t\t\t\tthis.stopTimer();\n\t\t\t\tthis.dispatchVideoEvent(VideoClipEvent.complete);\n\t\t\t}\n\t\t}\n\n\t\tprivate startTimer():void {\n\t\t\tif (this.intervalId !== -1) return;\n\t\t\tthis.intervalId = window.setInterval(this.timerHandler, 1000 / 60);\n\t\t}\n\n\t\tprivate stopTimer():void {\n\t\t\tif (this.intervalId === -1) return;\n\t\t\twindow.clearInterval(this.intervalId);\n\t\t\tthis.intervalId = -1;\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.update();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate url:string;\n\t\tprivate video:HTMLVideoElement;\n\t\tprivate loopStartPosition:number;\n\t\tprivate loopEndPosition:number;\n\t\tprivate isReady:boolean;\n\t\tprivate phase:number;\n\t\tprivate intervalId:number;\n\t}\n}\n","/// <reference path=\"../../../index.ts\" />\n\nnamespace alm.video {\n\n\texport class StaticImageClip extends VideoClip {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(url:string, duration:number) {\n\t\t\tsuper(0);\n\t\t\tthis.url = url;\n\t\t\tthis.duration = duration;\n\t\t\tthis.timerId = -1;\n\t\t\tthis.setup();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implSetup(view:HTMLElement, volume:number):void {\n\t\t\tthis.isReady = false;\n\n\t\t\tthis.image = new Image();\n\t\t\tthis.image.addEventListener('load', this.imageLoadHandler);\n\t\t\tthis.image.classList.add('video-media');\n\t\t\tthis.image.src = this.url;\n\n\t\t\tthis.getView().appendChild(this.image);\n\t\t}\n\n\t\tprotected implStart(view:HTMLElement):void {\n\t\t\tthis.startTimer();\n\t\t}\n\n\t\tprotected implStop(view:HTMLElement):void {\n\t\t\tthis.stopTimer();\n\t\t}\n\n\t\tprotected implRewind(view:HTMLElement):void {\n\t\t\tthis.stopTimer();\n\t\t\tthis.startTimer();\n\t\t}\n\n\t\tprotected implDispose(view:HTMLElement):void {\n\t\t\tthis.stopTimer();\n\t\t\tview.removeChild(this.image);\n\n\t\t\tthis.image.removeEventListener('load', this.imageLoadHandler);\n\t\t\tthis.image.remove();\n\t\t\tthis.image.src = '';\n\t\t\tthis.image = null;\n\t\t}\n\n\t\tprotected implUpdateVolume(volume:number):void {\n\t\t}\n\n\t\tprivate imageLoadHandler = (event:Event):void => {\n\t\t\tif (this.isReady) return;\n\t\t\tthis.isReady = true;\n\t\t};\n\n\t\tprivate startTimer():void {\n\t\t\tif (this.timerId !== -1) return;\n\t\t\tif (this.duration > 0) {\n\t\t\t\tthis.timerId = window.setTimeout(():void => {\n\t\t\t\t\tthis.timerId = -1;\n\t\t\t\t\tthis.dispatchVideoEvent(VideoClipEvent.complete);\n\t\t\t\t}, this.duration);\n\t\t\t}\n\t\t}\n\n\t\tprivate stopTimer():void {\n\t\t\tif (this.timerId === -1) return;\n\t\t\twindow.clearTimeout(this.timerId);\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate url:string;\n\t\tprivate image:HTMLImageElement;\n\t\tprivate duration:number;\n\t\tprivate isReady:boolean;\n\t\tprivate timerId:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.video {\n\n\timport Hash = alm.util.Hash;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class VideoPlayer extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(container:HTMLElement = null, className:string = 'video-player') {\n\t\t\tsuper();\n\n\t\t\tthis.container = container || document.createElement('div');\n\t\t\tif (className !== '') {\n\t\t\t\tthis.container.classList.add(className);\n\t\t\t}\n\n\t\t\tthis.clips = [];\n\t\t\tthis.clipsById = {};\n\t\t\tthis.clipIndicesById = {};\n\t\t\tthis.clipIdsByIndex = {};\n\t\t\tthis.clipCount = 0;\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.isLoop = false;\n\t\t\tthis.isCrossOverEnabled = true;\n\t\t\tthis.crossFadeDuration = 500;\n\n\t\t\tthis.currentClipId = '';\n\t\t\tthis.oldClipId = '';\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic load(url:string, volume:number = 1, id:string = ''):number {\n\t\t\treturn this.loadInternal(url, id, ():VideoClip => {\n\t\t\t\treturn new SimpleVideoClip(url, volume);\n\t\t\t});\n\t\t}\n\n\t\tpublic loadWithLoopPoint(url:string, loopStartPosition:number, loopEndPosition:number, volume:number = 1, id:string = ''):number {\n\t\t\treturn this.loadInternal(url, id, ():VideoClip => {\n\t\t\t\treturn new LoopPointVideoClip(url, volume, loopStartPosition, loopEndPosition);\n\t\t\t});\n\t\t}\n\n\t\tpublic loadImage(url:string, duration:number = 0, id:string = ''):number {\n\t\t\treturn this.loadInternal(url, id, ():VideoClip => {\n\t\t\t\treturn new StaticImageClip(url, duration);\n\t\t\t});\n\t\t}\n\n\t\tprivate loadInternal(url:string, id:string, clipFactory:() => VideoClip):number {\n\t\t\tif (id === '') id = url;\n\t\t\tif (this.clipsById[id]) return -1;\n\t\t\tconsole.debug('[VideoPlayer] load :', url);\n\n\t\t\tconst clip = clipFactory();\n\t\t\tclip.addEventListener(VideoClipEvent.complete, this.clipCompleteHandler);\n\t\t\tthis.container.appendChild(clip.getView());\n\n\t\t\tconst index = this.clipCount;\n\t\t\tthis.clips.push(clip);\n\t\t\tthis.clipsById[id] = clip;\n\t\t\tthis.clipIndicesById[id] = index;\n\t\t\tthis.clipIdsByIndex[index] = id;\n\t\t\t++this.clipCount;\n\n\t\t\treturn index;\n\t\t}\n\n\t\tpublic unload(id:string):boolean {\n\t\t\tif (!this.clipsById[id]) return false;\n\t\t\tif (this.currentClipId === id) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\t\t\tconst clip = this.clipsById[id];\n\t\t\tclip.removeEventListener(VideoClipEvent.complete, this.clipCompleteHandler);\n\t\t\tclip.dispose();\n\t\t\tthis.container.removeChild(clip.getView());\n\n\t\t\tdelete this.clipsById[id];\n\t\t\tthis.clips[this.clipIndicesById[id]] = null;\n\t\t}\n\n\t\tpublic playById(id:string, rewind:boolean = false, loop:boolean = false, useTransition:boolean = true):void {\n\t\t\tthis.switchClip(id, rewind, loop, useTransition);\n\t\t}\n\n\t\tpublic playByIndex(index:number, rewind:boolean = false, loop:boolean = false, useTransition:boolean = true):void {\n\t\t\tthis.switchClip(this.clipIdsByIndex[index], rewind, loop, useTransition);\n\t\t}\n\n\t\tpublic stop(useTransition:boolean = true):void {\n\t\t\tthis.switchClip('', false, false, useTransition);\n\t\t}\n\n\t\tpublic dispose():void {\n\t\t\tthis.switchClip('', false, false, false);\n\n\t\t\tfor (let i = 0; i < this.clipCount; ++i) {\n\t\t\t\tconst clip = this.clips[i];\n\t\t\t\tif (clip) {\n\t\t\t\t\tclip.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.clips = null;\n\t\t\tthis.clipsById = null;\n\t\t\tthis.clipIndicesById = null;\n\t\t\tthis.clipIdsByIndex = null;\n\t\t\tthis.container = null;\n\t\t}\n\n\n\n\n\n\t\tprivate switchClip(clipId:string, useRewind:boolean, isLoop:boolean, useTransition:boolean):void {\n\t\t\tif (!this.clipsById[clipId]) clipId = '';\n\n\t\t\tif (clipId === this.currentClipId) {\n\t\t\t\tif (useRewind && this.currentClipId !== '') {\n\t\t\t\t\tconsole.debug('[VideoPlayer] rewind :', this.currentClipId);\n\t\t\t\t\tconst clip = this.clipsById[this.currentClipId];\n\t\t\t\t\tthis.isLoop = isLoop;\n\t\t\t\t\tclip.restart();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.oldClipId = this.currentClipId;\n\t\t\tthis.currentClipId = clipId;\n\t\t\tconsole.debug('[VideoPlayer] switch :', this.oldClipId, '->', this.currentClipId);\n\n\t\t\tif (this.oldClipId !== '') {\n\t\t\t\tconst clip = this.clipsById[this.oldClipId];\n\t\t\t\tclip.stop(useTransition ? this.crossFadeDuration : 0, (useTransition && (!this.isCrossOverEnabled) && (this.currentClipId !== '')) ? this.crossFadeDuration : 0);\n\t\t\t}\n\n\t\t\tif (this.currentClipId !== '') {\n\t\t\t\tconst clip = this.clipsById[this.currentClipId];\n\t\t\t\tthis.isPlaying = true;\n\t\t\t\tthis.isLoop = isLoop;\n\t\t\t\tclip.start(useTransition ? this.crossFadeDuration : 0);\n\t\t\t} else {\n\t\t\t\tthis.isPlaying = false;\n\t\t\t}\n\t\t}\n\n\t\tprivate clipCompleteHandler = (event:VideoClipEvent):void => {\n\t\t\tif (this.isLoop) {\n\t\t\t\tthis.switchClip(this.currentClipId, true, true, false);\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new VideoPlayerEvent(VideoPlayerEvent.complete, this, this.currentClipId, this.clipIndicesById[this.currentClipId]));\n\t\t\t}\n\t\t};\n\n\t\tpublic getContainer():HTMLElement {\n\t\t\treturn this.container;\n\t\t}\n\n\t\tpublic setIsCrossOverEnabled(isEnabled:boolean):void {\n\t\t\tthis.isCrossOverEnabled = isEnabled;\n\t\t}\n\n\t\tpublic getIsCrossOverEnabled():boolean {\n\t\t\treturn this.isCrossOverEnabled;\n\t\t}\n\n\t\tpublic setCrossFadeDuration(duration:number):void {\n\t\t\tthis.crossFadeDuration = duration;\n\t\t}\n\n\t\tpublic getCrossFadeDuration():number {\n\t\t\treturn this.crossFadeDuration;\n\t\t}\n\n\t\tpublic getIsPlaying():boolean {\n\t\t\treturn this.isPlaying;\n\t\t}\n\n\t\tpublic getIsLoop():boolean {\n\t\t\treturn this.isLoop;\n\t\t}\n\n\t\tpublic getClipCount():number {\n\t\t\treturn this.clipCount;\n\t\t}\n\n\t\tpublic getCurrentClipId():string {\n\t\t\treturn this.currentClipId;\n\t\t}\n\n\t\tpublic getOldClipId():string {\n\t\t\treturn this.oldClipId;\n\t\t}\n\n\t\tpublic getCurrentClipIndex():number {\n\t\t\treturn this.clipIndicesById[this.currentClipId];\n\t\t}\n\n\t\tpublic getOldClipIndex():number {\n\t\t\treturn this.clipIndicesById[this.oldClipId];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate container:HTMLElement;\n\n\t\tprivate clips:VideoClip[];\n\t\tprivate clipsById:Hash<VideoClip>;\n\t\tprivate clipIndicesById:Hash<number>;\n\t\tprivate clipIdsByIndex:Hash<string>;\n\t\tprivate clipCount:number;\n\n\t\tprivate isPlaying:boolean;\n\t\tprivate isLoop:boolean;\n\t\tprivate isCrossOverEnabled:boolean;\n\t\tprivate crossFadeDuration:number;\n\n\t\tprivate currentClipId:string;\n\t\tprivate oldClipId:string;\n\t}\n}\n"]}
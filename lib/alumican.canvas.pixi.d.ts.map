{"version":3,"sources":["../src/alumican.canvas.pixi/alm/canvas/PixiApp.ts","../src/alumican.canvas.pixi/include.ts"],"names":[],"mappings":";;;AAEA,kBAAU,GAAG,CAAC,MAAM,CAAC;IAEpB,MAAa,OAAQ,SAAQ,OAAO;oBAQvB,QAAO,WAAW,EAAE,sBAAoB,OAAc,EAAE,OAAO,CAAC,EAAC,IAAI,CAAC,kBAAkB;QAcpG,SAAS,CAAC,eAAe,CAAC,GAAG,sBAAqB,GAAG,EAAE,GAAE,IAAI;QAa7D,SAAS,CAAC,gBAAgB,CAAC,YAAW,MAAM,EAAE,aAAY,MAAM,GAAE,IAAI;QAkB/D,IAAI,EAAC,IAAI,CAAC,WAAW,CAAC;KAC7B;CACD","file":"alumican.canvas.pixi.d.ts","sourcesContent":["/// <reference path=\"../../include.ts\" />\n\nnamespace alm.canvas {\n\n\texport class PixiApp extends BaseApp {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(canvas:HTMLElement, isAutoResizeEnabled:boolean = true, options?:PIXI.ApplicationOptions) {\n\t\t\tsuper(canvas, isAutoResizeEnabled, options);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected onPlatformSetup(...platformSetupOptions:any[]):void {\n\t\t\tconst options:PIXI.ApplicationOptions = platformSetupOptions[0];\n\n\t\t\tthis.pixi = new PIXI.Application({\n\t\t\t\tautoStart:       options && options.autoStart !== undefined ? options.autoStart : true,\n\t\t\t\tview:            options && options.view !== undefined ? options.view : this.getCanvas().get(0),\n\t\t\t\tantialias:       options && options.antialias !== undefined ? options.antialias : true,\n\t\t\t\ttransparent:     options && options.transparent !== undefined ? options.transparent : false,\n\t\t\t\tresolution:      options && options.resolution !== undefined ? options.resolution : window.devicePixelRatio,\n\t\t\t\tbackgroundColor: options && options.backgroundColor !== undefined ? options.backgroundColor : 0x000000,\n\t\t\t});\n\t\t}\n\n\t\tprotected onPlatformResize(stageWidth:number, stageHeight:number):void {\n\t\t\tconst canvas:JQuery = this.getCanvas();\n\t\t\tcanvas.attr({ width: stageWidth, height: stageHeight });\n\t\t\tcanvas.css({ width: stageWidth, height: stageHeight });\n\n\t\t\tthis.pixi.renderer.resize(stageWidth, stageHeight);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic pixi:PIXI.Application;\n\t}\n}","/* ---------- dependency ---------- */\n/// <reference types='jquery' />\n/// <reference types=\"pixi.js\" />\n/// <reference path='../../lib/alumican.d.ts' />\n/// <reference path='../../lib/alumican.canvas.d.ts' />\n\n/* ---------- project ---------- */\n/// <reference path='alm/canvas/PixiApp.ts' />"]}
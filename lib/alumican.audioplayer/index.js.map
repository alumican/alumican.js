{"version":3,"sources":["../src/alumican.audioplayer/alm/audio/core/AudioClip.ts","../src/alumican.audioplayer/alm/audio/AudioPlayer.ts","../src/alumican.audioplayer/alm/audio/CrossOverLoopAudio.ts","../src/alumican.audioplayer/alm/audio/FootstepAudio.ts","../src/alumican.audioplayer/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/// <reference path=\"../../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport Cmd = alm.util.Cmd;\n\timport Easing = alm.math.Easing;\n\n\texport class AudioClip {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(context:AudioContext, destination:AudioNode, fileName:string = '', masterVolume:number = 1) {\n\t\t\t//this.context = new AudioContext();\n\t\t\tthis.context = context;\n\t\t\tthis.masterVolume = masterVolume;\n\n\t\t\tthis.buffer = null;\n\t\t\tthis.sourceNode = null;\n\t\t\tthis.isAvailable = false;\n\n\t\t\tthis.duration = 0;\n\n\t\t\tthis.gainNode = this.context.createGain();\n\t\t\tthis.gainNode.connect(destination);\n\n\t\t\tthis.volume = 1;\n\t\t\tthis.applyVolume();\n\n\t\t\tif (fileName != '') {\n\t\t\t\tthis.load(fileName);\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic load(url:string):void {\n\t\t\tconst request:XMLHttpRequest = new XMLHttpRequest();\n\t\t\trequest.responseType = 'arraybuffer';\n\t\t\trequest.onreadystatechange = ():void => {\n\t\t\t\tif (request.readyState == 4) {\n\t\t\t\t\tif (request.status == 0 || request.status == 200) {\n\t\t\t\t\t\tthis.context.decodeAudioData(request.response, (buffer:AudioBuffer):void => {\n\t\t\t\t\t\t\ttrace('[AudioClip] load complete :', url);\n\t\t\t\t\t\t\tthis.isAvailable = true;\n\t\t\t\t\t\t\tthis.buffer = buffer;\n\t\t\t\t\t\t\tthis.duration = this.buffer.duration;\n\t\t\t\t\t\t}, (error:Error):void => {\n\t\t\t\t\t\t\ttrace('[AudioClip] load error :', error);\n\t\t\t\t\t\t\ttrace(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\trequest.open('GET', url, true);\n\t\t\trequest.send('');\n\t\t}\n\n\t\tpublic play(loop:boolean = false, overwrite:boolean = true):void {\n\t\t\tif (!this.isAvailable) return;\n\t\t\tif (!overwrite && this.sourceNode) return;\n\t\t\tthis.stop();\n\t\t\tthis.sourceNode = this.context.createBufferSource();\n\t\t\tthis.sourceNode.buffer = this.buffer;\n\t\t\tthis.sourceNode.loop = loop;\n\t\t\tthis.sourceNode.connect(this.gainNode);\n\t\t\tthis.sourceNode.start(0);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (this.sourceNode) {\n\t\t\t\tthis.sourceNode.stop();\n\t\t\t\tthis.sourceNode.disconnect(this.gainNode);\n\t\t\t\tthis.sourceNode = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic getVolume():number {\n\t\t\treturn this.volume;\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tCmd.stop(this.volumeTween);\n\t\t\tif (this.volume == volume) return;\n\t\t\tthis.volume = volume;\n\t\t\tthis.applyVolume();\n\t\t}\n\n\t\tpublic fadeTo(to:number, duration:number = 1000, onComplete:Function = null):void {\n\t\t\tCmd.stop(this.volumeTween);\n\t\t\tthis.volumeTween = new cmd.Tween(this, { volume: to }, null, duration, Easing.linear, null, ():void => {\n\t\t\t\tthis.applyVolume();\n\t\t\t}, ():void => {\n\t\t\t\tif (onComplete) onComplete();\n\t\t\t});\n\t\t\tthis.volumeTween.execute();\n\t\t}\n\n\t\tpublic fadeIn(duration:number = 1000):void {\n\t\t\tthis.fadeTo(1, duration);\n\t\t}\n\n\t\tpublic fadeOut(duration:number = 1000, stopOnComplete:boolean = true):void {\n\t\t\tthis.fadeTo(0, duration, ():void => {\n\t\t\t\tif (stopOnComplete) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tprivate applyVolume():void {\n\t\t\tthis.gainNode.gain.value = this.volume * this.masterVolume;\n\t\t}\n\n\t\tpublic getIsAvailable():boolean {\n\t\t\treturn this.isAvailable;\n\t\t}\n\n\t\tpublic getDuration():number {\n\t\t\treturn this.duration;\n\t\t}\n\n\t\tpublic getCurrentTime():number {\n\t\t\treturn this.context.currentTime;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isAvailable:boolean;\n\t\tprivate context:AudioContext;\n\t\tprivate volume:number;\n\t\tprivate masterVolume:number;\n\t\tprivate buffer:AudioBuffer;\n\t\tprivate duration:number;\n\t\tprivate sourceNode:AudioBufferSourceNode;\n\t\tprivate gainNode:GainNode;\n\t\tprivate volumeTween:cmd.Tween;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Hash = alm.util.Hash;\n\n\texport class AudioPlayer extends EventDispatcher {\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t\tsuper();\n\n\t\t\tconst AudioContext:any = window['AudioContext'] || window['webkitAudioContext'] || null;\n\t\t\tthis.isAvailable = AudioContext != null;\n\t\t\tif (this.isAvailable) {\n\t\t\t\tthis.context = new AudioContext();\n\t\t\t\tthis.clipsById = {};\n\n\t\t\t\tthis.masterGainNode = this.context.createGain();\n\t\t\t\tthis.masterGainNode.connect(this.context.destination);\n\t\t\t\tthis.masterVolume = 1;\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolute:number = 1, id:string = ''):boolean {\n\t\t\tif (!this.isAvailable) return false;\n\t\t\tif (id == '') id = url;\n\t\t\tif (this.clipsById[id]) return false;\n\t\t\tthis.clipsById[id] = new AudioClip(this.context, this.masterGainNode, url, masterVolute);\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic getClip(id:string):AudioClip {\n\t\t\tif (!this.isAvailable) return;\n\t\t\treturn this.clipsById[id];\n\t\t}\n\n\t\tpublic getMasterVolume():number {\n\t\t\tif (!this.isAvailable) return 0;\n\t\t\treturn this.masterVolume;\n\t\t}\n\n\t\tpublic setMasterVolume(volume:number):void {\n\t\t\tif (!this.isAvailable) return;\n\t\t\tthis.masterVolume = volume;\n\t\t\tthis.masterGainNode.gain.value = this.masterVolume;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getInstance():AudioPlayer { return AudioPlayer.instance || (AudioPlayer.instance = new AudioPlayer()); }\n\t\tprivate static instance:AudioPlayer = null;\n\n\t\tprivate isAvailable:boolean;\n\t\tprivate context:AudioContext;\n\t\tprivate clipsById:Hash<AudioClip>;\n\n\t\tprivate masterGainNode:GainNode;\n\t\tprivate masterVolume:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\texport class CrossOverLoopAudio {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(crossOverDuration:number = 1) {\n\t\t\tthis.audioPlayer = AudioPlayer.getInstance();\n\n\t\t\tthis.clipCount = 0;\n\t\t\tthis.clipIndex = 0;\n\t\t\tthis.clipIds = [];\n\t\t\tthis.clip = null;\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.volume = 1;\n\n\t\t\tthis.crossOverDuration = crossOverDuration;\n\t\t\tthis.timeoutId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolume:number = 1):void {\n\t\t\tconst id = url + '-' + this.clipCount;\n\t\t\tthis.audioPlayer.add(url, masterVolume, id);\n\t\t\tthis.clipIds.push(id);\n\t\t\tthis.clipCount = this.clipIds.length;\n\t\t}\n\n\t\tpublic play():void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.playCurrent();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\n\t\t\tthis.stopCurrent();\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tthis.volume = volume;\n\n\t\t\tif (this.clip) {\n\t\t\t\tthis.clip.setVolume(this.volume);\n\t\t\t}\n\t\t}\n\n\t\tprivate playCurrent():void {\n\t\t\tthis.clip = this.audioPlayer.getClip(this.clipIds[this.clipIndex]);\n\t\t\tthis.clip.setVolume(this.volume);\n\t\t\tthis.clip.play(false, true);\n\n\t\t\tconst interval = (this.clip.getDuration() - this.crossOverDuration) * 1000;\n\t\t\tthis.timeoutId = window.setTimeout(this.timerHandler, interval);\n\t\t}\n\n\t\tprivate stopCurrent():void {\n\t\t\tif (this.timeoutId != -1) {\n\t\t\t\twindow.clearTimeout(this.timeoutId);\n\t\t\t\tthis.timeoutId = -1;\n\t\t\t}\n\n\t\t\tif (this.clip) {\n\t\t\t\tthis.clip.stop();\n\t\t\t\tthis.clip = null;\n\t\t\t}\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tif (++this.clipIndex == this.clipCount) this.clipIndex = 0;\n\t\t\tthis.playCurrent();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate audioPlayer:AudioPlayer;\n\t\tprivate volume:number;\n\n\t\tprivate clipIds:string[];\n\t\tprivate clip:AudioClip;\n\t\tprivate clipIndex:number;\n\t\tprivate clipCount:number;\n\n\t\tprivate isPlaying:boolean;\n\n\t\tprivate crossOverDuration:number;\n\t\tprivate timeoutId:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport Num = alm.util.Num;\n\timport Easing = alm.math.Easing;\n\n\texport class FootstepAudio {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(intervalMin:number = 0.12, intervalMax:number = 0.6) {\n\t\t\tthis.audioPlayer = AudioPlayer.getInstance();\n\n\t\t\tthis.intervalMin = intervalMin;\n\t\t\tthis.intervalMax = intervalMax;\n\t\t\tthis.intervalId = -1;\n\t\t\tthis.interval = this.intervalMax;\n\n\t\t\tthis.clipIndex = -1;\n\t\t\tthis.clipCount = 0;\n\t\t\tthis.clipIds = [];\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.volume = 1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolume:number = 1):void {\n\t\t\tconst id = url + '-' + this.clipCount;\n\t\t\tthis.audioPlayer.add(url, masterVolume, id);\n\t\t\tthis.clipIds.push(id);\n\t\t\tthis.clipCount = this.clipIds.length;\n\t\t}\n\n\t\tpublic play(immediately:boolean = true):void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.isWaitingForFirstStep = true;\n\t\t\tthis.startTime = immediately ? 0 : new Date().getTime();\n\t\t\tthis.intervalId = window.setInterval(this.timerHandler, 1000 / 60);\n\t\t\tthis.timerHandler();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\n\t\t\twindow.clearInterval(this.intervalId);\n\t\t}\n\n\t\tpublic setSpeed(speedRatio:number):void {\n\t\t\tthis.interval = Num.ease(speedRatio, 0, 1, this.intervalMax, this.intervalMin, Easing.easeOutSine);\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tthis.volume = volume;\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tconst interval = this.isWaitingForFirstStep ? (this.interval * 0.5) : this.interval;\n\t\t\tconst time = new Date().getTime();\n\t\t\tif (time - this.startTime >= interval * 1000) {\n\t\t\t\tthis.startTime = time;\n\t\t\t\tthis.isWaitingForFirstStep = false;\n\n\t\t\t\tif (++this.clipIndex >= this.clipCount) {\n\t\t\t\t\tthis.clipIndex = 0;\n\t\t\t\t}\n\t\t\t\tconst clipId = this.clipIds[this.clipIndex];\n\t\t\t\tthis.audioPlayer.getClip(clipId).setVolume(this.volume);\n\t\t\t\tthis.audioPlayer.getClip(clipId).play(false, true);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate audioPlayer:AudioPlayer;\n\t\tprivate volume:number;\n\n\t\tprivate clipIds:string[];\n\t\tprivate clipIndex:number;\n\t\tprivate clipCount:number;\n\n\t\tprivate startTime:number;\n\t\tprivate isWaitingForFirstStep:boolean;\n\n\t\tprivate intervalMin:number;\n\t\tprivate intervalMax:number;\n\t\tprivate interval:number;\n\t\tprivate intervalId:number;\n\n\t\tprivate isPlaying:boolean;\n\t}\n}\n","/* ---------- project dependencies ---------- */\n\n/// <reference types='alumican' />\n\n\n/* ---------- project scripts ---------- */\n\n/// <reference path='alm/audio/core/AudioClip.ts' />\n/// <reference path='alm/audio/AudioPlayer.ts' />\n/// <reference path='alm/audio/CrossOverLoopAudio.ts' />\n/// <reference path='alm/audio/FootstepAudio.ts' />\n"]}
{"version":3,"sources":["../src/alumican/cmd/Parallel.ts","../src/alumican/scn/SceneManagerRequireSceneEvent.ts","../src/alumican/index.ts","../src/alumican/alm/debug/Logger.ts","../src/alumican/alm/util/Time.ts","../src/alumican/alm/math/Easing.ts","../src/alumican/alm/browser/QueryString.ts","../src/alumican/alm/debug/FpsMonitor.ts","../src/alumican/alm/event/Event.ts","../src/alumican/alm/event/EventDispatcher.ts","../src/alumican/cmd/CommandState.ts","../src/alumican/cmd/CommandEvent.ts","../src/alumican/cmd/Command.ts","../src/alumican/cmd/CommandList.ts","../src/alumican/cmd/Break.ts","../src/alumican/cmd/Return.ts","../src/alumican/cmd/Log.ts","../src/alumican/cmd/Wait.ts","../src/alumican/cmd/Func.ts","../src/alumican/cmd/Listen.ts","../src/alumican/cmd/Tween.ts","../src/alumican/cmd/Serial.ts","../src/alumican/alm/geom/Vector2.ts","../src/alumican/alm/geom/Vector3.ts","../src/alumican/alm/geom/Rectangle.ts","../src/alumican/alm/geom/Boxer.ts","../src/alumican/alm/util/Obj.ts","../src/alumican/alm/util/Arr.ts","../src/alumican/alm/util/Num.ts","../src/alumican/alm/util/Str.ts","../src/alumican/alm/util/Cmd.ts","../src/alumican/alm/util/Dom.ts","../src/alumican/alm/resource/ObjectPool.ts","../src/alumican/alm/state/Lottery.ts","../src/alumican/alm/state/Switcher.ts","../src/alumican/alm/state/SwitcherEvent.ts","../src/alumican/alm/state/LoHi.ts","../src/alumican/alm/state/LoHiEvent.ts","../src/alumican/alm/math/EasingValue.ts","../src/alumican/alm/math/SpringValue.ts","../src/alumican/alm/math/SimpleAverage.ts","../src/alumican/alm/math/SimpleMovingAverage.ts","../src/alumican/alm/math/MaxValue.ts","../src/alumican/alm/math/Circular.ts","../src/alumican/alm/time/AnimationFrameTicker.ts","../src/alumican/alm/time/AnimationFrameTickerEvent.ts","../src/alumican/alm/time/Timer.ts","../src/alumican/alm/time/TimerEvent.ts","../src/alumican/alm/io/FileLoader.ts","../src/alumican/alm/io/FileLoaderProgressEvent.ts","../src/alumican/alm/io/FileLoaderSuccessEvent.ts","../src/alumican/alm/io/FileLoaderErrorEvent.ts","../src/alumican/alm/io/FileQuery.ts","../src/alumican/alm/audio/core/AudioClip.ts","../src/alumican/alm/audio/AudioPlayer.ts","../src/alumican/alm/audio/CrossOverLoopAudio.ts","../src/alumican/alm/audio/FootstepAudio.ts","../src/alumican/alm/view/ViewEvent.ts","../src/alumican/alm/view/View.ts","../src/alumican/alm/view/ButtonBehavior.ts","../src/alumican/alm/view/SelectionBehavior.ts","../src/alumican/alm/browser/DeviceInfo.ts","../src/alumican/alm/browser/LocalStorage.ts","../src/alumican/alm/browser/SessionStorage.ts","../src/alumican/alm/browser/KeyWatcher.ts","../src/alumican/alm/browser/KeyWatcherEvent.ts","../src/alumican/alm/browser/WindowWatcher.ts","../src/alumican/alm/browser/WindowWatcherEvent.ts","../src/alumican/alm/browser/ScrollSectionTriggerEvent.ts","../src/alumican/alm/browser/ScrollSectionTrigger.ts","../src/alumican/alm/browser/ResponsiveObserver.ts","../src/alumican/alm/browser/ResponsiveObserverEvent.ts","../src/alumican/scn/Scene.ts","../src/alumican/scn/SceneEvent.ts","../src/alumican/scn/SceneTransferInfo.ts","../src/alumican/scn/SceneState.ts","../src/alumican/scn/core/Direction.ts","../src/alumican/scn/core/Waypoint.ts","../src/alumican/scn/core/RootScene.ts","../src/alumican/scn/SceneManager.ts","../src/alumican/scn/SceneManagerTransferEvent.ts"],"names":["cmd","scn","alm","trace","messages","_i","arguments","length","debug","Logger","info","apply","caller","throwWarn","target","message","condition","warnIf","throwError","errorIf","util","Time","now","window","performance","Date","math","Easing","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","createEaseInElastic","s","p","a","asin","createEaseOutElastic","createEaseInOutElastic","easeInElastic","defaultEaseInElastic","easeOutElastic","defaultEaseOutElastic","easeInOutElastic","defaultEaseInOutElastic","createEaseInBack","createEaseOutBack","createEaseInOutBack","easeInBack","easeOutBack","defaultEaseOutBack","easeInOutBack","defaultEaseInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","defaultEaseInBack","browser","QueryString","url","this","set","prototype","index","search","indexOf","substring","location","hash","pair","pairs","split","i","getString","key","defaultValue","value","undefined","getInt","parseInt","isNaN","getFloat","parseFloat","getBool","getHash","setHash","setParam","removeParam","hasParam","LoggerLevel","NullLogging","verbose","prefix","warn","error","ConsoleLogging","console","Array","slice","call","concat","log","DOMLogging","print","line","join","html","dom","innerHTML","innerText","ParallelLogging","n","loggers","setLevelByQuery","level","Silent","setNamespace","namespace","Verbose","logger","Info","Warn","Error","stackTrace","FpsMonitor","reset","frameRate","frameCount","startTime","actualFrameRate","dummyFrameRate","update","currentTime","elapsedTime","setDummyFrameRate","clearDummyFrameRate","getFrameRate","Event","type","data","event","event_1","EventDispatcher","listeners","addEventListener","eventType","listener","numListeners","push","removeEventListener","splice","removeAllEventListener","hasEventListener","dispatchEvent","dispatchEventType","eventTarget","CommandState","_super","CommandEvent","__extends","clone","toString","COMPLETE","Command","execute","state","Sleeping","Executing","getExecuteFunction","interrupt","Interrupting","getInterruptFunction","destroy","getDestroyFunction","parent","executeFunction","interruptFunction","destroyFunction","notifyComplete","implExecuteFunction","command","implInterruptFunction","implDestroyFunction","setExecuteFunction","func","setInterruptFunction","setDestroyFunction","getState","getParent","setParent","getSelf","self","_this","CommandList","addCommand","commands","preProcess","getCommands","insertCommand","insertCommandAt","__spreadArrays","addCommandArray","insertCommandArray","insertCommandArrayAt","getLength","getCommandByIndex","numCommands","Func","Break","Return","Log","getMessages","setMessages","Wait","timerId","setTimeout","completeHandler","time","cancel","clearTimeout","getTime","setTime","eventDispatcher","args","getFunction","setFunction","getArguments","setArguments","getEventDispatcher","setEventDispatcher","getEventType","setEventType","Listen","Tween","internalFrom","to","from","tweenTarget","duration","setInterval","intervalHandler","updateInterval","onStart","progressTime","progressValue","onUpdate","onComplete","easing","clearInterval","timeRatio","value0","getTarget","setTarget","getDuration","setDuration","getTo","setTo","getFrom","setFrom","getEasing","setEasing","getOnStart","setOnStart","getOnUpdate","setOnUpdate","getOnComplete","setOnComplete","getProgressTime","getProgressValue","getUpdateInterval","setUpdateInterval","milliseconds","Serial","position","next","currentCommand","isPaused","isCompleteOnPaused","implNotifyBreak","implNotifyReturn","getPosition","Parallel","completeCount","command_1","command_2","command_3","getCompleteCount","geom","Vector2","x","y","copyTo","point","getClone","zero","normalize","l","getSquareDistance","dx","dy","getDistance","Vector3","z","dz","Rectangle","width","height","rect","getTop","getBottom","getLeft","getRight","getTopLeft","getTopRight","getBottomLeft","getBottomRight","Align","ScaleMode","Boxer","resize","bounds","scaleMode","align","ShowAll","Middle_Center","tx","ty","tw","th","bx","by","bw","bh","NoBorder","ratioW","ratioH","ratio","ExactFit","Top_Left","Middle_Left","Bottom_Left","Top_Right","Middle_Right","Bottom_Right","Top_Center","Bottom_Center","Obj","each","Object","keys","forEach","get","Arr","sequence","count","init","step","result","v","unique","list","filter","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","m","swap","index1","index2","tmp","shuffle","floor","random","sort","asc","b","choose","Num","map","srcA","srcB","dstA","dstB","clamp","ease","min","max","clampAbs","minAbs","maxAbs","abs","lerp","randomInt","dist","x1","y1","x2","y2","squared","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","PI3","PI2","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","Str","toTimeString","hours","minutes","seconds","h","substr","Cmd","stop","c","single","Dom","instantiate","templateId","removeId","element","document","getElementById","cloneNode","removeAttribute","addPointerDownListener","addPointerMoveListener","addPointerUpListener","removePointerDownListener","removePointerMoveListener","removePointerUpListener","addRootClass","htmlElement","documentElement","classList","add","removeRootClass","remove","addRootAttribute","setAttribute","removeRootAttribute","scrollTo","scrollTop","useTransition","scrollTween","scrollPosition","applyScrollPosition","scroll","setupSmoothAnchorLink","tags","getElementsByTagName","tagCount","setAnchorLinkAction","item","tag","href","getAttribute","hasAttribute","anchorLinkClickHandler","currentTarget","targetId","targetScrollPosition","pageYOffset","getBoundingClientRect","top","resource","ObjectPool","onRequireItem","onDestroyItem","initCount","growthCount","items","getItem","unshift","returnItem","reduce","shift","Lottery","values","initValues","restValues","restCount","isEmpty","onCheck","isAutoResetEnabled","getRestCount","getIsEmply","getIsAutoResetEnabled","setIsAutoResetEnabled","enabled","createIndices","Switcher","isLoopEnabled","itemCount","itemIds","itemIndexById","onChange","onPrev","onNext","setupById","ids","setup","setupByCount","currentItemIndex","currentItemId","oldItemIndex","oldItemId","gotoByIndex","itemIndex","dispatchPagerEvent","SwitcherEvent","CHANGE","gotoById","itemId","hasOwnProperty","prev","getPrevItemIndex","PREV","getNextItemIndex","NEXT","getPrevItemId","getNextItemId","getIsLoopEnabled","setIsLoopEnabled","getItemCount","getCurrentItemIndex","getOldItemIndex","getCurrentItemId","getOldItemId","getItemIds","LoHi","lowThreshold","highThreshold","initValue","isHigh","_set","getIsHigh","getValue","getLowThreshold","getHighThreshold","setLowThreshold","threshold","setHighThreshold","LoHiEvent","LOW","HIGH","EasingValue","tolerance","d","SpringValue","spring","friction","acceleration","velocity","SimpleAverage","_value","_count","SimpleMovingAverage","maxCount","_maxCount","oldest","latest","MaxValue","maxLatestCount","_maxLatestCount","Number","MAX_VALUE","Circular","angle","setAngle","setVelocity","getAngle","getVelocity","getSin","getCos","getTan","tan","getMagnitude","getVector","xy","AnimationFrameTicker","updateHandler","requestId","requestAnimationFrame","targetFrameRate","frameStartTime","interval","toleranceDuration","AnimationFrameTickerEvent","TICK","isRunning","start","cancelAnimationFrame","getIsRunning","getTargetFrameRate","Timer","repeatCount","timerHandler","tStartTime","elapsedCount","isCompleted","tInterval","startInterval","dispatch","TimerEvent","tId","tRestTime","stopInterval","restart","getInterval","getElapsedTime","getRestTime","getElapsedCount","getRepeatCount","setRepeatCount","io","FileLoader","totalThreadCount","fileLoadCompleteHandler","query","content","currentThreadCount","isLoading","isLoadComplete","param","onLoad","FileLoaderSuccessEvent","SUCCESS","fileLoadErrorHandler","onError","FileLoaderErrorEvent","ERROR","isLoading_","currentCount","totalCount","loadingQueries","loadingQueryIndex","queriesByQueryId","queriesByUrl","handlersByType","require","id","addQuery","FileQuery","String","load","progress","this_1","FileLoaderProgressEvent","query_1","handler","START","PROGRESS","addHandler","getType","getQueryByQueryId","queryId","getQueryByUrl","getCurrentCount","getTotalCount","getContentByUrl","getContentByQueryId","textureId","getCurrentThreadCount","getTotalThreadCount","loadedCount","audio","AudioClip","context","destination","fileName","masterVolume","buffer","sourceNode","isAvailable","gainNode","createGain","connect","volume","applyVolume","request","XMLHttpRequest","responseType","onreadystatechange","readyState","status","decodeAudioData","response","open","send","play","loop","overwrite","createBufferSource","disconnect","getVolume","setVolume","volumeTween","fadeTo","fadeIn","fadeOut","stopOnComplete","gain","getIsAvailable","getCurrentTime","AudioPlayer","AudioContext","clipsById","masterGainNode","masterVolute","getClip","getMasterVolume","setMasterVolume","getInstance","instance","CrossOverLoopAudio","crossOverDuration","clipIndex","clipCount","playCurrent","audioPlayer","clipIds","clip","isPlaying","timeoutId","stopCurrent","FootstepAudio","intervalMin","intervalMax","clipId","isWaitingForFirstStep","intervalId","immediately","setSpeed","speedRatio","view","ViewEvent","INITIALIZE_BEGIN","INITIALIZE_END","FINALIZE_BEGIN","FINALIZE_END","READY_BEGIN","READY_END","SHOW_BEGIN","SHOW_END","HIDE_BEGIN","HIDE_END","view_1","View","viewCount","name","autoHideWithInit","isInitializing","isInitialized","isFinalizing","isFinalized","isReadying","isReadied","isShowing","isShown","isHiding","viewsById","initialize","implInitialize","hide","ready","implReady","finalize","implFinalize","show","getShowCommand","getHideCommand","showCommand","hideCommand","implShow","implHide","getIsInitializing","getIsInitialized","getIsReadying","getIsReadied","getIsShowing","getIsShown","getIsHiding","getIsHidden","getIsFinalizing","getIsFinalized","getId","getView","getName","setName","getAutoHideWithInit","setAutoHideWithInit","getViewById","ButtonBehavior","hitArea","isHoverCursorEnabled","isPreventDefaultEnabled","isStopPropagationEnabled","mouseOverHandler","preventDefault","stopPropagation","over","applyMouseCursor","mouseOutHandler","out","mouseDownHandler","down","mouseUpHandler","up","clickHandler","click","touchStartHandler","touchEndHandler","touchCancelHandler","isEnabled","isOver","isDown","isOverInternal","isDownInternal","defaultMouseCursor","setHitArea","implButtonOver","_out","checkEnabled","implButtonOut","implButtonDown","_up","implButtonUp","implButtonClick","on","off","getIsEnabled","setIsEnabled","implButtonChangeEnabled","getIsOver","getIsDown","getHitArea","clearHitArea","getIsPreventDefaultEnabled","setIsPreventDefaultEnabled","getIsStopPropagationEnabled","setIsStopPropagationEnabled","getIsHoverCursorEnabled","setIsHoverCursorEnabled","style","cursor","SelectionBehavior","select","isSelected","implSelectionChanged","deselect","getIsSelected","DeviceInfo","u","navigator","userAgent","toLowerCase","isTablet","isMobile","isDesktop","isIOS","isAndroid","isIE","isEdge","isChrome","isSafari","isFireFox","isOpera","isUnknownBrowser","navigator_1","langFull","languages","language","lang","exception","isTouchEnabled","ontouchstart","isDownloadEnabled","devicePixelRatio","isRetina","getIsDesktop","getIsTablet","getIsMobile","getIsIOS","getIsAndroid","getIsIE","getIsEdge","getIsChrome","getIsSafari","getIsFireFox","getIsOpera","getIsUnknownBrowser","getLang","getLangFull","getIsTouchEnabled","getIsDownloadEnabled","getIsRetina","getDevicePixelRatio","getDpi","div","dpi","createElement","body","appendChild","offsetHeight","removeChild","LocalStorage","save","expiredAt","record","JSON","stringify","localStorage","setItem","saveWithTerm","parse","removeItem","isAvailable_","toMilliseconds","dates","SessionStorage","sessionStorage","KeyCode","KeyWatcher","windowKeyDownHandler","windowKeyUpHandler","getIsAnyKeyPressed","pressedKeyCount","getIsKeyPressed","keyCode","isKeyPressedByKeyCode","getIsContinuousPressEnabled","isContinuousPressEnabled","setIsContinuousPressEnabled","KeyWatcherEvent","KEY_DOWN","KEY_UP","isLongPressed","originalEvent","altKey","ctrlKey","shiftKey","WindowWatcher","windowResizeHandler","windowScrollHandler","windowWidth","innerWidth","windowHeight","innerHeight","scrollBottom","calcScrolledPosition","calcScrolledPositionRatio","WindowWatcherEvent","RESIZE","getWindow","getScrollTop","getScrollBottom","getWindowWidth","getWindowHeight","getIsMobileOrientationResize","isMobileOrientationResize","setIsMobileOrientationResize","windowOrientationChangeHandler","SCROLL","ScrollSectionTriggerEvent","currentSectionIndex","prevSectionIndex","ScrollSectionTrigger","updateScrollPosition","check","updateThresholdPosition","triggerPositions","thresholdRatio","thresholdPosition","getCurrentIndex","getPrevIndex","getTriggerPositions","setTriggerPositions","positions","getThreshold","setThreshold","sectionIndex","nearestTriggerIndex","nearestScrolledTriggerPosition","nearestDistance","triggerPositionCount","scrolledTriggerPosition","distance","ResponsiveObserver","breakPoints","breakPointCount","currentIndex","prevIndex","setBreakpoints","getBreakPoints","getBreakPointCount","ResponsiveObserverEvent","Scene","addChild","child","childName","childrenByName","numChildren","addChildren","children","addedChildren","removeChildren","removedChildren","removeAllChildren","name_1","contains","getLastState","lastState","getChildByName","getChildrenByName","getNumChildren","getManager","getPath","manager","names","scene","getScenePathByNames","getTransferInfo","transferInfo","gotoScene","path","goto","_load","SceneState","Loading","SceneEvent","LOAD","implOnLoad","Idling","LOAD_COMPLETE","_unload","Unloading","UNLOAD","onUnload","implOnUnload","UNLOAD_COMPLETE","_arrive","Arriving","ARRIVE","onArrive","implOnArrive","ARRIVE_COMPLETE","_leave","Leaving","LEAVE","onLeave","implOnLeave","LEAVE_COMPLETE","_ascend","Ascending","ASCEND","onAscend","implOnAscend","ASCEND_COMPLETE","_descend","Descending","DESCEND","onDescend","implOnDescend","DESCEND_COMPLETE","SceneTransferInfo","getTransferId","transferId","getDeparturePath","departurePath","getDestinationPath","destinationPath","getSceneStateString","core","Direction","getDirectionString","direction","Static","Sibling","Ascend","Descend","Waypoint","getLevel","_setFrom","_setTo","RootScene","SceneManager","isDestinationChanged","newWaypoints","resolvePath","waypointIndex","createWaypoints","waypoints","setDirection","dumpWaypoint","eventIndex","SceneManagerTransferEvent","TRANSFER_START","checkState","currentScene","normalized","name_2","pop","addSceneAt","success","getSceneNamesByPath","root","name_3","getRoot","getSceneByPath","getSceneBySceneNames","getParentSceneByPath","getSceneLevelByNames","departureNames","destinationNames","turningPath","turningLevel","turningNames","prevPath","name_4","dumpAllPath","_dumpAllPath","tmpTransferId","TRANSFER_COMPLETE","currentWaypoint","currentWaypointPath","SceneManagerRequireSceneEvent","REQUIRE_SCENE","sceneLeaveCompleteHandler","sceneUnloadCompleteHandler","sceneLoadCompleteHandler","sceneAscendCompleteHandler","sceneDescendCompleteHandler","sceneArriveCompleteHandler","rootSceneClass","scenePath","getVersion"],"mappings":"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","file":"index.min.js","sourcesContent":["/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Parallel extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.completeCount = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tprivate completeHandler = (event:Event<Command>):void => {\n\t\t\tif (++this.completeCount >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.completeCount = 0;\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.execute();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.interrupt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getCompleteCount():number { return this.completeCount; }\n\t\tprivate completeCount:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerRequireSceneEvent extends Event<SceneManager> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static REQUIRE_SCENE:string = 'SceneManagerRequireSceneEvent.requireScene';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:SceneManager, scenePath:string) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.scenePath = scenePath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerRequireSceneEvent {\n\t\t\treturn new SceneManagerRequireSceneEvent(this.type, this.target, this.scenePath);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneManagerRequireSceneEvent] type = ' + this.type + ', scenePath = ' + this.scenePath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly scenePath:string;\n\t}\n}\n","/* ---------- project dependencies ---------- */\n\n\n/* ---------- project scripts ---------- */\n\n/// <reference path='alm/util/Time.ts' />\n/// <reference path='alm/math/Easing.ts' />\n/// <reference path='alm/browser/QueryString.ts' />\n\n/// <reference path='alm/debug/Logger.ts' />\n/// <reference path='alm/debug/FpsMonitor.ts' />\n\n/// <reference path='alm/event/Event.ts' />\n/// <reference path='alm/event/EventListener.ts' />\n/// <reference path='alm/event/EventDispatcher.ts' />\n/// <reference path='alm/event/IEventDispatcher.ts' />\n\n/// <reference path='cmd/CommandState.ts' />\n/// <reference path='cmd/CommandEvent.ts' />\n/// <reference path='cmd/Command.ts' />\n/// <reference path='cmd/CommandList.ts' />\n/// <reference path='cmd/Break.ts' />\n/// <reference path='cmd/Return.ts' />\n/// <reference path='cmd/Log.ts' />\n/// <reference path='cmd/Wait.ts' />\n/// <reference path='cmd/Func.ts' />\n/// <reference path='cmd/Listen.ts' />\n/// <reference path='cmd/Tween.ts' />\n/// <reference path='cmd/Serial.ts' />\n/// <reference path='cmd/Parallel.ts' />\n\n/// <reference path='alm/geom/Vector2.ts' />\n/// <reference path='alm/geom/Vector3.ts' />\n/// <reference path='alm/geom/Rectangle.ts' />\n/// <reference path='alm/geom/Boxer.ts' />\n\n/// <reference path='alm/util/Hash.ts' />\n/// <reference path='alm/util/Obj.ts' />\n/// <reference path='alm/util/Arr.ts' />\n/// <reference path='alm/util/Num.ts' />\n/// <reference path='alm/util/Str.ts' />\n/// <reference path='alm/util/Cmd.ts' />\n/// <reference path='alm/util/Dom.ts' />\n\n/// <reference path='alm/resource/ObjectPool.ts' />\n\n/// <reference path='alm/state/Lottery.ts' />\n/// <reference path='alm/state/Switcher.ts' />\n/// <reference path='alm/state/SwitcherEvent.ts' />\n/// <reference path='alm/state/LoHi.ts' />\n/// <reference path='alm/state/LoHiEvent.ts' />\n\n/// <reference path='alm/math/EasingValue.ts' />\n/// <reference path='alm/math/SpringValue.ts' />\n/// <reference path='alm/math/SimpleAverage.ts' />\n/// <reference path='alm/math/SimpleMovingAverage.ts' />\n/// <reference path='alm/math/MaxValue.ts' />\n/// <reference path='alm/math/Circular.ts' />\n\n/// <reference path='alm/time/AnimationFrameTicker.ts' />\n/// <reference path='alm/time/AnimationFrameTickerEvent.ts' />\n/// <reference path='alm/time/Timer.ts' />\n/// <reference path='alm/time/TimerEvent.ts' />\n\n/// <reference path='alm/io/FileLoader.ts' />\n/// <reference path='alm/io/FileLoaderProgressEvent.ts' />\n/// <reference path='alm/io/FileLoaderSuccessEvent.ts' />\n/// <reference path='alm/io/FileLoaderErrorEvent.ts' />\n/// <reference path='alm/io/FileQuery.ts' />\n/// <reference path='alm/io/IFileHandler.ts' />\n\n/// <reference path='alm/audio/core/AudioClip.ts' />\n/// <reference path='alm/audio/AudioPlayer.ts' />\n/// <reference path='alm/audio/CrossOverLoopAudio.ts' />\n/// <reference path='alm/audio/FootstepAudio.ts' />\n\n/// <reference path='alm/view/IView.ts' />\n/// <reference path='alm/view/ViewEvent.ts' />\n/// <reference path='alm/view/View.ts' />\n/// <reference path='alm/view/ButtonBehavior.ts' />\n/// <reference path='alm/view/IButton.ts' />\n/// <reference path='alm/view/SelectionBehavior.ts' />\n/// <reference path='alm/view/ISelection.ts' />\n\n/// <reference path='alm/browser/DeviceInfo.ts' />\n/// <reference path='alm/browser/LocalStorage.ts' />\n/// <reference path='alm/browser/SessionStorage.ts' />\n/// <reference path='alm/browser/KeyWatcher.ts' />\n/// <reference path='alm/browser/KeyWatcherEvent.ts' />\n/// <reference path='alm/browser/WindowWatcher.ts' />\n/// <reference path='alm/browser/WindowWatcherEvent.ts' />\n/// <reference path=\"alm/browser/ScrollSectionTriggerEvent.ts\" />\n/// <reference path=\"alm/browser/ScrollSectionTrigger.ts\" />\n/// <reference path=\"alm/browser/ResponsiveObserver.ts\" />\n/// <reference path=\"alm/browser/ResponsiveObserverEvent.ts\" />\n\n/// <reference path='scn/Scene.ts' />\n/// <reference path='scn/SceneEvent.ts' />\n/// <reference path='scn/SceneTransferInfo.ts' />\n/// <reference path='scn/SceneState.ts' />\n/// <reference path='scn/core/Direction.ts' />\n/// <reference path='scn/core/Waypoint.ts' />\n/// <reference path='scn/core/IRootScene.ts' />\n/// <reference path='scn/core/RootScene.ts' />\n/// <reference path='scn/SceneManager.ts' />\n/// <reference path='scn/SceneManagerTransferEvent.ts' />\n/// <reference path='scn/SceneManagerRequireSceneEvent.ts' />\n\n\n/* ---------- init ---------- */\n\nnamespace alm {\n\n\t// Library version info\n\texport function getVersion():string {\n\t\treturn '0.0.1';\n\t}\n\n\t// Credit info\n\tconst style:string = 'color:#999;';\n\tconst print:Function = console.debug;\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('%c+ alumican.js', style);\n\tprint('%c+ version ' + getVersion(), style);\n\tprint('%c+ http://alumican.net', style);\n\tprint('%c+ https://github.com/alumican/alumican.js', style);\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('');\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.debug {\n\n\timport QueryString = alm.browser.QueryString;\n\n\texport enum LoggerLevel {\n\t\tVerbose = 0,\n\t\tInfo = 1,\n\t\tWarn = 2,\n\t\tError = 3,\n\t\tSilent = 4,\n\t}\n\n\n\n\n\n\texport interface ILogging {\n\n\t\tverbose(prefix:string, messages:any[]):void;\n\t\tinfo(prefix:string, messages:any[]):void;\n\t\twarn(prefix:string, messages:any[]):void;\n\t\terror(prefix:string, messages:any[]):void;\n\t}\n\n\n\n\n\n\texport class NullLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t}\n\t}\n\n\n\n\n\n\texport class ConsoleLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconsole.debug.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconsole.warn.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconsole.error.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\t}\n\n\n\n\n\n\texport class DOMLogging implements ILogging {\n\n\t\tconstructor(dom:HTMLElement, html:boolean) {\n\t\t\tthis.dom = dom;\n\t\t\tthis.html = html;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tprivate print(prefix:string, messages:any[]):void {\n\t\t\tconst line:string = prefix + messages.join(', ');\n\t\t\tif (this.html) {\n\t\t\t\tthis.dom.innerHTML = line + '<br>\\n' + this.dom.innerHTML;\n\t\t\t} else {\n\t\t\t\tthis.dom.innerText = line + '\\n' + this.dom.innerText;\n\t\t\t}\n\t\t}\n\n\t\tprivate dom:HTMLElement;\n\t\tprivate html:boolean;\n\t}\n\n\n\n\n\n\texport class ParallelLogging implements ILogging {\n\n\t\tconstructor(loggers:ILogging[]) {\n\t\t\tthis.loggers = loggers;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].verbose(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].info(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].warn(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].error(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tprivate loggers:ILogging[];\n\t}\n\n\n\n\n\n\texport class Logger {\n\n\t\tpublic static level:number = LoggerLevel.Verbose;\n\t\tpublic static logger:ILogging = new ConsoleLogging();\n\t\tprivate static namespace:string = '';\n\n\t\tpublic static setLevelByQuery(key:string):void {\n\t\t\tconst level:number = new QueryString().getInt(key, LoggerLevel.Silent);\n\t\t\tLogger.level = isNaN(level) ? LoggerLevel.Silent : level;\n\t\t}\n\n\t\tpublic static setNamespace(namespace:string):void {\n\t\t\tLogger.namespace = namespace != '' ? (namespace + '#') : '';\n\t\t}\n\n\t\tpublic static verbose(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tLogger.logger.verbose('[' + Logger.namespace + 'Verbose] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static info(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) {\n\t\t\t\tLogger.logger.info('[' + Logger.namespace + 'Info   ] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static warn(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', messages);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static error(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', messages);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', [message + ' : ' + target]);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', [message + ' : ' + target]);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static stackTrace():void {\n\t\t\tconsole.trace();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n\nfunction trace(...messages:any[]):void {\n\talm.debug.Logger.info.apply(trace.caller, arguments);\n}\n\nfunction throwWarn(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.warnIf.apply(null, arguments);\n}\n\nfunction throwError(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.errorIf.apply(null, arguments);\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Time {\n\n\t\t/**\n\t\t * 現在の時刻(ミリ秒)を取得する\n\t\t * @returns {number} UNIX時間（ミリ秒）\n\t\t */\n\t\tpublic static now():number {\n\t\t\treturn (window.performance || Date).now();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport type EasingFunction = (t:number)=>number;\n\n\texport class Easing {\n\n\t\tpublic static linear(t:number):number {\n\t\t\treturn t;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuad(t:number):number {\n\t\t\treturn (t /= 1) * t;\n\t\t}\n\n\t\tpublic static easeOutQuad(t:number):number {\n\t\t\treturn -(t /= 1) * (t - 2);\n\t\t}\n\n\t\tpublic static easeInOutQuad(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t;\n\t\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCubic(t:number):number {\n\t\t\treturn (t /= 1) * t * t;\n\t\t}\n\n\t\tpublic static easeOutCubic(t:number):number {\n\t\t\treturn (t = t - 1) * t * t + 1;\n\t\t}\n\n\t\tpublic static easeInOutCubic(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuart(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuart(t:number):number {\n\t\t\treturn -((t = t - 1) * t * t * t - 1);\n\t\t}\n\n\t\tpublic static easeInOutQuart(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t;\n\t\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuint(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuint(t:number):number {\n\t\t\treturn ((t = t - 1) * t * t * t * t + 1);\n\t\t}\n\n\t\tpublic static easeInOutQuint(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInSine(t:number):number {\n\t\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t\t}\n\n\t\tpublic static easeOutSine(t:number):number {\n\t\t\treturn Math.sin(t * (Math.PI / 2));\n\t\t}\n\n\t\tpublic static easeInOutSine(t:number):number {\n\t\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\treturn Math.pow(2, 10 * (t - 1));\n\t\t}\n\n\t\tpublic static easeOutExpo(t:number):number {\n\t\t\tif (t == 1) return 1;\n\t\t\treturn -Math.pow(2, -10 * t) + 1;\n\t\t}\n\n\t\tpublic static easeInOutExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\tif (t == 1) return 1;\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCirc(t:number):number {\n\t\t\treturn -(Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t}\n\n\t\tpublic static easeOutCirc(t:number):number {\n\t\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t\t}\n\n\t\tpublic static easeInOutCirc(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static createEaseInElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 0.5) == 2) return 1;\n\t\t\t\tif (p == 0) p = 0.3 * 1.5;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1) return -0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseOutElastic(t);\n\t\t}\n\n\t\tpublic static easeInOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutElastic(t);\n\t\t}\n\n\t\tprivate static defaultEaseInElastic:EasingFunction = Easing.createEaseInElastic();\n\t\tprivate static defaultEaseOutElastic:EasingFunction = Easing.createEaseOutElastic();\n\t\tprivate static defaultEaseInOutElastic:EasingFunction = Easing.createEaseInOutElastic();\n\n\n\n\n\n\t\tpublic static createEaseInBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * (((s *= 1.525) + 1) * t - s);\n\t\t\t\treturn 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseOutBack(t);\n\t\t}\n\n\t\tpublic static easeInOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutBack(t);\n\t\t}\n\n\t\tprivate static defaultEaseInBack:EasingFunction = Easing.createEaseInBack();\n\t\tprivate static defaultEaseOutBack:EasingFunction = Easing.createEaseOutBack();\n\t\tprivate static defaultEaseInOutBack:EasingFunction = Easing.createEaseInOutBack();\n\n\n\n\n\n\t\tpublic static easeInBounce(t:number):number {\n\t\t\treturn 1 - Easing.easeOutBounce(1 - t);\n\t\t}\n\n\t\tpublic static easeOutBounce(t:number):number {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * t * t;\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInOutBounce(t:number):number {\n\t\t\tif (t < 0.5) return Easing.easeInBounce(t * 2) * 0.5;\n\t\t\treturn Easing.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t\t}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\timport Hash = alm.util.Hash;\n\n\texport class QueryString {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(url:string = '') {\n\t\t\tthis.set(url);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(url:string = ''):void {\n\t\t\t// normalize url\n\t\t\tlet search:string = '';\n\t\t\tif (url != '') {\n\t\t\t\tconst index:number = url.indexOf('?');\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tsearch = url.substring(index);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsearch = location.search;\n\t\t\t}\n\t\t\t// parse query\n\t\t\tthis.hash = {};\n\t\t\tconst pairs:string[] = search.substring(1).split('&');\n\t\t\tlet pair:string[];\n\t\t\tfor(let i:number = 0; pairs[i]; ++i) {\n\t\t\t\tpair = pairs[i].split('=');\n\t\t\t\tthis.hash[pair[0]] = pair[1];\n\t\t\t}\n\t\t}\n\n\t\t// 'abc' -> 'abc'\n\t\tpublic getString(key:string, defaultValue:string):string {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : value;\n\t\t}\n\n\t\t// '123' -> 123\n\t\tpublic getInt(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseInt(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '1.23' -> 1.23\n\t\tpublic getFloat(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseFloat(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '0' -> false, otherwise true\n\t\tpublic getBool(key:string, defaultValue:boolean):boolean {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : (<any>value == true);\n\t\t}\n\n\t\tpublic getHash():Hash<string> {\n\t\t\treturn this.hash;\n\t\t}\n\n\t\tpublic setHash(hash:Hash<string>):void {\n\t\t\tthis.hash = hash;\n\t\t}\n\n\t\tpublic setParam(key:string, value:any):void {\n\t\t\tthis.hash[key] = value;\n\t\t}\n\n\t\tpublic removeParam(key:string):void {\n\t\t\tdelete this.hash[key];\n\t\t}\n\n\t\tpublic hasParam(key:string):boolean {\n\t\t\treturn this.hash[key] !== undefined;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate hash:Hash<string>;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.debug {\n\n\timport Time = alm.util.Time;\n\n\texport class FpsMonitor {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic reset():void {\n\t\t\tthis.frameRate = 0;\n\t\t\tthis.frameCount = 0;\n\t\t\tthis.startTime = Time.now();\n\t\t\tthis.actualFrameRate = -1;\n\t\t\tthis.dummyFrameRate = -1;\n\t\t}\n\n\t\tpublic update():void {\n\t\t\t++this.frameCount;\n\t\t\tconst currentTime:number = Time.now();\n\t\t\tconst elapsedTime:number = currentTime - this.startTime;\n\t\t\tif (elapsedTime >= 1000) {\n\t\t\t\tthis.actualFrameRate = 1000 * this.frameCount / elapsedTime;\n\t\t\t\tthis.frameCount = 0;\n\t\t\t\tthis.startTime = currentTime;\n\t\t\t\tif (this.dummyFrameRate < 0) {\n\t\t\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic setDummyFrameRate(frameRate:number):void {\n\t\t\tthis.dummyFrameRate = frameRate;\n\t\t\tthis.frameRate = this.dummyFrameRate;\n\t\t}\n\n\t\tpublic clearDummyFrameRate():void {\n\t\t\tthis.dummyFrameRate = -1;\n\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t}\n\n\t\tpublic getFrameRate():number {\n\t\t\treturn this.frameRate;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate frameRate:number;\n\t\tprivate frameCount:number;\n\t\tprivate startTime:number;\n\t\tprivate actualFrameRate:number;\n\t\tprivate dummyFrameRate:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\r\n\r\nnamespace alm.event {\r\n\r\n\texport class Event<Target = object, Data = any> {\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// CONSTRUCTOR\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tconstructor(type:string, target:Target, data:Data = null) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.target = target;\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// VARIABLE\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tpublic readonly type:string;\r\n\t\tpublic readonly target:Target;\r\n\t\tpublic readonly data:Data;\r\n\t}\r\n}\r\n","/// <reference path='../../index.ts' />\n\nnamespace alm.event {\n\n\timport Logger = alm.debug.Logger;\n\n\texport class EventDispatcher implements IEventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:EventDispatcher = null) {\n\t\t\tthis.target = target || this;\n\t\t\tthis.listeners = {};\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] addEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) return;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.listeners[eventType] = listeners = [];\n\t\t\t}\n\t\t\tlisteners.push(listener);\n\t\t}\n\n\t\tpublic removeEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] removeEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) {\n\t\t\t\t\t\tlisteners.splice(i,  1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (listeners.length == 0) {\n\t\t\t\t\tdelete this.listeners[eventType];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic removeAllEventListener(eventType:string = null):void {\n\t\t\tif (eventType) {\n\t\t\t\tdelete this.listeners[eventType];\n\t\t\t} else {\n\t\t\t\tthis.listeners = {};\n\t\t\t}\n\t\t}\n\n\t\tpublic hasEventListener(eventType:string):boolean {\n\t\t\treturn this.listeners[eventType] != null;\n\t\t}\n\n\t\tpublic dispatchEvent(event:Event):void {\n\t\t\tlet listeners:EventListener[] = this.listeners[event.type];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tlisteners[i].call(this.target, event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic dispatchEventType<T = any>(eventType:string, eventTarget:object = null, data:T = null):void {\n\t\t\tthis.dispatchEvent(new Event<object, T>(eventType, eventTarget, data));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:any;\n\t\tprivate listeners:util.Hash<EventListener[]>;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport enum CommandState {\n\t\tSleeping     = 0,\n\t\tExecuting    = 1,\n\t\tInterrupting = 2,\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class CommandEvent extends Event<Command> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Command) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():CommandEvent {\n\t\t\treturn new CommandEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[CommandEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Command extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(executeFunction:Function = null, interruptFunction:Function = null, destroyFunction:Function = null) {\n\t\t\tsuper();\n\n\t\t\tthis.setExecuteFunction(executeFunction);\n\t\t\tthis.setInterruptFunction(interruptFunction);\n\t\t\tthis.setDestroyFunction(destroyFunction);\n\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.self = this;\n\t\t\tthis.parent = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic execute():void {\n\t\t\tif (this.state > CommandState.Sleeping) {\n\t\t\t\tthrow new Error('[Command.execute] + Command is already executing.');\n\t\t\t}\n\t\t\tthis.state = CommandState.Executing;\n\t\t\tthis.getExecuteFunction().call(this, this);\n\t\t}\n\n\t\tpublic interrupt():void {\n\t\t\tif (this.state == CommandState.Executing) {\n\t\t\t\tthis.state = CommandState.Interrupting;\n\t\t\t\tthis.getInterruptFunction().call(this, this);\n\t\t\t}\n\t\t}\n\n\t\tpublic destroy():void {\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.getDestroyFunction().call(this, this);\n\t\t\tthis.parent = null;\n\t\t\tthis.executeFunction = null;\n\t\t\tthis.interruptFunction = null;\n\t\t\tthis.destroyFunction = null;\n\t\t}\n\n\t\tprotected notifyComplete():void {\n\t\t\tswitch (this.state) {\n\t\t\t\tcase CommandState.Sleeping:\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Executing:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Interrupting:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getExecuteFunction():Function { return this.executeFunction || this.implExecuteFunction };\n\t\tpublic setExecuteFunction(func:Function):void { this.executeFunction = func; }\n\t\tprivate executeFunction:Function;\n\n\t\tpublic getInterruptFunction():Function { return this.interruptFunction || this.implInterruptFunction };\n\t\tpublic setInterruptFunction(func:Function):void { this.interruptFunction = func; }\n\t\tprivate interruptFunction:Function;\n\n\t\tpublic getDestroyFunction():Function { return this.destroyFunction || this.implDestroyFunction };\n\t\tpublic setDestroyFunction(func:Function):void { this.destroyFunction = func; }\n\t\tprivate destroyFunction:Function;\n\n\t\tpublic getState():CommandState { return this.state; }\n\t\tprivate state:CommandState;\n\n\t\tpublic getParent():Command { return this.parent; }\n\t\tpublic setParent(parent:Command):void { this.parent = parent; }\n\t\tprivate parent:Command;\n\n\t\tpublic getSelf():Command { return this.self; }\n\t\tprivate self:Command;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport abstract class CommandList extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper();\n\t\t\tthis.commands = [];\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tthis.commands = this.getCommands().concat(<Command[]>commands);\n\t\t\t}\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(0, ...commands);\n\t\t}\n\n\t\tprotected insertCommandAt(index:number, ...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tArray.prototype.splice.apply(this.getCommands(), (<any[]>[index, 0]).concat(commands));\n\t\t\t}\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprotected insertCommandArrayAt(index:number, commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(index, ...commands);\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn this.commands.length;\n\t\t}\n\n\t\tpublic getCommandByIndex(index:number):Command { return this.commands[index]; }\n\t\tpublic getCommands():Command[] { return this.commands; }\n\n\t\tprivate preProcess(commands:(Command|Function)[]):void {\n\t\t\tconst numCommands:number = commands.length;\n\t\t\tlet command:Command|Function;\n\t\t\tfor (let i:number = 0; i < numCommands; ++i) {\n\t\t\t\tcommand = commands[i];\n\t\t\t\tif (typeof(command) == 'function') commands[i] = command = new Func(command);\n\t\t\t\tcommand.setParent(this);\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\t\tprotected abstract implNotifyBreak():void;\n\t\tprotected abstract implNotifyReturn():void;\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate commands:Command[];\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Break extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyBreak'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Return extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Log extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...messages:any[]) {\n\t\t\tsuper();\n\t\t\tthis.messages = messages;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call(this.messages));\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.messages = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getMessages():any[] { return this.messages; }\n\t\tpublic setMessages(messages:any[]):void { this.messages = messages; }\n\t\tprivate messages:any[];\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Wait extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(time:number = 1000) {\n\t\t\tsuper();\n\t\t\tthis.time = time;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.timerId = window.setTimeout(this.completeHandler, this.time);\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearTimeout(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate completeHandler = ():void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTime():number { return this.time; }\n\t\tpublic setTime(time:number):void { this.time = time; }\n\t\tprivate time:number;\n\n\t\tprivate timerId:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Func extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(func:Function = null, args:any[] = [], eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.func = func;\n\t\t\tthis.args = args;\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t\tthis.func(...this.args);\n\t\t\t} else {\n\t\t\t\tthis.func(...this.args);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.func = null;\n\t\t\tthis.args = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t\tthis.eventType = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getFunction():Function { return this.func; }\n\t\tpublic setFunction(func:Function):void { this.func = func; }\n\t\tprivate func:Function;\n\n\t\tpublic getArguments():any[] { return this.args; }\n\t\tpublic setArguments(args:any[]):void { this.args = args; }\n\t\tprivate args:any[];\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Listen extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.eventType = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Easing = alm.math.Easing;\n\timport EasingFunction = alm.math.EasingFunction;\n\timport Time = alm.util.Time;\n\n\texport type TweenCallbackFunction = (progressTime:number, progressValue:number) => void;\n\n\texport class Tween extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:Object, to:Object, from:Object = null, duration:number = 1000, easing:EasingFunction = Easing.linear, onStart:TweenCallbackFunction = null, onUpdate:TweenCallbackFunction = null, onComplete:TweenCallbackFunction = null) {\n\t\t\tsuper();\n\t\t\tthis.tweenTarget = target;\n\t\t\tthis.to = to;\n\t\t\tthis.from = from;\n\t\t\tthis.duration = duration;\n\t\t\tthis.easing = easing;\n\t\t\tthis.onStart = onStart;\n\t\t\tthis.onUpdate = onUpdate;\n\t\t\tthis.onComplete = onComplete;\n\t\t\tthis.progressTime = 0;\n\t\t\tthis.progressValue = 0;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.internalFrom = {};\n\t\t\tlet value0:number;\n\t\t\tlet value1:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue1 = this.to[key];\n\t\t\t\tif (this.from && this.from[key] != null) {\n\t\t\t\t\tthis.internalFrom[key] = this.from[key];\n\t\t\t\t} else {\n\t\t\t\t\tthis.internalFrom[key] = this.tweenTarget[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.duration > 0) {\n\t\t\t\tthis.timerId = window.setInterval(this.intervalHandler, Tween.updateInterval);\n\t\t\t\tthis.startTime = Time.now();\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t\tthis.apply(1);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\n\t\t\tthis.tweenTarget = null;\n\t\t\tthis.to = null;\n\t\t\tthis.from = null;\n\t\t\tthis.easing = null;\n\t\t\tthis.onStart = null;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.onComplete = null;\n\t\t\tthis.internalFrom = null;\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearInterval(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate apply(timeRatio:number):void {\n\t\t\tthis.progressTime = timeRatio;\n\t\t\tthis.progressValue = this.easing(this.progressTime);\n\t\t\tlet value0:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue0 = this.internalFrom[key];\n\t\t\t\tthis.tweenTarget[key] = value0 + (this.to[key] - value0) * this.progressValue;\n\t\t\t}\n\t\t}\n\n\t\tprivate intervalHandler = ():void => {\n\t\t\tconst elapsedTime:number = Time.now() - this.startTime;\n\t\t\tif (elapsedTime < this.duration) {\n\t\t\t\tthis.apply(elapsedTime / this.duration);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(1);\n\t\t\t\tthis.cancel();\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTarget():Object { return this.tweenTarget; }\n\t\tpublic setTarget(target:Object):void { this.tweenTarget = target; }\n\t\tprivate tweenTarget:Object;\n\n\t\tpublic getDuration():number { return this.duration; }\n\t\tpublic setDuration(duration:number):void { this.duration = duration; }\n\t\tprivate duration:number;\n\n\t\tpublic getTo():Object { return this.to; }\n\t\tpublic setTo(to:Object):void { this.to = to; }\n\t\tprivate to:Object;\n\n\t\tpublic getFrom():Object { return this.from; }\n\t\tpublic setFrom(from:Object):void { this.from = from; }\n\t\tprivate from:Object;\n\n\t\tpublic getEasing():EasingFunction { return this.easing; }\n\t\tpublic setEasing(easing:EasingFunction):void { this.easing = easing; }\n\t\tprivate easing:EasingFunction;\n\n\t\tpublic getOnStart():TweenCallbackFunction { return this.onStart; }\n\t\tpublic setOnStart(func:TweenCallbackFunction):void { this.onStart = func; }\n\t\tprivate onStart:TweenCallbackFunction;\n\n\t\tpublic getOnUpdate():TweenCallbackFunction { return this.onUpdate; }\n\t\tpublic setOnUpdate(func:TweenCallbackFunction):void { this.onUpdate = func; }\n\t\tprivate onUpdate:TweenCallbackFunction;\n\n\t\tpublic getOnComplete():TweenCallbackFunction { return this.onComplete; }\n\t\tpublic setOnComplete(func:TweenCallbackFunction):void { this.onComplete = func; }\n\t\tprivate onComplete:TweenCallbackFunction;\n\n\t\tpublic getProgressTime():number { return this.progressTime; }\n\t\tprivate progressTime:number;\n\n\t\tpublic getProgressValue():number { return this.progressValue; }\n\t\tprivate progressValue:number;\n\n\t\tprivate startTime:number;\n\t\tprivate timerId:number;\n\t\tprivate internalFrom:Object;\n\n\t\tpublic getUpdateInterval():number { return Tween.updateInterval; }\n\t\tpublic setUpdateInterval(milliseconds:number):void { Tween.updateInterval = milliseconds; }\n\t\tprivate static updateInterval:number = 1000 / 60;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Serial extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.currentCommand = null;\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.insertCommandAt(this.position + 1, ...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCommand = this.getCommandByIndex(this.position);\n\t\t\tthis.currentCommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand.execute();\n\t\t}\n\n\t\tprivate completeHandler = (event:Event<Command>):void => {\n\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand = null;\n\t\t\tif (++this.position >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.position = 0;\n\t\t\tif (this.getLength() > 0) {\n\t\t\t\tthis.next();\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.destroy();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getPosition():number { return this.position; }\n\t\tprivate position:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector2 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0) {\n\t\t\tthis.set(x, y);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic copyTo(point:Vector2):void {\n\t\t\tpoint.set(this.x, this.y);\n\t\t}\n\n\t\tpublic getClone():Vector2 {\n\t\t\treturn new Vector2(this.x, this.y);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector2):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tpublic getDistance(point:Vector2):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector3 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, z:number = 0) {\n\t\t\tthis.set(x, y, z);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, z:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic copyTo(point:Vector3):void {\n\t\t\tpoint.set(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic getClone():Vector3 {\n\t\t\treturn new Vector3(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t\tthis.z /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector3):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\tconst dz:number = point.z - this.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tpublic getDistance(point:Vector3):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic z:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Rectangle {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0) {\n\t\t\tthis.set(x, y, width, height);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, width:number, height:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tpublic copyTo(rect:Rectangle):void {\n\t\t\trect.set(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getClone():Rectangle {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getTop():number {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tpublic getBottom():number {\n\t\t\treturn this.y + this.height;\n\t\t}\n\n\t\tpublic getLeft():number {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tpublic getRight():number {\n\t\t\treturn this.x + this.width;\n\t\t}\n\n\t\tpublic getTopLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getTop());\n\t\t}\n\n\t\tpublic getTopRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getTop());\n\t\t}\n\n\t\tpublic getBottomLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getBottom());\n\t\t}\n\n\t\tpublic getBottomRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getBottom());\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic width:number;\n\t\tpublic height:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport enum Align {\n\t\tTop_Left,\n\t\tTop_Center,\n\t\tTop_Right,\n\t\tMiddle_Left,\n\t\tMiddle_Center,\n\t\tMiddle_Right,\n\t\tBottom_Left,\n\t\tBottom_Center,\n\t\tBottom_Right\n\t}\n\n\texport enum ScaleMode {\n\t\tExactFit,\n\t\tShowAll,\n\t\tNoBorder,\n\t\tNoScale,\n\t}\n\n\texport class Boxer {\n\n\t\tpublic static resize(target:geom.Rectangle, bounds:geom.Rectangle, scaleMode:ScaleMode = ScaleMode.ShowAll, align:Align = Align.Middle_Center):geom.Rectangle {\n\t\t\tlet tx:number = target.x;\n\t\t\tlet ty:number = target.y;\n\t\t\tlet tw:number = target.width;\n\t\t\tlet th:number = target.height;\n\n\t\t\tconst bx:number = bounds.x;\n\t\t\tconst by:number = bounds.y;\n\t\t\tconst bw:number = bounds.width;\n\t\t\tconst bh:number = bounds.height;\n\n\t\t\tswitch (scaleMode) {\n\t\t\t\tcase ScaleMode.ShowAll:\n\t\t\t\tcase ScaleMode.NoBorder:\n\t\t\t\t\tconst ratioW:number = bw / tw;\n\t\t\t\t\tconst ratioH:number = bh / th;\n\t\t\t\t\tconst ratio:number = scaleMode == ScaleMode.ShowAll ? (ratioW < ratioH ? ratioW : ratioH) : (ratioW > ratioH ? ratioW : ratioH);\n\t\t\t\t\ttw *= ratio;\n\t\t\t\t\tth *= ratio;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ScaleMode.ExactFit:\n\t\t\t\t\treturn new geom.Rectangle(bx, by, bw, bh);\n\t\t\t}\n\n\t\t\ttx = bx + ((align == Align.Top_Left || align == Align.Middle_Left || align == Align.Bottom_Left) ? 0 :\n\t\t\t\t(align == Align.Top_Right || align == Align.Middle_Right || align == Align.Bottom_Right) ? (bw - tw) : (bw - tw) / 2);\n\t\t\tty = by + ((align == Align.Top_Left || align == Align.Top_Center || align == Align.Top_Right) ? 0 :\n\t\t\t\t(align == Align.Bottom_Left || align == Align.Bottom_Center || align == Align.Bottom_Right) ? (bh - th) : (bh - th) / 2);\n\n\t\t\treturn new geom.Rectangle(tx, ty, tw, th);\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Obj {\n\n\t\tpublic static each(target:any, func:(key:string, value:any) => void):void {\n\t\t\tif (target == null) return;\n\t\t\tObject.keys(target).forEach((key:string):void => {\n\t\t\t\tfunc(key, target[key]);\n\t\t\t});\n\t\t}\n\n\t\tpublic static get(target:any, key:string, defaultValue:any):any {\n\t\t\tconst value:any = target[key];\n\t\t\treturn typeof value !== 'undefined' ? value : defaultValue;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Arr {\n\n\t\t/**\n\t\t * 等差数列を生成する\n\t\t * @param {number} count 要素数\n\t\t * @param {number} init 初期値\n\t\t * @param {number} step 等差\n\t\t * @returns {number[]} 出力配列\n\t\t */\n\t\tpublic static sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\t\tconst result:number[] = new Array(count);\n\t\t\tlet v:number = init;\n\t\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\t\tresult[i] = v;\n\t\t\t\tv += step;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * 重複を削除したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static unique<T>(list:T[]):T[] {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) === i;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * 重複のみを抽出したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\t\tif (unique) {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2つの入力配列に対して総当たり戦をおこなう\n\t\t * @param {T[]} list1 入力配列1\n\t\t * @param {T[]} list2 入力配列2\n\t\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t\t * @param callback.count コールバックの呼ばれた回数\n\t\t * @param callback.index1 入力配列1の現在のインデックス\n\t\t * @param callback.index2 入力配列2の現在のインデックス\n\t\t * @param callback.element1 入力配列1の現在の要素\n\t\t * @param callback.element2 入力配列2の現在の要素\n\t\t */\n\t\tpublic static roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\t\tlet i:number, j:number, p:number = 1;\n\t\t\tconst m:number = list1.length;\n\t\t\tconst n:number = list2.length;\n\t\t\tfor (i = 0; i < m; ++i) {\n\t\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * リスト内の要素を入れ替える\n\t\t * @param list 入出力配列\n\t\t * @param index1 インデックス1\n\t\t * @param index2 インデックス2\n\t\t */\n\t\tpublic static swap<T>(list:T[], index1:number, index2:number):void {\n\t\t\tconst tmp = list[index1];\n\t\t\tlist[index1] = list[index2];\n\t\t\tlist[index2] = tmp;\n\t\t}\n\n\t\t/**\n\t\t * リストをシャッフルする\n\t\t * by Fisher–Yatesアルゴリズム\n\t\t * @param list 入出力配列\n\t\t */\n\t\tpublic static shuffle<T>(list:T[]):void {\n\t\t\tfor(let i = list.length - 1; i > 0; --i) {\n\t\t\t\tArr.swap(list, i, Math.floor(Math.random() * (i + 1)));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * リストを数値としてソートする\n\t\t * @param list 入出力配列\n\t\t * @param asc trueで昇順, falseで降順\n\t\t */\n\t\tpublic static sort(list:number[], asc:boolean = true):void {\n\t\t\tlist.sort(asc ? function(a, b) { return a - b; } : function(a, b) { return b - a; });\n\t\t}\n\n\t\t/**\n\t\t * リストから1要素を選択して返す、元の配列は変更しない\n\t\t * @param list 配列\n\t\t * @returns {T} 選択された要素\n\t\t */\n\t\tpublic static choose<T>(list:T[]):T {\n\t\t\treturn list[Math.floor(Math.random() * (list.length - 1))];\n\t\t}\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\timport EasingFunction = alm.math.EasingFunction;\n\n\texport class Num {\n\n\t\t/**\n\t\t * 値を特定の範囲から範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {boolean} clamp trueの場合は入力値を[srcA, srcB]の範囲内に丸める\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static map(value:number, srcA:number, srcB:number, dstA:number, dstB:number, clamp:boolean = true):number {\n\t\t\tif (srcA === srcB) return dstA;\n\t\t\tif (clamp) {\n\t\t\t\tif (srcA < srcB) {\n\t\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\t} else {\n\t\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (value - srcA) * (dstB - dstA) / (srcB - srcA) + dstA;\n\t\t}\n\n\t\t/**\n\t\t * 値を特定の範囲からイージング関数を経由して特定の範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {EasingFunction} easing イージング関関数\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static ease(value:number, srcA:number, srcB:number, dstA:number, dstB:number, easing:EasingFunction):number {\n\t\t\tif (srcA === srcB) return dstA;\n\t\t\tif (srcA < srcB) {\n\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\treturn easing((value - srcA) / (srcB - srcA)) * (dstB - dstA) + dstA;\n\t\t\t} else {\n\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\treturn easing((value - srcB) / (srcA - srcB)) * (dstB - dstA) + dstA;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clamp(value:number, min:number, max:number):number {\n\t\t\treturn value < min ? min : (value > max ? max : value);\n\t\t}\n\n\t\t/**\n\t\t * 富豪を保ったまま、値の絶対値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} minAbs 最小値\n\t\t * @param {number} maxAbs 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clampAbs(value:number, minAbs:number, maxAbs:number):number {\n\t\t\tif (value > 0) {\n\t\t\t\treturn value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value);\n\t\t\t} else {\n\t\t\t\tvalue = Math.abs(value);\n\t\t\t\treturn -(value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2点間を線形補間する\n\t\t * @param {number} t 補間値\n\t\t * @param {number} a 開始値\n\t\t * @param {number} b 終了値\n\t\t * @param {boolean} clamp trueの場合は補間値を[a, b]の範囲内に丸める\n\t\t * @returns {number} 出力値 (t=0のときa, t=1のときb)\n\t\t */\n\t\tpublic static lerp(t:number, a:number, b:number, clamp:boolean = true):number {\n\t\t\tif (clamp) {\n\t\t\t\tif (t < 0) t = 0;\n\t\t\t\telse if (t > 1) t = 1;\n\t\t\t}\n\t\t\treturn a * (1 - t) + b * t;\n\t\t}\n\n\t\t/**\n\t\t * 乱数（小数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static random(min:number = 0, max:number = 1):number {\n\t\t\treturn min + (max - min) * Math.random();\n\t\t}\n\n\t\t/**\n\t\t * 乱数（整数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static randomInt(min:number = 0, max:number = 1):number {\n\t\t\treturn Math.floor(Num.random(min, max + 1));\n\t\t}\n\n\t\t/**\n\t\t * 2点間の距離を取得する\n\t\t * @param {number} x1 点1のx座標\n\t\t * @param {number} y1 点1のy座標\n\t\t * @param {number} x2 点2のx座標\n\t\t * @param {number} y2 点2のy座標\n\t\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t\t * @returns {number} 距離\n\t\t */\n\t\tpublic static dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\t\tconst dx:number = x2 - x1;\n\t\t\tconst dy:number = y2 - y1;\n\t\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\n\t\t/**\n\t\t * 値をラジアン法から弧度法に変換する\n\t\t * @param {number} radian ラジアン法\n\t\t * @returns {number} 弧度法\n\t\t */\n\t\tpublic static radToDeg(radian:number):number {\n\t\t\treturn radian * Num.RAD2DEG;\n\t\t}\n\n\t\t/**\n\t\t * 値を弧度法からラジアン法に変換する\n\t\t * @param {number} radian 弧度法\n\t\t * @returns {number} ラジアン法\n\t\t */\n\t\tpublic static degToRad(degree:number):number {\n\t\t\treturn degree * Num.DEG2RAD;\n\t\t}\n\n\t\t/**\n\t\t * ある角度からある角度への回転角度を取得する\n\t\t * @param {number} from 元の角度\n\t\t * @param {number} to 目標の角度\n\t\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t\t * @returns {number} 回転角度\n\t\t */\n\t\tpublic static turn(from:number, to:number, radian:boolean = true):number {\n\t\t\treturn radian ? ((to - from + Num.PI3) % Num.PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONST\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static PI2:number = Math.PI * 2;\n\t\tpublic static PI3:number = Math.PI * 3;\n\t\tpublic static PI4:number = Math.PI * 4;\n\t\tpublic static PI5:number = Math.PI * 5;\n\t\tpublic static PI6:number = Math.PI * 6;\n\t\tpublic static PI_2:number = Math.PI / 2;\n\t\tpublic static PI_3:number = Math.PI / 3;\n\t\tpublic static PI_4:number = Math.PI / 4;\n\t\tpublic static PI_6:number = Math.PI / 6;\n\n\t\tprivate static RAD2DEG:number = 180 / Math.PI;\n\t\tprivate static DEG2RAD:number = Math.PI / 180;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Str {\n\n\t\t/**\n\t\t * 時間を h:mm:ss の形式で取得する\n\t\t * @param {number} hours 時\n\t\t * @param {number} minutes 分\n\t\t * @param {number} seconds 秒\n\t\t * @returns {string} h:mm:ss 形式の文字列\n\t\t */\n\t\tpublic static toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\t\tseconds += minutes * 60 + hours * 3600;\n\t\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\t\tlet s:string = ('0' + Math.floor(seconds % 60)).substr(-2, 2);\n\t\t\tif (h != '0') {\n\t\t\t\treturn h + ':' + ('0' + m).substr(-2, 2) + ':' + s;\n\t\t\t} else {\n\t\t\t\treturn m + ':' + s;\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Cmd {\n\n\t\tpublic static stop(command:cmd.Command):any {\n\t\t\tif (command) command.interrupt();\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic static sequence(execute:boolean, ...commands:(cmd.Command|Function)[]):cmd.Serial {\n\t\t\tconst c:cmd.Serial = new cmd.Serial();\n\t\t\tc.addCommand(...commands);\n\t\t\tif (execute) c.execute();\n\t\t\treturn c;\n\t\t}\n\n\t\tpublic static single(execute:boolean, command:cmd.Command):cmd.Command {\n\t\t\tif (execute && command) command.execute();\n\t\t\treturn command;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\timport Easing = alm.math.Easing;\n\n\texport class Dom {\n\n\t\tpublic static instantiate(templateId: string, removeId: boolean = true): HTMLElement {\n\t\t\tconst element = <HTMLElement>document.getElementById(templateId).cloneNode(true);\n\t\t\tif (removeId) {\n\t\t\t\telement.removeAttribute('id');\n\t\t\t}\n\t\t\treturn element;\n\t\t}\n\n\n\n\n\n\t\tpublic static addPointerDownListener(target: HTMLElement | Window, listener: (event: PointerEvent) => void): void {\n\t\t\ttarget.addEventListener('pointerdown', listener);\n\t\t}\n\n\t\tpublic static addPointerMoveListener(target: HTMLElement | Window, listener: (event: PointerEvent) => void): void {\n\t\t\ttarget.addEventListener('pointermove', listener);\n\t\t}\n\n\t\tpublic static addPointerUpListener(target: HTMLElement | Window, listener: (event: PointerEvent) => void): void {\n\t\t\ttarget.addEventListener('pointerup', listener);\n\t\t}\n\n\t\tpublic static removePointerDownListener(target: HTMLElement | Window, listener: (event: PointerEvent) => void): void {\n\t\t\ttarget.removeEventListener('pointerdown', listener);\n\t\t}\n\n\t\tpublic static removePointerMoveListener(target: HTMLElement | Window, listener: (event: PointerEvent) => void): void {\n\t\t\ttarget.removeEventListener('pointermove', listener);\n\t\t}\n\n\t\tpublic static removePointerUpListener(target: HTMLElement | Window, listener: (event: PointerEvent) => void): void {\n\t\t\ttarget.removeEventListener('pointerup', listener);\n\t\t}\n\n\n\n\n\n\t\tpublic static addRootClass(value: string): void {\n\t\t\tif (Dom.htmlElement === null) {\n\t\t\t\tDom.htmlElement = document.documentElement;\n\t\t\t}\n\t\t\tDom.htmlElement.classList.add(value);\n\t\t}\n\n\t\tpublic static removeRootClass(value: string): void {\n\t\t\tif (Dom.htmlElement === null) {\n\t\t\t\tDom.htmlElement = document.documentElement;\n\t\t\t}\n\t\t\tDom.htmlElement.classList.remove(value);\n\t\t}\n\n\t\tpublic static addRootAttribute(key: string, value: string): void {\n\t\t\tif (Dom.htmlElement === null) {\n\t\t\t\tDom.htmlElement = document.documentElement;\n\t\t\t}\n\t\t\tDom.htmlElement.setAttribute(key, value);\n\t\t}\n\n\t\tpublic static removeRootAttribute(key: string, value: string): void {\n\t\t\tif (Dom.htmlElement === null) {\n\t\t\t\tDom.htmlElement = document.documentElement;\n\t\t\t}\n\t\t\tDom.htmlElement.removeAttribute(key);\n\t\t}\n\n\n\n\n\n\t\tpublic static scrollTo(scrollTop: number, useTransition: boolean = true): void {\n\t\t\tDom.scrollTween = Cmd.stop(Dom.scrollTween);\n\t\t\tif (useTransition) {\n\t\t\t\tDom.scrollTween = new cmd.Tween(Dom, {scrollPosition: scrollTop}, null, 1000, Easing.easeOutQuart, null, (): void => {\n\t\t\t\t\tDom.applyScrollPosition();\n\t\t\t\t});\n\t\t\t\tDom.scrollTween.execute();\n\t\t\t} else {\n\t\t\t\tDom.scrollPosition = scrollTop;\n\t\t\t\tDom.applyScrollPosition();\n\t\t\t}\n\t\t}\n\n\t\tprivate static applyScrollPosition(): void {\n\t\t\twindow.scroll(0, Dom.scrollPosition);\n\t\t}\n\n\n\n\n\n\t\tpublic static setupSmoothAnchorLink(): void {\n\t\t\tconst tags = document.getElementsByTagName('a');\n\t\t\tconst tagCount = tags.length;\n\t\t\tfor (let i = 0; i < tagCount; ++i) {\n\t\t\t\tDom.setAnchorLinkAction(tags.item(i));\n\t\t\t}\n\t\t}\n\n\t\tprivate static setAnchorLinkAction(tag: HTMLElement): void {\n\t\t\tconst href = tag.getAttribute('href');\n\t\t\tif ((href.indexOf('#')) == 0 && !tag.hasAttribute('data-smooth-anchor-target')) {\n\t\t\t\ttag.setAttribute('data-smooth-anchor-target', href.slice(1));\n\t\t\t\ttag.setAttribute('href', 'javascript:void(0)');\n\t\t\t\ttag.addEventListener('click', Dom.anchorLinkClickHandler);\n\t\t\t}\n\t\t}\n\n\t\tprivate static anchorLinkClickHandler = (event: MouseEvent): void => {\n\t\t\tconst tag = <HTMLElement>event.currentTarget;\n\n\t\t\tconst targetId = tag.getAttribute('data-smooth-anchor-target');\n\t\t\tconst target = document.getElementById(targetId);\n\t\t\tlet targetScrollPosition = window.pageYOffset + target.getBoundingClientRect().top;\n\n\t\t\tif (tag.hasAttribute('data-smooth-anchor-offset')) {\n\t\t\t\ttargetScrollPosition += parseFloat(tag.getAttribute('data-smooth-anchor-offset'));\n\t\t\t}\n\n\t\t\tDom.scrollTo(targetScrollPosition);\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static htmlElement: HTMLElement = null;\n\t\tprivate static scrollTween: cmd.Tween = null;\n\t\tprivate static scrollPosition: number;\n\n\n\n\n\n\t\tprivate constructor() {\n\t\t}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.resource {\n\n\texport class ObjectPool<T> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * ObjectPool class.\n\t\t * @class\n\t\t * @param {function} onRequireItem This callback function is called when new item is required.\n\t\t * @param {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @param {number} initCount Init item count.\n\t\t * @param {number} growthCount Growth item count.\n\t\t *\n\t\t * @property {number} initCount Init item count.\n\t\t * @property {number} growthCount Growth item count.\n\t\t * @property {function} onRequireItem This callback function is called when new item is required.\n\t\t * @property {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @property {Array} items Array of items.\n\t\t * @property {number} index Current index of items.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tconstructor(onRequireItem:() => T, onDestroyItem:(item:T) => void, initCount:number = 100, growthCount:number = 50) {\n\t\t\tthis.onRequireItem = onRequireItem;\n\t\t\tthis.onDestroyItem = onDestroyItem;\n\t\t\tthis.growthCount = growthCount;\n\t\t\tthis.items = new Array(initCount);\n\t\t\tfor (let i = 0; i < initCount; ++i) {\n\t\t\t\tthis.items[i] = this.onRequireItem();\n\t\t\t}\n\t\t\tthis.index = initCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * Get item from object pool.\n\t\t * @return {T} Item\n\t\t */\n\t\tpublic getItem():T {\n\t\t\tif (this.index > 0) {\n\t\t\t\treturn this.items[--this.index];\n\t\t\t}\n\t\t\tfor (let i = 0; i < this.growthCount; ++i) {\n\t\t\t\tthis.items.unshift(this.onRequireItem());\n\t\t\t}\n\t\t\tthis.index = this.growthCount;\n\t\t\treturn this.getItem();\n\t\t}\n\n\t\t/**\n\t\t * Return item to object pool.\n\t\t * @param {T} Item.\n\t\t * @return void\n\t\t */\n\t\tpublic returnItem(item:T):void {\n\t\t\tthis.items[this.index++] = item;\n\t\t}\n\n\t\t/**\n\t\t * Optimize object pool size.\n\t\t * @return void\n\t\t */\n\t\tpublic reduce():void {\n\t\t\tconst n = this.index;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items.shift());\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t}\n\n\t\t/**\n\t\t * Destroy object pool.\n\t\t * @return void\n\t\t */\n\t\tpublic destroy():void {\n\t\t\tconst n = this.items.length;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items[i]);\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t\tthis.items = null;\n\t\t\tthis.onRequireItem = null;\n\t\t\tthis.onDestroyItem = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate items:T[];\n\t\tprivate index:number;\n\t\tprivate growthCount:number;\n\n\t\tpublic onRequireItem:() => T;\n\t\tpublic onDestroyItem:(item:T) => void;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class Lottery<T = any> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(values:T[] = null) {\n\t\t\tif (values) {\n\t\t\t\tthis.set(values);\n\t\t\t} else {\n\t\t\t\tthis.initValues = this.restValues = null;\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = true;\n\t\t\t}\n\t\t\tthis.onCheck = null;\n\t\t\tthis.isAutoResetEnabled = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(values:T[]):void {\n\t\t\tthis.initValues = values.concat();\n\t\t\tthis.reset();\n\t\t}\n\n\t\tpublic get():T {\n\t\t\tif (this.isEmpty && this.isAutoResetEnabled) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\tconst index:number = Math.floor(Math.random() * this.restCount);\n\t\t\tconst value:T = this.restValues[index];\n\t\t\tlet result:boolean = true;\n\t\t\tif (this.onCheck) result = this.onCheck(value);\n\t\t\tif (result) {\n\t\t\t\tthis.restValues.splice(index, 1);\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tpublic add(value:T, reset:boolean = false):void {\n\t\t\tthis.initValues.push(value);\n\t\t\tthis.restValues.push(value);\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\tif (reset) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.restValues = this.initValues.concat();\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t}\n\n\t\tpublic getRestCount():number {\n\t\t\treturn this.restCount;\n\t\t}\n\n\t\tpublic getIsEmply():boolean {\n\t\t\treturn this.isEmpty;\n\t\t}\n\n\t\tpublic getIsAutoResetEnabled():boolean {\n\t\t\treturn this.isAutoResetEnabled;\n\t\t}\n\n\t\tpublic setIsAutoResetEnabled(enabled:boolean):void {\n\t\t\tthis.isAutoResetEnabled = enabled;\n\t\t}\n\n\t\tpublic static createIndices(count:number):Lottery<number> {\n\t\t\tconst values:number[] = new Array(count);\n\t\t\tfor (let i:number = 0; i < count; ++i) values[i] = i;\n\t\t\treturn new Lottery<number>(values);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic onCheck:(value:T) => boolean;\n\n\t\tprivate isAutoResetEnabled:boolean;\n\t\tprivate isEmpty:boolean;\n\t\tprivate restCount:number;\n\t\tprivate restValues:T[];\n\t\tprivate initValues:T[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\timport Hash = alm.util.Hash;\n\n\texport class Switcher<T = string> extends alm.event.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.isLoopEnabled = true;\n\n\t\t\tthis.itemCount = 0;\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.onChange = null;\n\t\t\tthis.onPrev = null;\n\t\t\tthis.onNext = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic setupById(ids:T[]):void {\n\t\t\tthis.itemCount = ids.length;\n\t\t\tthis.itemIds = ids;\n\n\t\t\tthis.itemIndexById = {};\n\t\t\tfor (let i:number = 0; i < this.itemCount; ++i) {\n\t\t\t\tthis.itemIndexById[this.itemIds[i] as unknown as string] = i;\n\t\t\t}\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tpublic setupByCount(itemCount:number):void {\n\t\t\tthis.itemCount = itemCount;\n\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tprivate setup():void {\n\t\t\tthis.currentItemIndex = -1;\n\t\t\tthis.currentItemId = null;\n\n\t\t\tthis.oldItemIndex = -1;\n\t\t\tthis.oldItemId = null;\n\t\t}\n\n\t\tpublic gotoByIndex(itemIndex:number, useTransition:boolean = true):boolean {\n\t\t\tif (itemIndex < 0 || itemIndex >= this.itemCount) itemIndex = -1;\n\t\t\tif (itemIndex == this.currentItemIndex) return false;\n\n\t\t\tthis.oldItemIndex = this.currentItemIndex;\n\t\t\tthis.currentItemIndex = itemIndex;\n\n\t\t\tif (this.itemIds) {\n\t\t\t\tthis.oldItemId = this.oldItemIndex != -1 ? this.itemIds[this.oldItemIndex] : null;\n\t\t\t\tthis.currentItemId = this.currentItemIndex != -1 ? this.itemIds[this.currentItemIndex] : null;\n\t\t\t}\n\n\t\t\tthis.dispatchPagerEvent(SwitcherEvent.CHANGE, this.onChange, useTransition);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic gotoById(itemId:string, useTransition:boolean = true):boolean {\n\t\t\tconst itemIndex:number = this.itemIndexById.hasOwnProperty(itemId) ? this.itemIndexById[itemId] : -1;\n\t\t\treturn this.gotoByIndex(itemIndex, useTransition);\n\t\t}\n\n\t\tpublic prev(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.getPrevItemIndex();\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.PREV, this.onPrev, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic next(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.getNextItemIndex();\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.NEXT, this.onNext, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic getPrevItemIndex():number {\n\t\t\tlet itemIndex = this.currentItemIndex - 1;\n\t\t\tif (this.isLoopEnabled && itemIndex < 0) itemIndex = this.itemCount - 1;\n\t\t\treturn itemIndex;\n\t\t}\n\n\t\tpublic getPrevItemId():T {\n\t\t\treturn this.itemIds[this.getPrevItemIndex()];\n\t\t}\n\n\t\tpublic getNextItemIndex():number {\n\t\t\tlet itemIndex = this.currentItemIndex + 1;\n\t\t\tif (this.isLoopEnabled && itemIndex >= this.itemCount) itemIndex = 0;\n\t\t\treturn itemIndex;\n\t\t}\n\n\t\tpublic getNextItemId():T {\n\t\t\treturn this.itemIds[this.getNextItemIndex()];\n\t\t}\n\n\t\tprivate dispatchPagerEvent(eventType:string, callback:(event:SwitcherEvent<T>) => void, useTransition:boolean):void {\n\t\t\tconst event:SwitcherEvent<T> = new SwitcherEvent<T>(eventType, this, this.currentItemIndex, this.oldItemIndex, this.currentItemId, this.oldItemId, useTransition);\n\t\t\tif (callback) {\n\t\t\t\tcallback(event);\n\t\t\t}\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsLoopEnabled():boolean { return this.isLoopEnabled; }\n\t\tpublic setIsLoopEnabled(value:boolean):void { this.isLoopEnabled = value; }\n\t\tprivate isLoopEnabled:boolean;\n\n\t\tpublic getItemCount():number { return this.itemCount; }\n\t\tprivate itemCount:number;\n\n\t\tpublic getCurrentItemIndex():number { return this.currentItemIndex; }\n\t\tprivate currentItemIndex:number;\n\n\t\tpublic getOldItemIndex():number { return this.oldItemIndex; }\n\t\tprivate oldItemIndex:number;\n\n\t\tpublic getCurrentItemId():T { return this.currentItemId; }\n\t\tprivate currentItemId:T;\n\n\t\tpublic getOldItemId():T { return this.oldItemId; }\n\t\tprivate oldItemId:T;\n\n\t\tpublic getItemIds():T[] { return this.itemIds; }\n\t\tprivate itemIds:T[];\n\n\t\tprivate itemIndexById:Hash<number>;\n\n\t\tpublic onChange:(event:SwitcherEvent<T>) => void;\n\t\tpublic onPrev:(event:SwitcherEvent<T>) => void;\n\t\tpublic onNext:(event:SwitcherEvent<T>) => void;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class SwitcherEvent<T = string> extends alm.event.Event<Switcher<T>> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static PREV:string = 'prev';\n\t\tpublic static NEXT:string = 'next';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Switcher<T>, currentItemIndex:number, oldItemIndex:number, currentItemId:T, oldItemId:T, useTransition:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.currentItemIndex = currentItemIndex;\n\t\t\tthis.oldItemIndex = oldItemIndex;\n\t\t\tthis.currentItemId = currentItemId;\n\t\t\tthis.oldItemId = oldItemId;\n\t\t\tthis.useTransition = useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SwitcherEvent<T> {\n\t\t\treturn new SwitcherEvent<T>(this.type, this.target, this.currentItemIndex, this.oldItemIndex, this.currentItemId, this.oldItemId, this.useTransition);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SwitcherEvent] type = ' + this.type + ', ' + this.oldItemIndex + ' -> ' + this.currentItemIndex + ', transition = ' + this.useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentItemIndex:number;\n\t\tpublic readonly oldItemIndex:number;\n\t\tpublic readonly currentItemId:T;\n\t\tpublic readonly oldItemId:T;\n\t\tpublic readonly useTransition:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class LoHi extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(lowThreshold:number, highThreshold:number, initValue:number = 0) {\n\t\t\tsuper();\n\n\t\t\tthis.lowThreshold = lowThreshold;\n\t\t\tthis.highThreshold = highThreshold;\n\t\t\tthis.isHigh = false;\n\t\t\tthis._set(initValue, false);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * 新しい入力値を設定する\n\t\t * @param {number} value 入力値\n\t\t * @returns {boolean} 結果が更新されればtrue\n\t\t */\n\t\tpublic set(value:number):boolean {\n\t\t\treturn this._set(value, true);\n\t\t}\n\n\t\tpublic getIsHigh():boolean {\n\t\t\treturn this.isHigh;\n\t\t}\n\n\t\tpublic getValue():number {\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic getLowThreshold():number {\n\t\t\treturn this.lowThreshold;\n\t\t}\n\n\t\tpublic getHighThreshold():number {\n\t\t\treturn this.highThreshold;\n\t\t}\n\n\t\tpublic setLowThreshold(threshold:number):void {\n\t\t\tthis.lowThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tpublic setHighThreshold(threshold:number):void {\n\t\t\tthis.highThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tprivate _set(value:number, dispatchEvent:boolean):boolean {\n\t\t\tthis.value = value;\n\t\t\tif (this.isHigh && this.value < this.lowThreshold) {\n\t\t\t\tthis.isHigh = false;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.LOW, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (!this.isHigh && this.value > this.highThreshold) {\n\t\t\t\tthis.isHigh = true;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.HIGH, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate lowThreshold:number;\n\t\tprivate highThreshold:number;\n\t\tprivate value:number;\n\t\tprivate isHigh:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class LoHiEvent extends alm.event.Event<LoHi> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static LOW:string = 'low';\n\t\tpublic static HIGH:string = 'high';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:LoHi, isHigh:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.isHigh = isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():LoHiEvent {\n\t\t\treturn new LoHiEvent(this.type, this.target, this.isHigh);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[LoHiEvent] type = ' + this.type + ', isHigh = ' + this.isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly isHigh:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class EasingValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, easing:number = 0.1, tolerance:number = 0) {\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.easing = easing;\n\t\t\tthis.tolerance = tolerance;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tconst d:number = this.target - this.value;\n\t\t\t\tif (this.tolerance > 0 && Math.abs(d) <= this.tolerance) {\n\t\t\t\t\tthis.value = this.target;\n\t\t\t\t} else {\n\t\t\t\t\tthis.value += d * this.easing;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():EasingValue {\n\t\t\tconst v:EasingValue = new EasingValue(this.value, this.easing, this.tolerance);\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic easing:number;\n\t\tpublic tolerance:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SpringValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, spring:number = 0.1, friction:number = 0.9) {\n\t\t\tthis.acceleration = 0;\n\t\t\tthis.velocity = 0;\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.spring = spring;\n\t\t\tthis.friction = friction;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tthis.acceleration = (this.target - this.value) * this.spring;\n\t\t\t\tthis.velocity += this.acceleration;\n\t\t\t\tthis.velocity *= this.friction;\n\t\t\t\tthis.value += this.velocity;\n\t\t\t} else {\n\t\t\t\tthis.acceleration = 0;\n\t\t\t\tthis.velocity = 0;\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():SpringValue {\n\t\t\tconst v:SpringValue = new SpringValue(this.value, this.spring, this.friction);\n\t\t\tv.acceleration = this.acceleration;\n\t\t\tv.velocity = this.velocity;\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic velocity:number;\n\t\tpublic acceleration:number;\n\t\tpublic spring:number;\n\t\tpublic friction:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tthis._value = (this._value * this._count + n) / ++this._count;\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _count:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleMovingAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxCount:number) {\n\t\t\tthis.maxCount = this._maxCount = maxCount;\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._count = this._maxCount;\n\n\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\tthis._value -= oldest;\n\n\t\t\t\tconst latest:number = n / this._maxCount;\n\t\t\t\tthis._value += latest;\n\n\t\t\t\tthis.values.push(latest);\n\n\t\t\t} else {\n\t\t\t\tthis._value *= (this._count - 1);\n\t\t\t\tthis._value += n;\n\t\t\t\tthis._value /= this._count;\n\n\t\t\t\tthis.values.push(n / this._maxCount);\n\t\t\t}\n\n\t\t\t/*\n\t\t\tthis._values.push(n);\n\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._values.shift();\n\t\t\t\tthis._count = this._maxCount;\n\t\t\t}\n\n\t\t\tthis._value = 0;\n\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\tthis._value += this._values[i];\n\t\t\t}\n\t\t\tthis._value /= this._count;\n\t\t\t*/\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class MaxValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxLatestCount:number = 0) {\n\t\t\tthis.maxLatestCount = this._maxLatestCount = maxLatestCount;\n\t\t\tthis.value = this._value = -Number.MAX_VALUE;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (this._maxLatestCount > 0) {\n\t\t\t\tif (++this._count > this._maxLatestCount) {\n\t\t\t\t\tthis._count = this._maxLatestCount;\n\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\t\tif (this._value > oldest) {\n\t\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._value = -Number.MAX_VALUE;\n\t\t\t\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\t\t\t\tconst v:number = this.values[i];\n\t\t\t\t\t\t\tif (this._value < v) {\n\t\t\t\t\t\t\t\tthis._value = v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++this._count;\n\t\t\t\tif (this._value < n) {\n\t\t\t\t\tthis._value = n;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxLatestCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxLatestCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class Circular {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(angle:number = 0, velocity:number = 0, radian:boolean = true) {\n\t\t\tthis.setAngle(angle, radian);\n\t\t\tthis.setVelocity(velocity, radian);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getAngle(radian:boolean = true):number {\n\t\t\treturn radian ? this.angle : (this.angle * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setAngle(angle:number, radian:boolean = true):void {\n\t\t\tthis.angle = radian ? angle : (angle * Math.PI / 180);\n\t\t}\n\n\t\tpublic getVelocity(radian:boolean = true):number {\n\t\t\treturn radian ? this.velocity : (this.velocity * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setVelocity(velocity:number, radian:boolean = true):void {\n\t\t\tthis.velocity = radian ? velocity : (velocity * Math.PI / 180);\n\t\t}\n\n\t\tpublic update():void {\n\t\t\tthis.angle += this.velocity;\n\t\t}\n\n\t\tpublic getSin(length:number = 1):number {\n\t\t\treturn length * Math.sin(this.angle);\n\t\t}\n\n\t\tpublic getCos(length:number = 1):number {\n\t\t\treturn length * Math.cos(this.angle);\n\t\t}\n\n\t\tpublic getTan(length:number = 1):number {\n\t\t\treturn length * Math.tan(this.angle);\n\t\t}\n\n\t\tpublic getMagnitude(length:number = 1):number {\n\t\t\treturn length * (1 + Math.sin(this.angle)) / 2;\n\t\t}\n\n\t\tpublic getVector(length:number = 1, xy:{ x:number, y:number } = null):{ x:number, y:number } {\n\t\t\tif (xy != null) {\n\t\t\t\txy.x = this.getCos(length);\n\t\t\t\txy.y = this.getSin(length);\n\t\t\t} else {\n\t\t\t\treturn { x: this.getCos(length), y: this.getSin(length) };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate angle:number;\n\t\tprivate velocity:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class AnimationFrameTicker extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * requestAnimationFrameベースでのFPSタイマー\n\t\t * @param {number} frameRate 目標フレームレート（0の場合はフレームレートを制限しない）\n\t\t * @param {number} tolerance 許容誤差（frameRateに対する割合）\n\t\t */\n\t\tconstructor(frameRate:number = 0, tolerance:number = 0.1) {\n\t\t\tsuper();\n\n\t\t\tthis.targetFrameRate = frameRate;\n\t\t\tthis.interval = 1000 / this.targetFrameRate;\n\n\t\t\tthis.tolerance = tolerance;\n\t\t\tthis.toleranceDuration = this.interval * this.tolerance;\n\n\t\t\tthis.isRunning = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.frameStartTime = Time.now();\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\twindow.cancelAnimationFrame(this.requestId);\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getTargetFrameRate():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tprivate setInterval(callback:Function):number {\n\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t}\n\n\t\tprivate clearInterval(requestId:number):void {\n\t\t\twindow.clearInterval(requestId);\n\t\t}\n\n\t\tprivate updateHandler = ():void => {\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t\tif (this.targetFrameRate > 0) {\n\t\t\t\tconst currentTime:number = Time.now();\n\t\t\t\tconst elapsedTime:number = currentTime - this.frameStartTime;\n\t\t\t\tif (elapsedTime >= this.interval - this.toleranceDuration) {\n\t\t\t\t\t//trace('[AnimationFrameTicker] frameRate : ' + (1000 / elapsedTime));\n\t\t\t\t\tthis.frameStartTime = currentTime;\n\t\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate requestId:number;\n\n\t\tprivate targetFrameRate:number;\n\t\tprivate tolerance:number;\n\t\tprivate toleranceDuration:number;\n\t\tprivate interval:number;\n\t\tprivate frameStartTime:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class AnimationFrameTickerEvent extends Event<AnimationFrameTicker> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:AnimationFrameTicker) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():AnimationFrameTickerEvent {\n\t\t\treturn new AnimationFrameTickerEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[AnimationFrameTickerEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class Timer extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(interval:number = 1000, repeatCount:number = 0) {\n\t\t\tsuper();\n\t\t\tthis.interval = interval;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tId = -1;\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\t\t\tthis.tStartTime = Time.now();\n\t\t\tthis.startInterval(this.tRestTime != -1 ? this.tRestTime : this.interval);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tRestTime = Time.now() - this.tStartTime;\n\t\t\tthis.stopInterval();\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.stop();\n\t\t\tthis.elapsedCount = 0;\n\t\t\tthis.tRestTime = -1;\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tthis.reset();\n\t\t\tthis.start();\n\t\t}\n\n\n\n\n\n\t\tprivate startInterval(interval:number):void {\n\t\t\tthis.stopInterval();\n\t\t\tthis.tInterval = interval;\n\t\t\tthis.tId = window.setInterval(this.timerHandler, this.tInterval);\n\t\t}\n\n\t\tprivate stopInterval():void {\n\t\t\tif (this.tId != -1) {\n\t\t\t\tclearInterval(this.tId);\n\t\t\t\tthis.tId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatch(eventType:string):void {\n\t\t\tthis.dispatchEvent(new TimerEvent(eventType, this, this.elapsedCount, this.repeatCount, this.getRestCount()));\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.tStartTime = Time.now();\n\t\t\t++this.elapsedCount;\n\t\t\tlet isCompleted:boolean = false;\n\t\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\t\tisCompleted = true;\n\t\t\t\tthis.stop();\n\t\t\t} else if (this.tInterval != this.interval) {\n\t\t\t\tthis.startInterval(this.interval);\n\t\t\t}\n\t\t\tthis.dispatch(TimerEvent.TICK);\n\t\t\tif (isCompleted) {\n\t\t\t\tthis.dispatch(TimerEvent.COMPLETE);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsRunning():boolean { return this.isRunning; }\n\t\tprivate isRunning:boolean;\n\n\t\tpublic getInterval():number { return this.interval; }\n\t\tpublic setInterval(interval:number):void { this.interval = interval; }\n\t\tprivate interval:number;\n\n\t\tpublic getElapsedTime():number { return Time.now() - this.tStartTime; }\n\n\t\tpublic getRestTime():number { return this.interval - this.getElapsedTime(); }\n\n\t\tpublic getElapsedCount():number { return this.elapsedCount; }\n\t\tprivate elapsedCount:number;\n\n\t\tpublic getRepeatCount():number { return this.repeatCount; }\n\t\tpublic setRepeatCount(count:number):void { this.repeatCount = count; }\n\t\tprivate repeatCount:number;\n\n\t\tpublic getRestCount():number { return this.repeatCount - this.elapsedCount; }\n\n\t\tprivate tStartTime:number;\n\t\tprivate tRestTime:number;\n\t\tprivate tInterval:number;\n\t\tprivate tId:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class TimerEvent extends Event<Timer> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Timer, elapsedCount:number = 0, repeatCount:number = 0, restCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.elapsedCount = elapsedCount;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.restCount = restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():TimerEvent {\n\t\t\treturn new TimerEvent(this.type, this.target, this.elapsedCount, this.repeatCount, this.restCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[TimerEvent] type = ' + this.type + ', elapsedCount = ' + this.elapsedCount + ', repeatCount=' + this.repeatCount + ', restCount=' + this.restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly elapsedCount:number;\n\t\tpublic readonly repeatCount:number;\n\t\tpublic readonly restCount:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\texport type CompleteFunction = (content:any, info?:any) => void;\n\texport type ErrorFunction = (info?:any) => void;\n\n\texport class FileLoader extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(totalThreadCount:number = 3) {\n\t\t\tsuper();\n\n\t\t\tthis.isLoading_ = false;\n\n\t\t\tthis.currentCount = 0;\n\t\t\tthis.totalCount = 0;\n\n\t\t\tthis.currentThreadCount = 0;\n\t\t\tthis.totalThreadCount = totalThreadCount;\n\n\t\t\tthis.loadingQueries = [];\n\t\t\tthis.loadingQueryIndex = -1;\n\n\t\t\tthis.queriesByQueryId = {};\n\t\t\tthis.queriesByUrl = {};\n\n\t\t\tthis.handlersByType = {};\n\n\t\t\ttrace('[FileLoader] totalThreadCount : ' + this.totalThreadCount);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic require(url:string, type:string, id:string = ''):string {\n\t\t\treturn this.addQuery(type, url, {}, id);\n\t\t}\n\n\t\tprivate addQuery(type:string, url:string, param:any, id:string = ''):string {\n\t\t\tif (this.queriesByUrl[url]) return this.queriesByUrl[url].id;\n\n\t\t\tconst query:FileQuery = new FileQuery();\n\t\t\tquery.type = type;\n\t\t\tquery.url = url;\n\t\t\tquery.param = param;\n\n\t\t\tif (id != '') {\n\t\t\t\tquery.id = id;\n\t\t\t} else {\n\t\t\t\tquery.id = String(FileLoader.id);\n\t\t\t\t++FileLoader.id;\n\t\t\t}\n\n\t\t\tthis.loadingQueries.push(query);\n\t\t\tthis.queriesByQueryId[query.id] = query;\n\t\t\tthis.queriesByUrl[query.url] = query;\n\t\t\treturn query.id;\n\t\t}\n\n\t\tpublic load():void {\n\t\t\tif (this.isLoading_) return;\n\t\t\tthis.isLoading_ = true;\n\t\t\tthis.loadingQueryIndex = -1;\n\t\t\tthis.next();\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCount = this.loadingQueryIndex + 1;\n\t\t\tthis.totalCount = this.loadingQueries.length;\n\n\t\t\tconst progress = this.currentCount / this.totalCount;\n\t\t\tif (this.currentCount == 0) {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.START, this, progress, this.currentCount, this.totalCount));\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.PROGRESS, this, progress, this.currentCount, this.totalCount));\n\t\t\t}\n\n\t\t\twhile (this.currentThreadCount < this.totalThreadCount) {\n\t\t\t\tif (this.loadingQueryIndex + 1 < this.totalCount) {\n\t\t\t\t\t// add thread\n\t\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\t\tquery.isLoading = true;\n\t\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\t\tif (handler) {\n\t\t\t\t\t\thandler.load(query.url, (content:any, info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content, info);\n\t\t\t\t\t\t},(info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadErrorHandler(query, info);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\t}\n\t\t\t\t\t// continue loop\n\n\t\t\t\t} else {\n\t\t\t\t\t// all finished\n\t\t\t\t\tthis.isLoading_ = false;\n\t\t\t\t\tthis.loadingQueries = [];\n\t\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.COMPLETE, this, progress, this.currentCount, this.totalCount));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\tif (this.currentCount < this.totalCount) {\n\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\tquery.isLoading = true;\n\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\tif (handler) {\n\t\t\t\t\thandler.load(query.url, (content:any):void => {\n\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content);\n\t\t\t\t\t},(message:string = ''):void => {\n\t\t\t\t\t\tthis.fileLoadErrorHandler(query, message);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\tthis.next();\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis.isLoading_ = false;\n\t\t\t\tthis.loadingQueries = [];\n\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\tthis.dispatchEvent(new FileLoaderEvent(FileLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tpublic addHandler(handler:IFileHandler):void {\n\t\t\tthis.handlersByType[handler.getType()] = handler;\n\t\t}\n\n\t\tprivate fileLoadCompleteHandler = (query:FileQuery, content:any, info:object = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tquery.content = content;\n\t\t\tif (query.param.onLoad) {\n\t\t\t\tquery.param.onLoad(content, info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderSuccessEvent(FileLoaderSuccessEvent.SUCCESS, this, content, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tprivate fileLoadErrorHandler = (query:FileQuery, info:any = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tif (query.param.onError) {\n\t\t\t\tquery.param.onError(info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderErrorEvent(FileLoaderErrorEvent.ERROR, this, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tpublic getQueryByQueryId(queryId:string):FileQuery {\n\t\t\treturn this.queriesByQueryId[queryId];\n\t\t}\n\n\t\tpublic getQueryByUrl(url:string):FileQuery {\n\t\t\treturn this.queriesByUrl[url];\n\t\t}\n\n\t\tpublic isLoading():boolean {\n\t\t\treturn this.isLoading_;\n\t\t}\n\n\t\tpublic getCurrentCount():number {\n\t\t\treturn this.currentCount;\n\t\t}\n\n\t\tpublic getTotalCount():number {\n\t\t\treturn this.totalCount;\n\t\t}\n\n\t\tpublic getContentByUrl<T = any>(url:string):T {\n\t\t\treturn this.queriesByUrl[url].content;\n\t\t}\n\n\t\tpublic getContentByQueryId<T = any>(textureId:string):T {\n\t\t\treturn this.queriesByQueryId[textureId].content;\n\t\t}\n\n\t\tpublic getCurrentThreadCount():number {\n\t\t\treturn this.currentThreadCount;\n\t\t}\n\n\t\tpublic getTotalThreadCount():number {\n\t\t\treturn this.totalThreadCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isLoading_:boolean;\n\n\t\tprivate currentCount:number;\n\t\tprivate totalCount:number;\n\n\t\tprivate currentThreadCount:number;\n\t\tprivate totalThreadCount:number;\n\n\t\tprivate loadingQueries:FileQuery[];\n\t\tprivate loadingQueryIndex:number;\n\n\t\tprivate queriesByQueryId:util.Hash<FileQuery>;\n\t\tprivate queriesByUrl:util.Hash<FileQuery>;\n\n\t\tprivate handlersByType:util.Hash<IFileHandler>;\n\n\t\tprivate static id:number = 0;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderProgressEvent extends alm.event.Event<FileLoader> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic START:string = 'start';\n\t\tstatic PROGRESS:string = 'progress';\n\t\tstatic COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:FileLoader, progress:number = 0, loadedCount:number = 0, totalCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.progress = progress;\n\t\t\tthis.loadedCount = loadedCount;\n\t\t\tthis.totalCount = totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderProgressEvent {\n\t\t\treturn new FileLoaderProgressEvent(this.type, this.target, this.progress, this.loadedCount, this.totalCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderProgressEvent] type = ' + this.type + ', progress = ' + this.progress + ', loadedCount = ' + this.loadedCount + ', totalCount = ' + this.totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly progress:number;\n\t\tpublic readonly loadedCount:number;\n\t\tpublic readonly totalCount:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderSuccessEvent extends alm.event.Event<FileLoader> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SUCCESS:string = 'success';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:FileLoader, content:any, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.content = content;\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderSuccessEvent {\n\t\t\treturn new FileLoaderSuccessEvent(this.type, this.target, this.content, this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderSuccessEvent] type = ' + this.type + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly content:any;\n\t\tpublic readonly info:any;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderErrorEvent extends alm.event.Event<FileLoader> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic ERROR:string = 'error';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:FileLoader, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderErrorEvent {\n\t\t\treturn new FileLoaderErrorEvent(this.type, this.target, this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderErrorEvent] type = ' + this.type + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly info:any;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileQuery {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.isLoadComplete = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic id:string;\n\t\tpublic type:string;\n\t\tpublic url:string;\n\t\tpublic param:any;\n\t\tpublic content:any;\n\t\tpublic isLoading:boolean;\n\t\tpublic isLoadComplete:boolean;\n\t}\n}\n","/// <reference path=\"../../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport Cmd = alm.util.Cmd;\n\timport Easing = alm.math.Easing;\n\n\texport class AudioClip {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(context:AudioContext, destination:AudioNode, fileName:string = '', masterVolume:number = 1) {\n\t\t\t//this.context = new AudioContext();\n\t\t\tthis.context = context;\n\t\t\tthis.masterVolume = masterVolume;\n\n\t\t\tthis.buffer = null;\n\t\t\tthis.sourceNode = null;\n\t\t\tthis.isAvailable = false;\n\n\t\t\tthis.duration = 0;\n\n\t\t\tthis.gainNode = this.context.createGain();\n\t\t\tthis.gainNode.connect(destination);\n\n\t\t\tthis.volume = 1;\n\t\t\tthis.applyVolume();\n\n\t\t\tif (fileName != '') {\n\t\t\t\tthis.load(fileName);\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic load(url:string):void {\n\t\t\tconst request:XMLHttpRequest = new XMLHttpRequest();\n\t\t\trequest.responseType = 'arraybuffer';\n\t\t\trequest.onreadystatechange = ():void => {\n\t\t\t\tif (request.readyState == 4) {\n\t\t\t\t\tif (request.status == 0 || request.status == 200) {\n\t\t\t\t\t\tthis.context.decodeAudioData(request.response, (buffer:AudioBuffer):void => {\n\t\t\t\t\t\t\ttrace('[AudioClip] load complete :', url);\n\t\t\t\t\t\t\tthis.isAvailable = true;\n\t\t\t\t\t\t\tthis.buffer = buffer;\n\t\t\t\t\t\t\tthis.duration = this.buffer.duration;\n\t\t\t\t\t\t}, (error:Error):void => {\n\t\t\t\t\t\t\ttrace('[AudioClip] load error :', error);\n\t\t\t\t\t\t\ttrace(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\trequest.open('GET', url, true);\n\t\t\trequest.send('');\n\t\t}\n\n\t\tpublic play(loop:boolean = false, overwrite:boolean = true):void {\n\t\t\tif (!this.isAvailable) return;\n\t\t\tif (!overwrite && this.sourceNode) return;\n\t\t\tthis.stop();\n\t\t\tthis.sourceNode = this.context.createBufferSource();\n\t\t\tthis.sourceNode.buffer = this.buffer;\n\t\t\tthis.sourceNode.loop = loop;\n\t\t\tthis.sourceNode.connect(this.gainNode);\n\t\t\tthis.sourceNode.start(0);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (this.sourceNode) {\n\t\t\t\tthis.sourceNode.stop();\n\t\t\t\tthis.sourceNode.disconnect(this.gainNode);\n\t\t\t\tthis.sourceNode = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic getVolume():number {\n\t\t\treturn this.volume;\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tCmd.stop(this.volumeTween);\n\t\t\tif (this.volume == volume) return;\n\t\t\tthis.volume = volume;\n\t\t\tthis.applyVolume();\n\t\t}\n\n\t\tpublic fadeTo(to:number, duration:number = 1000, onComplete:Function = null):void {\n\t\t\tCmd.stop(this.volumeTween);\n\t\t\tthis.volumeTween = new cmd.Tween(this, { volume: to }, null, duration, Easing.linear, null, ():void => {\n\t\t\t\tthis.applyVolume();\n\t\t\t}, ():void => {\n\t\t\t\tif (onComplete) onComplete();\n\t\t\t});\n\t\t\tthis.volumeTween.execute();\n\t\t}\n\n\t\tpublic fadeIn(duration:number = 1000):void {\n\t\t\tthis.fadeTo(1, duration);\n\t\t}\n\n\t\tpublic fadeOut(duration:number = 1000, stopOnComplete:boolean = true):void {\n\t\t\tthis.fadeTo(0, duration, ():void => {\n\t\t\t\tif (stopOnComplete) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tprivate applyVolume():void {\n\t\t\tthis.gainNode.gain.value = this.volume * this.masterVolume;\n\t\t}\n\n\t\tpublic getIsAvailable():boolean {\n\t\t\treturn this.isAvailable;\n\t\t}\n\n\t\tpublic getDuration():number {\n\t\t\treturn this.duration;\n\t\t}\n\n\t\tpublic getCurrentTime():number {\n\t\t\treturn this.context.currentTime;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isAvailable:boolean;\n\t\tprivate context:AudioContext;\n\t\tprivate volume:number;\n\t\tprivate masterVolume:number;\n\t\tprivate buffer:AudioBuffer;\n\t\tprivate duration:number;\n\t\tprivate sourceNode:AudioBufferSourceNode;\n\t\tprivate gainNode:GainNode;\n\t\tprivate volumeTween:cmd.Tween;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Hash = alm.util.Hash;\n\n\texport class AudioPlayer extends EventDispatcher {\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t\tsuper();\n\n\t\t\tconst AudioContext:any = window['AudioContext'] || window['webkitAudioContext'] || null;\n\t\t\tthis.isAvailable = AudioContext != null;\n\t\t\tif (this.isAvailable) {\n\t\t\t\tthis.context = new AudioContext();\n\t\t\t\tthis.clipsById = {};\n\n\t\t\t\tthis.masterGainNode = this.context.createGain();\n\t\t\t\tthis.masterGainNode.connect(this.context.destination);\n\t\t\t\tthis.masterVolume = 1;\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolute:number = 1, id:string = ''):boolean {\n\t\t\tif (!this.isAvailable) return false;\n\t\t\tif (id == '') id = url;\n\t\t\tif (this.clipsById[id]) return false;\n\t\t\tthis.clipsById[id] = new AudioClip(this.context, this.masterGainNode, url, masterVolute);\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic getClip(id:string):AudioClip {\n\t\t\tif (!this.isAvailable) return;\n\t\t\treturn this.clipsById[id];\n\t\t}\n\n\t\tpublic getMasterVolume():number {\n\t\t\tif (!this.isAvailable) return 0;\n\t\t\treturn this.masterVolume;\n\t\t}\n\n\t\tpublic setMasterVolume(volume:number):void {\n\t\t\tif (!this.isAvailable) return;\n\t\t\tthis.masterVolume = volume;\n\t\t\tthis.masterGainNode.gain.value = this.masterVolume;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getInstance():AudioPlayer { return AudioPlayer.instance || (AudioPlayer.instance = new AudioPlayer()); }\n\t\tprivate static instance:AudioPlayer = null;\n\n\t\tprivate isAvailable:boolean;\n\t\tprivate context:AudioContext;\n\t\tprivate clipsById:Hash<AudioClip>;\n\n\t\tprivate masterGainNode:GainNode;\n\t\tprivate masterVolume:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\texport class CrossOverLoopAudio {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(crossOverDuration:number = 1) {\n\t\t\tthis.audioPlayer = AudioPlayer.getInstance();\n\n\t\t\tthis.clipCount = 0;\n\t\t\tthis.clipIndex = 0;\n\t\t\tthis.clipIds = [];\n\t\t\tthis.clip = null;\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.volume = 1;\n\n\t\t\tthis.crossOverDuration = crossOverDuration;\n\t\t\tthis.timeoutId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolume:number = 1):void {\n\t\t\tconst id = url + '-' + this.clipCount;\n\t\t\tthis.audioPlayer.add(url, masterVolume, id);\n\t\t\tthis.clipIds.push(id);\n\t\t\tthis.clipCount = this.clipIds.length;\n\t\t}\n\n\t\tpublic play():void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.playCurrent();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\n\t\t\tthis.stopCurrent();\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tthis.volume = volume;\n\n\t\t\tif (this.clip) {\n\t\t\t\tthis.clip.setVolume(this.volume);\n\t\t\t}\n\t\t}\n\n\t\tprivate playCurrent():void {\n\t\t\tthis.clip = this.audioPlayer.getClip(this.clipIds[this.clipIndex]);\n\t\t\tthis.clip.setVolume(this.volume);\n\t\t\tthis.clip.play(false, true);\n\n\t\t\tconst interval = (this.clip.getDuration() - this.crossOverDuration) * 1000;\n\t\t\tthis.timeoutId = window.setTimeout(this.timerHandler, interval);\n\t\t}\n\n\t\tprivate stopCurrent():void {\n\t\t\tif (this.timeoutId != -1) {\n\t\t\t\twindow.clearTimeout(this.timeoutId);\n\t\t\t\tthis.timeoutId = -1;\n\t\t\t}\n\n\t\t\tif (this.clip) {\n\t\t\t\tthis.clip.stop();\n\t\t\t\tthis.clip = null;\n\t\t\t}\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tif (++this.clipIndex == this.clipCount) this.clipIndex = 0;\n\t\t\tthis.playCurrent();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate audioPlayer:AudioPlayer;\n\t\tprivate volume:number;\n\n\t\tprivate clipIds:string[];\n\t\tprivate clip:AudioClip;\n\t\tprivate clipIndex:number;\n\t\tprivate clipCount:number;\n\n\t\tprivate isPlaying:boolean;\n\n\t\tprivate crossOverDuration:number;\n\t\tprivate timeoutId:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport Num = alm.util.Num;\n\timport Easing = alm.math.Easing;\n\n\texport class FootstepAudio {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(intervalMin:number = 0.12, intervalMax:number = 0.6) {\n\t\t\tthis.audioPlayer = AudioPlayer.getInstance();\n\n\t\t\tthis.intervalMin = intervalMin;\n\t\t\tthis.intervalMax = intervalMax;\n\t\t\tthis.intervalId = -1;\n\t\t\tthis.interval = this.intervalMax;\n\n\t\t\tthis.clipIndex = -1;\n\t\t\tthis.clipCount = 0;\n\t\t\tthis.clipIds = [];\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.volume = 1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolume:number = 1):void {\n\t\t\tconst id = url + '-' + this.clipCount;\n\t\t\tthis.audioPlayer.add(url, masterVolume, id);\n\t\t\tthis.clipIds.push(id);\n\t\t\tthis.clipCount = this.clipIds.length;\n\t\t}\n\n\t\tpublic play(immediately:boolean = true):void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.isWaitingForFirstStep = true;\n\t\t\tthis.startTime = immediately ? 0 : new Date().getTime();\n\t\t\tthis.intervalId = window.setInterval(this.timerHandler, 1000 / 60);\n\t\t\tthis.timerHandler();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\n\t\t\twindow.clearInterval(this.intervalId);\n\t\t}\n\n\t\tpublic setSpeed(speedRatio:number):void {\n\t\t\tthis.interval = Num.ease(speedRatio, 0, 1, this.intervalMax, this.intervalMin, Easing.easeOutSine);\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tthis.volume = volume;\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tconst interval = this.isWaitingForFirstStep ? (this.interval * 0.5) : this.interval;\n\t\t\tconst time = new Date().getTime();\n\t\t\tif (time - this.startTime >= interval * 1000) {\n\t\t\t\tthis.startTime = time;\n\t\t\t\tthis.isWaitingForFirstStep = false;\n\n\t\t\t\tif (++this.clipIndex >= this.clipCount) {\n\t\t\t\t\tthis.clipIndex = 0;\n\t\t\t\t}\n\t\t\t\tconst clipId = this.clipIds[this.clipIndex];\n\t\t\t\tthis.audioPlayer.getClip(clipId).setVolume(this.volume);\n\t\t\t\tthis.audioPlayer.getClip(clipId).play(false, true);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate audioPlayer:AudioPlayer;\n\t\tprivate volume:number;\n\n\t\tprivate clipIds:string[];\n\t\tprivate clipIndex:number;\n\t\tprivate clipCount:number;\n\n\t\tprivate startTime:number;\n\t\tprivate isWaitingForFirstStep:boolean;\n\n\t\tprivate intervalMin:number;\n\t\tprivate intervalMax:number;\n\t\tprivate interval:number;\n\t\tprivate intervalId:number;\n\n\t\tprivate isPlaying:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\timport Event = alm.event.Event;\n\n\texport class ViewEvent extends Event<View> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static INITIALIZE_BEGIN:string = 'initializeBegin';\n\t\tpublic static INITIALIZE_END:string = 'initializeEnd';\n\n\t\tpublic static FINALIZE_BEGIN:string = 'finalizeBegin';\n\t\tpublic static FINALIZE_END:string = 'finalizeEnd';\n\n\t\tpublic static READY_BEGIN:string = 'readyBegin';\n\t\tpublic static READY_END:string = 'readyEnd';\n\n\t\tpublic static SHOW_BEGIN:string = 'showBegin';\n\t\tpublic static SHOW_END:string = 'showEnd';\n\n\t\tpublic static HIDE_BEGIN:string = 'hideBegin';\n\t\tpublic static HIDE_END:string = 'hideEnd';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:View) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():ViewEvent {\n\t\t\treturn new ViewEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[ViewEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Logger = alm.debug.Logger;\n\n\texport abstract class View<T = any> extends EventDispatcher implements IView {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(view:T = null, id:string = null) {\n\t\t\tsuper();\n\t\t\tthis.id = id != null ? id : String(View.viewCount);\n\t\t\tthis.view = view;\n\t\t\tthis.name = '';\n\t\t\tthis.autoHideWithInit = true;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.isFinalizing = false;\n\t\t\tthis.isFinalized = false;\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = false;\n\t\t\tthis.isShowing = false;\n\t\t\tthis.isShown = true;\n\t\t\tthis.isHiding = false;\n\n\t\t\tif (View.viewsById[this.id]) {\n\t\t\t\tLogger.warn('view id \\'' + this.id + '\\' is duplicate');\n\t\t\t}\n\t\t\tView.viewsById[this.id] = this;\n\t\t\t++View.viewCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic initialize():void {\n\t\t\tif (this.isInitializing || this.isInitialized) return;\n\t\t\tthis.isInitializing = true;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.INITIALIZE_BEGIN, this));\n\n\t\t\t//if (View.viewsById[this.id] == null) {\n\t\t\t//\tView.viewsById[this.id] = this;\n\t\t\t//}\n\n\t\t\tthis.view = this.implInitialize();\n\t\t\tif (this.isInitializing) {\n\t\t\t\tthrowError(this.name || this, 'view is not assigned', !this.view);\n\t\t\t\tif (this.autoHideWithInit) {\n\t\t\t\t\tthis.hide(false);\n\t\t\t\t}\n\t\t\t\tthis.isInitializing = false;\n\t\t\t\tthis.isInitialized = true;\n\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.INITIALIZE_END, this));\n\t\t\t} else {\n\t\t\t\t// finalized while initializing\n\t\t\t\tthis.view = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic ready():void {\n\t\t\tif (this.isReadying || this.isReadied) return;\n\t\t\tthis.isReadying = true;\n\t\t\tthrowError(this.name || this, 'ready() must be called after initialize()', !this.isInitialized);\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.READY_BEGIN, this));\n\t\t\tthis.implReady();\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = true;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.READY_END, this));\n\t\t}\n\n\t\tpublic finalize():void {\n\t\t\tif (!this.isInitializing && !this.isInitialized) return;\n\t\t\tif (this.isFinalizing && this.isFinalized) return;\n\t\t\tthis.isFinalizing = true;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.FINALIZE_BEGIN, this));\n\t\t\tthis.implFinalize();\n\t\t\tthis.isFinalizing = false;\n\t\t\tthis.isFinalized = true;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.FINALIZE_END, this));\n\n\t\t\tdelete View.viewsById[this.id];\n\t\t\tView.viewsById[this.id] = null;\n\t\t}\n\n\t\tpublic show(useTransition:boolean = true):void {\n\t\t\tif (this.isShown) return;\n\t\t\tthis.getShowCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic hide(useTransition:boolean = true):void {\n\t\t\tif (!this.isShown) return;\n\t\t\tthis.getHideCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic getShowCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (this.isShown) return;\n\t\t\t\t\tthrowError(this.name || this, 'getShowCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\tthrowWarn(this.name || this, 'getShowCommand() is must be called after ready()', this.isReadying|| !this.isReadied);\n\t\t\t\t\tthis.isShown = true;\n\t\t\t\t\tthis.isShowing = true;\n\t\t\t\t\tthis.isHiding = false;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.showCommand = command;\n\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.SHOW_BEGIN, this));\n\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implShow(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.SHOW_END, this));\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getHideCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (!this.isShown) return;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthrowError(this.name || this, 'getHideCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\t\tthrowWarn(this.name || this, 'getHideCommand() is must be called after ready()', this.isReadying || !this.isReadied);\n\t\t\t\t\t}\n\t\t\t\t\tthis.isShown = false;\n\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\tthis.isHiding = true;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hideCommand = command;\n\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.HIDE_BEGIN, this));\n\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implHide(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t\t\tthis.isHiding = false;\n\t\t\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.HIDE_END, this));\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getIsInitializing():boolean {\n\t\t\treturn this.isInitializing;\n\t\t}\n\n\t\tpublic getIsInitialized():boolean {\n\t\t\treturn this.isInitialized;\n\t\t}\n\n\t\tpublic getIsReadying():boolean {\n\t\t\treturn this.isReadying;\n\t\t}\n\n\t\tpublic getIsReadied():boolean {\n\t\t\treturn this.isReadied;\n\t\t}\n\n\t\tpublic getIsShowing():boolean {\n\t\t\treturn this.isShowing;\n\t\t}\n\n\t\tpublic getIsShown():boolean {\n\t\t\treturn this.isShown;\n\t\t}\n\n\t\tpublic getIsHiding():boolean {\n\t\t\treturn this.isHiding;\n\t\t}\n\n\t\tpublic getIsHidden():boolean {\n\t\t\treturn !this.isShown;\n\t\t}\n\n\t\tpublic getIsFinalizing():boolean {\n\t\t\treturn this.isFinalizing;\n\t\t}\n\n\t\tpublic getIsFinalized():boolean {\n\t\t\treturn this.isFinalized;\n\t\t}\n\n\t\tpublic getId():string {\n\t\t\treturn this.id;\n\t\t}\n\n\t\tpublic getView():T {\n\t\t\treturn this.view;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic setName(value:string):void {\n\t\t\tthis.name = value;\n\t\t}\n\n\t\tpublic getAutoHideWithInit():boolean {\n\t\t\treturn this.autoHideWithInit;\n\t\t}\n\n\t\tpublic setAutoHideWithInit(value:boolean):void {\n\t\t\tthis.autoHideWithInit = value;\n\t\t}\n\n\n\n\n\n\t\tprotected abstract implInitialize():T;\n\t\tprotected abstract implReady():void;\n\t\tprotected abstract implFinalize():void;\n\t\tprotected abstract implShow(view:T, useTransition:boolean):cmd.Command;\n\t\tprotected abstract implHide(view:T, useTransition:boolean):cmd.Command;\n\n\n\n\n\n\t\tpublic static getViewById(id:string):View {\n\t\t\treturn View.viewsById[id];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate id:string;\n\t\tprivate view:T;\n\t\tprivate name:string;\n\t\tprivate autoHideWithInit:boolean;\n\t\tprivate showCommand:cmd.Command;\n\t\tprivate hideCommand:cmd.Command;\n\t\tprivate isInitializing:boolean;\n\t\tprivate isInitialized:boolean;\n\t\tprivate isFinalizing:boolean;\n\t\tprivate isFinalized:boolean;\n\t\tprivate isReadying:boolean;\n\t\tprivate isReadied:boolean;\n\t\tprivate isShowing:boolean;\n\t\tprivate isShown:boolean;\n\t\tprivate isHiding:boolean;\n\n\t\tprivate static viewCount:number = 0;\n\t\tprivate static viewsById:util.Hash<View> = {};\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\texport class ButtonBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:IButton, hitArea:HTMLElement = null, isHoverCursorEnabled:boolean = true, isPreventDefaultEnabled:boolean = true, isStopPropagationEnabled:boolean = true) {\n\t\t\tthis.target = target;\n\t\t\tthis.hitArea = null;\n\t\t\tthis.isHoverCursorEnabled = isHoverCursorEnabled;\n\t\t\tthis.isPreventDefaultEnabled = isPreventDefaultEnabled;\n\t\t\tthis.isStopPropagationEnabled = isStopPropagationEnabled;\n\t\t\tthis.isEnabled = true;\n\t\t\tthis.isOver = false;\n\t\t\tthis.isDown = false;\n\t\t\tthis.isOverInternal = false;\n\t\t\tthis.isDownInternal = false;\n\t\t\tthis.defaultMouseCursor = '';\n\n\t\t\tthis.setHitArea(hitArea);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic over(useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isOver) return;\n\t\t\t\tthis.isOver = true;\n\t\t\t\tthis.target.implButtonOver(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic out(useTransition:boolean = true):void {\n\t\t\tthis._out(true, useTransition);\n\t\t}\n\n\t\tprivate _out(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isOver) return;\n\t\t\t\tthis.isOver = false;\n\t\t\t\tthis.target.implButtonOut(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic down(useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isDown) return;\n\t\t\t\tthis.isDown = true;\n\t\t\t\tthis.target.implButtonDown(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic up(useTransition:boolean = true):void {\n\t\t\tthis._up(true, useTransition);\n\t\t}\n\n\t\tprivate _up(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isDown) return;\n\t\t\t\tthis.isDown = false;\n\t\t\t\tthis.target.implButtonUp(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic click(useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled) {\n\t\t\t\tthis.target.implButtonClick(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tprivate on():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.addEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.addEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.addEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.addEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.addEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.addEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.addEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.addEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tprivate off():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.removeEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.removeEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.removeEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.removeEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.removeEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.removeEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tpublic getIsEnabled():boolean {\n\t\t\treturn this.isEnabled;\n\t\t}\n\n\t\tpublic setIsEnabled(value:boolean, useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled != value) {\n\t\t\t\tthis.isEnabled = value;\n\t\t\t\tif (this.isEnabled) {\n\t\t\t\t\tif (this.isOverInternal) {\n\t\t\t\t\t\tthis.over();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDownInternal) {\n\t\t\t\t\t\tthis.down();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.isOver) {\n\t\t\t\t\t\tthis._out(false);\n\t\t\t\t\t\tthis.isOverInternal = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDown) {\n\t\t\t\t\t\tthis._up(false);\n\t\t\t\t\t\tthis.isDownInternal = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.target.implButtonChangeEnabled(this.isEnabled, useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsOver():boolean {\n\t\t\treturn this.isOver;\n\t\t}\n\n\t\tpublic getIsDown():boolean {\n\t\t\treturn this.isDown;\n\t\t}\n\n\t\tpublic getHitArea():HTMLElement {\n\t\t\treturn this.hitArea;\n\t\t}\n\n\t\tpublic setHitArea(hitArea:HTMLElement):void {\n\t\t\tif (this.hitArea !== hitArea) {\n\t\t\t\tthis.off();\n\t\t\t\tthis.hitArea = hitArea;\n\t\t\t\tthis.on();\n\t\t\t}\n\t\t}\n\n\t\tpublic clearHitArea():void {\n\t\t\tthis.setHitArea(null);\n\t\t}\n\n\t\tpublic getIsPreventDefaultEnabled():boolean {\n\t\t\treturn this.isPreventDefaultEnabled;\n\t\t}\n\n\t\tpublic setIsPreventDefaultEnabled(enabled:boolean):void {\n\t\t\tthis.isPreventDefaultEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsStopPropagationEnabled():boolean {\n\t\t\treturn this.isStopPropagationEnabled;\n\t\t}\n\n\t\tpublic setIsStopPropagationEnabled(enabled:boolean):void {\n\t\t\tthis.isStopPropagationEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsHoverCursorEnabled():boolean {\n\t\t\treturn this.isHoverCursorEnabled;\n\t\t}\n\n\t\tpublic setIsHoverCursorEnabled(enabled:boolean):void {\n\t\t\tthis.isHoverCursorEnabled = enabled;\n\t\t}\n\n\t\tprivate applyMouseCursor():void {\n\t\t\tif (this.isHoverCursorEnabled) {\n\t\t\t\tif (this.isOverInternal && this.isEnabled && this.hitArea != null) {\n\t\t\t\t\tthis.defaultMouseCursor = this.hitArea.style.cursor;\n\t\t\t\t\tthis.hitArea.style.cursor = 'pointer';\n\t\t\t\t} else {\n\t\t\t\t\tthis.hitArea.style.cursor = this.defaultMouseCursor != '' ? this.defaultMouseCursor : 'auto';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// --------------------------------------------------\n\t\t// Mouse Event\n\n\t\tprivate mouseOverHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.over();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseOutHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.out();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseDownHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate mouseUpHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\t\tprivate clickHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.click();\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Touch Event\n\n\t\tprivate touchStartHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate touchEndHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t\tthis.click();\n\t\t};\n\n\t\tprivate touchCancelHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:IButton;\n\t\tprivate hitArea:HTMLElement;\n\t\tprivate isEnabled:boolean;\n\t\tprivate isOver:boolean;\n\t\tprivate isDown:boolean;\n\t\tprivate isOverInternal:boolean;\n\t\tprivate isDownInternal:boolean;\n\t\tprivate isPreventDefaultEnabled:boolean;\n\t\tprivate isStopPropagationEnabled:boolean;\n\t\tprivate isHoverCursorEnabled:boolean;\n\t\tprivate defaultMouseCursor:string;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\texport class SelectionBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:ISelection) {\n\t\t\tthis.target = target;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic select(useTransition:boolean = true):void {\n\t\t\tif (this.isSelected) return;\n\t\t\tthis.isSelected = true;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic deselect(useTransition:boolean = true):void {\n\t\t\tif (!this.isSelected) return;\n\t\t\tthis.isSelected = false;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic getIsSelected():boolean {\n\t\t\treturn this.isSelected;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:ISelection;\n\t\tprivate isSelected:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class DeviceInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tconst u:string = window.navigator.userAgent.toLowerCase();\n\n\t\t\t// Device\n\t\t\tthis.isTablet = (u.indexOf('windows') != -1 && u.indexOf('touch') != -1)\n\t\t\t\t|| u.indexOf('ipad') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') == -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('tablet') != -1)\n\t\t\t\t|| u.indexOf('kindle') != -1\n\t\t\t\t|| u.indexOf('silk') != -1\n\t\t\t\t|| u.indexOf('playbook') != -1;\n\n\t\t\tthis.isMobile = (u.indexOf('windows') != -1 && u.indexOf('phone') != -1)\n\t\t\t\t|| u.indexOf('iphone') != -1\n\t\t\t\t|| u.indexOf('ipod') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| u.indexOf('blackberry') != -1;\n\n\t\t\tthis.isDesktop = !this.isTablet && !this.isMobile;\n\n\t\t\t// OS\n\t\t\tthis.isIOS = u.indexOf('ipad') != -1 || u.indexOf('iphone') != -1 || u.indexOf('ipod') != -1;\n\t\t\tthis.isAndroid = u.indexOf('android') != -1 && u.indexOf('mobile') != -1;\n\n\t\t\t// Browser\n\t\t\tif(u.indexOf('msie') != -1 || u.indexOf('trident') != -1) {\n\t\t\t\tthis.isIE = true;\n\t\t\t} else if(u.indexOf('edge') != -1) {\n\t\t\t\tthis.isEdge = true;\n\t\t\t} else if(u.indexOf('chrome') != -1) {\n\t\t\t\tthis.isChrome = true;\n\t\t\t} else if(u.indexOf('safari') != -1) {\n\t\t\t\tthis.isSafari = true;\n\t\t\t} else if(u.indexOf('firefox') != -1) {\n\t\t\t\tthis.isFireFox = true;\n\t\t\t} else if(u.indexOf('opera') != -1) {\n\t\t\t\tthis.isOpera = true;\n\t\t\t} else {\n\t\t\t\tthis.isUnknownBrowser = true;\n\t\t\t}\n\n\t\t\t// Language\n\t\t\ttry {\n\t\t\t\tconst navigator = window.navigator;\n\t\t\t\tif (this.isChrome) {\n\t\t\t\t\tthis.langFull = (navigator.languages[0] || navigator['browserLanguage'] || navigator.language || navigator['userLanguage']);\n\t\t\t\t} else {\n\t\t\t\t\tthis.langFull = (navigator['browserLanguage'] || navigator.language || navigator['userLanguage']);\n\t\t\t\t}\n\t\t\t\tthis.lang = this.langFull.substr(0, 2);\n\t\t\t} catch (exception) {\n\t\t\t\tthis.lang =  undefined;\n\t\t\t\tthis.langFull =  undefined;\n\t\t\t}\n\n\t\t\t// Function\n\t\t\tthis.isTouchEnabled = (typeof window.ontouchstart) !== 'undefined';\n\t\t\tthis.isDownloadEnabled = !this.isIOS;\n\n\t\t\t// Resolution\n\t\t\tthis.devicePixelRatio = window.devicePixelRatio;\n\t\t\tthis.isRetina = this.devicePixelRatio > 1;\n\t\t}\n\n\t\t// --------------------\n\t\t// Device\n\n\t\tpublic static getIsDesktop():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDesktop;\n\t\t}\n\n\t\tpublic static getIsTablet():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTablet;\n\t\t}\n\n\t\tpublic static getIsMobile():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isMobile;\n\t\t}\n\n\t\t// --------------------\n\t\t// OS\n\n\t\tpublic static getIsIOS():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIOS;\n\t\t}\n\n\t\tpublic static getIsAndroid():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isAndroid;\n\t\t}\n\n\t\t// --------------------\n\t\t// Browser\n\n\t\tpublic static getIsIE():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIE;\n\t\t}\n\n\t\tpublic static getIsEdge():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isEdge;\n\t\t}\n\n\t\tpublic static getIsChrome():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isChrome;\n\t\t}\n\n\t\tpublic static getIsSafari():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isSafari;\n\t\t}\n\n\t\tpublic static getIsFireFox():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isFireFox;\n\t\t}\n\n\t\tpublic static getIsOpera():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isOpera;\n\t\t}\n\n\t\tpublic static getIsUnknownBrowser():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isUnknownBrowser;\n\t\t}\n\n\t\t// --------------------\n\t\t// Language\n\n\t\tpublic static getLang():string {\n\t\t\tthis.initialize();\n\t\t\treturn this.lang;\n\t\t}\n\n\t\tpublic static getLangFull():string {\n\t\t\tthis.initialize();\n\t\t\treturn this.langFull;\n\t\t}\n\n\t\t// --------------------\n\t\t// Function\n\n\t\tpublic static getIsTouchEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTouchEnabled;\n\t\t}\n\n\t\tpublic static getIsDownloadEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDownloadEnabled;\n\t\t}\n\n\t\t// --------------------\n\t\t// Resolution\n\n\t\tpublic static getIsRetina():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isRetina;\n\t\t}\n\n\t\tpublic static getDevicePixelRatio():number {\n\t\t\tthis.initialize();\n\t\t\treturn this.devicePixelRatio;\n\t\t}\n\n\t\tpublic static getDpi():number {\n\t\t\tif (this.dpi == -1) {\n\t\t\t\tconst div:HTMLElement = document.createElement('div');\n\t\t\t\tdiv.setAttribute('style', 'height:1in;left:-100%;top:-100%;position:absolute;width:1in;');\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\tthis.dpi = div.offsetHeight;\n\t\t\t\tdocument.body.removeChild(div);\n\t\t\t}\n\t\t\treturn this.dpi;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isDesktop:boolean = false;\n\t\tprivate static isTablet:boolean = false;\n\t\tprivate static isMobile:boolean = false;\n\n\t\tprivate static isIOS:boolean = false;\n\t\tprivate static isAndroid:boolean = false;\n\n\t\tprivate static isIE:boolean = false;\n\t\tprivate static isEdge:boolean = false;\n\t\tprivate static isChrome:boolean = false;\n\t\tprivate static isSafari:boolean = false;\n\t\tprivate static isFireFox:boolean = false;\n\t\tprivate static isOpera:boolean = false;\n\t\tprivate static isUnknownBrowser:boolean = false;\n\n\t\tprivate static isTouchEnabled:boolean = false;\n\t\tprivate static isDownloadEnabled:boolean = false;\n\n\t\tprivate static isRetina:boolean = false;\n\t\tprivate static devicePixelRatio:number = 1;\n\t\tprivate static dpi:number = -1;\n\n\t\tprivate static lang:string;\n\t\tprivate static langFull:string;\n\n\t\tprivate static isInitialized:boolean = false;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\timport Time = alm.util.Time;\n\n\texport class LocalStorage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * データを有効期限までLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param expiredAt 有効期限（UNIXミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any, expiredAt:number = -1):boolean {\n\t\t\tif (!LocalStorage.isAvailable()) return false;\n\t\t\tconst record:{ value:string; expiredAt:number } = { value:JSON.stringify(value), expiredAt: expiredAt };\n\t\t\tlocalStorage.setItem(key, JSON.stringify(record));\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * データを期間でLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param milliseconds 保存期間（ミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static saveWithTerm(key:string, value:any, milliseconds:number = -1):boolean {\n\t\t\tconst expiredAt:number = milliseconds > 0 ? Time.now() + milliseconds : -1;\n\t\t\treturn LocalStorage.save(key, value, expiredAt);\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!LocalStorage.isAvailable()) return defaultValue;\n\t\t\tconst record:{ value:string; expiredAt:number } = JSON.parse(localStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\t// データが見つかった\n\t\t\t\tif (record.expiredAt > 0) {\n\t\t\t\t\t// 期限付きデータ\n\t\t\t\t\tif (Time.now() < record.expiredAt) {\n\t\t\t\t\t\t// 有効期限内\n\t\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 有効期限を過ぎているので破棄\n\t\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t\t\treturn defaultValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 永続データ\n\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!LocalStorage.isAvailable()) return;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (LocalStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem('__CKECK__', '__CKECK__');\n\t\t\t\t\tlocalStorage.removeItem('__CKECK__');\n\t\t\t\t\tLocalStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLocalStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn LocalStorage.isAvailable_;\n\t\t}\n\n\t\t/**\n\t\t * 各時間の尺度ミリ秒で合算する\n\t\t * @param dates 日\n\t\t * @param hours 時\n\t\t * @param minutes 分\n\t\t * @param seconds 秒\n\t\t * @param milliseconds ミリ秒\n\t\t * @returns {number} 合算されたミリ秒\n\t\t */\n\t\tpublic static toMilliseconds(dates:number = 0, hours:number = 0, minutes:number = 0, seconds:number = 0, milliseconds:number = 0):number {\n\t\t\treturn milliseconds + (seconds + (minutes + (hours + dates * 24) * 60) * 60) * 1000;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class SessionStorage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * データを保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any):boolean {\n\t\t\tif (!SessionStorage.isAvailable()) return false;\n\t\t\tsessionStorage.setItem(key, JSON.stringify(value));\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * データを読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!SessionStorage.isAvailable()) return defaultValue;\n\t\t\tconst record = JSON.parse(sessionStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\treturn JSON.parse(record.value);\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!SessionStorage.isAvailable()) return;\n\t\t\tsessionStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (SessionStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tsessionStorage.setItem('__CKECK__', '__CKECK__');\n\t\t\t\t\tsessionStorage.removeItem('__CKECK__');\n\t\t\t\t\tSessionStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tSessionStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SessionStorage.isAvailable_;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\t// https://github.com/nfriend/ts-keycode-enum\n\texport enum KeyCode {\n\t\tBackspace = 8,\n\t\tTab = 9,\n\t\tEnter = 13,\n\t\tShift = 16,\n\t\tCtrl = 17,\n\t\tAlt = 18,\n\t\tPauseBreak = 19,\n\t\tCapsLock = 20,\n\t\tEscape = 27,\n\t\tSpace = 32,\n\t\tPageUp = 33,\n\t\tPageDown = 34,\n\t\tEnd = 35,\n\t\tHome = 36,\n\n\t\tLeftArrow = 37,\n\t\tUpArrow = 38,\n\t\tRightArrow = 39,\n\t\tDownArrow = 40,\n\n\t\tInsert = 45,\n\t\tDelete = 46,\n\n\t\tKey0 = 48,\n\t\tKey1 = 49,\n\t\tKey2 = 50,\n\t\tKey3 = 51,\n\t\tKey4 = 52,\n\t\tKey5 = 53,\n\t\tKey6 = 54,\n\t\tKey7 = 55,\n\t\tKey8 = 56,\n\t\tKey9 = 57,\n\n\t\tClosedParen = Key0,\n\t\tExclamationMark = Key1,\n\t\tAtSign = Key2,\n\t\tPoundSign = Key3,\n\t\tHash = PoundSign,\n\t\tDollarSign = Key4,\n\t\tPercentSign = Key5,\n\t\tCaret = Key6,\n\t\tHat = Caret,\n\t\tAmpersand = Key7,\n\t\tStar = Key8,\n\t\tAsterik = Star,\n\t\tOpenParen = Key9,\n\n\t\tA = 65,\n\t\tB = 66,\n\t\tC = 67,\n\t\tD = 68,\n\t\tE = 69,\n\t\tF = 70,\n\t\tG = 71,\n\t\tH = 72,\n\t\tI = 73,\n\t\tJ = 74,\n\t\tK = 75,\n\t\tL = 76,\n\t\tM = 77,\n\t\tN = 78,\n\t\tO = 79,\n\t\tP = 80,\n\t\tQ = 81,\n\t\tR = 82,\n\t\tS = 83,\n\t\tT = 84,\n\t\tU = 85,\n\t\tV = 86,\n\t\tW = 87,\n\t\tX = 88,\n\t\tY = 89,\n\t\tZ = 90,\n\n\t\tLeftWindowKey = 91,\n\t\tRightWindowKey = 92,\n\t\tSelectKey = 93,\n\n\t\tNumpad0 = 96,\n\t\tNumpad1 = 97,\n\t\tNumpad2 = 98,\n\t\tNumpad3 = 99,\n\t\tNumpad4 = 100,\n\t\tNumpad5 = 101,\n\t\tNumpad6 = 102,\n\t\tNumpad7 = 103,\n\t\tNumpad8 = 104,\n\t\tNumpad9 = 105,\n\n\t\tMultiply = 106,\n\t\tAdd = 107,\n\t\tSubtract = 109,\n\t\tDecimalPoint = 110,\n\t\tDivide = 111,\n\n\t\tF1 = 112,\n\t\tF2 = 113,\n\t\tF3 = 114,\n\t\tF4 = 115,\n\t\tF5 = 116,\n\t\tF6 = 117,\n\t\tF7 = 118,\n\t\tF8 = 119,\n\t\tF9 = 120,\n\t\tF10 = 121,\n\t\tF11 = 122,\n\t\tF12 = 123,\n\n\t\tNumLock = 144,\n\t\tScrollLock = 145,\n\n\t\tSemiColon = 186,\n\t\tEquals = 187,\n\t\tComma = 188,\n\t\tDash = 189,\n\t\tPeriod = 190,\n\t\tUnderScore = Dash,\n\t\tPlusSign = Equals,\n\t\tForwardSlash = 191,\n\t\tTilde = 192,\n\t\tGraveAccent = Tilde,\n\n\t\tOpenBracket = 219,\n\t\tClosedBracket = 221,\n\t\tQuote = 222\n\t}\n\n\n\n\n\n\texport class KeyWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] start');\n\n\t\t\twindow.addEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.addEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] stop');\n\n\t\t\twindow.removeEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.removeEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowKeyDownHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] == null) {\n\t\t\t\tKeyWatcher.isKeyPressedByKeyCode[keyCode] = true;\n\t\t\t\t++KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t} else if (KeyWatcher.isContinuousPressEnabled) {\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\t\tprivate static windowKeyUpHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] != null) {\n\t\t\t\tdelete KeyWatcher.isKeyPressedByKeyCode[keyCode];\n\t\t\t\t--KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_UP, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getIsAnyKeyPressed():boolean { return this.pressedKeyCount > 0; }\n\t\tprivate static pressedKeyCount:number = 0;\n\n\t\tpublic static getIsKeyPressed(keyCode:number):boolean { return this.isKeyPressedByKeyCode[keyCode] != null; }\n\t\tprivate static isKeyPressedByKeyCode:util.Hash<boolean> = {};\n\n\n\t\tpublic static getIsContinuousPressEnabled():boolean { return this.isContinuousPressEnabled; }\n\t\tpublic static setIsContinuousPressEnabled(enabled:boolean):void { this.isContinuousPressEnabled = enabled; }\n\t\tprivate static isContinuousPressEnabled:boolean = false;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static isLongPressed:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class KeyWatcherEvent extends alm.event.Event<KeyWatcher> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic KEY_UP:string = 'keyUp';\n\t\tstatic KEY_DOWN:string = 'keyDown';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:KeyWatcher, originalEvent:KeyboardEvent = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.key = this.originalEvent.key;\n\t\t\tthis.keyCode = this.originalEvent.keyCode;\n\t\t\tthis.altKey = this.originalEvent.altKey;\n\t\t\tthis.ctrlKey = this.originalEvent.ctrlKey;\n\t\t\tthis.shiftKey = this.originalEvent.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():KeyWatcherEvent {\n\t\t\treturn new KeyWatcherEvent(this.type, this.target, this.originalEvent);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[KeyWatcherEvent] type = ' + this.type + ', key = ' + this.key + ', keyCode = ' + this.keyCode + ', altKey = ' + this.altKey + ', ctrlKey = ' + this.ctrlKey + ', shiftKey = ' + this.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly originalEvent:KeyboardEvent;\n\t\tpublic readonly key:string;\n\t\tpublic readonly keyCode:number;\n\t\tpublic readonly altKey:boolean;\n\t\tpublic readonly ctrlKey:boolean;\n\t\tpublic readonly shiftKey:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start(target:Window = null):void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] start');\n\n\t\t\tthis.window = target || window;\n\n\t\t\tthis.window.addEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('scroll', this.windowScrollHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] stop');\n\n\t\t\tthis.window.removeEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('scroll', this.windowScrollHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tthis.windowWidth = this.window.innerWidth;\n\t\t\tthis.windowHeight = this.window.innerHeight;\n\n\t\t\tthis.scrollTop = (this.window.pageYOffset !== undefined) ? this.window.pageYOffset : document.documentElement.scrollTop;\n\t\t\tthis.scrollBottom = this.scrollTop + this.windowHeight;\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static calcScrolledPosition(y:number):number {\n\t\t\treturn y - this.scrollTop;\n\t\t};\n\n\t\tpublic static calcScrolledPositionRatio(y:number):number {\n\t\t\treturn this.calcScrolledPosition(y) / this.windowHeight;\n\t\t}\n\n\t\tprivate static resize(event:Event):void {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.RESIZE, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\tprivate static windowResizeHandler = (event:Event):void => {\n\t\t\tif (!DeviceInfo.getIsDesktop() && WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.resize');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowOrientationChangeHandler = (event:Event):void => {\n\t\t\tif (DeviceInfo.getIsDesktop() || !WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.orientationchange');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowScrollHandler = (event:Event):void => {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.SCROLL, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getWindow():Window { return this.window; }\n\t\tprivate static window:Window = null;\n\n\t\tpublic static getScrollTop():number { return this.scrollTop; }\n\t\tprivate static scrollTop:number;\n\n\t\tpublic static getScrollBottom():number { return this.scrollBottom; }\n\t\tprivate static scrollBottom:number;\n\n\t\tpublic static getWindowWidth():number { return this.windowWidth; }\n\t\tprivate static windowWidth:number = 0;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tpublic static getIsMobileOrientationResize():boolean { return this.isMobileOrientationResize; }\n\t\tpublic static setIsMobileOrientationResize(value:boolean):void { this.isMobileOrientationResize = value; }\n\t\tprivate static isMobileOrientationResize:boolean = true;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcherEvent extends alm.event.Event<WindowWatcher> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SCROLL:string = 'scroll';\n\t\tstatic RESIZE:string = 'resize';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:WindowWatcher, originalEvent:Event = null, scrollTop:number = 0, scrollBottom:number = 0, windowWidth:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollBottom = scrollBottom;\n\t\t\tthis.windowWidth = windowWidth;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():WindowWatcherEvent {\n\t\t\treturn new WindowWatcherEvent(this.type, this.target, this.originalEvent, this.scrollTop, this.scrollBottom, this.windowWidth, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[WindowWatcherEvent] type = ' + this.type + ', scrollTop = ' + this.scrollTop + ', scrollBottom = ' + this.scrollBottom + ', windowWidth = ' + this.windowWidth + ', windowHeight = ' + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly originalEvent:Event;\n\t\tpublic readonly scrollTop:number;\n\t\tpublic readonly scrollBottom:number;\n\t\tpublic readonly windowWidth:number;\n\t\tpublic readonly windowHeight:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\texport class ScrollSectionTriggerEvent extends alm.event.Event<ScrollSectionTrigger> {\n\n\t\tpublic static CHANGE:string = 'ScrollSectionTriggerEvent.CHANGE';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, target:ScrollSectionTrigger, currentSectionIndex:number, prevSectionIndex:number) {\n\t\t\tsuper(eventType, target);\n\n\t\t\tthis.currentSectionIndex = currentSectionIndex;\n\t\t\tthis.prevSectionIndex = prevSectionIndex;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentSectionIndex:number;\n\t\tpublic readonly prevSectionIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\timport Logger = alm.debug.Logger;\n\timport WindowWatcher = alm.browser.WindowWatcher;\n\timport WindowWatcherEvent = alm.browser.WindowWatcherEvent;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class ScrollSectionTrigger extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(threshold:number = 0.5) {\n\t\t\tsuper();\n\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.scrollPosition = null;\n\t\t\tthis.triggerPositions = [];\n\t\t\tthis.thresholdRatio = threshold;\n\t\t\tthis.thresholdPosition = null;\n\n\t\t\tthis.currentSectionIndex = -1;\n\t\t\tthis.prevSectionIndex = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.SCROLL, this.windowScrollHandler);\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.start();\n\n\t\t\tthis.updateThresholdPosition();\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.SCROLL, this.windowScrollHandler);\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.stop();\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getCurrentIndex():number {\n\t\t\treturn this.currentSectionIndex;\n\t\t}\n\n\t\tpublic getPrevIndex():number {\n\t\t\treturn this.prevSectionIndex;\n\t\t}\n\n\t\tpublic getTriggerPositions():number[] {\n\t\t\treturn this.triggerPositions.concat();\n\t\t}\n\n\t\tpublic setTriggerPositions(positions:number[]):void {\n\t\t\tthis.triggerPositions = positions.concat();\n\t\t\tthis.triggerPositions.sort((a, b):number => { return a - b; });\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tpublic getThreshold():number {\n\t\t\treturn this.thresholdRatio;\n\t\t}\n\n\t\tpublic setThreshold(ratio:number):void {\n\t\t\tthis.thresholdRatio = ratio;\n\t\t\tthis.updateThresholdPosition();\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tprivate check():void {\n\t\t\tif (this.scrollPosition == null) {\n\t\t\t\tLogger.warn('[RangeTrigger] current position is need set');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet nearestTriggerIndex = -1;\n\t\t\tlet nearestScrolledTriggerPosition = -1;\n\t\t\tlet nearestDistance:number = Number.MAX_VALUE;\n\t\t\tconst triggerPositionCount = this.triggerPositions.length;\n\t\t\tfor (let i = 0; i < triggerPositionCount; ++i) {\n\t\t\t\tconst scrolledTriggerPosition = this.triggerPositions[i] - this.scrollPosition;\n\t\t\t\tconst distance = Math.abs(scrolledTriggerPosition - this.thresholdPosition);\n\t\t\t\tif (distance < nearestDistance) {\n\t\t\t\t\tnearestDistance = distance;\n\t\t\t\t\tnearestTriggerIndex = i;\n\t\t\t\t\tnearestScrolledTriggerPosition = scrolledTriggerPosition;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestTriggerIndex >= 0) {\n\t\t\t\tlet sectionIndex = -1;\n\t\t\t\tif (nearestScrolledTriggerPosition > this.thresholdPosition) {\n\t\t\t\t\tsectionIndex = nearestTriggerIndex;\n\t\t\t\t} else {\n\t\t\t\t\tsectionIndex = nearestTriggerIndex + 1;\n\t\t\t\t}\n\n\t\t\t\tif (this.currentSectionIndex != sectionIndex) {\n\t\t\t\t\tthis.prevSectionIndex = this.currentSectionIndex;\n\t\t\t\t\tthis.currentSectionIndex = sectionIndex;\n\t\t\t\t\tthis.dispatchEvent(new ScrollSectionTriggerEvent(ScrollSectionTriggerEvent.CHANGE, this, this.currentSectionIndex, this.prevSectionIndex));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate updateThresholdPosition():void {\n\t\t\tthis.thresholdPosition = WindowWatcher.getWindowHeight() * this.thresholdRatio;\n\t\t}\n\n\t\tprivate updateScrollPosition():void {\n\t\t\tthis.scrollPosition = WindowWatcher.getScrollTop();\n\t\t}\n\n\t\tprivate windowScrollHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t};\n\n\t\tprivate windowResizeHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.updateThresholdPosition();\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate scrollPosition:number;\n\t\tprivate triggerPositions:number[];\n\t\tprivate thresholdRatio:number;\n\t\tprivate thresholdPosition:number;\n\n\t\tprivate currentSectionIndex:number;\n\t\tprivate prevSectionIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\timport WindowWatcher = alm.browser.WindowWatcher;\n\timport WindowWatcherEvent = alm.browser.WindowWatcherEvent;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class ResponsiveObserver extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.breakPoints = [];\n\t\t\tthis.breakPointCount = 0;\n\n\t\t\tthis.currentIndex = -1;\n\t\t\tthis.prevIndex = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.start();\n\n\t\t\tthis.check();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.stop();\n\t\t}\n\n\t\tpublic setBreakpoints(breakPoints:number[]):void {\n\t\t\tthis.breakPoints = breakPoints.concat();\n\t\t\tthis.breakPointCount = this.breakPoints.length;\n\t\t\tthis.breakPoints.sort((a, b):number => { return a - b; });\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getCurrentIndex():number {\n\t\t\treturn this.currentIndex;\n\t\t}\n\n\t\tpublic getPrevIndex():number {\n\t\t\treturn this.prevIndex;\n\t\t}\n\n\t\tpublic getBreakPoints():number[] {\n\t\t\treturn this.breakPoints.concat();\n\t\t}\n\n\t\tpublic getBreakPointCount():number {\n\t\t\treturn this.breakPointCount;\n\t\t}\n\n\t\tprivate check():void {\n\t\t\tconst windowWidth = WindowWatcher.getWindowWidth();\n\t\t\tlet index;\n\t\t\tfor (index = 0; index < this.breakPointCount; ++index) {\n\t\t\t\tif (windowWidth <= this.breakPoints[index]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.currentIndex == index) return;\n\t\t\tthis.prevIndex = this.currentIndex;\n\t\t\tthis.currentIndex = index;\n\t\t\ttrace('[ResponsiveObserver] switch index :', this.prevIndex, '->', this.currentIndex, ', window width =', windowWidth);\n\n\t\t\tthis.dispatchEvent(new ResponsiveObserverEvent(ResponsiveObserverEvent.CHANGE, this, this.currentIndex, this.prevIndex));\n\t\t}\n\n\t\tprivate windowResizeHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.check();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate breakPoints:number[];\n\t\tprivate breakPointCount:number;\n\n\t\tprivate currentIndex:number;\n\t\tprivate prevIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\texport class ResponsiveObserverEvent extends alm.event.Event<ResponsiveObserver> {\n\n\t\tpublic static CHANGE:string = 'ResponsiveObserverEvent.CHANGE';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, target:ResponsiveObserver, currentIndex:number, prevIndex:number) {\n\t\t\tsuper(eventType, target);\n\n\t\t\tthis.currentIndex = currentIndex;\n\t\t\tthis.prevIndex = prevIndex;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentIndex:number;\n\t\tpublic readonly prevIndex:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Hash = alm.util.Hash;\n\n\texport class Scene extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.state = SceneState.Idling;\n\t\t\tthis.parent = null;\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\tthis.transferInfo = null;\n\t\t\tthis.onLoad = null;\n\t\t\tthis.onUnload = null;\n\t\t\tthis.onArrive = null;\n\t\t\tthis.onLeave = null;\n\t\t\tthis.onAscend = null;\n\t\t\tthis.onDescend = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child name \\'' + childName + '\\' is already contained.');\n\t\t\t\t} else {\n\t\t\t\t\t++this.numChildren;\n\t\t\t\t\tchild.parent = this;\n\t\t\t\t\tthis.childrenByName[childName] = child;\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic removeChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\t--this.numChildren;\n\t\t\t\t\tchild.parent = null;\n\t\t\t\t\tdelete this.childrenByName[childName];\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child name \\'' + childName + '\\' is not contained.');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic addChildren(children:Scene[]):Scene[] {\n\t\t\tconst addedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.addChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\taddedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn addedChildren;\n\t\t}\n\n\t\tpublic removeChildren(children:Scene[]):Scene[] {\n\t\t\tconst removedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.removeChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\tremovedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn removedChildren;\n\t\t}\n\n\t\tpublic removeAllChildren():Scene[] {\n\t\t\tconst children:Scene[] = [];\n\t\t\tlet child:Scene;\n\t\t\tfor (let name in this.childrenByName) {\n\t\t\t\tchild = this.childrenByName[name];\n\t\t\t\tchild.parent = null;\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\treturn children;\n\t\t}\n\n\t\tpublic contains(child:Scene|string):boolean {\n\t\t\tif (child) {\n\t\t\t\treturn this.childrenByName[typeof child == 'string' ? child : child.name] != null;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getState():SceneState {\n\t\t\treturn this.state;\n\t\t}\n\n\t\tpublic getLastState():SceneState {\n\t\t\treturn this.lastState;\n\t\t}\n\n\t\tpublic getParent():Scene {\n\t\t\treturn this.parent;\n\t\t}\n\n\t\tpublic getChildByName(name:string):Scene {\n\t\t\treturn this.childrenByName[name] || null;\n\t\t}\n\n\t\tpublic getChildrenByName():Hash<Scene> {\n\t\t\treturn this.childrenByName;\n\t\t}\n\n\t\tpublic getNumChildren():number {\n\t\t\treturn this.numChildren;\n\t\t}\n\n\t\tpublic getManager():SceneManager {\n\t\t\tif (this.parent) {\n\t\t\t\treturn this.parent.getManager();\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getManager was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getPath():string {\n\t\t\tconst manager:SceneManager = this.getManager();\n\t\t\tif (manager) {\n\t\t\t\tconst names:string[] = [this.name];\n\t\t\t\tlet scene:Scene = this;\n\t\t\t\twhile (scene = scene.parent) {\n\t\t\t\t\tnames.unshift(scene.name);\n\t\t\t\t}\n\t\t\t\treturn manager.getScenePathByNames(names);\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getPath was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getTransferInfo():SceneTransferInfo {\n\t\t\treturn this.transferInfo || null;\n\t\t}\n\n\t\tpublic gotoScene(path:string, message:any = null):void {\n\t\t\tthis.getManager().goto(path, message);\n\t\t}\n\n\n\n\n\n\t\tpublic _load(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Loading;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLoad) == 'function' ? this.onLoad() : this.implOnLoad();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _unload(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Unloading;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onUnload) == 'function' ? this.onUnload() : this.implOnUnload();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _arrive(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Arriving;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onArrive) == 'function' ? this.onArrive() : this.implOnArrive();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _leave(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Leaving;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLeave) == 'function' ? this.onLeave() : this.implOnLeave();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _ascend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Ascending;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onAscend) == 'function' ? this.onAscend() : this.implOnAscend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _descend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Descending;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onDescend) == 'function' ? this.onDescend() : this.implOnDescend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\n\n\n\n\t\tprotected implOnLoad():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnUnload():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnArrive():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnLeave():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnAscend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnDescend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t// The callback function is called preferentially over the override\n\t\tpublic onLoad:() => cmd.Command;\n\t\tpublic onUnload:() => cmd.Command;\n\t\tpublic onArrive:() => cmd.Command;\n\t\tpublic onLeave:() => cmd.Command;\n\t\tpublic onAscend:() => cmd.Command;\n\t\tpublic onDescend:() => cmd.Command;\n\n\t\tprivate name:string;\n\t\tprivate state:SceneState;\n\t\tprivate lastState:SceneState;\n\t\tprivate parent:Scene;\n\t\tprivate childrenByName:alm.util.Hash<Scene>;\n\t\tprivate numChildren:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneEvent extends Event<Scene> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static LOAD:string = 'SceneEvent.load';\n\t\tpublic static UNLOAD:string = 'SceneEvent.unload';\n\t\tpublic static ARRIVE:string = 'SceneEvent.arrive';\n\t\tpublic static LEAVE:string = 'SceneEvent.leave';\n\t\tpublic static ASCEND:string = 'SceneEvent.ascend';\n\t\tpublic static DESCEND:string = 'SceneEvent.descend';\n\n\t\tpublic static LOAD_COMPLETE:string = 'SceneEvent.loadComplete';\n\t\tpublic static UNLOAD_COMPLETE:string = 'SceneEvent.unloadComplete';\n\t\tpublic static ARRIVE_COMPLETE:string = 'SceneEvent.arriveComplete';\n\t\tpublic static LEAVE_COMPLETE:string = 'SceneEvent.leaveComplete';\n\t\tpublic static ASCEND_COMPLETE:string = 'SceneEvent.ascendComplete';\n\t\tpublic static DESCEND_COMPLETE:string = 'SceneEvent.descendComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Scene) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneEvent {\n\t\t\treturn new SceneEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\texport class SceneTransferInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(transferId:number, departurePath:string, destinationPath:string, message:any = null) {\n\t\t\tthis.transferId = transferId;\n\t\t\tthis.departurePath = departurePath;\n\t\t\tthis.destinationPath = destinationPath;\n\t\t\tthis.message = message;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTransferId():number {\n\t\t\treturn this.transferId;\n\t\t}\n\n\t\tpublic getDeparturePath():string {\n\t\t\treturn this.departurePath;\n\t\t}\n\n\t\tpublic getDestinationPath():string {\n\t\t\treturn this.destinationPath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic message:any;\n\n\t\tprivate transferId:number;\n\t\tprivate departurePath:string;\n\t\tprivate destinationPath:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\texport enum SceneState {\n\t\tIdling,\n\t\tLoading,\n\t\tUnloading,\n\t\tArriving,\n\t\tLeaving,\n\t\tAscending,\n\t\tDescending,\n\t}\n\n\texport function getSceneStateString(state:SceneState):string {\n\t\tswitch (state) {\n\t\t\tcase SceneState.Idling:\n\t\t\t\treturn 'idling';\n\t\t\tcase SceneState.Loading:\n\t\t\t\treturn 'loading';\n\t\t\tcase SceneState.Unloading:\n\t\t\t\treturn 'unloading';\n\t\t\tcase SceneState.Arriving:\n\t\t\t\treturn 'arriving';\n\t\t\tcase SceneState.Leaving:\n\t\t\t\treturn 'leaving';\n\t\t\tcase SceneState.Ascending:\n\t\t\t\treturn 'ascending';\n\t\t\tcase SceneState.Descending:\n\t\t\t\treturn 'descending';\n\t\t}\n\t\treturn '';\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport enum Direction {\n\t\tStatic,\n\t\tSibling,\n\t\tAscend,\n\t\tDescend,\n\t}\n\n\texport function getDirectionString(direction:Direction):string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.Static:\n\t\t\t\treturn 'static';\n\t\t\tcase Direction.Sibling:\n\t\t\t\treturn 'sibling';\n\t\t\tcase Direction.Ascend:\n\t\t\t\treturn 'ascend';\n\t\t\tcase Direction.Descend:\n\t\t\t\treturn 'descend';\n\t\t}\n\t\treturn '';\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport class Waypoint {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(path:string, level:number) {\n\t\t\tthis.path = path;\n\t\t\tthis.level = level;\n\t\t\tthis.from = Direction.Static;\n\t\t\tthis.to = Direction.Static;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getPath():string {\n\t\t\treturn this.path;\n\t\t}\n\n\t\tpublic getLevel():number {\n\t\t\treturn this.level;\n\t\t}\n\n\t\tpublic getFrom():Direction {\n\t\t\treturn this.from;\n\t\t}\n\n\t\tpublic getTo():Direction {\n\t\t\treturn this.to;\n\t\t}\n\n\t\tpublic _setFrom(from:Direction):void {\n\t\t\tthis.from = from;\n\t\t}\n\n\t\tpublic _setTo(to:Direction):void {\n\t\t\tthis.to = to;\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[Waypoint] path = \\'' + this.path + '\\', level = ' + this.level + ', from = ' + getDirectionString(this.from) + ', to = ' + getDirectionString(this.to);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate path:string;\n\t\tprivate level:number;\n\t\tprivate from:Direction;\n\t\tprivate to:Direction;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport class RootScene extends Scene {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(manager:SceneManager) {\n\t\t\tsuper('');\n\t\t\tthis.manager = manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getManager():SceneManager {\n\t\t\treturn this.manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate manager:SceneManager;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport LoggerLevel = alm.debug.LoggerLevel;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Obj = alm.util.Obj;\n\timport RootScene = scn.core.RootScene;\n\n\texport class SceneManager extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string = '', rootSceneClass:(new (sceneManager:SceneManager) => RootScene) = RootScene) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.root = new rootSceneClass(this);\n\t\t\tthis.currentScene = null;\n\n\t\t\tthis.waypoints = [];\n\t\t\tthis.waypointIndex = -1;\n\t\t\tthis.lastState = SceneState.Idling;\n\t\t\tthis.eventIndex = -1;\n\t\t\tthis.transferId = -1;\n\t\t\tthis.transferInfo = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start(message:any = null):void {\n\t\t\tLogger.verbose('----- scene manager start -----');\n\t\t\tthis.goto('/', message);\n\t\t}\n\n\t\tpublic goto(path:string, message:any = null):void {\n\t\t\tpath = this.resolvePath(path);\n\n\t\t\t// Return if current destination and new destination is same.\n\t\t\tif (this.transferInfo && this.transferInfo.getDestinationPath() == path) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Build waypoints\n\t\t\tlet newWaypoints:core.Waypoint[] = [];\n\t\t\tif (this.waypointIndex != -1) {\n\t\t\t\tnewWaypoints = this.createWaypoints(this.waypoints[this.waypointIndex].getPath(), path);\n\t\t\t} else {\n\t\t\t\t// Init\n\t\t\t\tnewWaypoints = [new core.Waypoint('/', 0)];\n\t\t\t}\n\n\t\t\t// Transfer\n\t\t\tif (newWaypoints.length > 0) {\n\t\t\t\tconst isDestinationChanged:boolean = this.transferInfo != null;\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.waypointIndex = 0;\n\t\t\t\t\tthis.eventIndex = 0;\n\t\t\t\t\t++this.transferId;\n\t\t\t\t\tthis.waypoints = newWaypoints;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.verbose('destination is changed');\n\t\t\t\t\tLogger.verbose('waypoint index : ' + this.waypointIndex);\n\t\t\t\t\tthis.waypoints = this.waypoints.slice(0, this.waypointIndex + 1).concat(newWaypoints.slice(1));\n\t\t\t\t\tthis.setDirection(this.waypoints);\n\t\t\t\t\tthis.dumpWaypoint(this.waypoints);\n\t\t\t\t}\n\n\t\t\t\tthis.transferInfo = new SceneTransferInfo(this.transferId, this.waypoints[this.waypointIndex].getPath(), this.waypoints[this.waypoints.length - 1].getPath(), message);\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerTransferEvent(SceneManagerTransferEvent.TRANSFER_START, this, this.transferInfo));\n\t\t\t\t}\n\n\t\t\t\tthis.checkState();\n\t\t\t}\n\t\t}\n\n\t\tpublic resolvePath(path:string):string {\n\t\t\t// Relative to absolute\n\t\t\tif (path[0] != '/') {\n\t\t\t\tif (this.currentScene) {\n\t\t\t\t\tpath = this.currentScene.getPath() + '/' + path;\n\t\t\t\t} else {\n\t\t\t\t\tpath = '/' + path;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Normalize\n\t\t\tconst names:string[] = path.split('/');\n\t\t\tconst normalized:string[] = [];\n\t\t\tfor (let i:number = 0; i < names.length; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (name == '') continue;\n\t\t\t\tif (name == '.') continue;\n\t\t\t\tif (name == '..') {\n\t\t\t\t\tnormalized.pop();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnormalized.push(name);\n\t\t\t}\n\n\t\t\treturn '/' + normalized.join('/');\n\t\t}\n\n\t\tpublic addSceneAt(path:string):Scene {\n\t\t\tlet success:boolean = false;\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (i == n - 1) {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tLogger.warn('[SceneManager \\'' + this.name + '\\'] addSceneAt was failed, because path \\'' + path + '\\' is already exist.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tscene = scene.getChildByName(name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn success ? scene : null;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getRoot():Scene {\n\t\t\treturn this.root;\n\t\t}\n\n\t\tpublic getSceneByPath(path:string):Scene {\n\t\t\treturn this.getSceneBySceneNames(this.getSceneNamesByPath(path));\n\t\t}\n\n\t\tpublic getParentSceneByPath(path:string):Scene {\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tnames.pop();\n\t\t\treturn this.getSceneBySceneNames(names);\n\t\t}\n\n\t\tprivate getSceneBySceneNames(names:string[]):Scene {\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tscene = scene.getChildByName(names[i]);\n\t\t\t}\n\t\t\treturn scene;\n\t\t}\n\n\t\tpublic getSceneNamesByPath(path:string):string[] {\n\t\t\treturn path == '/' ? [''] : this.resolvePath(path).split('/');\n\t\t}\n\n\t\tpublic getSceneLevelByNames(names:string[]):number {\n\t\t\treturn names.length - 1;\n\t\t}\n\n\t\tpublic getScenePathByNames(names:string[]):string {\n\t\t\treturn names.length == 0 ? '/' : names.length == 1 ? ('/' + names[0]) : names.join('/');\n\t\t}\n\n\n\t\tprivate createWaypoints(departurePath:string, destinationPath:string):core.Waypoint[] {\n\t\t\tif (departurePath == destinationPath) {\n\t\t\t\tLogger.warn('[SceneManager] departure path and destination path is same, path = \\'' + departurePath + '\\'');\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tLogger.verbose('----- scene flow -----');\n\n\t\t\tconst waypoints:core.Waypoint[] = [\n\t\t\t\tnew core.Waypoint(departurePath, this.getSceneLevelByNames(this.getSceneNamesByPath(departurePath)))\n\t\t\t];\n\n\t\t\tconst departureNames:string[] = this.getSceneNamesByPath(departurePath);\n\t\t\tconst destinationNames:string[] = this.getSceneNamesByPath(destinationPath);\n\n\t\t\tLogger.verbose('    path');\n\t\t\tLogger.verbose('        current    : \\'' + departurePath + '\\'');\n\t\t\tLogger.verbose('        destination: \\'' + destinationPath + '\\'');\n\n\t\t\tLogger.verbose('    names');\n\t\t\tLogger.verbose('        current(' + departureNames.length + ')    : \\'' + departureNames + '\\'');\n\t\t\tLogger.verbose('        destination(' + destinationNames.length + '): \\'' + destinationNames + '\\'');\n\n\t\t\t// 折り返しを見つける\n\t\t\tlet turningLevel:number = 0;\n\t\t\tlet turningNames:string[] = [];\n\t\t\tlet turningPath:string;\n\t\t\tif (destinationPath == '/') {\n\t\t\t\tturningLevel = -1;\n\t\t\t\tturningNames = [];\n\t\t\t\tturningPath = '/';\n\t\t\t} else {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (departureNames[turningLevel] == destinationNames[turningLevel]) {\n\t\t\t\t\t\tturningNames.push(departureNames[turningLevel]);\n\t\t\t\t\t\t++turningLevel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t--turningLevel;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tturningPath = this.getScenePathByNames(turningNames);\n\t\t\t}\n\n\t\t\tLogger.verbose('    turning');\n\t\t\tLogger.verbose('        path     : ' + turningPath);\n\t\t\tLogger.verbose('        level    : ' + turningLevel);\n\t\t\tLogger.verbose('        names(' + turningNames.length + ') : \\'' + turningNames + '\\'');\n\n\t\t\t// 出発シーンから折り返しまで\n\t\t\t{\n\t\t\t\tconst names:string[] = departureNames.concat();\n\t\t\t\tlet prevPath:string = departurePath;\n\t\t\t\tfor (let i:number = departureNames.length - 1; i > turningLevel + 1; --i) {\n\t\t\t\t\tnames.pop();\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (turningPath == destinationPath && turningLevel > 0) {\n\t\t\t\t// 折り返しと到着シーンが同一\n\t\t\t\tconst from:core.Direction = turningLevel == waypoints[waypoints.length - 1].getLevel() ? core.Direction.Sibling : core.Direction.Ascend;\n\t\t\t\twaypoints.push(new core.Waypoint(turningPath, turningLevel));\n\t\t\t} else {\n\n\t\t\t\t// 折り返しから到達シーンまで\n\t\t\t\tconst names:string[] = turningNames.concat();\n\t\t\t\tconst prev:core.Waypoint = waypoints[waypoints.length - 1];\n\t\t\t\tlet prevPath:string = prev.getPath();\n\t\t\t\tlet prevLevel:number = prev.getLevel();\n\t\t\t\tfor (let i:number = turningLevel + 1; i < destinationNames.length; ++i) {\n\t\t\t\t\tconst name:string = destinationNames[i];\n\t\t\t\t\tnames.push(name);\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevLevel = level;\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 進行方向\n\t\t\tthis.setDirection(waypoints);\n\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tthis.dumpWaypoint(waypoints);\n\t\t\t}\n\n\t\t\treturn waypoints;\n\t\t}\n\n\t\tprivate setDirection(waypoints:core.Waypoint[]):void {\n\t\t\tconst n:number = waypoints.length;\n\t\t\tlet prev:core.Waypoint = null;\n\t\t\tlet point:core.Waypoint;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tpoint = waypoints[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tconst d:number = point.getLevel() - prev.getLevel();\n\t\t\t\t\tpoint._setFrom(d > 0 ? core.Direction.Descend : d < 0 ? core.Direction.Ascend : core.Direction.Sibling);\n\t\t\t\t\tprev._setTo(point.getFrom());\n\t\t\t\t}\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tprivate dumpWaypoint(waypoints:core.Waypoint[]):void {\n\t\t\tLogger.verbose('    waypoints');\n\t\t\tconst n:number = waypoints.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tLogger.verbose('        [' + i + '] ' + waypoints[i]);\n\t\t\t}\n\t\t\tLogger.verbose('');\n\t\t}\n\n\t\tpublic dumpAllPath():void {\n\t\t\tLogger.info('----- scene all path -----');\n\t\t\tthis._dumpAllPath(this.root);\n\t\t}\n\n\t\tprivate _dumpAllPath(parent:Scene):void {\n\t\t\tconst children = parent.getChildrenByName();\n\t\t\tObj.each(children, (name:string, child:Scene):void => {\n\t\t\t\tLogger.info(child.getPath());\n\t\t\t\tthis._dumpAllPath(child);\n\t\t\t});\n\t\t}\n\n\n\n\n\n\t\tprivate checkState():void {\n\t\t\t//trace('lastState : ' + scn.getSceneStateString(this.lastState));\n\n\t\t\t//trace(this.waypointIndex + ' / ' + this.waypoints.length);\n\n\t\t\tif (this.waypointIndex >= this.waypoints.length) {\n\t\t\t\tLogger.verbose('----- scene transfer complete -----');\n\t\t\t\tconst tmpTransferId:number = this.transferInfo.getTransferId();\n\t\t\t\tthis.waypointIndex = this.waypoints.length - 1;\n\t\t\t\tthis.dispatchEvent(new SceneManagerTransferEvent(SceneManagerTransferEvent.TRANSFER_COMPLETE, this, this.transferInfo));\n\t\t\t\tif (tmpTransferId == this.transferInfo.getTransferId()) {\n\t\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentScene) {\n\t\t\t\tconst currentWaypoint:core.Waypoint = this.waypoints[this.waypointIndex];\n\t\t\t\tconst currentWaypointPath = currentWaypoint.getPath();\n\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypointPath);\n\n\t\t\t\tif (!this.currentScene) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerRequireSceneEvent(SceneManagerRequireSceneEvent.REQUIRE_SCENE, this, currentWaypointPath));\n\t\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypointPath);\n\t\t\t\t}\n\t\t\t\tif (!this.currentScene) {\n\t\t\t\t\tLogger.warn('[SceneManager] scene is null : scene path =', currentWaypointPath);\n\t\t\t\t}\n\n\t\t\t\t// Departure scene\n\t\t\t\tif (this.waypoints.length > 1 && this.waypointIndex == 0) {\n\t\t\t\t\t//trace('Departure scene');\n\n\t\t\t\t\t// Leave\n\t\t\t\t\tif (this.lastState != SceneState.Leaving && this.currentScene.getLastState() == SceneState.Arriving) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Leave   : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._leave(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Departure to child\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tthis.checkState();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Through scene\n\t\t\t\tif (this.waypointIndex > 0 && this.waypointIndex < this.waypoints.length - 1) {\n\t\t\t\t\t//trace('Through scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ascend\n\t\t\t\t\tif (this.lastState != SceneState.Ascending && currentWaypoint.getFrom() == core.Direction.Ascend) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Ascend  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._ascend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Descend\n\t\t\t\t\tif (this.lastState != SceneState.Descending && currentWaypoint.getTo() == core.Direction.Descend) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Descend : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._descend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Destination scene\n\t\t\t\tif (this.waypointIndex == this.waypoints.length - 1) {\n\t\t\t\t\t//trace('Destination scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Arrive\n\t\t\t\t\tif (this.lastState != SceneState.Arriving) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Arrive  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._arrive(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t//trace('Init scene');\n\n\t\t\t\t// Init\n\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\tthis.currentScene = this.root;\n\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t}\n\t\t}\n\n\t\tprivate sceneLoadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Loading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneUnloadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Unloading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneArriveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Arriving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneLeaveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Leaving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneAscendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Ascending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneDescendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Descending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate name:string;\n\t\tprivate root:Scene;\n\t\tprivate currentScene:Scene;\n\n\t\tprivate waypoints:core.Waypoint[];\n\t\tprivate waypointIndex:number;\n\t\tprivate lastState:SceneState;\n\t\tprivate eventIndex:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t\tprivate transferId:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerTransferEvent extends Event<SceneManager> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TRANSFER_START:string = 'SceneManagerTransferEvent.transferStart';\n\t\tpublic static TRANSFER_COMPLETE:string = 'SceneManagerTransferEvent.transferComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:SceneManager, transferInfo:SceneTransferInfo) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.transferInfo = transferInfo;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerTransferEvent {\n\t\t\treturn new SceneManagerTransferEvent(this.type, this.target, this.transferInfo);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneManagerTransferEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly transferInfo:SceneTransferInfo;\n\t}\n}\n"]}
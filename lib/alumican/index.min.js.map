{"version":3,"sources":["../src/alumican/cmd/Parallel.ts","../src/alumican/scn/SceneManagerRequireSceneEvent.ts","../src/alumican/index.ts","../src/alumican/alm/debug/Logger.ts","../src/alumican/alm/util/Time.ts","../src/alumican/alm/math/Easing.ts","../src/alumican/alm/browser/QueryString.ts","../src/alumican/alm/debug/FpsMonitor.ts","../src/alumican/alm/event/Event.ts","../src/alumican/alm/event/EventDispatcher.ts","../src/alumican/cmd/CommandState.ts","../src/alumican/cmd/CommandEvent.ts","../src/alumican/cmd/Command.ts","../src/alumican/cmd/CommandList.ts","../src/alumican/cmd/Break.ts","../src/alumican/cmd/Return.ts","../src/alumican/cmd/Log.ts","../src/alumican/cmd/Wait.ts","../src/alumican/cmd/Func.ts","../src/alumican/cmd/Listen.ts","../src/alumican/cmd/Tween.ts","../src/alumican/cmd/Serial.ts","../src/alumican/alm/geom/Vector2.ts","../src/alumican/alm/geom/Vector3.ts","../src/alumican/alm/geom/Rectangle.ts","../src/alumican/alm/geom/Boxer.ts","../src/alumican/alm/util/Obj.ts","../src/alumican/alm/util/Arr.ts","../src/alumican/alm/util/Num.ts","../src/alumican/alm/util/Str.ts","../src/alumican/alm/util/Cmd.ts","../src/alumican/alm/util/Dom.ts","../src/alumican/alm/util/CssVar.ts","../src/alumican/alm/resource/ObjectPool.ts","../src/alumican/alm/state/Lottery.ts","../src/alumican/alm/state/Switcher.ts","../src/alumican/alm/state/SwitcherEvent.ts","../src/alumican/alm/state/LoHi.ts","../src/alumican/alm/state/LoHiEvent.ts","../src/alumican/alm/math/EasingValue.ts","../src/alumican/alm/math/SpringValue.ts","../src/alumican/alm/math/SimpleAverage.ts","../src/alumican/alm/math/SimpleMovingAverage.ts","../src/alumican/alm/math/MaxValue.ts","../src/alumican/alm/math/Circular.ts","../src/alumican/alm/math/BinarySearch.ts","../src/alumican/alm/math/MersenneTwister.ts","../src/alumican/alm/time/AnimationFrameTicker.ts","../src/alumican/alm/time/AnimationFrameTickerEvent.ts","../src/alumican/alm/time/Timer.ts","../src/alumican/alm/time/TimerEvent.ts","../src/alumican/alm/io/FileLoader.ts","../src/alumican/alm/io/FileLoaderProgressEvent.ts","../src/alumican/alm/io/FileLoaderSuccessEvent.ts","../src/alumican/alm/io/FileLoaderErrorEvent.ts","../src/alumican/alm/io/FileQuery.ts","../src/alumican/alm/io/ImageFileHandler.ts","../src/alumican/alm/audio/core/AudioClip.ts","../src/alumican/alm/audio/AudioPlayer.ts","../src/alumican/alm/audio/CrossOverLoopAudio.ts","../src/alumican/alm/audio/FootstepAudio.ts","../src/alumican/alm/view/ViewEvent.ts","../src/alumican/alm/view/View.ts","../src/alumican/alm/view/ButtonBehavior.ts","../src/alumican/alm/view/SelectionBehavior.ts","../src/alumican/alm/browser/DeviceInfo.ts","../src/alumican/alm/browser/LocalStorage.ts","../src/alumican/alm/browser/SessionStorage.ts","../src/alumican/alm/browser/KeyWatcher.ts","../src/alumican/alm/browser/KeyWatcherEvent.ts","../src/alumican/alm/browser/WindowWatcher.ts","../src/alumican/alm/browser/WindowWatcherEvent.ts","../src/alumican/alm/browser/ScrollSectionTriggerEvent.ts","../src/alumican/alm/browser/ScrollSectionTrigger.ts","../src/alumican/alm/browser/ResponsiveObserver.ts","../src/alumican/alm/browser/ResponsiveObserverEvent.ts","../src/alumican/scn/Scene.ts","../src/alumican/scn/SceneEvent.ts","../src/alumican/scn/SceneTransferInfo.ts","../src/alumican/scn/SceneState.ts","../src/alumican/scn/core/Direction.ts","../src/alumican/scn/core/Waypoint.ts","../src/alumican/scn/core/RootScene.ts","../src/alumican/scn/SceneManager.ts","../src/alumican/scn/SceneManagerTransferEvent.ts"],"names":["cmd","scn","alm","trace","messages","_i","arguments","length","debug","Logger","info","apply","caller","throwWarn","target","message","condition","warnIf","throwError","errorIf","Time","util","now","window","performance","Date","Easing","math","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","createEaseInElastic","s","p","a","asin","createEaseOutElastic","createEaseInOutElastic","easeInElastic","defaultEaseInElastic","easeOutElastic","defaultEaseOutElastic","easeInOutElastic","defaultEaseInOutElastic","createEaseInBack","createEaseOutBack","createEaseInOutBack","easeInBack","easeOutBack","defaultEaseOutBack","easeInOutBack","defaultEaseInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","defaultEaseInBack","QueryString","url","this","set","browser","prototype","index","search","indexOf","substring","location","hash","pair","pairs","split","i","getString","key","defaultValue","value","undefined","getInt","parseInt","isNaN","getFloat","parseFloat","getBool","getHash","setHash","setParam","removeParam","hasParam","getReplacedQueryStringUrl","regExp","RegExp","separator","match","replace","replaceQueryString","state","href","history","replaceState","LoggerLevel","NullLogging","verbose","prefix","warn","error","ConsoleLogging","console","Array","slice","call","concat","log","DOMLogging","print","line","join","html","dom","innerHTML","innerText","ParallelLogging","n","loggers","setLevelByQuery","level","Silent","setNamespace","namespace","Verbose","logger","Info","Warn","Error","stackTrace","FpsMonitor","reset","frameRate","frameCount","startTime","actualFrameRate","dummyFrameRate","update","currentTime","elapsedTime","setDummyFrameRate","clearDummyFrameRate","getFrameRate","Event","type","data","event","event_1","EventDispatcher","listeners","addEventListener","eventType","listener","numListeners","push","removeEventListener","splice","removeAllEventListener","hasEventListener","dispatchEvent","dispatchEventType","eventTarget","CommandState","_super","CommandEvent","__extends","clone","toString","COMPLETE","Command","execute","Sleeping","Executing","getExecuteFunction","interrupt","Interrupting","getInterruptFunction","destroy","getDestroyFunction","parent","executeFunction","interruptFunction","destroyFunction","notifyComplete","implExecuteFunction","command","implInterruptFunction","implDestroyFunction","setExecuteFunction","func","setInterruptFunction","setDestroyFunction","getState","getParent","setParent","getSelf","self","_this","CommandList","addCommand","commands","preProcess","getCommands","insertCommand","insertCommandAt","__spreadArray","addCommandArray","insertCommandArray","insertCommandArrayAt","getLength","getCommandByIndex","numCommands","Func","Break","Return","Log","getMessages","setMessages","Wait","timerId","setTimeout","completeHandler","time","cancel","clearTimeout","getTime","setTime","eventDispatcher","args","getFunction","setFunction","getArguments","setArguments","getEventDispatcher","setEventDispatcher","getEventType","setEventType","Listen","Tween","internalFrom","to","from","tweenTarget","duration","setInterval","intervalHandler","updateInterval","onStart","progressTime","progressValue","onUpdate","onComplete","easing","clearInterval","timeRatio","value0","getTarget","setTarget","getDuration","setDuration","getTo","setTo","getFrom","setFrom","getEasing","setEasing","getOnStart","setOnStart","getOnUpdate","setOnUpdate","getOnComplete","setOnComplete","getProgressTime","getProgressValue","getUpdateInterval","setUpdateInterval","milliseconds","Serial","position","next","currentCommand","isPaused","isCompleteOnPaused","implNotifyBreak","implNotifyReturn","getPosition","Parallel","completeCount","command_1","command_2","command_3","getCompleteCount","Vector2","x","y","geom","copyTo","point","getClone","zero","normalize","l","getSquareDistance","dx","dy","getDistance","Vector3","z","dz","Rectangle","width","height","rect","getTop","getBottom","getLeft","getRight","getTopLeft","getTopRight","getBottomLeft","getBottomRight","Align","ScaleMode","Boxer","resize","bounds","scaleMode","align","ShowAll","Middle_Center","tx","ty","tw","th","bx","by","bw","bh","NoBorder","ratioW","ratioH","ratio","ExactFit","Top_Left","Middle_Left","Bottom_Left","Top_Right","Middle_Right","Bottom_Right","Top_Center","Bottom_Center","Obj","each","Object","keys","forEach","get","Arr","sequence","count","init","step","result","v","unique","list","filter","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","m","swap","index1","index2","tmp","shuffle","floor","random","sort","asc","b","choose","Num","map","srcA","srcB","dstA","dstB","clamp","ease","min","max","clampAbs","minAbs","maxAbs","abs","lerp","randomInt","randomAbs","randomSign","dist","x1","y1","x2","y2","squared","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","PI3","PI2","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","Str","toTimeString","hours","minutes","seconds","h","substr","Cmd","stop","c","single","Dom","instantiate","templateId","removeId","element","document","getElementById","cloneNode","removeAttribute","addPointerDownListener","addPointerMoveListener","addPointerUpListener","addPointerEnterListener","addPointerLeaveListener","addPointerOverListener","addPointerOutListener","removePointerDownListener","removePointerMoveListener","removePointerUpListener","removePointerEnterListener","removePointerLeaveListener","removePointerOverListener","removePointerOutListener","addRootClass","root","documentElement","classList","add","removeRootClass","remove","addRootAttribute","setAttribute","removeRootAttribute","getRootCss","property","style","getPropertyValue","setRootCss","setProperty","scrollTo","scrollTop","useTransition","scrollTween","scrollPosition","applyScrollPosition","scroll","setupSmoothAnchorLink","tags","getElementsByTagName","tagCount","setAnchorLinkAction","item","tag","getAttribute","hasAttribute","anchorLinkClickHandler","currentTarget","targetId","targetScrollPosition","pageYOffset","getBoundingClientRect","top","CssVar","suffix","cancelAnimation","numberPattern","exec","isNeedApply","getProperty","getValue","setValue","getSuffix","setSuffix","animate","tween","animateTo","ObjectPool","onRequireItem","onDestroyItem","initCount","growthCount","items","resource","getItem","unshift","returnItem","reduce","shift","Lottery","values","initValues","restValues","restCount","isEmpty","onCheck","isAutoResetEnabled","getRestCount","getIsEmply","getIsAutoResetEnabled","setIsAutoResetEnabled","enabled","createIndices","Switcher","isLoopEnabled","itemCount","itemIds","itemIndexById","onChange","onPrev","onNext","setupById","ids","setup","setupByCount","currentItemIndex","currentItemId","oldItemIndex","oldItemId","gotoByIndex","itemIndex","dispatchPagerEvent","SwitcherEvent","CHANGE","gotoById","itemId","hasOwnProperty","prev","getPrevItemIndex","PREV","getNextItemIndex","NEXT","getPrevItemId","getNextItemId","getIsLoopEnabled","setIsLoopEnabled","getItemCount","getCurrentItemIndex","getOldItemIndex","getCurrentItemId","getOldItemId","getItemIds","LoHi","lowThreshold","highThreshold","initValue","isHigh","_set","getIsHigh","getLowThreshold","getHighThreshold","setLowThreshold","threshold","setHighThreshold","LoHiEvent","LOW","HIGH","EasingValue","tolerance","d","SpringValue","spring","friction","acceleration","velocity","SimpleAverage","_value","_count","SimpleMovingAverage","maxCount","_maxCount","latest","oldest","MaxValue","maxLatestCount","_maxLatestCount","Number","MAX_VALUE","Circular","angle","setAngle","setVelocity","getAngle","getVelocity","getSin","getCos","getTan","tan","getMagnitude","getVector","xy","BinarySearch","setList","searchNearest","midIndex","estimated","lowIndex","highIndex","leapNearest","lowValue","nearestIndex","nearestValue","highValue","index0","MersenneTwister","seed","_mt","setSeed","_mulUint32","a2","b2","_toNumber","ceil","mt","_index","TypeError","k","_nextInt","N","M","sup","AnimationFrameTicker","updateHandler","requestId","requestAnimationFrame","targetFrameRate","frameStartTime","interval","toleranceDuration","AnimationFrameTickerEvent","TICK","isRunning","start","cancelAnimationFrame","getIsRunning","getTargetFrameRate","Timer","repeatCount","timerHandler","tStartTime","elapsedCount","isCompleted","tInterval","startInterval","dispatch","TimerEvent","tId","tRestTime","stopInterval","restart","getInterval","getElapsedTime","getRestTime","getElapsedCount","getRepeatCount","setRepeatCount","io","FileLoader","totalThreadCount","fileLoadCompleteHandler","query","content","currentThreadCount","isLoading","isLoadComplete","param","onLoad","FileLoaderSuccessEvent","SUCCESS","fileLoadErrorHandler","onError","FileLoaderErrorEvent","ERROR","isLoading_","currentCount","totalCount","loadingQueries","loadingQueryIndex","queriesByQueryId","queriesByUrl","handlersByType","require","id","addQuery","FileQuery","String","load","progress","FileLoaderProgressEvent","START","PROGRESS","this_1","query_1","handler","addHandler","getType","getQueryByQueryId","queryId","getQueryByUrl","getCurrentCount","getTotalCount","getContentByUrl","getContentByQueryId","textureId","getCurrentThreadCount","getTotalThreadCount","loadedCount","ImageFileHandler","crossOrigin","TYPE","image","Image","src","onabort","onerror","onload","audio","AudioClip","context","destination","fileName","masterVolume","buffer","sourceNode","isAvailable","gainNode","createGain","connect","volume","applyVolume","request","XMLHttpRequest","responseType","onreadystatechange","readyState","status","decodeAudioData","response","open","send","play","loop","overwrite","createBufferSource","disconnect","getVolume","setVolume","volumeTween","fadeTo","fadeIn","fadeOut","stopOnComplete","gain","getIsAvailable","getCurrentTime","AudioPlayer","AudioContext","clipsById","masterGainNode","masterVolute","getClip","getMasterVolume","setMasterVolume","getInstance","instance","CrossOverLoopAudio","crossOverDuration","clipIndex","clipCount","playCurrent","audioPlayer","clipIds","clip","isPlaying","timeoutId","stopCurrent","FootstepAudio","intervalMin","intervalMax","isWaitingForFirstStep","clipId","intervalId","immediately","setSpeed","speedRatio","view","ViewEvent","INITIALIZE_BEGIN","INITIALIZE_END","FINALIZE_BEGIN","FINALIZE_END","READY_BEGIN","READY_END","SHOW_BEGIN","SHOW_END","HIDE_BEGIN","HIDE_END","view_1","View","viewCount","name","autoHideWithInit","isInitializing","isInitialized","isFinalizing","isFinalized","isReadying","isReadied","isShowing","isShown","isHiding","viewsById","initialize","implInitialize","hide","ready","implReady","finalize","implFinalize","show","getShowCommand","getHideCommand","showCommand","hideCommand","implShow","implHide","getIsInitializing","getIsInitialized","getIsReadying","getIsReadied","getIsShowing","getIsShown","getIsHiding","getIsHidden","getIsFinalizing","getIsFinalized","getId","getView","getName","setName","getAutoHideWithInit","setAutoHideWithInit","getViewById","ButtonBehavior","hitArea","isHoverCursorEnabled","isPreventDefaultEnabled","isStopPropagationEnabled","mouseOverHandler","preventDefault","stopPropagation","over","applyMouseCursor","mouseOutHandler","out","mouseDownHandler","down","mouseUpHandler","up","clickHandler","click","touchStartHandler","touchEndHandler","touchCancelHandler","isEnabled","isOver","isDown","isOverInternal","isDownInternal","defaultMouseCursor","setHitArea","implButtonOver","_out","checkEnabled","implButtonOut","implButtonDown","_up","implButtonUp","implButtonClick","on","off","getIsEnabled","setIsEnabled","implButtonChangeEnabled","getIsOver","getIsDown","getHitArea","clearHitArea","getIsPreventDefaultEnabled","setIsPreventDefaultEnabled","getIsStopPropagationEnabled","setIsStopPropagationEnabled","getIsHoverCursorEnabled","setIsHoverCursorEnabled","cursor","SelectionBehavior","select","isSelected","implSelectionChanged","deselect","getIsSelected","DeviceInfo","u","navigator","userAgent","toLowerCase","isTablet","isMobile","isDesktop","isIOS","isAndroid","isIE","isEdge","isChrome","isSafari","isFireFox","isOpera","isUnknownBrowser","navigator_1","langFull","languages","language","lang","exception","isTouchEnabled","ontouchstart","isDownloadEnabled","canvas","createElement","webGlContext","getContext","isWebGlEnabled","WebGLRenderingContext","getShaderPrecisionFormat","e","devicePixelRatio","isRetina","getIsDesktop","getIsTablet","getIsMobile","getIsIOS","getIsAndroid","getIsIE","getIsEdge","getIsChrome","getIsSafari","getIsFireFox","getIsOpera","getIsUnknownBrowser","getLang","getLangFull","getIsTouchEnabled","getIsDownloadEnabled","getIsWebGlEnabled","getIsRetina","getDevicePixelRatio","getDpi","div","dpi","body","appendChild","offsetHeight","removeChild","LocalStorage","save","expiredAt","record","JSON","stringify","localStorage","setItem","saveWithTerm","parse","removeItem","isAvailable_","toMilliseconds","dates","SessionStorage","sessionStorage","KeyCode","KeyWatcher","windowKeyDownHandler","windowKeyUpHandler","getIsAnyKeyPressed","pressedKeyCount","getIsKeyPressed","keyCode","isKeyPressedByKeyCode","getIsContinuousPressEnabled","isContinuousPressEnabled","setIsContinuousPressEnabled","KeyWatcherEvent","KEY_DOWN","KEY_UP","isLongPressed","originalEvent","altKey","ctrlKey","shiftKey","WindowWatcher","windowResizeHandler","windowScrollHandler","windowWidth","innerWidth","windowHeight","innerHeight","scrollBottom","calcScrolledPosition","calcScrolledPositionRatio","WindowWatcherEvent","RESIZE","getWindow","getScrollTop","getScrollBottom","getWindowWidth","getWindowHeight","getIsMobileOrientationResize","isMobileOrientationResize","setIsMobileOrientationResize","windowOrientationChangeHandler","SCROLL","ScrollSectionTriggerEvent","currentSectionIndex","prevSectionIndex","ScrollSectionTrigger","updateScrollPosition","check","updateThresholdPosition","triggerPositions","thresholdRatio","thresholdPosition","getCurrentIndex","getPrevIndex","getTriggerPositions","setTriggerPositions","positions","getThreshold","setThreshold","sectionIndex","nearestTriggerIndex","nearestScrolledTriggerPosition","nearestDistance","triggerPositionCount","scrolledTriggerPosition","distance","ResponsiveObserver","breakPoints","breakPointCount","currentIndex","prevIndex","setBreakpoints","getBreakPoints","getBreakPointCount","ResponsiveObserverEvent","Scene","addChild","child","childName","childrenByName","numChildren","addChildren","children","addedChildren","removeChildren","removedChildren","removeAllChildren","name_1","contains","getLastState","lastState","getChildByName","getChildrenByName","getNumChildren","getManager","getPath","manager","names","scene","getScenePathByNames","getTransferInfo","transferInfo","gotoScene","path","goto","_load","SceneState","Loading","SceneEvent","LOAD","implOnLoad","Idling","LOAD_COMPLETE","_unload","Unloading","UNLOAD","onUnload","implOnUnload","UNLOAD_COMPLETE","_arrive","Arriving","ARRIVE","onArrive","implOnArrive","ARRIVE_COMPLETE","_leave","Leaving","LEAVE","onLeave","implOnLeave","LEAVE_COMPLETE","_ascend","Ascending","ASCEND","onAscend","implOnAscend","ASCEND_COMPLETE","_descend","Descending","DESCEND","onDescend","implOnDescend","DESCEND_COMPLETE","SceneTransferInfo","getTransferId","transferId","getDeparturePath","departurePath","getDestinationPath","destinationPath","getSceneStateString","core","Direction","getDirectionString","direction","Static","Sibling","Ascend","Descend","Waypoint","getLevel","_setFrom","_setTo","RootScene","SceneManager","newWaypoints","resolvePath","waypointIndex","createWaypoints","waypoints","isDestinationChanged","setDirection","dumpWaypoint","eventIndex","SceneManagerTransferEvent","TRANSFER_START","checkState","currentScene","normalized","name_2","pop","addSceneAt","success","getSceneNamesByPath","name_3","getRoot","getSceneByPath","getSceneBySceneNames","getParentSceneByPath","getSceneLevelByNames","departureNames","destinationNames","turningLevel","turningNames","turningPath","prevPath","name_4","dumpAllPath","_dumpAllPath","tmpTransferId","TRANSFER_COMPLETE","currentWaypoint","currentWaypointPath","SceneManagerRequireSceneEvent","REQUIRE_SCENE","sceneLeaveCompleteHandler","sceneUnloadCompleteHandler","sceneLoadCompleteHandler","sceneAscendCompleteHandler","sceneDescendCompleteHandler","sceneArriveCompleteHandler","rootSceneClass","scenePath","getVersion"],"mappings":"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","file":"index.min.js","sourcesContent":["/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Parallel extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.completeCount = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tprivate completeHandler = (event:Event<Command>):void => {\n\t\t\tif (++this.completeCount >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.completeCount = 0;\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.execute();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.interrupt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getCompleteCount():number { return this.completeCount; }\n\t\tprivate completeCount:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerRequireSceneEvent extends Event<SceneManager> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static REQUIRE_SCENE:string = 'SceneManagerRequireSceneEvent.requireScene';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:SceneManager, scenePath:string) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.scenePath = scenePath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerRequireSceneEvent {\n\t\t\treturn new SceneManagerRequireSceneEvent(this.type, this.target, this.scenePath);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneManagerRequireSceneEvent] type = ' + this.type + ', scenePath = ' + this.scenePath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly scenePath:string;\n\t}\n}\n","/* ---------- project dependencies ---------- */\n\n\n/* ---------- project scripts ---------- */\n\n/// <reference path='alm/util/Time.ts' />\n/// <reference path='alm/math/Easing.ts' />\n/// <reference path='alm/browser/QueryString.ts' />\n\n/// <reference path='alm/debug/Logger.ts' />\n/// <reference path='alm/debug/FpsMonitor.ts' />\n\n/// <reference path='alm/event/Event.ts' />\n/// <reference path='alm/event/EventListener.ts' />\n/// <reference path='alm/event/EventDispatcher.ts' />\n/// <reference path='alm/event/IEventDispatcher.ts' />\n\n/// <reference path='cmd/CommandState.ts' />\n/// <reference path='cmd/CommandEvent.ts' />\n/// <reference path='cmd/Command.ts' />\n/// <reference path='cmd/CommandList.ts' />\n/// <reference path='cmd/Break.ts' />\n/// <reference path='cmd/Return.ts' />\n/// <reference path='cmd/Log.ts' />\n/// <reference path='cmd/Wait.ts' />\n/// <reference path='cmd/Func.ts' />\n/// <reference path='cmd/Listen.ts' />\n/// <reference path='cmd/Tween.ts' />\n/// <reference path='cmd/Serial.ts' />\n/// <reference path='cmd/Parallel.ts' />\n\n/// <reference path='alm/geom/Vector2.ts' />\n/// <reference path='alm/geom/Vector3.ts' />\n/// <reference path='alm/geom/Rectangle.ts' />\n/// <reference path='alm/geom/Boxer.ts' />\n\n/// <reference path='alm/util/Hash.ts' />\n/// <reference path='alm/util/Obj.ts' />\n/// <reference path='alm/util/Arr.ts' />\n/// <reference path='alm/util/Num.ts' />\n/// <reference path='alm/util/Str.ts' />\n/// <reference path='alm/util/Cmd.ts' />\n/// <reference path='alm/util/Dom.ts' />\n/// <reference path='alm/util/CssVar.ts' />\n\n/// <reference path='alm/resource/ObjectPool.ts' />\n\n/// <reference path='alm/state/Lottery.ts' />\n/// <reference path='alm/state/Switcher.ts' />\n/// <reference path='alm/state/SwitcherEvent.ts' />\n/// <reference path='alm/state/LoHi.ts' />\n/// <reference path='alm/state/LoHiEvent.ts' />\n\n/// <reference path='alm/math/EasingValue.ts' />\n/// <reference path='alm/math/SpringValue.ts' />\n/// <reference path='alm/math/SimpleAverage.ts' />\n/// <reference path='alm/math/SimpleMovingAverage.ts' />\n/// <reference path='alm/math/MaxValue.ts' />\n/// <reference path='alm/math/Circular.ts' />\n/// <reference path='alm/math/BinarySearch.ts' />\n/// <reference path='alm/math/MersenneTwister.ts' />\n\n/// <reference path='alm/time/AnimationFrameTicker.ts' />\n/// <reference path='alm/time/AnimationFrameTickerEvent.ts' />\n/// <reference path='alm/time/Timer.ts' />\n/// <reference path='alm/time/TimerEvent.ts' />\n\n/// <reference path='alm/io/FileLoader.ts' />\n/// <reference path='alm/io/FileLoaderProgressEvent.ts' />\n/// <reference path='alm/io/FileLoaderSuccessEvent.ts' />\n/// <reference path='alm/io/FileLoaderErrorEvent.ts' />\n/// <reference path='alm/io/FileQuery.ts' />\n/// <reference path='alm/io/IFileHandler.ts' />\n/// <reference path='alm/io/ImageFileHandler.ts' />\n\n/// <reference path='alm/audio/core/AudioClip.ts' />\n/// <reference path='alm/audio/AudioPlayer.ts' />\n/// <reference path='alm/audio/CrossOverLoopAudio.ts' />\n/// <reference path='alm/audio/FootstepAudio.ts' />\n\n/// <reference path='alm/view/IView.ts' />\n/// <reference path='alm/view/ViewEvent.ts' />\n/// <reference path='alm/view/View.ts' />\n/// <reference path='alm/view/ButtonBehavior.ts' />\n/// <reference path='alm/view/IButton.ts' />\n/// <reference path='alm/view/SelectionBehavior.ts' />\n/// <reference path='alm/view/ISelection.ts' />\n\n/// <reference path='alm/browser/DeviceInfo.ts' />\n/// <reference path='alm/browser/LocalStorage.ts' />\n/// <reference path='alm/browser/SessionStorage.ts' />\n/// <reference path='alm/browser/KeyWatcher.ts' />\n/// <reference path='alm/browser/KeyWatcherEvent.ts' />\n/// <reference path='alm/browser/WindowWatcher.ts' />\n/// <reference path='alm/browser/WindowWatcherEvent.ts' />\n/// <reference path=\"alm/browser/ScrollSectionTriggerEvent.ts\" />\n/// <reference path=\"alm/browser/ScrollSectionTrigger.ts\" />\n/// <reference path=\"alm/browser/ResponsiveObserver.ts\" />\n/// <reference path=\"alm/browser/ResponsiveObserverEvent.ts\" />\n\n/// <reference path='scn/Scene.ts' />\n/// <reference path='scn/SceneEvent.ts' />\n/// <reference path='scn/SceneTransferInfo.ts' />\n/// <reference path='scn/SceneState.ts' />\n/// <reference path='scn/core/Direction.ts' />\n/// <reference path='scn/core/Waypoint.ts' />\n/// <reference path='scn/core/IRootScene.ts' />\n/// <reference path='scn/core/RootScene.ts' />\n/// <reference path='scn/SceneManager.ts' />\n/// <reference path='scn/SceneManagerTransferEvent.ts' />\n/// <reference path='scn/SceneManagerRequireSceneEvent.ts' />\n\n\n/* ---------- init ---------- */\n\nnamespace alm {\n\n\t// Library version info\n\texport function getVersion():string {\n\t\treturn '0.0.1';\n\t}\n\n\t// Credit info\n\tconst style:string = 'color:#999;';\n\tconst print:Function = console.debug;\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('%c+ alumican.js', style);\n\tprint('%c+ version ' + getVersion(), style);\n\tprint('%c+ http://alumican.net', style);\n\tprint('%c+ https://github.com/alumican/alumican.js', style);\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('');\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.debug {\n\n\timport QueryString = alm.browser.QueryString;\n\n\texport enum LoggerLevel {\n\t\tVerbose = 0,\n\t\tInfo = 1,\n\t\tWarn = 2,\n\t\tError = 3,\n\t\tSilent = 4,\n\t}\n\n\n\n\n\n\texport interface ILogging {\n\n\t\tverbose(prefix:string, messages:any[]):void;\n\t\tinfo(prefix:string, messages:any[]):void;\n\t\twarn(prefix:string, messages:any[]):void;\n\t\terror(prefix:string, messages:any[]):void;\n\t}\n\n\n\n\n\n\texport class NullLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t}\n\t}\n\n\n\n\n\n\texport class ConsoleLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconsole.debug.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconsole.warn.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconsole.error.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\t}\n\n\n\n\n\n\texport class DOMLogging implements ILogging {\n\n\t\tconstructor(dom:HTMLElement, html:boolean) {\n\t\t\tthis.dom = dom;\n\t\t\tthis.html = html;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tprivate print(prefix:string, messages:any[]):void {\n\t\t\tconst line:string = prefix + messages.join(', ');\n\t\t\tif (this.html) {\n\t\t\t\tthis.dom.innerHTML = line + '<br>\\n' + this.dom.innerHTML;\n\t\t\t} else {\n\t\t\t\tthis.dom.innerText = line + '\\n' + this.dom.innerText;\n\t\t\t}\n\t\t}\n\n\t\tprivate dom:HTMLElement;\n\t\tprivate html:boolean;\n\t}\n\n\n\n\n\n\texport class ParallelLogging implements ILogging {\n\n\t\tconstructor(loggers:ILogging[]) {\n\t\t\tthis.loggers = loggers;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].verbose(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].info(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].warn(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].error(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tprivate loggers:ILogging[];\n\t}\n\n\n\n\n\n\texport class Logger {\n\n\t\tpublic static level:number = LoggerLevel.Verbose;\n\t\tpublic static logger:ILogging = new ConsoleLogging();\n\t\tprivate static namespace:string = '';\n\n\t\tpublic static setLevelByQuery(key:string):void {\n\t\t\tconst level:number = new QueryString().getInt(key, LoggerLevel.Silent);\n\t\t\tLogger.level = isNaN(level) ? LoggerLevel.Silent : level;\n\t\t}\n\n\t\tpublic static setNamespace(namespace:string):void {\n\t\t\tLogger.namespace = namespace != '' ? (namespace + '#') : '';\n\t\t}\n\n\t\tpublic static verbose(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tLogger.logger.verbose('[' + Logger.namespace + 'Verbose] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static info(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) {\n\t\t\t\tLogger.logger.info('[' + Logger.namespace + 'Info   ] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static warn(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', messages);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static error(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', messages);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', [message + ' : ' + target]);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', [message + ' : ' + target]);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static stackTrace():void {\n\t\t\tconsole.trace();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n\nfunction trace(...messages:any[]):void {\n\talm.debug.Logger.info.apply(trace.caller, arguments);\n}\n\nfunction throwWarn(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.warnIf.apply(null, arguments);\n}\n\nfunction throwError(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.errorIf.apply(null, arguments);\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Time {\n\n\t\t/**\n\t\t * 現在の時刻(ミリ秒)を取得する\n\t\t * @returns {number} UNIX時間（ミリ秒）\n\t\t */\n\t\tpublic static now():number {\n\t\t\treturn (window.performance || Date).now();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport type EasingFunction = (t:number)=>number;\n\n\texport class Easing {\n\n\t\tpublic static linear(t:number):number {\n\t\t\treturn t;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuad(t:number):number {\n\t\t\treturn (t /= 1) * t;\n\t\t}\n\n\t\tpublic static easeOutQuad(t:number):number {\n\t\t\treturn -(t /= 1) * (t - 2);\n\t\t}\n\n\t\tpublic static easeInOutQuad(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t;\n\t\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCubic(t:number):number {\n\t\t\treturn (t /= 1) * t * t;\n\t\t}\n\n\t\tpublic static easeOutCubic(t:number):number {\n\t\t\treturn (t = t - 1) * t * t + 1;\n\t\t}\n\n\t\tpublic static easeInOutCubic(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuart(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuart(t:number):number {\n\t\t\treturn -((t = t - 1) * t * t * t - 1);\n\t\t}\n\n\t\tpublic static easeInOutQuart(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t;\n\t\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuint(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuint(t:number):number {\n\t\t\treturn ((t = t - 1) * t * t * t * t + 1);\n\t\t}\n\n\t\tpublic static easeInOutQuint(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInSine(t:number):number {\n\t\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t\t}\n\n\t\tpublic static easeOutSine(t:number):number {\n\t\t\treturn Math.sin(t * (Math.PI / 2));\n\t\t}\n\n\t\tpublic static easeInOutSine(t:number):number {\n\t\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\treturn Math.pow(2, 10 * (t - 1));\n\t\t}\n\n\t\tpublic static easeOutExpo(t:number):number {\n\t\t\tif (t == 1) return 1;\n\t\t\treturn -Math.pow(2, -10 * t) + 1;\n\t\t}\n\n\t\tpublic static easeInOutExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\tif (t == 1) return 1;\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCirc(t:number):number {\n\t\t\treturn -(Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t}\n\n\t\tpublic static easeOutCirc(t:number):number {\n\t\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t\t}\n\n\t\tpublic static easeInOutCirc(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static createEaseInElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 0.5) == 2) return 1;\n\t\t\t\tif (p == 0) p = 0.3 * 1.5;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1) return -0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseOutElastic(t);\n\t\t}\n\n\t\tpublic static easeInOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutElastic(t);\n\t\t}\n\n\t\tprivate static defaultEaseInElastic:EasingFunction = Easing.createEaseInElastic();\n\t\tprivate static defaultEaseOutElastic:EasingFunction = Easing.createEaseOutElastic();\n\t\tprivate static defaultEaseInOutElastic:EasingFunction = Easing.createEaseInOutElastic();\n\n\n\n\n\n\t\tpublic static createEaseInBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * (((s *= 1.525) + 1) * t - s);\n\t\t\t\treturn 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseOutBack(t);\n\t\t}\n\n\t\tpublic static easeInOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutBack(t);\n\t\t}\n\n\t\tprivate static defaultEaseInBack:EasingFunction = Easing.createEaseInBack();\n\t\tprivate static defaultEaseOutBack:EasingFunction = Easing.createEaseOutBack();\n\t\tprivate static defaultEaseInOutBack:EasingFunction = Easing.createEaseInOutBack();\n\n\n\n\n\n\t\tpublic static easeInBounce(t:number):number {\n\t\t\treturn 1 - Easing.easeOutBounce(1 - t);\n\t\t}\n\n\t\tpublic static easeOutBounce(t:number):number {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * t * t;\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInOutBounce(t:number):number {\n\t\t\tif (t < 0.5) return Easing.easeInBounce(t * 2) * 0.5;\n\t\t\treturn Easing.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t\t}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\timport Hash = alm.util.Hash;\n\n\texport class QueryString {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(url:string = '') {\n\t\t\tthis.set(url);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(url:string = ''):void {\n\t\t\t// normalize url\n\t\t\tlet search:string = '';\n\t\t\tif (url != '') {\n\t\t\t\tconst index:number = url.indexOf('?');\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tsearch = url.substring(index);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsearch = location.search;\n\t\t\t}\n\t\t\t// parse query\n\t\t\tthis.hash = {};\n\t\t\tconst pairs:string[] = search.substring(1).split('&');\n\t\t\tlet pair:string[];\n\t\t\tfor(let i:number = 0; pairs[i]; ++i) {\n\t\t\t\tpair = pairs[i].split('=');\n\t\t\t\tthis.hash[pair[0]] = pair[1];\n\t\t\t}\n\t\t}\n\n\t\t// 'abc' -> 'abc'\n\t\tpublic getString(key:string, defaultValue:string):string {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : value;\n\t\t}\n\n\t\t// '123' -> 123\n\t\tpublic getInt(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseInt(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '1.23' -> 1.23\n\t\tpublic getFloat(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseFloat(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '0' -> false, otherwise true\n\t\tpublic getBool(key:string, defaultValue:boolean):boolean {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : (<any>value == true);\n\t\t}\n\n\t\tpublic getHash():Hash<string> {\n\t\t\treturn this.hash;\n\t\t}\n\n\t\tpublic setHash(hash:Hash<string>):void {\n\t\t\tthis.hash = hash;\n\t\t}\n\n\t\tpublic setParam(key:string, value:any):void {\n\t\t\tthis.hash[key] = value;\n\t\t}\n\n\t\tpublic removeParam(key:string):void {\n\t\t\tdelete this.hash[key];\n\t\t}\n\n\t\tpublic hasParam(key:string):boolean {\n\t\t\treturn this.hash[key] !== undefined;\n\t\t}\n\n\n\n\n\n\t\tpublic static getReplacedQueryStringUrl(url:string, key:string, value:string):string {\n\t\t\tconst regExp = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');\n\t\t\tconst separator = url.indexOf('?') !== -1 ? '&' : '?';\n\t\t\tif (url.match(regExp)) {\n\t\t\t\treturn url.replace(regExp, '$1' + key + '=' + value + '$2');\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn url + separator + key + '=' + value;\n\t\t\t}\n\t\t}\n\n\t\tpublic static replaceQueryString(key:string, value:string):void {\n\t\t\tconst url = QueryString.getReplacedQueryStringUrl(window.location.href, key, value);\n\t\t\tconst state = url.match(/^https?:\\/{2,}.*?(\\/.*)/)[1];\n\t\t\twindow.history.replaceState(null, null, state);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate hash:Hash<string>;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.debug {\n\n\timport Time = alm.util.Time;\n\n\texport class FpsMonitor {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic reset():void {\n\t\t\tthis.frameRate = 0;\n\t\t\tthis.frameCount = 0;\n\t\t\tthis.startTime = Time.now();\n\t\t\tthis.actualFrameRate = -1;\n\t\t\tthis.dummyFrameRate = -1;\n\t\t}\n\n\t\tpublic update():void {\n\t\t\t++this.frameCount;\n\t\t\tconst currentTime:number = Time.now();\n\t\t\tconst elapsedTime:number = currentTime - this.startTime;\n\t\t\tif (elapsedTime >= 1000) {\n\t\t\t\tthis.actualFrameRate = 1000 * this.frameCount / elapsedTime;\n\t\t\t\tthis.frameCount = 0;\n\t\t\t\tthis.startTime = currentTime;\n\t\t\t\tif (this.dummyFrameRate < 0) {\n\t\t\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic setDummyFrameRate(frameRate:number):void {\n\t\t\tthis.dummyFrameRate = frameRate;\n\t\t\tthis.frameRate = this.dummyFrameRate;\n\t\t}\n\n\t\tpublic clearDummyFrameRate():void {\n\t\t\tthis.dummyFrameRate = -1;\n\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t}\n\n\t\tpublic getFrameRate():number {\n\t\t\treturn this.frameRate;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate frameRate:number;\n\t\tprivate frameCount:number;\n\t\tprivate startTime:number;\n\t\tprivate actualFrameRate:number;\n\t\tprivate dummyFrameRate:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\r\n\r\nnamespace alm.event {\r\n\r\n\texport class Event<Target = object, Data = any> {\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// CONSTRUCTOR\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tconstructor(type:string, target:Target, data:Data = null) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.target = target;\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// VARIABLE\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tpublic readonly type:string;\r\n\t\tpublic readonly target:Target;\r\n\t\tpublic readonly data:Data;\r\n\t}\r\n}\r\n","/// <reference path='../../index.ts' />\n\nnamespace alm.event {\n\n\timport Logger = alm.debug.Logger;\n\n\texport class EventDispatcher implements IEventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:EventDispatcher = null) {\n\t\t\tthis.target = target || this;\n\t\t\tthis.listeners = {};\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] addEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) return;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.listeners[eventType] = listeners = [];\n\t\t\t}\n\t\t\tlisteners.push(listener);\n\t\t}\n\n\t\tpublic removeEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] removeEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) {\n\t\t\t\t\t\tlisteners.splice(i,  1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (listeners.length == 0) {\n\t\t\t\t\tdelete this.listeners[eventType];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic removeAllEventListener(eventType:string = null):void {\n\t\t\tif (eventType) {\n\t\t\t\tdelete this.listeners[eventType];\n\t\t\t} else {\n\t\t\t\tthis.listeners = {};\n\t\t\t}\n\t\t}\n\n\t\tpublic hasEventListener(eventType:string):boolean {\n\t\t\treturn this.listeners[eventType] != null;\n\t\t}\n\n\t\tpublic dispatchEvent(event:Event):void {\n\t\t\tlet listeners:EventListener[] = this.listeners[event.type];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tlisteners[i].call(this.target, event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic dispatchEventType<T = any>(eventType:string, eventTarget:object = null, data:T = null):void {\n\t\t\tthis.dispatchEvent(new Event<object, T>(eventType, eventTarget, data));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:any;\n\t\tprivate listeners:util.Hash<EventListener[]>;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport enum CommandState {\n\t\tSleeping     = 0,\n\t\tExecuting    = 1,\n\t\tInterrupting = 2,\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class CommandEvent extends Event<Command> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Command) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():CommandEvent {\n\t\t\treturn new CommandEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[CommandEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Command extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(executeFunction:Function = null, interruptFunction:Function = null, destroyFunction:Function = null) {\n\t\t\tsuper();\n\n\t\t\tthis.setExecuteFunction(executeFunction);\n\t\t\tthis.setInterruptFunction(interruptFunction);\n\t\t\tthis.setDestroyFunction(destroyFunction);\n\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.self = this;\n\t\t\tthis.parent = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic execute():void {\n\t\t\tif (this.state > CommandState.Sleeping) {\n\t\t\t\tthrow new Error('[Command.execute] + Command is already executing.');\n\t\t\t}\n\t\t\tthis.state = CommandState.Executing;\n\t\t\tthis.getExecuteFunction().call(this, this);\n\t\t}\n\n\t\tpublic interrupt():void {\n\t\t\tif (this.state == CommandState.Executing) {\n\t\t\t\tthis.state = CommandState.Interrupting;\n\t\t\t\tthis.getInterruptFunction().call(this, this);\n\t\t\t}\n\t\t}\n\n\t\tpublic destroy():void {\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.getDestroyFunction().call(this, this);\n\t\t\tthis.parent = null;\n\t\t\tthis.executeFunction = null;\n\t\t\tthis.interruptFunction = null;\n\t\t\tthis.destroyFunction = null;\n\t\t}\n\n\t\tprotected notifyComplete():void {\n\t\t\tswitch (this.state) {\n\t\t\t\tcase CommandState.Sleeping:\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Executing:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Interrupting:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getExecuteFunction():Function { return this.executeFunction || this.implExecuteFunction };\n\t\tpublic setExecuteFunction(func:Function):void { this.executeFunction = func; }\n\t\tprivate executeFunction:Function;\n\n\t\tpublic getInterruptFunction():Function { return this.interruptFunction || this.implInterruptFunction };\n\t\tpublic setInterruptFunction(func:Function):void { this.interruptFunction = func; }\n\t\tprivate interruptFunction:Function;\n\n\t\tpublic getDestroyFunction():Function { return this.destroyFunction || this.implDestroyFunction };\n\t\tpublic setDestroyFunction(func:Function):void { this.destroyFunction = func; }\n\t\tprivate destroyFunction:Function;\n\n\t\tpublic getState():CommandState { return this.state; }\n\t\tprivate state:CommandState;\n\n\t\tpublic getParent():Command { return this.parent; }\n\t\tpublic setParent(parent:Command):void { this.parent = parent; }\n\t\tprivate parent:Command;\n\n\t\tpublic getSelf():Command { return this.self; }\n\t\tprivate self:Command;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport abstract class CommandList extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper();\n\t\t\tthis.commands = [];\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tthis.commands = this.getCommands().concat(<Command[]>commands);\n\t\t\t}\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(0, ...commands);\n\t\t}\n\n\t\tprotected insertCommandAt(index:number, ...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tArray.prototype.splice.apply(this.getCommands(), (<any[]>[index, 0]).concat(commands));\n\t\t\t}\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprotected insertCommandArrayAt(index:number, commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(index, ...commands);\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn this.commands.length;\n\t\t}\n\n\t\tpublic getCommandByIndex(index:number):Command { return this.commands[index]; }\n\t\tpublic getCommands():Command[] { return this.commands; }\n\n\t\tprivate preProcess(commands:(Command|Function)[]):void {\n\t\t\tconst numCommands:number = commands.length;\n\t\t\tlet command:Command|Function;\n\t\t\tfor (let i:number = 0; i < numCommands; ++i) {\n\t\t\t\tcommand = commands[i];\n\t\t\t\tif (typeof(command) == 'function') commands[i] = command = new Func(command);\n\t\t\t\tcommand.setParent(this);\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\t\tprotected abstract implNotifyBreak():void;\n\t\tprotected abstract implNotifyReturn():void;\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate commands:Command[];\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Break extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyBreak'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Return extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Log extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...messages:any[]) {\n\t\t\tsuper();\n\t\t\tthis.messages = messages;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call(this.messages));\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.messages = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getMessages():any[] { return this.messages; }\n\t\tpublic setMessages(messages:any[]):void { this.messages = messages; }\n\t\tprivate messages:any[];\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Wait extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(time:number = 1000) {\n\t\t\tsuper();\n\t\t\tthis.time = time;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.timerId = window.setTimeout(this.completeHandler, this.time);\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearTimeout(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate completeHandler = ():void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTime():number { return this.time; }\n\t\tpublic setTime(time:number):void { this.time = time; }\n\t\tprivate time:number;\n\n\t\tprivate timerId:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Func extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(func:Function = null, args:any[] = [], eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.func = func;\n\t\t\tthis.args = args;\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t\tthis.func(...this.args);\n\t\t\t} else {\n\t\t\t\tthis.func(...this.args);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.func = null;\n\t\t\tthis.args = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t\tthis.eventType = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getFunction():Function { return this.func; }\n\t\tpublic setFunction(func:Function):void { this.func = func; }\n\t\tprivate func:Function;\n\n\t\tpublic getArguments():any[] { return this.args; }\n\t\tpublic setArguments(args:any[]):void { this.args = args; }\n\t\tprivate args:any[];\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Listen extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.eventType = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Easing = alm.math.Easing;\n\timport EasingFunction = alm.math.EasingFunction;\n\timport Time = alm.util.Time;\n\n\texport type TweenCallbackFunction = (progressTime:number, progressValue:number) => void;\n\n\texport class Tween extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:Object, to:Object, from:Object = null, duration:number = 1000, easing:EasingFunction = Easing.linear, onStart:TweenCallbackFunction = null, onUpdate:TweenCallbackFunction = null, onComplete:TweenCallbackFunction = null) {\n\t\t\tsuper();\n\t\t\tthis.tweenTarget = target;\n\t\t\tthis.to = to;\n\t\t\tthis.from = from;\n\t\t\tthis.duration = duration;\n\t\t\tthis.easing = easing;\n\t\t\tthis.onStart = onStart;\n\t\t\tthis.onUpdate = onUpdate;\n\t\t\tthis.onComplete = onComplete;\n\t\t\tthis.progressTime = 0;\n\t\t\tthis.progressValue = 0;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.internalFrom = {};\n\t\t\tlet value0:number;\n\t\t\tlet value1:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue1 = this.to[key];\n\t\t\t\tif (this.from && this.from[key] != null) {\n\t\t\t\t\tthis.internalFrom[key] = this.from[key];\n\t\t\t\t} else {\n\t\t\t\t\tthis.internalFrom[key] = this.tweenTarget[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.duration > 0) {\n\t\t\t\tthis.timerId = window.setInterval(this.intervalHandler, Tween.updateInterval);\n\t\t\t\tthis.startTime = Time.now();\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t\tthis.apply(1);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\n\t\t\tthis.tweenTarget = null;\n\t\t\tthis.to = null;\n\t\t\tthis.from = null;\n\t\t\tthis.easing = null;\n\t\t\tthis.onStart = null;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.onComplete = null;\n\t\t\tthis.internalFrom = null;\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearInterval(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate apply(timeRatio:number):void {\n\t\t\tthis.progressTime = timeRatio;\n\t\t\tthis.progressValue = this.easing(this.progressTime);\n\t\t\tlet value0:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue0 = this.internalFrom[key];\n\t\t\t\tthis.tweenTarget[key] = value0 + (this.to[key] - value0) * this.progressValue;\n\t\t\t}\n\t\t}\n\n\t\tprivate intervalHandler = ():void => {\n\t\t\tconst elapsedTime:number = Time.now() - this.startTime;\n\t\t\tif (elapsedTime < this.duration) {\n\t\t\t\tthis.apply(elapsedTime / this.duration);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(1);\n\t\t\t\tthis.cancel();\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTarget():Object { return this.tweenTarget; }\n\t\tpublic setTarget(target:Object):void { this.tweenTarget = target; }\n\t\tprivate tweenTarget:Object;\n\n\t\tpublic getDuration():number { return this.duration; }\n\t\tpublic setDuration(duration:number):void { this.duration = duration; }\n\t\tprivate duration:number;\n\n\t\tpublic getTo():Object { return this.to; }\n\t\tpublic setTo(to:Object):void { this.to = to; }\n\t\tprivate to:Object;\n\n\t\tpublic getFrom():Object { return this.from; }\n\t\tpublic setFrom(from:Object):void { this.from = from; }\n\t\tprivate from:Object;\n\n\t\tpublic getEasing():EasingFunction { return this.easing; }\n\t\tpublic setEasing(easing:EasingFunction):void { this.easing = easing; }\n\t\tprivate easing:EasingFunction;\n\n\t\tpublic getOnStart():TweenCallbackFunction { return this.onStart; }\n\t\tpublic setOnStart(func:TweenCallbackFunction):void { this.onStart = func; }\n\t\tprivate onStart:TweenCallbackFunction;\n\n\t\tpublic getOnUpdate():TweenCallbackFunction { return this.onUpdate; }\n\t\tpublic setOnUpdate(func:TweenCallbackFunction):void { this.onUpdate = func; }\n\t\tprivate onUpdate:TweenCallbackFunction;\n\n\t\tpublic getOnComplete():TweenCallbackFunction { return this.onComplete; }\n\t\tpublic setOnComplete(func:TweenCallbackFunction):void { this.onComplete = func; }\n\t\tprivate onComplete:TweenCallbackFunction;\n\n\t\tpublic getProgressTime():number { return this.progressTime; }\n\t\tprivate progressTime:number;\n\n\t\tpublic getProgressValue():number { return this.progressValue; }\n\t\tprivate progressValue:number;\n\n\t\tprivate startTime:number;\n\t\tprivate timerId:number;\n\t\tprivate internalFrom:Object;\n\n\t\tpublic getUpdateInterval():number { return Tween.updateInterval; }\n\t\tpublic setUpdateInterval(milliseconds:number):void { Tween.updateInterval = milliseconds; }\n\t\tprivate static updateInterval:number = 1000 / 60;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Serial extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.currentCommand = null;\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.insertCommandAt(this.position + 1, ...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCommand = this.getCommandByIndex(this.position);\n\t\t\tthis.currentCommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand.execute();\n\t\t}\n\n\t\tprivate completeHandler = (event:Event<Command>):void => {\n\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand = null;\n\t\t\tif (++this.position >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.position = 0;\n\t\t\tif (this.getLength() > 0) {\n\t\t\t\tthis.next();\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.destroy();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getPosition():number { return this.position; }\n\t\tprivate position:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector2 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0) {\n\t\t\tthis.set(x, y);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic copyTo(point:Vector2):void {\n\t\t\tpoint.set(this.x, this.y);\n\t\t}\n\n\t\tpublic getClone():Vector2 {\n\t\t\treturn new Vector2(this.x, this.y);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector2):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tpublic getDistance(point:Vector2):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector3 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, z:number = 0) {\n\t\t\tthis.set(x, y, z);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, z:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic copyTo(point:Vector3):void {\n\t\t\tpoint.set(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic getClone():Vector3 {\n\t\t\treturn new Vector3(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t\tthis.z /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector3):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\tconst dz:number = point.z - this.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tpublic getDistance(point:Vector3):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic z:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Rectangle {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0) {\n\t\t\tthis.set(x, y, width, height);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, width:number, height:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tpublic copyTo(rect:Rectangle):void {\n\t\t\trect.set(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getClone():Rectangle {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getTop():number {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tpublic getBottom():number {\n\t\t\treturn this.y + this.height;\n\t\t}\n\n\t\tpublic getLeft():number {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tpublic getRight():number {\n\t\t\treturn this.x + this.width;\n\t\t}\n\n\t\tpublic getTopLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getTop());\n\t\t}\n\n\t\tpublic getTopRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getTop());\n\t\t}\n\n\t\tpublic getBottomLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getBottom());\n\t\t}\n\n\t\tpublic getBottomRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getBottom());\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic width:number;\n\t\tpublic height:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport enum Align {\n\t\tTop_Left,\n\t\tTop_Center,\n\t\tTop_Right,\n\t\tMiddle_Left,\n\t\tMiddle_Center,\n\t\tMiddle_Right,\n\t\tBottom_Left,\n\t\tBottom_Center,\n\t\tBottom_Right\n\t}\n\n\texport enum ScaleMode {\n\t\tExactFit,\n\t\tShowAll,\n\t\tNoBorder,\n\t\tNoScale,\n\t}\n\n\texport class Boxer {\n\n\t\tpublic static resize(target:geom.Rectangle, bounds:geom.Rectangle, scaleMode:ScaleMode = ScaleMode.ShowAll, align:Align = Align.Middle_Center):geom.Rectangle {\n\t\t\tlet tx:number = target.x;\n\t\t\tlet ty:number = target.y;\n\t\t\tlet tw:number = target.width;\n\t\t\tlet th:number = target.height;\n\n\t\t\tconst bx:number = bounds.x;\n\t\t\tconst by:number = bounds.y;\n\t\t\tconst bw:number = bounds.width;\n\t\t\tconst bh:number = bounds.height;\n\n\t\t\tswitch (scaleMode) {\n\t\t\t\tcase ScaleMode.ShowAll:\n\t\t\t\tcase ScaleMode.NoBorder:\n\t\t\t\t\tconst ratioW:number = bw / tw;\n\t\t\t\t\tconst ratioH:number = bh / th;\n\t\t\t\t\tconst ratio:number = scaleMode == ScaleMode.ShowAll ? (ratioW < ratioH ? ratioW : ratioH) : (ratioW > ratioH ? ratioW : ratioH);\n\t\t\t\t\ttw *= ratio;\n\t\t\t\t\tth *= ratio;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ScaleMode.ExactFit:\n\t\t\t\t\treturn new geom.Rectangle(bx, by, bw, bh);\n\t\t\t}\n\n\t\t\ttx = bx + ((align == Align.Top_Left || align == Align.Middle_Left || align == Align.Bottom_Left) ? 0 :\n\t\t\t\t(align == Align.Top_Right || align == Align.Middle_Right || align == Align.Bottom_Right) ? (bw - tw) : (bw - tw) / 2);\n\t\t\tty = by + ((align == Align.Top_Left || align == Align.Top_Center || align == Align.Top_Right) ? 0 :\n\t\t\t\t(align == Align.Bottom_Left || align == Align.Bottom_Center || align == Align.Bottom_Right) ? (bh - th) : (bh - th) / 2);\n\n\t\t\treturn new geom.Rectangle(tx, ty, tw, th);\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Obj {\n\n\t\tpublic static each(target:any, func:(key:string, value:any) => void):void {\n\t\t\tif (target == null) return;\n\t\t\tObject.keys(target).forEach((key:string):void => {\n\t\t\t\tfunc(key, target[key]);\n\t\t\t});\n\t\t}\n\n\t\tpublic static get(target:any, key:string, defaultValue:any):any {\n\t\t\tconst value:any = target[key];\n\t\t\treturn typeof value !== 'undefined' ? value : defaultValue;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Arr {\n\n\t\t/**\n\t\t * 等差数列を生成する\n\t\t * @param {number} count 要素数\n\t\t * @param {number} init 初期値\n\t\t * @param {number} step 等差\n\t\t * @returns {number[]} 出力配列\n\t\t */\n\t\tpublic static sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\t\tconst result:number[] = new Array(count);\n\t\t\tlet v:number = init;\n\t\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\t\tresult[i] = v;\n\t\t\t\tv += step;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * 重複を削除したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static unique<T>(list:T[]):T[] {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) === i;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * 重複のみを抽出したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\t\tif (unique) {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2つの入力配列に対して総当たり戦をおこなう\n\t\t * @param {T[]} list1 入力配列1\n\t\t * @param {T[]} list2 入力配列2\n\t\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t\t * @param callback.count コールバックの呼ばれた回数\n\t\t * @param callback.index1 入力配列1の現在のインデックス\n\t\t * @param callback.index2 入力配列2の現在のインデックス\n\t\t * @param callback.element1 入力配列1の現在の要素\n\t\t * @param callback.element2 入力配列2の現在の要素\n\t\t */\n\t\tpublic static roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\t\tlet i:number, j:number, p:number = 1;\n\t\t\tconst m:number = list1.length;\n\t\t\tconst n:number = list2.length;\n\t\t\tfor (i = 0; i < m; ++i) {\n\t\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * リスト内の要素を入れ替える\n\t\t * @param list 入出力配列\n\t\t * @param index1 インデックス1\n\t\t * @param index2 インデックス2\n\t\t */\n\t\tpublic static swap<T>(list:T[], index1:number, index2:number):void {\n\t\t\tconst tmp = list[index1];\n\t\t\tlist[index1] = list[index2];\n\t\t\tlist[index2] = tmp;\n\t\t}\n\n\t\t/**\n\t\t * リストをシャッフルする\n\t\t * by Fisher–Yatesアルゴリズム\n\t\t * @param list 入出力配列\n\t\t */\n\t\tpublic static shuffle<T>(list:T[]):void {\n\t\t\tfor(let i = list.length - 1; i > 0; --i) {\n\t\t\t\tArr.swap(list, i, Math.floor(Math.random() * (i + 1)));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * リストを数値としてソートする\n\t\t * @param list 入出力配列\n\t\t * @param asc trueで昇順, falseで降順\n\t\t */\n\t\tpublic static sort(list:number[], asc:boolean = true):void {\n\t\t\tlist.sort(asc ? function(a, b) { return a - b; } : function(a, b) { return b - a; });\n\t\t}\n\n\t\t/**\n\t\t * リストから1要素を選択して返す、元の配列は変更しない\n\t\t * @param list 配列\n\t\t * @returns {T} 選択された要素\n\t\t */\n\t\tpublic static choose<T>(list:T[]):T {\n\t\t\treturn list[Math.floor(Math.random() * list.length)];\n\t\t}\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\timport EasingFunction = alm.math.EasingFunction;\n\n\texport class Num {\n\n\t\t/**\n\t\t * 値を特定の範囲から範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {boolean} clamp trueの場合は入力値を[srcA, srcB]の範囲内に丸める\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static map(value:number, srcA:number, srcB:number, dstA:number, dstB:number, clamp:boolean = true):number {\n\t\t\tif (srcA === srcB) return dstA;\n\t\t\tif (clamp) {\n\t\t\t\tif (srcA < srcB) {\n\t\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\t} else {\n\t\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (value - srcA) * (dstB - dstA) / (srcB - srcA) + dstA;\n\t\t}\n\n\t\t/**\n\t\t * 値を特定の範囲からイージング関数を経由して特定の範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {EasingFunction} easing イージング関関数\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static ease(value:number, srcA:number, srcB:number, dstA:number, dstB:number, easing:EasingFunction):number {\n\t\t\tif (srcA === srcB) return dstA;\n\t\t\tif (srcA < srcB) {\n\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\treturn easing((value - srcA) / (srcB - srcA)) * (dstB - dstA) + dstA;\n\t\t\t} else {\n\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\treturn easing((value - srcB) / (srcA - srcB)) * (dstB - dstA) + dstA;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clamp(value:number, min:number, max:number):number {\n\t\t\treturn value < min ? min : (value > max ? max : value);\n\t\t}\n\n\t\t/**\n\t\t * 符号を保ったまま、値の絶対値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} minAbs 最小値\n\t\t * @param {number} maxAbs 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clampAbs(value:number, minAbs:number, maxAbs:number):number {\n\t\t\tif (value > 0) {\n\t\t\t\treturn value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value);\n\t\t\t} else {\n\t\t\t\tvalue = Math.abs(value);\n\t\t\t\treturn -(value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2点間を線形補間する\n\t\t * @param {number} t 補間値\n\t\t * @param {number} a 開始値\n\t\t * @param {number} b 終了値\n\t\t * @param {boolean} clamp trueの場合は補間値を[a, b]の範囲内に丸める\n\t\t * @returns {number} 出力値 (t=0のときa, t=1のときb)\n\t\t */\n\t\tpublic static lerp(t:number, a:number, b:number, clamp:boolean = true):number {\n\t\t\tif (clamp) {\n\t\t\t\tif (t < 0) t = 0;\n\t\t\t\telse if (t > 1) t = 1;\n\t\t\t}\n\t\t\treturn a * (1 - t) + b * t;\n\t\t}\n\n\t\t/**\n\t\t * 乱数（小数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static random(min:number = 0, max:number = 1):number {\n\t\t\treturn min + (max - min) * Math.random();\n\t\t}\n\n\t\t/**\n\t\t * 乱数（整数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static randomInt(min:number = 0, max:number = 1):number {\n\t\t\treturn Math.floor(Num.random(min, max + 1));\n\t\t}\n\n\t\t/**\n\t\t * 正負方向の同じ範囲で乱数を取得する\n\t\t * @param {number} min 最小値（正の数）\n\t\t * @param {number} max 最大値（正の数）\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static randomAbs(min:number = 0, max:number = 1):number {\n\t\t\treturn Num.random(min, max) * Num.randomSign();\n\t\t}\n\n\t\t/**\n\t\t * +1もしくは-1を返す\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static randomSign():number {\n\t\t\treturn Math.random() < 0.5 ? 1 : -1;\n\t\t}\n\n\t\t/**\n\t\t * 2点間の距離を取得する\n\t\t * @param {number} x1 点1のx座標\n\t\t * @param {number} y1 点1のy座標\n\t\t * @param {number} x2 点2のx座標\n\t\t * @param {number} y2 点2のy座標\n\t\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t\t * @returns {number} 距離\n\t\t */\n\t\tpublic static dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\t\tconst dx:number = x2 - x1;\n\t\t\tconst dy:number = y2 - y1;\n\t\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\n\t\t/**\n\t\t * 値をラジアン法から弧度法に変換する\n\t\t * @param {number} radian ラジアン法\n\t\t * @returns {number} 弧度法\n\t\t */\n\t\tpublic static radToDeg(radian:number):number {\n\t\t\treturn radian * Num.RAD2DEG;\n\t\t}\n\n\t\t/**\n\t\t * 値を弧度法からラジアン法に変換する\n\t\t * @param {number} radian 弧度法\n\t\t * @returns {number} ラジアン法\n\t\t */\n\t\tpublic static degToRad(degree:number):number {\n\t\t\treturn degree * Num.DEG2RAD;\n\t\t}\n\n\t\t/**\n\t\t * ある角度からある角度への回転角度を取得する\n\t\t * @param {number} from 元の角度\n\t\t * @param {number} to 目標の角度\n\t\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t\t * @returns {number} 回転角度\n\t\t */\n\t\tpublic static turn(from:number, to:number, radian:boolean = true):number {\n\t\t\treturn radian ? ((to - from + Num.PI3) % Num.PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONST\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static readonly PI2:number = Math.PI * 2;\n\t\tpublic static readonly PI3:number = Math.PI * 3;\n\t\tpublic static readonly PI4:number = Math.PI * 4;\n\t\tpublic static readonly PI5:number = Math.PI * 5;\n\t\tpublic static readonly PI6:number = Math.PI * 6;\n\t\tpublic static readonly PI_2:number = Math.PI / 2;\n\t\tpublic static readonly PI_3:number = Math.PI / 3;\n\t\tpublic static readonly PI_4:number = Math.PI / 4;\n\t\tpublic static readonly PI_6:number = Math.PI / 6;\n\n\t\tprivate static RAD2DEG:number = 180 / Math.PI;\n\t\tprivate static DEG2RAD:number = Math.PI / 180;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Str {\n\n\t\t/**\n\t\t * 時間を h:mm:ss の形式で取得する\n\t\t * @param {number} hours 時\n\t\t * @param {number} minutes 分\n\t\t * @param {number} seconds 秒\n\t\t * @returns {string} h:mm:ss 形式の文字列\n\t\t */\n\t\tpublic static toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\t\tseconds += minutes * 60 + hours * 3600;\n\t\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\t\tlet s:string = ('0' + Math.floor(seconds % 60)).substr(-2, 2);\n\t\t\tif (h != '0') {\n\t\t\t\treturn h + ':' + ('0' + m).substr(-2, 2) + ':' + s;\n\t\t\t} else {\n\t\t\t\treturn m + ':' + s;\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Cmd {\n\n\t\tpublic static stop(command:cmd.Command):any {\n\t\t\tif (command) command.interrupt();\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic static sequence(execute:boolean, ...commands:(cmd.Command|Function)[]):cmd.Serial {\n\t\t\tconst c:cmd.Serial = new cmd.Serial();\n\t\t\tc.addCommand(...commands);\n\t\t\tif (execute) c.execute();\n\t\t\treturn c;\n\t\t}\n\n\t\tpublic static single(execute:boolean, command:cmd.Command):cmd.Command {\n\t\t\tif (execute && command) command.execute();\n\t\t\treturn command;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\timport Easing = alm.math.Easing;\n\timport EasingFunction = alm.math.EasingFunction;\n\n\texport class Dom {\n\n\t\tpublic static instantiate(templateId:string, removeId:boolean = true):HTMLElement {\n\t\t\tconst element = <HTMLElement>document.getElementById(templateId).cloneNode(true);\n\t\t\tif (removeId) {\n\t\t\t\telement.removeAttribute('id');\n\t\t\t}\n\t\t\treturn element;\n\t\t}\n\n\n\n\n\n\t\tpublic static addPointerDownListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.addEventListener('pointerdown', listener);\n\t\t}\n\n\t\tpublic static addPointerMoveListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.addEventListener('pointermove', listener);\n\t\t}\n\n\t\tpublic static addPointerUpListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.addEventListener('pointerup', listener);\n\t\t}\n\n\t\tpublic static addPointerEnterListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.addEventListener('pointerenter', listener);\n\t\t}\n\n\t\tpublic static addPointerLeaveListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.addEventListener('pointerleave', listener);\n\t\t}\n\n\t\tpublic static addPointerOverListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.addEventListener('pointerover', listener);\n\t\t}\n\n\t\tpublic static addPointerOutListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.addEventListener('pointerout', listener);\n\t\t}\n\n\t\tpublic static removePointerDownListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.removeEventListener('pointerdown', listener);\n\t\t}\n\n\t\tpublic static removePointerMoveListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.removeEventListener('pointermove', listener);\n\t\t}\n\n\t\tpublic static removePointerUpListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.removeEventListener('pointerup', listener);\n\t\t}\n\n\t\tpublic static removePointerEnterListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.removeEventListener('pointerenter', listener);\n\t\t}\n\n\t\tpublic static removePointerLeaveListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.removeEventListener('pointerleave', listener);\n\t\t}\n\n\t\tpublic static removePointerOverListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.removeEventListener('pointerover', listener);\n\t\t}\n\n\t\tpublic static removePointerOutListener(target:HTMLElement | Window, listener:(event:PointerEvent) => void):void {\n\t\t\ttarget.removeEventListener('pointerout', listener);\n\t\t}\n\n\n\n\n\n\t\tpublic static addRootClass(value:string):void {\n\t\t\tif (Dom.root === null) {\n\t\t\t\tDom.root = document.documentElement;\n\t\t\t}\n\t\t\tDom.root.classList.add(value);\n\t\t}\n\n\t\tpublic static removeRootClass(value:string):void {\n\t\t\tif (Dom.root === null) {\n\t\t\t\tDom.root = document.documentElement;\n\t\t\t}\n\t\t\tDom.root.classList.remove(value);\n\t\t}\n\n\t\tpublic static addRootAttribute(key:string, value:string):void {\n\t\t\tif (Dom.root === null) {\n\t\t\t\tDom.root = document.documentElement;\n\t\t\t}\n\t\t\tDom.root.setAttribute(key, value);\n\t\t}\n\n\t\tpublic static removeRootAttribute(key:string, value:string):void {\n\t\t\tif (Dom.root === null) {\n\t\t\t\tDom.root = document.documentElement;\n\t\t\t}\n\t\t\tDom.root.removeAttribute(key);\n\t\t}\n\n\n\n\n\n\t\tpublic static getRootCss(property:string):string {\n\t\t\tif (Dom.root === null) {\n\t\t\t\tDom.root = document.documentElement;\n\t\t\t}\n\t\t\treturn Dom.root.style.getPropertyValue(property);\n\t\t}\n\n\t\tpublic static setRootCss(property:string, value:string):void {\n\t\t\tif (Dom.root === null) {\n\t\t\t\tDom.root = document.documentElement;\n\t\t\t}\n\t\t\tDom.root.style.setProperty(property, value);\n\t\t}\n\n\n\n\n\n\t\tpublic static scrollTo(scrollTop:number, useTransition:boolean = true):void {\n\t\t\tDom.scrollTween = Cmd.stop(Dom.scrollTween);\n\t\t\tif (useTransition) {\n\t\t\t\tDom.scrollTween = new cmd.Tween(Dom, {scrollPosition:scrollTop}, null, 1000, Easing.easeOutQuart, null, ():void => {\n\t\t\t\t\tDom.applyScrollPosition();\n\t\t\t\t});\n\t\t\t\tDom.scrollTween.execute();\n\t\t\t} else {\n\t\t\t\tDom.scrollPosition = scrollTop;\n\t\t\t\tDom.applyScrollPosition();\n\t\t\t}\n\t\t}\n\n\t\tprivate static applyScrollPosition():void {\n\t\t\twindow.scroll(0, Dom.scrollPosition);\n\t\t}\n\n\n\n\n\n\t\tpublic static setupSmoothAnchorLink():void {\n\t\t\tconst tags = document.getElementsByTagName('a');\n\t\t\tconst tagCount = tags.length;\n\t\t\tfor (let i = 0; i < tagCount; ++i) {\n\t\t\t\tDom.setAnchorLinkAction(tags.item(i));\n\t\t\t}\n\t\t}\n\n\t\tprivate static setAnchorLinkAction(tag:HTMLElement):void {\n\t\t\tconst href = tag.getAttribute('href');\n\t\t\tif ((href.indexOf('#')) == 0 && !tag.hasAttribute('data-smooth-anchor-target')) {\n\t\t\t\ttag.setAttribute('data-smooth-anchor-target', href.slice(1));\n\t\t\t\ttag.setAttribute('href', 'javascript:void(0)');\n\t\t\t\ttag.addEventListener('click', Dom.anchorLinkClickHandler);\n\t\t\t}\n\t\t}\n\n\t\tprivate static anchorLinkClickHandler = (event:MouseEvent):void => {\n\t\t\tconst tag = <HTMLElement>event.currentTarget;\n\n\t\t\tconst targetId = tag.getAttribute('data-smooth-anchor-target');\n\t\t\tconst target = document.getElementById(targetId);\n\t\t\tlet targetScrollPosition = window.pageYOffset + target.getBoundingClientRect().top;\n\n\t\t\tif (tag.hasAttribute('data-smooth-anchor-offset')) {\n\t\t\t\ttargetScrollPosition += parseFloat(tag.getAttribute('data-smooth-anchor-offset'));\n\t\t\t}\n\n\t\t\tDom.scrollTo(targetScrollPosition);\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static root:HTMLElement = null;\n\t\tprivate static scrollTween:cmd.Tween = null;\n\t\tprivate static scrollPosition:number;\n\n\n\n\n\n\t\tprivate constructor() {\n\t\t}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\timport Dom = alm.util.Dom;\n\timport Cmd = alm.util.Cmd;\n\timport EasingFunction = alm.math.EasingFunction;\n\timport Easing = alm.math.Easing;\n\n\texport class CssVar {\n\n\t\tpublic static readonly numberPattern:RegExp = new RegExp(/([+-]?\\d*\\.?\\d*)(.*)/);\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(property:string, defaultValue:number = null, suffix:string = null) {\n\t\t\tthis.reset(property, defaultValue, suffix);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic reset(property:string, value:number = null, suffix:string = null):void {\n\t\t\tthis.property = property;\n\t\t\tthis.value = value;\n\t\t\tthis.suffix = suffix;\n\n\t\t\tthis.cancelAnimation();\n\n\t\t\tif ((this.value === null) || (this.suffix === null)) {\n\t\t\t\tconst result = CssVar.numberPattern.exec(Dom.getRootCss(this.property));\n\t\t\t\tlet isNeedApply = false;\n\n\t\t\t\tif (this.value === null) {\n\t\t\t\t\tthis.value = parseFloat(result[1]);\n\t\t\t\t\tif (isNaN(this.value)) {\n\t\t\t\t\t\tthis.value = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tisNeedApply = true;\n\t\t\t\t}\n\n\t\t\t\tif (this.value === null) {\n\t\t\t\t\tthis.suffix = result[2] !== '' ? result[2] : '';\n\t\t\t\t} else {\n\t\t\t\t\tisNeedApply = true;\n\t\t\t\t}\n\n\t\t\t\tif (isNeedApply) {\n\t\t\t\t\tthis.apply();\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis.apply();\n\t\t\t}\n\t\t}\n\n\t\tpublic getProperty():string {\n\t\t\treturn this.property;\n\t\t}\n\n\t\tpublic setProperty(property:string):void {\n\t\t\tthis.cancelAnimation();\n\t\t\tif (this.property !== property) {\n\t\t\t\tthis.property = property;\n\t\t\t\tthis.apply();\n\t\t\t}\n\t\t}\n\n\t\tpublic getValue():number {\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic setValue(value:number):void {\n\t\t\tthis.cancelAnimation();\n\t\t\tif (this.value !== value) {\n\t\t\t\tthis.value = value;\n\t\t\t\tthis.apply();\n\t\t\t}\n\t\t}\n\n\t\tpublic getSuffix():string {\n\t\t\treturn this.suffix;\n\t\t}\n\n\t\tpublic setSuffix(suffix:string):void {\n\t\t\tthis.cancelAnimation();\n\t\t\tif (this.suffix !== suffix) {\n\t\t\t\tthis.suffix = suffix;\n\t\t\t\tthis.apply();\n\t\t\t}\n\t\t}\n\n\t\tpublic animate(to:number, from:number, duration:number = 1000, easing:EasingFunction = Easing.linear, execute:boolean = true):cmd.Tween {\n\t\t\tthis.cancelAnimation();\n\t\t\tthis.tween = new cmd.Tween(this, { value: to }, from !== null ? { value: from } : null, duration, easing, null, ():void => {\n\t\t\t\tthis.apply();\n\t\t\t}, ():void => {\n\t\t\t\tthis.tween = null;\n\t\t\t});\n\t\t\tif (execute) {\n\t\t\t\tthis.tween.execute();\n\t\t\t}\n\t\t\treturn this.tween;\n\t\t}\n\n\t\tpublic cancelAnimation():void {\n\t\t\tif (this.tween) {\n\t\t\t\tthis.tween = Cmd.stop(this.tween);\n\t\t\t}\n\t\t}\n\n\t\tpublic animateTo(to:number, duration:number = 1000, easing:EasingFunction = Easing.linear, execute:boolean = true):cmd.Tween {\n\t\t\treturn this.animate(to, null, duration, easing, execute);\n\t\t}\n\n\t\tpublic apply():void {\n\t\t\tDom.setRootCss(this.property, this.value + this.suffix);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// MEMBER\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate property:string;\n\t\tprivate value:number;\n\t\tprivate suffix:string;\n\t\tprivate tween:cmd.Tween;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.resource {\n\n\texport class ObjectPool<T> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * ObjectPool class.\n\t\t * @class\n\t\t * @param {function} onRequireItem This callback function is called when new item is required.\n\t\t * @param {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @param {number} initCount Init item count.\n\t\t * @param {number} growthCount Growth item count.\n\t\t *\n\t\t * @property {number} initCount Init item count.\n\t\t * @property {number} growthCount Growth item count.\n\t\t * @property {function} onRequireItem This callback function is called when new item is required.\n\t\t * @property {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @property {Array} items Array of items.\n\t\t * @property {number} index Current index of items.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tconstructor(onRequireItem:() => T, onDestroyItem:(item:T) => void, initCount:number = 100, growthCount:number = 50) {\n\t\t\tthis.onRequireItem = onRequireItem;\n\t\t\tthis.onDestroyItem = onDestroyItem;\n\t\t\tthis.growthCount = growthCount;\n\t\t\tthis.items = new Array(initCount);\n\t\t\tfor (let i = 0; i < initCount; ++i) {\n\t\t\t\tthis.items[i] = this.onRequireItem();\n\t\t\t}\n\t\t\tthis.index = initCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * Get item from object pool.\n\t\t * @return {T} Item\n\t\t */\n\t\tpublic getItem():T {\n\t\t\tif (this.index > 0) {\n\t\t\t\treturn this.items[--this.index];\n\t\t\t}\n\t\t\tfor (let i = 0; i < this.growthCount; ++i) {\n\t\t\t\tthis.items.unshift(this.onRequireItem());\n\t\t\t}\n\t\t\tthis.index = this.growthCount;\n\t\t\treturn this.getItem();\n\t\t}\n\n\t\t/**\n\t\t * Return item to object pool.\n\t\t * @param {T} Item.\n\t\t * @return void\n\t\t */\n\t\tpublic returnItem(item:T):void {\n\t\t\tthis.items[this.index++] = item;\n\t\t}\n\n\t\t/**\n\t\t * Optimize object pool size.\n\t\t * @return void\n\t\t */\n\t\tpublic reduce():void {\n\t\t\tconst n = this.index;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items.shift());\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t}\n\n\t\t/**\n\t\t * Destroy object pool.\n\t\t * @return void\n\t\t */\n\t\tpublic destroy():void {\n\t\t\tconst n = this.items.length;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items[i]);\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t\tthis.items = null;\n\t\t\tthis.onRequireItem = null;\n\t\t\tthis.onDestroyItem = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate items:T[];\n\t\tprivate index:number;\n\t\tprivate growthCount:number;\n\n\t\tpublic onRequireItem:() => T;\n\t\tpublic onDestroyItem:(item:T) => void;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class Lottery<T = any> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(values:T[] = null) {\n\t\t\tif (values) {\n\t\t\t\tthis.set(values);\n\t\t\t} else {\n\t\t\t\tthis.initValues = this.restValues = null;\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = true;\n\t\t\t}\n\t\t\tthis.onCheck = null;\n\t\t\tthis.isAutoResetEnabled = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(values:T[]):void {\n\t\t\tthis.initValues = values.concat();\n\t\t\tthis.reset();\n\t\t}\n\n\t\tpublic get():T {\n\t\t\tif (this.isEmpty && this.isAutoResetEnabled) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\tconst index:number = Math.floor(Math.random() * this.restCount);\n\t\t\tconst value:T = this.restValues[index];\n\t\t\tlet result:boolean = true;\n\t\t\tif (this.onCheck) result = this.onCheck(value);\n\t\t\tif (result) {\n\t\t\t\tthis.restValues.splice(index, 1);\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tpublic add(value:T, reset:boolean = false):void {\n\t\t\tthis.initValues.push(value);\n\t\t\tthis.restValues.push(value);\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\tif (reset) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.restValues = this.initValues.concat();\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t}\n\n\t\tpublic getRestCount():number {\n\t\t\treturn this.restCount;\n\t\t}\n\n\t\tpublic getIsEmply():boolean {\n\t\t\treturn this.isEmpty;\n\t\t}\n\n\t\tpublic getIsAutoResetEnabled():boolean {\n\t\t\treturn this.isAutoResetEnabled;\n\t\t}\n\n\t\tpublic setIsAutoResetEnabled(enabled:boolean):void {\n\t\t\tthis.isAutoResetEnabled = enabled;\n\t\t}\n\n\t\tpublic static createIndices(count:number):Lottery<number> {\n\t\t\tconst values:number[] = new Array(count);\n\t\t\tfor (let i:number = 0; i < count; ++i) values[i] = i;\n\t\t\treturn new Lottery<number>(values);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic onCheck:(value:T) => boolean;\n\n\t\tprivate isAutoResetEnabled:boolean;\n\t\tprivate isEmpty:boolean;\n\t\tprivate restCount:number;\n\t\tprivate restValues:T[];\n\t\tprivate initValues:T[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\timport Hash = alm.util.Hash;\n\n\texport class Switcher<T = string> extends alm.event.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.isLoopEnabled = true;\n\n\t\t\tthis.itemCount = 0;\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.onChange = null;\n\t\t\tthis.onPrev = null;\n\t\t\tthis.onNext = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic setupById(ids:T[]):void {\n\t\t\tthis.itemCount = ids.length;\n\t\t\tthis.itemIds = ids;\n\n\t\t\tthis.itemIndexById = {};\n\t\t\tfor (let i:number = 0; i < this.itemCount; ++i) {\n\t\t\t\tthis.itemIndexById[this.itemIds[i] as unknown as string] = i;\n\t\t\t}\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tpublic setupByCount(itemCount:number):void {\n\t\t\tthis.itemCount = itemCount;\n\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tprivate setup():void {\n\t\t\tthis.currentItemIndex = -1;\n\t\t\tthis.currentItemId = null;\n\n\t\t\tthis.oldItemIndex = -1;\n\t\t\tthis.oldItemId = null;\n\t\t}\n\n\t\tpublic gotoByIndex(itemIndex:number, useTransition:boolean = true):boolean {\n\t\t\tif (itemIndex < 0 || itemIndex >= this.itemCount) itemIndex = -1;\n\t\t\tif (itemIndex == this.currentItemIndex) return false;\n\n\t\t\tthis.oldItemIndex = this.currentItemIndex;\n\t\t\tthis.currentItemIndex = itemIndex;\n\n\t\t\tif (this.itemIds) {\n\t\t\t\tthis.oldItemId = this.oldItemIndex != -1 ? this.itemIds[this.oldItemIndex] : null;\n\t\t\t\tthis.currentItemId = this.currentItemIndex != -1 ? this.itemIds[this.currentItemIndex] : null;\n\t\t\t}\n\n\t\t\tthis.dispatchPagerEvent(SwitcherEvent.CHANGE, this.onChange, useTransition);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic gotoById(itemId:string, useTransition:boolean = true):boolean {\n\t\t\tconst itemIndex:number = this.itemIndexById.hasOwnProperty(itemId) ? this.itemIndexById[itemId] : -1;\n\t\t\treturn this.gotoByIndex(itemIndex, useTransition);\n\t\t}\n\n\t\tpublic prev(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.getPrevItemIndex();\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.PREV, this.onPrev, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic next(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.getNextItemIndex();\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.NEXT, this.onNext, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic getPrevItemIndex():number {\n\t\t\tlet itemIndex = this.currentItemIndex - 1;\n\t\t\tif (this.isLoopEnabled && itemIndex < 0) itemIndex = this.itemCount - 1;\n\t\t\treturn itemIndex;\n\t\t}\n\n\t\tpublic getPrevItemId():T {\n\t\t\treturn this.itemIds[this.getPrevItemIndex()];\n\t\t}\n\n\t\tpublic getNextItemIndex():number {\n\t\t\tlet itemIndex = this.currentItemIndex + 1;\n\t\t\tif (this.isLoopEnabled && itemIndex >= this.itemCount) itemIndex = 0;\n\t\t\treturn itemIndex;\n\t\t}\n\n\t\tpublic getNextItemId():T {\n\t\t\treturn this.itemIds[this.getNextItemIndex()];\n\t\t}\n\n\t\tprivate dispatchPagerEvent(eventType:string, callback:(event:SwitcherEvent<T>) => void, useTransition:boolean):void {\n\t\t\tconst event:SwitcherEvent<T> = new SwitcherEvent<T>(eventType, this, this.currentItemIndex, this.oldItemIndex, this.currentItemId, this.oldItemId, useTransition);\n\t\t\tif (callback) {\n\t\t\t\tcallback(event);\n\t\t\t}\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsLoopEnabled():boolean { return this.isLoopEnabled; }\n\t\tpublic setIsLoopEnabled(value:boolean):void { this.isLoopEnabled = value; }\n\t\tprivate isLoopEnabled:boolean;\n\n\t\tpublic getItemCount():number { return this.itemCount; }\n\t\tprivate itemCount:number;\n\n\t\tpublic getCurrentItemIndex():number { return this.currentItemIndex; }\n\t\tprivate currentItemIndex:number;\n\n\t\tpublic getOldItemIndex():number { return this.oldItemIndex; }\n\t\tprivate oldItemIndex:number;\n\n\t\tpublic getCurrentItemId():T { return this.currentItemId; }\n\t\tprivate currentItemId:T;\n\n\t\tpublic getOldItemId():T { return this.oldItemId; }\n\t\tprivate oldItemId:T;\n\n\t\tpublic getItemIds():T[] { return this.itemIds; }\n\t\tprivate itemIds:T[];\n\n\t\tprivate itemIndexById:Hash<number>;\n\n\t\tpublic onChange:(event:SwitcherEvent<T>) => void;\n\t\tpublic onPrev:(event:SwitcherEvent<T>) => void;\n\t\tpublic onNext:(event:SwitcherEvent<T>) => void;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class SwitcherEvent<T = string> extends alm.event.Event<Switcher<T>> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static PREV:string = 'prev';\n\t\tpublic static NEXT:string = 'next';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Switcher<T>, currentItemIndex:number, oldItemIndex:number, currentItemId:T, oldItemId:T, useTransition:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.currentItemIndex = currentItemIndex;\n\t\t\tthis.oldItemIndex = oldItemIndex;\n\t\t\tthis.currentItemId = currentItemId;\n\t\t\tthis.oldItemId = oldItemId;\n\t\t\tthis.useTransition = useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SwitcherEvent<T> {\n\t\t\treturn new SwitcherEvent<T>(this.type, this.target, this.currentItemIndex, this.oldItemIndex, this.currentItemId, this.oldItemId, this.useTransition);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SwitcherEvent] type = ' + this.type + ', ' + this.oldItemIndex + ' -> ' + this.currentItemIndex + ', transition = ' + this.useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentItemIndex:number;\n\t\tpublic readonly oldItemIndex:number;\n\t\tpublic readonly currentItemId:T;\n\t\tpublic readonly oldItemId:T;\n\t\tpublic readonly useTransition:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class LoHi extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(lowThreshold:number, highThreshold:number, initValue:number = 0) {\n\t\t\tsuper();\n\n\t\t\tthis.lowThreshold = lowThreshold;\n\t\t\tthis.highThreshold = highThreshold;\n\t\t\tthis.isHigh = false;\n\t\t\tthis._set(initValue, false);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * 新しい入力値を設定する\n\t\t * @param {number} value 入力値\n\t\t * @returns {boolean} 結果が更新されればtrue\n\t\t */\n\t\tpublic set(value:number):boolean {\n\t\t\treturn this._set(value, true);\n\t\t}\n\n\t\tpublic getIsHigh():boolean {\n\t\t\treturn this.isHigh;\n\t\t}\n\n\t\tpublic getValue():number {\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic getLowThreshold():number {\n\t\t\treturn this.lowThreshold;\n\t\t}\n\n\t\tpublic getHighThreshold():number {\n\t\t\treturn this.highThreshold;\n\t\t}\n\n\t\tpublic setLowThreshold(threshold:number):void {\n\t\t\tthis.lowThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tpublic setHighThreshold(threshold:number):void {\n\t\t\tthis.highThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tprivate _set(value:number, dispatchEvent:boolean):boolean {\n\t\t\tthis.value = value;\n\t\t\tif (this.isHigh && this.value < this.lowThreshold) {\n\t\t\t\tthis.isHigh = false;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.LOW, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (!this.isHigh && this.value > this.highThreshold) {\n\t\t\t\tthis.isHigh = true;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.HIGH, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate lowThreshold:number;\n\t\tprivate highThreshold:number;\n\t\tprivate value:number;\n\t\tprivate isHigh:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class LoHiEvent extends alm.event.Event<LoHi> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static LOW:string = 'low';\n\t\tpublic static HIGH:string = 'high';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:LoHi, isHigh:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.isHigh = isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():LoHiEvent {\n\t\t\treturn new LoHiEvent(this.type, this.target, this.isHigh);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[LoHiEvent] type = ' + this.type + ', isHigh = ' + this.isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly isHigh:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class EasingValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, easing:number = 0.1, tolerance:number = 0) {\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.easing = easing;\n\t\t\tthis.tolerance = tolerance;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tconst d:number = this.target - this.value;\n\t\t\t\tif (this.tolerance > 0 && Math.abs(d) <= this.tolerance) {\n\t\t\t\t\tthis.value = this.target;\n\t\t\t\t} else {\n\t\t\t\t\tthis.value += d * this.easing;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():EasingValue {\n\t\t\tconst v:EasingValue = new EasingValue(this.value, this.easing, this.tolerance);\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic easing:number;\n\t\tpublic tolerance:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SpringValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, spring:number = 0.1, friction:number = 0.9) {\n\t\t\tthis.acceleration = 0;\n\t\t\tthis.velocity = 0;\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.spring = spring;\n\t\t\tthis.friction = friction;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tthis.acceleration = (this.target - this.value) * this.spring;\n\t\t\t\tthis.velocity += this.acceleration;\n\t\t\t\tthis.velocity *= this.friction;\n\t\t\t\tthis.value += this.velocity;\n\t\t\t} else {\n\t\t\t\tthis.acceleration = 0;\n\t\t\t\tthis.velocity = 0;\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():SpringValue {\n\t\t\tconst v:SpringValue = new SpringValue(this.value, this.spring, this.friction);\n\t\t\tv.acceleration = this.acceleration;\n\t\t\tv.velocity = this.velocity;\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic velocity:number;\n\t\tpublic acceleration:number;\n\t\tpublic spring:number;\n\t\tpublic friction:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tthis._value = (this._value * this._count + n) / ++this._count;\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _count:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleMovingAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxCount:number) {\n\t\t\tthis.maxCount = this._maxCount = maxCount;\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._count = this._maxCount;\n\n\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\tthis._value -= oldest;\n\n\t\t\t\tconst latest:number = n / this._maxCount;\n\t\t\t\tthis._value += latest;\n\n\t\t\t\tthis.values.push(latest);\n\n\t\t\t} else {\n\t\t\t\tthis._value *= (this._count - 1);\n\t\t\t\tthis._value += n;\n\t\t\t\tthis._value /= this._count;\n\n\t\t\t\tthis.values.push(n / this._maxCount);\n\t\t\t}\n\n\t\t\t/*\n\t\t\tthis._values.push(n);\n\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._values.shift();\n\t\t\t\tthis._count = this._maxCount;\n\t\t\t}\n\n\t\t\tthis._value = 0;\n\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\tthis._value += this._values[i];\n\t\t\t}\n\t\t\tthis._value /= this._count;\n\t\t\t*/\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class MaxValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxLatestCount:number = 0) {\n\t\t\tthis.maxLatestCount = this._maxLatestCount = maxLatestCount;\n\t\t\tthis.value = this._value = -Number.MAX_VALUE;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (this._maxLatestCount > 0) {\n\t\t\t\tif (++this._count > this._maxLatestCount) {\n\t\t\t\t\tthis._count = this._maxLatestCount;\n\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\t\tif (this._value > oldest) {\n\t\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._value = -Number.MAX_VALUE;\n\t\t\t\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\t\t\t\tconst v:number = this.values[i];\n\t\t\t\t\t\t\tif (this._value < v) {\n\t\t\t\t\t\t\t\tthis._value = v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++this._count;\n\t\t\t\tif (this._value < n) {\n\t\t\t\t\tthis._value = n;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxLatestCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxLatestCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class Circular {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(angle:number = 0, velocity:number = 0, radian:boolean = true) {\n\t\t\tthis.setAngle(angle, radian);\n\t\t\tthis.setVelocity(velocity, radian);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getAngle(radian:boolean = true):number {\n\t\t\treturn radian ? this.angle : (this.angle * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setAngle(angle:number, radian:boolean = true):void {\n\t\t\tthis.angle = radian ? angle : (angle * Math.PI / 180);\n\t\t}\n\n\t\tpublic getVelocity(radian:boolean = true):number {\n\t\t\treturn radian ? this.velocity : (this.velocity * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setVelocity(velocity:number, radian:boolean = true):void {\n\t\t\tthis.velocity = radian ? velocity : (velocity * Math.PI / 180);\n\t\t}\n\n\t\tpublic update():void {\n\t\t\tthis.angle += this.velocity;\n\t\t}\n\n\t\tpublic getSin(length:number = 1):number {\n\t\t\treturn length * Math.sin(this.angle);\n\t\t}\n\n\t\tpublic getCos(length:number = 1):number {\n\t\t\treturn length * Math.cos(this.angle);\n\t\t}\n\n\t\tpublic getTan(length:number = 1):number {\n\t\t\treturn length * Math.tan(this.angle);\n\t\t}\n\n\t\tpublic getMagnitude(length:number = 1):number {\n\t\t\treturn length * (1 + Math.sin(this.angle)) / 2;\n\t\t}\n\n\t\tpublic getVector(length:number = 1, xy:{ x:number, y:number } = null):{ x:number, y:number } {\n\t\t\tif (xy != null) {\n\t\t\t\txy.x = this.getCos(length);\n\t\t\t\txy.y = this.getSin(length);\n\t\t\t} else {\n\t\t\t\treturn { x: this.getCos(length), y: this.getSin(length) };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate angle:number;\n\t\tprivate velocity:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class BinarySearch {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(list:number[] = null) {\n\t\t\tthis.setList(list);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic setList(list:number[]):void {\n\t\t\tthis.list = list;\n\t\t}\n\n\t\tpublic searchNearest(value:number):number {\n\t\t\tlet lowIndex = 0;\n\t\t\tlet highIndex = this.list.length - 1;\n\t\t\tlet midIndex;\n\t\t\tlet estimated;\n\t\t\twhile (lowIndex <= highIndex) {\n\t\t\t\tmidIndex = Math.floor((lowIndex + highIndex) / 2);\n\t\t\t\testimated = this.list[midIndex];\n\t\t\t\tif (estimated == value) {\n\t\t\t\t\treturn midIndex;\n\t\t\t\t} else if (estimated > value) {\n\t\t\t\t\thighIndex = midIndex - 1;\n\t\t\t\t} else {\n\t\t\t\t\tlowIndex = midIndex + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn midIndex;\n\t\t}\n\n\t\tpublic leapNearest(value:number):{ index0:number, index1:number, ratio:number } {\n\t\t\tconst nearestIndex = this.searchNearest(value);\n\t\t\tconst nearestValue = this.list[nearestIndex];\n\n\t\t\tlet lowIndex;\n\t\t\tlet lowValue;\n\t\t\tlet highIndex;\n\t\t\tlet highValue;\n\t\t\tif (nearestValue <= value) {\n\t\t\t\tlowIndex = nearestIndex;\n\t\t\t\tlowValue = nearestValue;\n\t\t\t\thighIndex = nearestIndex + 1;\n\t\t\t\tif (highIndex >= this.list.length) {\n\t\t\t\t\thighIndex = this.list.length - 1;\n\t\t\t\t}\n\t\t\t\thighValue = this.list[highIndex];\n\t\t\t} else {\n\t\t\t\tlowIndex = nearestIndex - 1;\n\t\t\t\tif (lowIndex < 0) {\n\t\t\t\t\tlowIndex = 0;\n\t\t\t\t}\n\t\t\t\tlowValue = this.list[lowIndex];\n\t\t\t\thighIndex = nearestIndex;\n\t\t\t\thighValue = nearestValue;\n\t\t\t}\n\n\t\t\tconst d = highValue - lowValue;\n\t\t\tif (d > 0) {\n\t\t\t\treturn { index0: lowIndex, index1: highIndex, ratio: (value - lowValue) / (highValue - lowValue) };\n\t\t\t} else {\n\t\t\t\treturn { index0: lowIndex, index1: highIndex, ratio: 0 };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate list:number[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\n// https://magicant.github.io/sjavascript/mt.html\n// mt.js 0.2.4 (2005-12-23)\n\n/*\nMersenne Twister in JavaScript based on \"mt19937ar.c\"\n\n * JavaScript version by Magicant: Copyright (C) 2005 Magicant\n\n\n * Original C version by Makoto Matsumoto and Takuji Nishimura\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/mt.html\n\nCopyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n  1. Redistributions of source code must retain the above copyright\n     notice, this list of conditions and the following disclaimer.\n\n  2. Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in the\n     documentation and/or other materials provided with the distribution.\n\n  3. The names of its contributors may not be used to endorse or promote\n     products derived from this software without specific prior written\n     permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\n// Methods whose name starts with \"_\" are private methods.\n// Don't call them externally!\n\nnamespace alm.math {\n\n\texport class MersenneTwister {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * Constructor: MersenneTwister([integer/Array<integer> seed])\n\t\t * initializes the object with the given seed.\n\t\t * The seed may be an integer or an array of integers.\n\t\t * If the seed is not given, the object will be initialized with the current\n\t\t * time: new Date().getTime().\n\t\t * See also: setSeed(seed).\n\t\t */\n\t\tconstructor(seed:number) {\n\t\t\tif (arguments.length == 0) {\n\t\t\t\tseed = new Date().getTime();\n\t\t\t}\n\n\t\t\tthis._mt = new Array(624);\n\t\t\tthis.setSeed(seed);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/** multiplies two uint32 values and returns a uint32 result. */\n\t\tprivate static _mulUint32(a:number, b:number):number {\n\t\t\tconst a1 = a >>> 16, a2 = a & 0xffff;\n\t\t\tconst b1 = b >>> 16, b2 = b & 0xffff;\n\t\t\treturn (((a1 * b2 + a2 * b1) << 16) + a2 * b2) >>> 0;\n\t\t};\n\n\t\t/** returns ceil(value) if value is finite number, otherwise 0. */\n\t\tprivate static _toNumber(x:any):number {\n\t\t\treturn (typeof x == 'number' && !isNaN(x)) ? Math.ceil(x) : 0;\n\t\t};\n\n\t\t/**\n\t\t * Method: setSeed(integer/Array<integer> seed)\n\t\t * resets the seed. The seed may be an integer or an array of integers.\n\t\t * Elements in the seed array that are not numbers will be treated as 0.\n\t\t * Numbers that are not integers will be rounded down.\n\t\t * The integer(s) should be greater than or equal to 0 and less than 2^32.\n\t\t * This method is compatible with init_genrand and init_by_array function of\n\t\t * the original C version.\n\t\t */\n\t\tpublic setSeed(seed:number|number[]) {\n\t\t\tconst mt = this._mt;\n\t\t\tif (typeof seed == 'number') {\n\t\t\t\tmt[0] = seed >>> 0;\n\t\t\t\tfor (let i = 1; i < mt.length; i++) {\n\t\t\t\t\tconst x = mt[i-1] ^ (mt[i-1] >>> 30);\n\t\t\t\t\tmt[i] = MersenneTwister._mulUint32(1812433253, x) + i;\n\t\t\t\t}\n\t\t\t\tthis._index = mt.length;\n\t\t\t} else if (seed instanceof Array) {\n\t\t\t\tlet i = 1, j = 0;\n\t\t\t\tthis.setSeed(19650218);\n\t\t\t\tfor (let k = Math.max(mt.length, seed.length); k > 0; k--) {\n\t\t\t\t\tlet x = mt[i-1] ^ (mt[i-1] >>> 30);\n\t\t\t\t\tx = MersenneTwister._mulUint32(x, 1664525);\n\t\t\t\t\tmt[i] = (mt[i] ^ x) + (seed[j] >>> 0) + j;\n\t\t\t\t\tif (++i >= mt.length) {\n\t\t\t\t\t\tmt[0] = mt[mt.length-1];\n\t\t\t\t\t\ti = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (++j >= seed.length) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let k = mt.length - 1; k > 0; k--) {\n\t\t\t\t\tlet x = mt[i-1] ^ (mt[i-1] >>> 30);\n\t\t\t\t\tx = MersenneTwister._mulUint32(x, 1566083941);\n\t\t\t\t\tmt[i] = (mt[i] ^ x) - i;\n\t\t\t\t\tif (++i >= mt.length) {\n\t\t\t\t\t\tmt[0] = mt[mt.length-1];\n\t\t\t\t\t\ti = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmt[0] = 0x80000000;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('MersenneTwister: illegal seed.');\n\t\t\t}\n\t\t};\n\n\t\t/** returns the next random Uint32 value. */\n\t\tprivate _nextInt():number {\n\t\t\tconst mt = this._mt;\n\t\t\tlet value:number;\n\n\t\t\tif (this._index >= mt.length) {\n\t\t\t\tlet k = 0;\n\t\t\t\tconst N = mt.length, M = 397;\n\t\t\t\tdo {\n\t\t\t\t\tvalue = (mt[k] & 0x80000000) | (mt[k+1] & 0x7fffffff);\n\t\t\t\t\tmt[k] = mt[k+M] ^ (value >>> 1) ^ ((value & 1) ? 0x9908b0df : 0);\n\t\t\t\t} while (++k < N-M);\n\t\t\t\tdo {\n\t\t\t\t\tvalue = (mt[k] & 0x80000000) | (mt[k+1] & 0x7fffffff);\n\t\t\t\t\tmt[k] = mt[k+M-N] ^ (value >>> 1) ^ ((value & 1) ? 0x9908b0df : 0);\n\t\t\t\t} while (++k < N-1);\n\t\t\t\tvalue = (mt[N-1] & 0x80000000) | (mt[0] & 0x7fffffff);\n\t\t\t\tmt[N-1] = mt[M-1] ^ (value >>> 1) ^ ((value & 1) ? 0x9908b0df : 0);\n\t\t\t\tthis._index = 0;\n\t\t\t}\n\n\t\t\tvalue = mt[this._index++];\n\t\t\tvalue ^=  value >>> 11;\n\t\t\tvalue ^= (value <<   7) & 0x9d2c5680;\n\t\t\tvalue ^= (value <<  15) & 0xefc60000;\n\t\t\tvalue ^=  value >>> 18;\n\t\t\treturn value >>> 0;\n\t\t};\n\n\t\t/**\n\t\t * Method: nextInt([[number min,] number max])\n\t\t * returns a random integer that is greater than or equal to min and less than\n\t\t * max. The value of (max - min) must be positive number less or equal to 2^32.\n\t\t * If min is not given or not a number, this method uses 0 for min.\n\t\t * If neither of min and max is given or max is out of range, this method\n\t\t * uses 2^32 for max.\n\t\t * This method is compatible with genrand_int32 function of the original C\n\t\t * version for min=0 & max=2^32, but not with genrand_int31 function.\n\t\t */\n\t\tpublic getInt():number {\n\t\t\tlet min:number, sup:number;\n\t\t\tswitch (arguments.length) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this._nextInt();\n\t\t\t\tcase 1:\n\t\t\t\t\tmin = 0;\n\t\t\t\t\tsup = MersenneTwister._toNumber(arguments[0]);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tmin = MersenneTwister._toNumber(arguments[0]);\n\t\t\t\t\tsup = MersenneTwister._toNumber(arguments[1]) - min;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!(0 < sup && sup < 0x100000000))\n\t\t\t\treturn this._nextInt() + min;\n\t\t\tif ((sup & (~sup + 1)) == sup)\n\t\t\t\treturn ((sup - 1) & this._nextInt()) + min;\n\n\t\t\tlet value:number;\n\t\t\tdo {\n\t\t\t\tvalue = this._nextInt();\n\t\t\t} while (sup > 4294967296 - (value - (value %= sup)));\n\t\t\treturn value + min;\n\t\t};\n\n\t\t/**\n\t\t * Method: next()\n\t\t * returns a random number that is greater than or equal to 0 and less than 1.\n\t\t * This method is compatible with genrand_res53 function of the original C\n\t\t * version.\n\t\t */\n\t\tpublic getFloat():number {\n\t\t\tconst a = this._nextInt() >>> 5, b = this._nextInt() >>> 6;\n\t\t\treturn (a * 0x4000000 + b) / 0x20000000000000;\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate _mt:number[];\n\t\tprivate _index:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class AnimationFrameTicker extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * requestAnimationFrameベースでのFPSタイマー\n\t\t * @param {number} frameRate 目標フレームレート（0の場合はフレームレートを制限しない）\n\t\t * @param {number} tolerance 許容誤差（frameRateに対する割合）\n\t\t */\n\t\tconstructor(frameRate:number = 0, tolerance:number = 0.1) {\n\t\t\tsuper();\n\n\t\t\tthis.targetFrameRate = frameRate;\n\t\t\tthis.interval = 1000 / this.targetFrameRate;\n\n\t\t\tthis.tolerance = tolerance;\n\t\t\tthis.toleranceDuration = this.interval * this.tolerance;\n\n\t\t\tthis.isRunning = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.frameStartTime = Time.now();\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\twindow.cancelAnimationFrame(this.requestId);\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getTargetFrameRate():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tprivate setInterval(callback:Function):number {\n\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t}\n\n\t\tprivate clearInterval(requestId:number):void {\n\t\t\twindow.clearInterval(requestId);\n\t\t}\n\n\t\tprivate updateHandler = ():void => {\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t\tif (this.targetFrameRate > 0) {\n\t\t\t\tconst currentTime:number = Time.now();\n\t\t\t\tconst elapsedTime:number = currentTime - this.frameStartTime;\n\t\t\t\tif (elapsedTime >= this.interval - this.toleranceDuration) {\n\t\t\t\t\t//trace('[AnimationFrameTicker] frameRate : ' + (1000 / elapsedTime));\n\t\t\t\t\tthis.frameStartTime = currentTime;\n\t\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate requestId:number;\n\n\t\tprivate targetFrameRate:number;\n\t\tprivate tolerance:number;\n\t\tprivate toleranceDuration:number;\n\t\tprivate interval:number;\n\t\tprivate frameStartTime:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class AnimationFrameTickerEvent extends Event<AnimationFrameTicker> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:AnimationFrameTicker) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():AnimationFrameTickerEvent {\n\t\t\treturn new AnimationFrameTickerEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[AnimationFrameTickerEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class Timer extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(interval:number = 1000, repeatCount:number = 0) {\n\t\t\tsuper();\n\t\t\tthis.interval = interval;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tId = -1;\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\t\t\tthis.tStartTime = Time.now();\n\t\t\tthis.startInterval(this.tRestTime != -1 ? this.tRestTime : this.interval);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tRestTime = Time.now() - this.tStartTime;\n\t\t\tthis.stopInterval();\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.stop();\n\t\t\tthis.elapsedCount = 0;\n\t\t\tthis.tRestTime = -1;\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tthis.reset();\n\t\t\tthis.start();\n\t\t}\n\n\n\n\n\n\t\tprivate startInterval(interval:number):void {\n\t\t\tthis.stopInterval();\n\t\t\tthis.tInterval = interval;\n\t\t\tthis.tId = window.setInterval(this.timerHandler, this.tInterval);\n\t\t}\n\n\t\tprivate stopInterval():void {\n\t\t\tif (this.tId != -1) {\n\t\t\t\tclearInterval(this.tId);\n\t\t\t\tthis.tId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatch(eventType:string):void {\n\t\t\tthis.dispatchEvent(new TimerEvent(eventType, this, this.elapsedCount, this.repeatCount, this.getRestCount()));\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.tStartTime = Time.now();\n\t\t\t++this.elapsedCount;\n\t\t\tlet isCompleted:boolean = false;\n\t\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\t\tisCompleted = true;\n\t\t\t\tthis.stop();\n\t\t\t} else if (this.tInterval != this.interval) {\n\t\t\t\tthis.startInterval(this.interval);\n\t\t\t}\n\t\t\tthis.dispatch(TimerEvent.TICK);\n\t\t\tif (isCompleted) {\n\t\t\t\tthis.dispatch(TimerEvent.COMPLETE);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsRunning():boolean { return this.isRunning; }\n\t\tprivate isRunning:boolean;\n\n\t\tpublic getInterval():number { return this.interval; }\n\t\tpublic setInterval(interval:number):void { this.interval = interval; }\n\t\tprivate interval:number;\n\n\t\tpublic getElapsedTime():number { return Time.now() - this.tStartTime; }\n\n\t\tpublic getRestTime():number { return this.interval - this.getElapsedTime(); }\n\n\t\tpublic getElapsedCount():number { return this.elapsedCount; }\n\t\tprivate elapsedCount:number;\n\n\t\tpublic getRepeatCount():number { return this.repeatCount; }\n\t\tpublic setRepeatCount(count:number):void { this.repeatCount = count; }\n\t\tprivate repeatCount:number;\n\n\t\tpublic getRestCount():number { return this.repeatCount - this.elapsedCount; }\n\n\t\tprivate tStartTime:number;\n\t\tprivate tRestTime:number;\n\t\tprivate tInterval:number;\n\t\tprivate tId:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class TimerEvent extends Event<Timer> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Timer, elapsedCount:number = 0, repeatCount:number = 0, restCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.elapsedCount = elapsedCount;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.restCount = restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():TimerEvent {\n\t\t\treturn new TimerEvent(this.type, this.target, this.elapsedCount, this.repeatCount, this.restCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[TimerEvent] type = ' + this.type + ', elapsedCount = ' + this.elapsedCount + ', repeatCount=' + this.repeatCount + ', restCount=' + this.restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly elapsedCount:number;\n\t\tpublic readonly repeatCount:number;\n\t\tpublic readonly restCount:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\texport type CompleteFunction = (content:any, info?:any) => void;\n\texport type ErrorFunction = (info?:any) => void;\n\n\texport class FileLoader extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(totalThreadCount:number = 3) {\n\t\t\tsuper();\n\n\t\t\tthis.isLoading_ = false;\n\n\t\t\tthis.currentCount = 0;\n\t\t\tthis.totalCount = 0;\n\n\t\t\tthis.currentThreadCount = 0;\n\t\t\tthis.totalThreadCount = totalThreadCount;\n\n\t\t\tthis.loadingQueries = [];\n\t\t\tthis.loadingQueryIndex = -1;\n\n\t\t\tthis.queriesByQueryId = {};\n\t\t\tthis.queriesByUrl = {};\n\n\t\t\tthis.handlersByType = {};\n\n\t\t\ttrace('[FileLoader] totalThreadCount : ' + this.totalThreadCount);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic require(url:string, type:string, id:string = ''):string {\n\t\t\treturn this.addQuery(type, url, {}, id);\n\t\t}\n\n\t\tprivate addQuery(type:string, url:string, param:any, id:string = ''):string {\n\t\t\tif (this.queriesByUrl[url]) return this.queriesByUrl[url].id;\n\n\t\t\tconst query:FileQuery = new FileQuery();\n\t\t\tquery.type = type;\n\t\t\tquery.url = url;\n\t\t\tquery.param = param;\n\n\t\t\tif (id != '') {\n\t\t\t\tquery.id = id;\n\t\t\t} else {\n\t\t\t\tquery.id = String(FileLoader.id);\n\t\t\t\t++FileLoader.id;\n\t\t\t}\n\n\t\t\tthis.loadingQueries.push(query);\n\t\t\tthis.queriesByQueryId[query.id] = query;\n\t\t\tthis.queriesByUrl[query.url] = query;\n\t\t\treturn query.id;\n\t\t}\n\n\t\tpublic load():void {\n\t\t\tif (this.isLoading_) return;\n\t\t\tthis.isLoading_ = true;\n\t\t\tthis.loadingQueryIndex = -1;\n\t\t\tthis.next();\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCount = this.loadingQueryIndex + 1;\n\t\t\tthis.totalCount = this.loadingQueries.length;\n\n\t\t\tconst progress = this.currentCount / this.totalCount;\n\t\t\tif (this.currentCount == 0) {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.START, this, progress, this.currentCount, this.totalCount));\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.PROGRESS, this, progress, this.currentCount, this.totalCount));\n\t\t\t}\n\n\t\t\twhile (this.currentThreadCount < this.totalThreadCount) {\n\t\t\t\tif (this.loadingQueryIndex + 1 < this.totalCount) {\n\t\t\t\t\t// add thread\n\t\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\t\tquery.isLoading = true;\n\t\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\t\tif (handler) {\n\t\t\t\t\t\thandler.load(query.url, (content:any, info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content, info);\n\t\t\t\t\t\t},(info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadErrorHandler(query, info);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\t}\n\t\t\t\t\t// continue loop\n\n\t\t\t\t} else {\n\t\t\t\t\t// all finished\n\t\t\t\t\tthis.isLoading_ = false;\n\t\t\t\t\tthis.loadingQueries = [];\n\t\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.COMPLETE, this, progress, this.currentCount, this.totalCount));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\tif (this.currentCount < this.totalCount) {\n\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\tquery.isLoading = true;\n\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\tif (handler) {\n\t\t\t\t\thandler.load(query.url, (content:any):void => {\n\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content);\n\t\t\t\t\t},(message:string = ''):void => {\n\t\t\t\t\t\tthis.fileLoadErrorHandler(query, message);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\tthis.next();\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis.isLoading_ = false;\n\t\t\t\tthis.loadingQueries = [];\n\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\tthis.dispatchEvent(new FileLoaderEvent(FileLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tpublic addHandler(handler:IFileHandler):void {\n\t\t\tthis.handlersByType[handler.getType()] = handler;\n\t\t}\n\n\t\tprivate fileLoadCompleteHandler = (query:FileQuery, content:any, info:object = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tquery.content = content;\n\t\t\tif (query.param.onLoad) {\n\t\t\t\tquery.param.onLoad(content, info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderSuccessEvent(FileLoaderSuccessEvent.SUCCESS, this, content, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tprivate fileLoadErrorHandler = (query:FileQuery, info:any = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tif (query.param.onError) {\n\t\t\t\tquery.param.onError(info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderErrorEvent(FileLoaderErrorEvent.ERROR, this, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tpublic getQueryByQueryId(queryId:string):FileQuery {\n\t\t\treturn this.queriesByQueryId[queryId];\n\t\t}\n\n\t\tpublic getQueryByUrl(url:string):FileQuery {\n\t\t\treturn this.queriesByUrl[url];\n\t\t}\n\n\t\tpublic isLoading():boolean {\n\t\t\treturn this.isLoading_;\n\t\t}\n\n\t\tpublic getCurrentCount():number {\n\t\t\treturn this.currentCount;\n\t\t}\n\n\t\tpublic getTotalCount():number {\n\t\t\treturn this.totalCount;\n\t\t}\n\n\t\tpublic getContentByUrl<T = any>(url:string):T {\n\t\t\treturn this.queriesByUrl[url].content;\n\t\t}\n\n\t\tpublic getContentByQueryId<T = any>(textureId:string):T {\n\t\t\treturn this.queriesByQueryId[textureId].content;\n\t\t}\n\n\t\tpublic getCurrentThreadCount():number {\n\t\t\treturn this.currentThreadCount;\n\t\t}\n\n\t\tpublic getTotalThreadCount():number {\n\t\t\treturn this.totalThreadCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isLoading_:boolean;\n\n\t\tprivate currentCount:number;\n\t\tprivate totalCount:number;\n\n\t\tprivate currentThreadCount:number;\n\t\tprivate totalThreadCount:number;\n\n\t\tprivate loadingQueries:FileQuery[];\n\t\tprivate loadingQueryIndex:number;\n\n\t\tprivate queriesByQueryId:util.Hash<FileQuery>;\n\t\tprivate queriesByUrl:util.Hash<FileQuery>;\n\n\t\tprivate handlersByType:util.Hash<IFileHandler>;\n\n\t\tprivate static id:number = 0;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderProgressEvent extends alm.event.Event<FileLoader> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic START:string = 'start';\n\t\tstatic PROGRESS:string = 'progress';\n\t\tstatic COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:FileLoader, progress:number = 0, loadedCount:number = 0, totalCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.progress = progress;\n\t\t\tthis.loadedCount = loadedCount;\n\t\t\tthis.totalCount = totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderProgressEvent {\n\t\t\treturn new FileLoaderProgressEvent(this.type, this.target, this.progress, this.loadedCount, this.totalCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderProgressEvent] type = ' + this.type + ', progress = ' + this.progress + ', loadedCount = ' + this.loadedCount + ', totalCount = ' + this.totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly progress:number;\n\t\tpublic readonly loadedCount:number;\n\t\tpublic readonly totalCount:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderSuccessEvent extends alm.event.Event<FileLoader> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SUCCESS:string = 'success';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:FileLoader, content:any, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.content = content;\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderSuccessEvent {\n\t\t\treturn new FileLoaderSuccessEvent(this.type, this.target, this.content, this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderSuccessEvent] type = ' + this.type + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly content:any;\n\t\tpublic readonly info:any;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderErrorEvent extends alm.event.Event<FileLoader> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic ERROR:string = 'error';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:FileLoader, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderErrorEvent {\n\t\t\treturn new FileLoaderErrorEvent(this.type, this.target, this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderErrorEvent] type = ' + this.type + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly info:any;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileQuery {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.isLoadComplete = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic id:string;\n\t\tpublic type:string;\n\t\tpublic url:string;\n\t\tpublic param:any;\n\t\tpublic content:any;\n\t\tpublic isLoading:boolean;\n\t\tpublic isLoadComplete:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\timport IFileHandler = alm.io.IFileHandler;\n\timport CompleteFunction = alm.io.CompleteFunction;\n\timport ErrorFunction = alm.io.ErrorFunction;\n\n\texport class ImageFileHandler implements IFileHandler {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(crossOrigin:string = null) {\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getType():string {\n\t\t\treturn ImageFileHandler.TYPE;\n\t\t}\n\n\t\tpublic load(url:string, onComplete:CompleteFunction, onError:ErrorFunction):void {\n\t\t\tconst image = new Image();\n\t\t\timage.crossOrigin = this.crossOrigin;\n\t\t\timage.src = url;\n\t\t\timage.onabort = ():void => {\n\t\t\t\tonError('load abort : ' + url);\n\t\t\t};\n\t\t\timage.onerror = ():void => {\n\t\t\t\tonError('load error : ' + url);\n\t\t\t};\n\t\t\timage.onload = ():void => {\n\t\t\t\tonComplete(image);\n\t\t\t};\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate crossOrigin:string;\n\n\t\tpublic static TYPE:string = 'image';\n\t}\n}\n","/// <reference path=\"../../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport Cmd = alm.util.Cmd;\n\timport Easing = alm.math.Easing;\n\n\texport class AudioClip {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(context:AudioContext, destination:AudioNode, fileName:string = '', masterVolume:number = 1) {\n\t\t\t//this.context = new AudioContext();\n\t\t\tthis.context = context;\n\t\t\tthis.masterVolume = masterVolume;\n\n\t\t\tthis.buffer = null;\n\t\t\tthis.sourceNode = null;\n\t\t\tthis.isAvailable = false;\n\n\t\t\tthis.duration = 0;\n\n\t\t\tthis.gainNode = this.context.createGain();\n\t\t\tthis.gainNode.connect(destination);\n\n\t\t\tthis.volume = 1;\n\t\t\tthis.applyVolume();\n\n\t\t\tif (fileName != '') {\n\t\t\t\tthis.load(fileName);\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic load(url:string):void {\n\t\t\tconst request:XMLHttpRequest = new XMLHttpRequest();\n\t\t\trequest.responseType = 'arraybuffer';\n\t\t\trequest.onreadystatechange = ():void => {\n\t\t\t\tif (request.readyState == 4) {\n\t\t\t\t\tif (request.status == 0 || request.status == 200) {\n\t\t\t\t\t\tthis.context.decodeAudioData(request.response, (buffer:AudioBuffer):void => {\n\t\t\t\t\t\t\ttrace('[AudioClip] load complete :', url);\n\t\t\t\t\t\t\tthis.isAvailable = true;\n\t\t\t\t\t\t\tthis.buffer = buffer;\n\t\t\t\t\t\t\tthis.duration = this.buffer.duration;\n\t\t\t\t\t\t}, (error:Error):void => {\n\t\t\t\t\t\t\ttrace('[AudioClip] load error :', error);\n\t\t\t\t\t\t\ttrace(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\trequest.open('GET', url, true);\n\t\t\trequest.send('');\n\t\t}\n\n\t\tpublic play(loop:boolean = false, overwrite:boolean = true):void {\n\t\t\tif (!this.isAvailable) return;\n\t\t\tif (!overwrite && this.sourceNode) return;\n\t\t\tthis.stop();\n\t\t\tthis.sourceNode = this.context.createBufferSource();\n\t\t\tthis.sourceNode.buffer = this.buffer;\n\t\t\tthis.sourceNode.loop = loop;\n\t\t\tthis.sourceNode.connect(this.gainNode);\n\t\t\tthis.sourceNode.start(0);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (this.sourceNode) {\n\t\t\t\tthis.sourceNode.stop();\n\t\t\t\tthis.sourceNode.disconnect(this.gainNode);\n\t\t\t\tthis.sourceNode = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic getVolume():number {\n\t\t\treturn this.volume;\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tCmd.stop(this.volumeTween);\n\t\t\tif (this.volume == volume) return;\n\t\t\tthis.volume = volume;\n\t\t\tthis.applyVolume();\n\t\t}\n\n\t\tpublic fadeTo(to:number, duration:number = 1000, onComplete:Function = null):void {\n\t\t\tCmd.stop(this.volumeTween);\n\t\t\tthis.volumeTween = new cmd.Tween(this, { volume: to }, null, duration, Easing.linear, null, ():void => {\n\t\t\t\tthis.applyVolume();\n\t\t\t}, ():void => {\n\t\t\t\tif (onComplete) onComplete();\n\t\t\t});\n\t\t\tthis.volumeTween.execute();\n\t\t}\n\n\t\tpublic fadeIn(duration:number = 1000):void {\n\t\t\tthis.fadeTo(1, duration);\n\t\t}\n\n\t\tpublic fadeOut(duration:number = 1000, stopOnComplete:boolean = true):void {\n\t\t\tthis.fadeTo(0, duration, ():void => {\n\t\t\t\tif (stopOnComplete) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tprivate applyVolume():void {\n\t\t\tthis.gainNode.gain.value = this.volume * this.masterVolume;\n\t\t}\n\n\t\tpublic getIsAvailable():boolean {\n\t\t\treturn this.isAvailable;\n\t\t}\n\n\t\tpublic getDuration():number {\n\t\t\treturn this.duration;\n\t\t}\n\n\t\tpublic getCurrentTime():number {\n\t\t\treturn this.context.currentTime;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isAvailable:boolean;\n\t\tprivate context:AudioContext;\n\t\tprivate volume:number;\n\t\tprivate masterVolume:number;\n\t\tprivate buffer:AudioBuffer;\n\t\tprivate duration:number;\n\t\tprivate sourceNode:AudioBufferSourceNode;\n\t\tprivate gainNode:GainNode;\n\t\tprivate volumeTween:cmd.Tween;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Hash = alm.util.Hash;\n\n\texport class AudioPlayer extends EventDispatcher {\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t\tsuper();\n\n\t\t\tconst AudioContext:any = window['AudioContext'] || window['webkitAudioContext'] || null;\n\t\t\tthis.isAvailable = AudioContext != null;\n\t\t\tif (this.isAvailable) {\n\t\t\t\tthis.context = new AudioContext();\n\t\t\t\tthis.clipsById = {};\n\n\t\t\t\tthis.masterGainNode = this.context.createGain();\n\t\t\t\tthis.masterGainNode.connect(this.context.destination);\n\t\t\t\tthis.masterVolume = 1;\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolute:number = 1, id:string = ''):boolean {\n\t\t\tif (!this.isAvailable) return false;\n\t\t\tif (id == '') id = url;\n\t\t\tif (this.clipsById[id]) return false;\n\t\t\tthis.clipsById[id] = new AudioClip(this.context, this.masterGainNode, url, masterVolute);\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic getClip(id:string):AudioClip {\n\t\t\tif (!this.isAvailable) return;\n\t\t\treturn this.clipsById[id];\n\t\t}\n\n\t\tpublic getMasterVolume():number {\n\t\t\tif (!this.isAvailable) return 0;\n\t\t\treturn this.masterVolume;\n\t\t}\n\n\t\tpublic setMasterVolume(volume:number):void {\n\t\t\tif (!this.isAvailable) return;\n\t\t\tthis.masterVolume = volume;\n\t\t\tthis.masterGainNode.gain.value = this.masterVolume;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getInstance():AudioPlayer { return AudioPlayer.instance || (AudioPlayer.instance = new AudioPlayer()); }\n\t\tprivate static instance:AudioPlayer = null;\n\n\t\tprivate isAvailable:boolean;\n\t\tprivate context:AudioContext;\n\t\tprivate clipsById:Hash<AudioClip>;\n\n\t\tprivate masterGainNode:GainNode;\n\t\tprivate masterVolume:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\texport class CrossOverLoopAudio {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(crossOverDuration:number = 1) {\n\t\t\tthis.audioPlayer = AudioPlayer.getInstance();\n\n\t\t\tthis.clipCount = 0;\n\t\t\tthis.clipIndex = 0;\n\t\t\tthis.clipIds = [];\n\t\t\tthis.clip = null;\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.volume = 1;\n\n\t\t\tthis.crossOverDuration = crossOverDuration;\n\t\t\tthis.timeoutId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolume:number = 1):void {\n\t\t\tconst id = url + '-' + this.clipCount;\n\t\t\tthis.audioPlayer.add(url, masterVolume, id);\n\t\t\tthis.clipIds.push(id);\n\t\t\tthis.clipCount = this.clipIds.length;\n\t\t}\n\n\t\tpublic play():void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.playCurrent();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\n\t\t\tthis.stopCurrent();\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tthis.volume = volume;\n\n\t\t\tif (this.clip) {\n\t\t\t\tthis.clip.setVolume(this.volume);\n\t\t\t}\n\t\t}\n\n\t\tprivate playCurrent():void {\n\t\t\tthis.clip = this.audioPlayer.getClip(this.clipIds[this.clipIndex]);\n\t\t\tthis.clip.setVolume(this.volume);\n\t\t\tthis.clip.play(false, true);\n\n\t\t\tconst interval = (this.clip.getDuration() - this.crossOverDuration) * 1000;\n\t\t\tthis.timeoutId = window.setTimeout(this.timerHandler, interval);\n\t\t}\n\n\t\tprivate stopCurrent():void {\n\t\t\tif (this.timeoutId != -1) {\n\t\t\t\twindow.clearTimeout(this.timeoutId);\n\t\t\t\tthis.timeoutId = -1;\n\t\t\t}\n\n\t\t\tif (this.clip) {\n\t\t\t\tthis.clip.stop();\n\t\t\t\tthis.clip = null;\n\t\t\t}\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tif (++this.clipIndex == this.clipCount) this.clipIndex = 0;\n\t\t\tthis.playCurrent();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate audioPlayer:AudioPlayer;\n\t\tprivate volume:number;\n\n\t\tprivate clipIds:string[];\n\t\tprivate clip:AudioClip;\n\t\tprivate clipIndex:number;\n\t\tprivate clipCount:number;\n\n\t\tprivate isPlaying:boolean;\n\n\t\tprivate crossOverDuration:number;\n\t\tprivate timeoutId:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport Num = alm.util.Num;\n\timport Easing = alm.math.Easing;\n\n\texport class FootstepAudio {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(intervalMin:number = 0.12, intervalMax:number = 0.6) {\n\t\t\tthis.audioPlayer = AudioPlayer.getInstance();\n\n\t\t\tthis.intervalMin = intervalMin;\n\t\t\tthis.intervalMax = intervalMax;\n\t\t\tthis.intervalId = -1;\n\t\t\tthis.interval = this.intervalMax;\n\n\t\t\tthis.clipIndex = -1;\n\t\t\tthis.clipCount = 0;\n\t\t\tthis.clipIds = [];\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.volume = 1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolume:number = 1):void {\n\t\t\tconst id = url + '-' + this.clipCount;\n\t\t\tthis.audioPlayer.add(url, masterVolume, id);\n\t\t\tthis.clipIds.push(id);\n\t\t\tthis.clipCount = this.clipIds.length;\n\t\t}\n\n\t\tpublic play(immediately:boolean = true):void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.isWaitingForFirstStep = true;\n\t\t\tthis.startTime = immediately ? 0 : new Date().getTime();\n\t\t\tthis.intervalId = window.setInterval(this.timerHandler, 1000 / 60);\n\t\t\tthis.timerHandler();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\n\t\t\twindow.clearInterval(this.intervalId);\n\t\t}\n\n\t\tpublic setSpeed(speedRatio:number):void {\n\t\t\tthis.interval = Num.ease(speedRatio, 0, 1, this.intervalMax, this.intervalMin, Easing.easeOutSine);\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tthis.volume = volume;\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tconst interval = this.isWaitingForFirstStep ? (this.interval * 0.5) : this.interval;\n\t\t\tconst time = new Date().getTime();\n\t\t\tif (time - this.startTime >= interval * 1000) {\n\t\t\t\tthis.startTime = time;\n\t\t\t\tthis.isWaitingForFirstStep = false;\n\n\t\t\t\tif (++this.clipIndex >= this.clipCount) {\n\t\t\t\t\tthis.clipIndex = 0;\n\t\t\t\t}\n\t\t\t\tconst clipId = this.clipIds[this.clipIndex];\n\t\t\t\tthis.audioPlayer.getClip(clipId).setVolume(this.volume);\n\t\t\t\tthis.audioPlayer.getClip(clipId).play(false, true);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate audioPlayer:AudioPlayer;\n\t\tprivate volume:number;\n\n\t\tprivate clipIds:string[];\n\t\tprivate clipIndex:number;\n\t\tprivate clipCount:number;\n\n\t\tprivate startTime:number;\n\t\tprivate isWaitingForFirstStep:boolean;\n\n\t\tprivate intervalMin:number;\n\t\tprivate intervalMax:number;\n\t\tprivate interval:number;\n\t\tprivate intervalId:number;\n\n\t\tprivate isPlaying:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\timport Event = alm.event.Event;\n\n\texport class ViewEvent extends Event<View> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static INITIALIZE_BEGIN:string = 'initializeBegin';\n\t\tpublic static INITIALIZE_END:string = 'initializeEnd';\n\n\t\tpublic static FINALIZE_BEGIN:string = 'finalizeBegin';\n\t\tpublic static FINALIZE_END:string = 'finalizeEnd';\n\n\t\tpublic static READY_BEGIN:string = 'readyBegin';\n\t\tpublic static READY_END:string = 'readyEnd';\n\n\t\tpublic static SHOW_BEGIN:string = 'showBegin';\n\t\tpublic static SHOW_END:string = 'showEnd';\n\n\t\tpublic static HIDE_BEGIN:string = 'hideBegin';\n\t\tpublic static HIDE_END:string = 'hideEnd';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:View) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():ViewEvent {\n\t\t\treturn new ViewEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[ViewEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Logger = alm.debug.Logger;\n\n\texport abstract class View<T = any> extends EventDispatcher implements IView {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(view:T = null, id:string = null) {\n\t\t\tsuper();\n\t\t\tthis.id = id != null ? id : String(View.viewCount);\n\t\t\tthis.view = view;\n\t\t\tthis.name = '';\n\t\t\tthis.autoHideWithInit = true;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.isFinalizing = false;\n\t\t\tthis.isFinalized = false;\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = false;\n\t\t\tthis.isShowing = false;\n\t\t\tthis.isShown = true;\n\t\t\tthis.isHiding = false;\n\n\t\t\tif (View.viewsById[this.id]) {\n\t\t\t\tLogger.warn('view id \\'' + this.id + '\\' is duplicate');\n\t\t\t}\n\t\t\tView.viewsById[this.id] = this;\n\t\t\t++View.viewCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic initialize():void {\n\t\t\tif (this.isInitializing || this.isInitialized) return;\n\t\t\tthis.isInitializing = true;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.INITIALIZE_BEGIN, this));\n\n\t\t\t//if (View.viewsById[this.id] == null) {\n\t\t\t//\tView.viewsById[this.id] = this;\n\t\t\t//}\n\n\t\t\tthis.view = this.implInitialize();\n\t\t\tif (this.isInitializing) {\n\t\t\t\tthrowError(this.name || this, 'view is not assigned', !this.view);\n\t\t\t\tif (this.autoHideWithInit) {\n\t\t\t\t\tthis.hide(false);\n\t\t\t\t}\n\t\t\t\tthis.isInitializing = false;\n\t\t\t\tthis.isInitialized = true;\n\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.INITIALIZE_END, this));\n\t\t\t} else {\n\t\t\t\t// finalized while initializing\n\t\t\t\tthis.view = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic ready():void {\n\t\t\tif (this.isReadying || this.isReadied) return;\n\t\t\tthis.isReadying = true;\n\t\t\tthrowError(this.name || this, 'ready() must be called after initialize()', !this.isInitialized);\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.READY_BEGIN, this));\n\t\t\tthis.implReady();\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = true;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.READY_END, this));\n\t\t}\n\n\t\tpublic finalize():void {\n\t\t\tif (!this.isInitializing && !this.isInitialized) return;\n\t\t\tif (this.isFinalizing && this.isFinalized) return;\n\t\t\tthis.isFinalizing = true;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.FINALIZE_BEGIN, this));\n\t\t\tthis.implFinalize();\n\t\t\tthis.isFinalizing = false;\n\t\t\tthis.isFinalized = true;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.FINALIZE_END, this));\n\n\t\t\tdelete View.viewsById[this.id];\n\t\t\tView.viewsById[this.id] = null;\n\t\t}\n\n\t\tpublic show(useTransition:boolean = true):void {\n\t\t\tif (this.isShown) return;\n\t\t\tthis.getShowCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic hide(useTransition:boolean = true):void {\n\t\t\tif (!this.isShown) return;\n\t\t\tthis.getHideCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic getShowCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (this.isShown) return;\n\t\t\t\t\tthrowError(this.name || this, 'getShowCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\tthrowWarn(this.name || this, 'getShowCommand() is must be called after ready()', this.isReadying|| !this.isReadied);\n\t\t\t\t\tthis.isShown = true;\n\t\t\t\t\tthis.isShowing = true;\n\t\t\t\t\tthis.isHiding = false;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.showCommand = command;\n\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.SHOW_BEGIN, this));\n\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implShow(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.SHOW_END, this));\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getHideCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (!this.isShown) return;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthrowError(this.name || this, 'getHideCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\t\tthrowWarn(this.name || this, 'getHideCommand() is must be called after ready()', this.isReadying || !this.isReadied);\n\t\t\t\t\t}\n\t\t\t\t\tthis.isShown = false;\n\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\tthis.isHiding = true;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hideCommand = command;\n\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.HIDE_BEGIN, this));\n\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implHide(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t\t\tthis.isHiding = false;\n\t\t\t\t\t\t\tthis.dispatchEvent(new ViewEvent(ViewEvent.HIDE_END, this));\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getIsInitializing():boolean {\n\t\t\treturn this.isInitializing;\n\t\t}\n\n\t\tpublic getIsInitialized():boolean {\n\t\t\treturn this.isInitialized;\n\t\t}\n\n\t\tpublic getIsReadying():boolean {\n\t\t\treturn this.isReadying;\n\t\t}\n\n\t\tpublic getIsReadied():boolean {\n\t\t\treturn this.isReadied;\n\t\t}\n\n\t\tpublic getIsShowing():boolean {\n\t\t\treturn this.isShowing;\n\t\t}\n\n\t\tpublic getIsShown():boolean {\n\t\t\treturn this.isShown;\n\t\t}\n\n\t\tpublic getIsHiding():boolean {\n\t\t\treturn this.isHiding;\n\t\t}\n\n\t\tpublic getIsHidden():boolean {\n\t\t\treturn !this.isShown;\n\t\t}\n\n\t\tpublic getIsFinalizing():boolean {\n\t\t\treturn this.isFinalizing;\n\t\t}\n\n\t\tpublic getIsFinalized():boolean {\n\t\t\treturn this.isFinalized;\n\t\t}\n\n\t\tpublic getId():string {\n\t\t\treturn this.id;\n\t\t}\n\n\t\tpublic getView():T {\n\t\t\treturn this.view;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic setName(value:string):void {\n\t\t\tthis.name = value;\n\t\t}\n\n\t\tpublic getAutoHideWithInit():boolean {\n\t\t\treturn this.autoHideWithInit;\n\t\t}\n\n\t\tpublic setAutoHideWithInit(value:boolean):void {\n\t\t\tthis.autoHideWithInit = value;\n\t\t}\n\n\n\n\n\n\t\tprotected abstract implInitialize():T;\n\t\tprotected abstract implReady():void;\n\t\tprotected abstract implFinalize():void;\n\t\tprotected abstract implShow(view:T, useTransition:boolean):cmd.Command;\n\t\tprotected abstract implHide(view:T, useTransition:boolean):cmd.Command;\n\n\n\n\n\n\t\tpublic static getViewById(id:string):View {\n\t\t\treturn View.viewsById[id];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate id:string;\n\t\tprivate view:T;\n\t\tprivate name:string;\n\t\tprivate autoHideWithInit:boolean;\n\t\tprivate showCommand:cmd.Command;\n\t\tprivate hideCommand:cmd.Command;\n\t\tprivate isInitializing:boolean;\n\t\tprivate isInitialized:boolean;\n\t\tprivate isFinalizing:boolean;\n\t\tprivate isFinalized:boolean;\n\t\tprivate isReadying:boolean;\n\t\tprivate isReadied:boolean;\n\t\tprivate isShowing:boolean;\n\t\tprivate isShown:boolean;\n\t\tprivate isHiding:boolean;\n\n\t\tprivate static viewCount:number = 0;\n\t\tprivate static viewsById:util.Hash<View> = {};\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\texport class ButtonBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:IButton, hitArea:HTMLElement = null, isHoverCursorEnabled:boolean = true, isPreventDefaultEnabled:boolean = true, isStopPropagationEnabled:boolean = true) {\n\t\t\tthis.target = target;\n\t\t\tthis.hitArea = null;\n\t\t\tthis.isHoverCursorEnabled = isHoverCursorEnabled;\n\t\t\tthis.isPreventDefaultEnabled = isPreventDefaultEnabled;\n\t\t\tthis.isStopPropagationEnabled = isStopPropagationEnabled;\n\t\t\tthis.isEnabled = true;\n\t\t\tthis.isOver = false;\n\t\t\tthis.isDown = false;\n\t\t\tthis.isOverInternal = false;\n\t\t\tthis.isDownInternal = false;\n\t\t\tthis.defaultMouseCursor = '';\n\n\t\t\tthis.setHitArea(hitArea);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic over(useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isOver) return;\n\t\t\t\tthis.isOver = true;\n\t\t\t\tthis.target.implButtonOver(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic out(useTransition:boolean = true):void {\n\t\t\tthis._out(true, useTransition);\n\t\t}\n\n\t\tprivate _out(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isOver) return;\n\t\t\t\tthis.isOver = false;\n\t\t\t\tthis.target.implButtonOut(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic down(useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isDown) return;\n\t\t\t\tthis.isDown = true;\n\t\t\t\tthis.target.implButtonDown(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic up(useTransition:boolean = true):void {\n\t\t\tthis._up(true, useTransition);\n\t\t}\n\n\t\tprivate _up(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isDown) return;\n\t\t\t\tthis.isDown = false;\n\t\t\t\tthis.target.implButtonUp(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic click(useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled) {\n\t\t\t\tthis.target.implButtonClick(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tprivate on():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.addEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.addEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.addEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.addEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.addEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.addEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.addEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.addEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tprivate off():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.removeEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.removeEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.removeEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.removeEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.removeEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.removeEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tpublic getIsEnabled():boolean {\n\t\t\treturn this.isEnabled;\n\t\t}\n\n\t\tpublic setIsEnabled(value:boolean, useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled != value) {\n\t\t\t\tthis.isEnabled = value;\n\t\t\t\tif (this.isEnabled) {\n\t\t\t\t\tif (this.isOverInternal) {\n\t\t\t\t\t\tthis.over();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDownInternal) {\n\t\t\t\t\t\tthis.down();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.isOver) {\n\t\t\t\t\t\tthis._out(false);\n\t\t\t\t\t\tthis.isOverInternal = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDown) {\n\t\t\t\t\t\tthis._up(false);\n\t\t\t\t\t\tthis.isDownInternal = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.target.implButtonChangeEnabled(this.isEnabled, useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsOver():boolean {\n\t\t\treturn this.isOver;\n\t\t}\n\n\t\tpublic getIsDown():boolean {\n\t\t\treturn this.isDown;\n\t\t}\n\n\t\tpublic getHitArea():HTMLElement {\n\t\t\treturn this.hitArea;\n\t\t}\n\n\t\tpublic setHitArea(hitArea:HTMLElement):void {\n\t\t\tif (this.hitArea !== hitArea) {\n\t\t\t\tthis.off();\n\t\t\t\tthis.hitArea = hitArea;\n\t\t\t\tthis.on();\n\t\t\t}\n\t\t}\n\n\t\tpublic clearHitArea():void {\n\t\t\tthis.setHitArea(null);\n\t\t}\n\n\t\tpublic getIsPreventDefaultEnabled():boolean {\n\t\t\treturn this.isPreventDefaultEnabled;\n\t\t}\n\n\t\tpublic setIsPreventDefaultEnabled(enabled:boolean):void {\n\t\t\tthis.isPreventDefaultEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsStopPropagationEnabled():boolean {\n\t\t\treturn this.isStopPropagationEnabled;\n\t\t}\n\n\t\tpublic setIsStopPropagationEnabled(enabled:boolean):void {\n\t\t\tthis.isStopPropagationEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsHoverCursorEnabled():boolean {\n\t\t\treturn this.isHoverCursorEnabled;\n\t\t}\n\n\t\tpublic setIsHoverCursorEnabled(enabled:boolean):void {\n\t\t\tthis.isHoverCursorEnabled = enabled;\n\t\t}\n\n\t\tprivate applyMouseCursor():void {\n\t\t\tif (this.isHoverCursorEnabled) {\n\t\t\t\tif (this.isOverInternal && this.isEnabled && this.hitArea != null) {\n\t\t\t\t\tthis.defaultMouseCursor = this.hitArea.style.cursor;\n\t\t\t\t\tthis.hitArea.style.cursor = 'pointer';\n\t\t\t\t} else {\n\t\t\t\t\tthis.hitArea.style.cursor = this.defaultMouseCursor != '' ? this.defaultMouseCursor : 'auto';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// --------------------------------------------------\n\t\t// Mouse Event\n\n\t\tprivate mouseOverHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.over();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseOutHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.out();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseDownHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate mouseUpHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\t\tprivate clickHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.click();\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Touch Event\n\n\t\tprivate touchStartHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate touchEndHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t\tthis.click();\n\t\t};\n\n\t\tprivate touchCancelHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:IButton;\n\t\tprivate hitArea:HTMLElement;\n\t\tprivate isEnabled:boolean;\n\t\tprivate isOver:boolean;\n\t\tprivate isDown:boolean;\n\t\tprivate isOverInternal:boolean;\n\t\tprivate isDownInternal:boolean;\n\t\tprivate isPreventDefaultEnabled:boolean;\n\t\tprivate isStopPropagationEnabled:boolean;\n\t\tprivate isHoverCursorEnabled:boolean;\n\t\tprivate defaultMouseCursor:string;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\texport class SelectionBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:ISelection) {\n\t\t\tthis.target = target;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic select(useTransition:boolean = true):void {\n\t\t\tif (this.isSelected) return;\n\t\t\tthis.isSelected = true;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic deselect(useTransition:boolean = true):void {\n\t\t\tif (!this.isSelected) return;\n\t\t\tthis.isSelected = false;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic getIsSelected():boolean {\n\t\t\treturn this.isSelected;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:ISelection;\n\t\tprivate isSelected:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class DeviceInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tconst u:string = window.navigator.userAgent.toLowerCase();\n\n\t\t\t// Device\n\t\t\tthis.isTablet = (u.indexOf('windows') != -1 && u.indexOf('touch') != -1)\n\t\t\t\t|| u.indexOf('ipad') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') == -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('tablet') != -1)\n\t\t\t\t|| u.indexOf('kindle') != -1\n\t\t\t\t|| u.indexOf('silk') != -1\n\t\t\t\t|| u.indexOf('playbook') != -1;\n\n\t\t\tthis.isMobile = (u.indexOf('windows') != -1 && u.indexOf('phone') != -1)\n\t\t\t\t|| u.indexOf('iphone') != -1\n\t\t\t\t|| u.indexOf('ipod') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| u.indexOf('blackberry') != -1;\n\n\t\t\tthis.isDesktop = !this.isTablet && !this.isMobile;\n\n\t\t\t// OS\n\t\t\tthis.isIOS = u.indexOf('ipad') != -1 || u.indexOf('iphone') != -1 || u.indexOf('ipod') != -1;\n\t\t\tthis.isAndroid = u.indexOf('android') != -1 && u.indexOf('mobile') != -1;\n\n\t\t\t// Browser\n\t\t\tif(u.indexOf('msie') != -1 || u.indexOf('trident') != -1) {\n\t\t\t\tthis.isIE = true;\n\t\t\t} else if(u.indexOf('edge') != -1) {\n\t\t\t\tthis.isEdge = true;\n\t\t\t} else if(u.indexOf('chrome') != -1) {\n\t\t\t\tthis.isChrome = true;\n\t\t\t} else if(u.indexOf('safari') != -1) {\n\t\t\t\tthis.isSafari = true;\n\t\t\t} else if(u.indexOf('firefox') != -1) {\n\t\t\t\tthis.isFireFox = true;\n\t\t\t} else if(u.indexOf('opera') != -1) {\n\t\t\t\tthis.isOpera = true;\n\t\t\t} else {\n\t\t\t\tthis.isUnknownBrowser = true;\n\t\t\t}\n\n\t\t\t// Language\n\t\t\ttry {\n\t\t\t\tconst navigator = window.navigator;\n\t\t\t\tif (this.isChrome) {\n\t\t\t\t\tthis.langFull = (navigator.languages[0] || navigator['browserLanguage'] || navigator.language || navigator['userLanguage']);\n\t\t\t\t} else {\n\t\t\t\t\tthis.langFull = (navigator['browserLanguage'] || navigator.language || navigator['userLanguage']);\n\t\t\t\t}\n\t\t\t\tthis.lang = this.langFull.substr(0, 2);\n\t\t\t} catch (exception) {\n\t\t\t\tthis.lang =  undefined;\n\t\t\t\tthis.langFull =  undefined;\n\t\t\t}\n\n\t\t\t// Capability\n\t\t\tthis.isTouchEnabled = (typeof window.ontouchstart) !== 'undefined';\n\t\t\tthis.isDownloadEnabled = !this.isIOS;\n\n\t\t\ttry {\n\t\t\t\tconst canvas:HTMLCanvasElement = document.createElement('canvas');\n\t\t\t\tconst webGlContext:WebGLRenderingContext = <WebGLRenderingContext>(canvas.getContext('webgl') || canvas.getContext('experimental-webgl'));\n\t\t\t\tthis.isWebGlEnabled = !!(window.WebGLRenderingContext && webGlContext && webGlContext.getShaderPrecisionFormat);\n\t\t\t} catch (e) {\n\t\t\t\tthis.isWebGlEnabled = false;\n\t\t\t}\n\n\t\t\t// Resolution\n\t\t\tthis.devicePixelRatio = window.devicePixelRatio;\n\t\t\tthis.isRetina = this.devicePixelRatio > 1;\n\t\t}\n\n\t\t// --------------------\n\t\t// Device\n\n\t\tpublic static getIsDesktop():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDesktop;\n\t\t}\n\n\t\tpublic static getIsTablet():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTablet;\n\t\t}\n\n\t\tpublic static getIsMobile():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isMobile;\n\t\t}\n\n\t\t// --------------------\n\t\t// OS\n\n\t\tpublic static getIsIOS():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIOS;\n\t\t}\n\n\t\tpublic static getIsAndroid():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isAndroid;\n\t\t}\n\n\t\t// --------------------\n\t\t// Browser\n\n\t\tpublic static getIsIE():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIE;\n\t\t}\n\n\t\tpublic static getIsEdge():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isEdge;\n\t\t}\n\n\t\tpublic static getIsChrome():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isChrome;\n\t\t}\n\n\t\tpublic static getIsSafari():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isSafari;\n\t\t}\n\n\t\tpublic static getIsFireFox():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isFireFox;\n\t\t}\n\n\t\tpublic static getIsOpera():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isOpera;\n\t\t}\n\n\t\tpublic static getIsUnknownBrowser():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isUnknownBrowser;\n\t\t}\n\n\t\t// --------------------\n\t\t// Language\n\n\t\tpublic static getLang():string {\n\t\t\tthis.initialize();\n\t\t\treturn this.lang;\n\t\t}\n\n\t\tpublic static getLangFull():string {\n\t\t\tthis.initialize();\n\t\t\treturn this.langFull;\n\t\t}\n\n\t\t// --------------------\n\t\t// Capability\n\n\t\tpublic static getIsTouchEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTouchEnabled;\n\t\t}\n\n\t\tpublic static getIsDownloadEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDownloadEnabled;\n\t\t}\n\n\t\t// see: https://qiita.com/tonkotsuboy_com/items/cdffcdd7bdccac371292\n\t\tpublic static getIsWebGlEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isWebGlEnabled;\n\t\t}\n\n\t\t// --------------------\n\t\t// Resolution\n\n\t\tpublic static getIsRetina():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isRetina;\n\t\t}\n\n\t\tpublic static getDevicePixelRatio():number {\n\t\t\tthis.initialize();\n\t\t\treturn this.devicePixelRatio;\n\t\t}\n\n\t\tpublic static getDpi():number {\n\t\t\tif (this.dpi == -1) {\n\t\t\t\tconst div:HTMLElement = document.createElement('div');\n\t\t\t\tdiv.setAttribute('style', 'height:1in;left:-100%;top:-100%;position:absolute;width:1in;');\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\tthis.dpi = div.offsetHeight;\n\t\t\t\tdocument.body.removeChild(div);\n\t\t\t}\n\t\t\treturn this.dpi;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isDesktop:boolean = false;\n\t\tprivate static isTablet:boolean = false;\n\t\tprivate static isMobile:boolean = false;\n\n\t\tprivate static isIOS:boolean = false;\n\t\tprivate static isAndroid:boolean = false;\n\n\t\tprivate static isIE:boolean = false;\n\t\tprivate static isEdge:boolean = false;\n\t\tprivate static isChrome:boolean = false;\n\t\tprivate static isSafari:boolean = false;\n\t\tprivate static isFireFox:boolean = false;\n\t\tprivate static isOpera:boolean = false;\n\t\tprivate static isUnknownBrowser:boolean = false;\n\n\t\tprivate static isTouchEnabled:boolean = false;\n\t\tprivate static isDownloadEnabled:boolean = false;\n\t\tprivate static isWebGlEnabled:boolean = false;\n\n\t\tprivate static isRetina:boolean = false;\n\t\tprivate static devicePixelRatio:number = 1;\n\t\tprivate static dpi:number = -1;\n\n\t\tprivate static lang:string;\n\t\tprivate static langFull:string;\n\n\t\tprivate static isInitialized:boolean = false;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\timport Time = alm.util.Time;\n\n\texport class LocalStorage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * データを有効期限までLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param expiredAt 有効期限（UNIXミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any, expiredAt:number = -1):boolean {\n\t\t\tif (!LocalStorage.isAvailable()) return false;\n\t\t\tconst record:{ value:string; expiredAt:number } = { value:JSON.stringify(value), expiredAt: expiredAt };\n\t\t\tlocalStorage.setItem(key, JSON.stringify(record));\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * データを期間でLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param milliseconds 保存期間（ミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static saveWithTerm(key:string, value:any, milliseconds:number = -1):boolean {\n\t\t\tconst expiredAt:number = milliseconds > 0 ? Time.now() + milliseconds : -1;\n\t\t\treturn LocalStorage.save(key, value, expiredAt);\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!LocalStorage.isAvailable()) return defaultValue;\n\t\t\tconst record:{ value:string; expiredAt:number } = JSON.parse(localStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\t// データが見つかった\n\t\t\t\tif (record.expiredAt > 0) {\n\t\t\t\t\t// 期限付きデータ\n\t\t\t\t\tif (Time.now() < record.expiredAt) {\n\t\t\t\t\t\t// 有効期限内\n\t\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 有効期限を過ぎているので破棄\n\t\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t\t\treturn defaultValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 永続データ\n\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!LocalStorage.isAvailable()) return;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (LocalStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem('__CKECK__', '__CKECK__');\n\t\t\t\t\tlocalStorage.removeItem('__CKECK__');\n\t\t\t\t\tLocalStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLocalStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn LocalStorage.isAvailable_;\n\t\t}\n\n\t\t/**\n\t\t * 各時間の尺度ミリ秒で合算する\n\t\t * @param dates 日\n\t\t * @param hours 時\n\t\t * @param minutes 分\n\t\t * @param seconds 秒\n\t\t * @param milliseconds ミリ秒\n\t\t * @returns {number} 合算されたミリ秒\n\t\t */\n\t\tpublic static toMilliseconds(dates:number = 0, hours:number = 0, minutes:number = 0, seconds:number = 0, milliseconds:number = 0):number {\n\t\t\treturn milliseconds + (seconds + (minutes + (hours + dates * 24) * 60) * 60) * 1000;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class SessionStorage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * データを保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any):boolean {\n\t\t\tif (!SessionStorage.isAvailable()) return false;\n\t\t\tsessionStorage.setItem(key, JSON.stringify(value));\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * データを読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!SessionStorage.isAvailable()) return defaultValue;\n\t\t\tconst record = JSON.parse(sessionStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\treturn JSON.parse(record.value);\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!SessionStorage.isAvailable()) return;\n\t\t\tsessionStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (SessionStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tsessionStorage.setItem('__CKECK__', '__CKECK__');\n\t\t\t\t\tsessionStorage.removeItem('__CKECK__');\n\t\t\t\t\tSessionStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tSessionStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SessionStorage.isAvailable_;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\t// https://github.com/nfriend/ts-keycode-enum\n\texport enum KeyCode {\n\t\tBackspace = 8,\n\t\tTab = 9,\n\t\tEnter = 13,\n\t\tShift = 16,\n\t\tCtrl = 17,\n\t\tAlt = 18,\n\t\tPauseBreak = 19,\n\t\tCapsLock = 20,\n\t\tEscape = 27,\n\t\tSpace = 32,\n\t\tPageUp = 33,\n\t\tPageDown = 34,\n\t\tEnd = 35,\n\t\tHome = 36,\n\n\t\tLeftArrow = 37,\n\t\tUpArrow = 38,\n\t\tRightArrow = 39,\n\t\tDownArrow = 40,\n\n\t\tInsert = 45,\n\t\tDelete = 46,\n\n\t\tKey0 = 48,\n\t\tKey1 = 49,\n\t\tKey2 = 50,\n\t\tKey3 = 51,\n\t\tKey4 = 52,\n\t\tKey5 = 53,\n\t\tKey6 = 54,\n\t\tKey7 = 55,\n\t\tKey8 = 56,\n\t\tKey9 = 57,\n\n\t\tClosedParen = Key0,\n\t\tExclamationMark = Key1,\n\t\tAtSign = Key2,\n\t\tPoundSign = Key3,\n\t\tHash = PoundSign,\n\t\tDollarSign = Key4,\n\t\tPercentSign = Key5,\n\t\tCaret = Key6,\n\t\tHat = Caret,\n\t\tAmpersand = Key7,\n\t\tStar = Key8,\n\t\tAsterik = Star,\n\t\tOpenParen = Key9,\n\n\t\tA = 65,\n\t\tB = 66,\n\t\tC = 67,\n\t\tD = 68,\n\t\tE = 69,\n\t\tF = 70,\n\t\tG = 71,\n\t\tH = 72,\n\t\tI = 73,\n\t\tJ = 74,\n\t\tK = 75,\n\t\tL = 76,\n\t\tM = 77,\n\t\tN = 78,\n\t\tO = 79,\n\t\tP = 80,\n\t\tQ = 81,\n\t\tR = 82,\n\t\tS = 83,\n\t\tT = 84,\n\t\tU = 85,\n\t\tV = 86,\n\t\tW = 87,\n\t\tX = 88,\n\t\tY = 89,\n\t\tZ = 90,\n\n\t\tLeftWindowKey = 91,\n\t\tRightWindowKey = 92,\n\t\tSelectKey = 93,\n\n\t\tNumpad0 = 96,\n\t\tNumpad1 = 97,\n\t\tNumpad2 = 98,\n\t\tNumpad3 = 99,\n\t\tNumpad4 = 100,\n\t\tNumpad5 = 101,\n\t\tNumpad6 = 102,\n\t\tNumpad7 = 103,\n\t\tNumpad8 = 104,\n\t\tNumpad9 = 105,\n\n\t\tMultiply = 106,\n\t\tAdd = 107,\n\t\tSubtract = 109,\n\t\tDecimalPoint = 110,\n\t\tDivide = 111,\n\n\t\tF1 = 112,\n\t\tF2 = 113,\n\t\tF3 = 114,\n\t\tF4 = 115,\n\t\tF5 = 116,\n\t\tF6 = 117,\n\t\tF7 = 118,\n\t\tF8 = 119,\n\t\tF9 = 120,\n\t\tF10 = 121,\n\t\tF11 = 122,\n\t\tF12 = 123,\n\n\t\tNumLock = 144,\n\t\tScrollLock = 145,\n\n\t\tSemiColon = 186,\n\t\tEquals = 187,\n\t\tComma = 188,\n\t\tDash = 189,\n\t\tPeriod = 190,\n\t\tUnderScore = Dash,\n\t\tPlusSign = Equals,\n\t\tForwardSlash = 191,\n\t\tTilde = 192,\n\t\tGraveAccent = Tilde,\n\n\t\tOpenBracket = 219,\n\t\tClosedBracket = 221,\n\t\tQuote = 222\n\t}\n\n\n\n\n\n\texport class KeyWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] start');\n\n\t\t\twindow.addEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.addEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] stop');\n\n\t\t\twindow.removeEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.removeEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowKeyDownHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] == null) {\n\t\t\t\tKeyWatcher.isKeyPressedByKeyCode[keyCode] = true;\n\t\t\t\t++KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t} else if (KeyWatcher.isContinuousPressEnabled) {\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\t\tprivate static windowKeyUpHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] != null) {\n\t\t\t\tdelete KeyWatcher.isKeyPressedByKeyCode[keyCode];\n\t\t\t\t--KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_UP, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getIsAnyKeyPressed():boolean { return this.pressedKeyCount > 0; }\n\t\tprivate static pressedKeyCount:number = 0;\n\n\t\tpublic static getIsKeyPressed(keyCode:number):boolean { return this.isKeyPressedByKeyCode[keyCode] != null; }\n\t\tprivate static isKeyPressedByKeyCode:util.Hash<boolean> = {};\n\n\n\t\tpublic static getIsContinuousPressEnabled():boolean { return this.isContinuousPressEnabled; }\n\t\tpublic static setIsContinuousPressEnabled(enabled:boolean):void { this.isContinuousPressEnabled = enabled; }\n\t\tprivate static isContinuousPressEnabled:boolean = false;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static isLongPressed:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class KeyWatcherEvent extends alm.event.Event<KeyWatcher> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic KEY_UP:string = 'keyUp';\n\t\tstatic KEY_DOWN:string = 'keyDown';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:KeyWatcher, originalEvent:KeyboardEvent = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.key = this.originalEvent.key;\n\t\t\tthis.keyCode = this.originalEvent.keyCode;\n\t\t\tthis.altKey = this.originalEvent.altKey;\n\t\t\tthis.ctrlKey = this.originalEvent.ctrlKey;\n\t\t\tthis.shiftKey = this.originalEvent.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():KeyWatcherEvent {\n\t\t\treturn new KeyWatcherEvent(this.type, this.target, this.originalEvent);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[KeyWatcherEvent] type = ' + this.type + ', key = ' + this.key + ', keyCode = ' + this.keyCode + ', altKey = ' + this.altKey + ', ctrlKey = ' + this.ctrlKey + ', shiftKey = ' + this.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly originalEvent:KeyboardEvent;\n\t\tpublic readonly key:string;\n\t\tpublic readonly keyCode:number;\n\t\tpublic readonly altKey:boolean;\n\t\tpublic readonly ctrlKey:boolean;\n\t\tpublic readonly shiftKey:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start(target:Window = null):void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] start');\n\n\t\t\tthis.window = target || window;\n\n\t\t\tthis.window.addEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('scroll', this.windowScrollHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] stop');\n\n\t\t\tthis.window.removeEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('scroll', this.windowScrollHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tthis.windowWidth = this.window.innerWidth;\n\t\t\tthis.windowHeight = this.window.innerHeight;\n\n\t\t\tthis.scrollTop = (this.window.pageYOffset !== undefined) ? this.window.pageYOffset : document.documentElement.scrollTop;\n\t\t\tthis.scrollBottom = this.scrollTop + this.windowHeight;\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static calcScrolledPosition(y:number):number {\n\t\t\treturn y - this.scrollTop;\n\t\t};\n\n\t\tpublic static calcScrolledPositionRatio(y:number):number {\n\t\t\treturn this.calcScrolledPosition(y) / this.windowHeight;\n\t\t}\n\n\t\tprivate static resize(event:Event):void {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.RESIZE, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\tprivate static windowResizeHandler = (event:Event):void => {\n\t\t\tif (!DeviceInfo.getIsDesktop() && WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.resize');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowOrientationChangeHandler = (event:Event):void => {\n\t\t\tif (DeviceInfo.getIsDesktop() || !WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.orientationchange');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowScrollHandler = (event:Event):void => {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.SCROLL, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getWindow():Window { return this.window; }\n\t\tprivate static window:Window = null;\n\n\t\tpublic static getScrollTop():number { return this.scrollTop; }\n\t\tprivate static scrollTop:number;\n\n\t\tpublic static getScrollBottom():number { return this.scrollBottom; }\n\t\tprivate static scrollBottom:number;\n\n\t\tpublic static getWindowWidth():number { return this.windowWidth; }\n\t\tprivate static windowWidth:number = 0;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tpublic static getIsMobileOrientationResize():boolean { return this.isMobileOrientationResize; }\n\t\tpublic static setIsMobileOrientationResize(value:boolean):void { this.isMobileOrientationResize = value; }\n\t\tprivate static isMobileOrientationResize:boolean = true;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcherEvent extends alm.event.Event<WindowWatcher> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SCROLL:string = 'scroll';\n\t\tstatic RESIZE:string = 'resize';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:WindowWatcher, originalEvent:Event = null, scrollTop:number = 0, scrollBottom:number = 0, windowWidth:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollBottom = scrollBottom;\n\t\t\tthis.windowWidth = windowWidth;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():WindowWatcherEvent {\n\t\t\treturn new WindowWatcherEvent(this.type, this.target, this.originalEvent, this.scrollTop, this.scrollBottom, this.windowWidth, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[WindowWatcherEvent] type = ' + this.type + ', scrollTop = ' + this.scrollTop + ', scrollBottom = ' + this.scrollBottom + ', windowWidth = ' + this.windowWidth + ', windowHeight = ' + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly originalEvent:Event;\n\t\tpublic readonly scrollTop:number;\n\t\tpublic readonly scrollBottom:number;\n\t\tpublic readonly windowWidth:number;\n\t\tpublic readonly windowHeight:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\texport class ScrollSectionTriggerEvent extends alm.event.Event<ScrollSectionTrigger> {\n\n\t\tpublic static CHANGE:string = 'ScrollSectionTriggerEvent.CHANGE';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, target:ScrollSectionTrigger, currentSectionIndex:number, prevSectionIndex:number) {\n\t\t\tsuper(eventType, target);\n\n\t\t\tthis.currentSectionIndex = currentSectionIndex;\n\t\t\tthis.prevSectionIndex = prevSectionIndex;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentSectionIndex:number;\n\t\tpublic readonly prevSectionIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\timport Logger = alm.debug.Logger;\n\timport WindowWatcher = alm.browser.WindowWatcher;\n\timport WindowWatcherEvent = alm.browser.WindowWatcherEvent;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class ScrollSectionTrigger extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(threshold:number = 0.5) {\n\t\t\tsuper();\n\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.scrollPosition = null;\n\t\t\tthis.triggerPositions = [];\n\t\t\tthis.thresholdRatio = threshold;\n\t\t\tthis.thresholdPosition = null;\n\n\t\t\tthis.currentSectionIndex = -1;\n\t\t\tthis.prevSectionIndex = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.SCROLL, this.windowScrollHandler);\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.start();\n\n\t\t\tthis.updateThresholdPosition();\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.SCROLL, this.windowScrollHandler);\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.stop();\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getCurrentIndex():number {\n\t\t\treturn this.currentSectionIndex;\n\t\t}\n\n\t\tpublic getPrevIndex():number {\n\t\t\treturn this.prevSectionIndex;\n\t\t}\n\n\t\tpublic getTriggerPositions():number[] {\n\t\t\treturn this.triggerPositions.concat();\n\t\t}\n\n\t\tpublic setTriggerPositions(positions:number[]):void {\n\t\t\tthis.triggerPositions = positions.concat();\n\t\t\tthis.triggerPositions.sort((a, b):number => { return a - b; });\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tpublic getThreshold():number {\n\t\t\treturn this.thresholdRatio;\n\t\t}\n\n\t\tpublic setThreshold(ratio:number):void {\n\t\t\tthis.thresholdRatio = ratio;\n\t\t\tthis.updateThresholdPosition();\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tprivate check():void {\n\t\t\tif (this.scrollPosition == null) {\n\t\t\t\tLogger.warn('[RangeTrigger] current position is need set');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet nearestTriggerIndex = -1;\n\t\t\tlet nearestScrolledTriggerPosition = -1;\n\t\t\tlet nearestDistance:number = Number.MAX_VALUE;\n\t\t\tconst triggerPositionCount = this.triggerPositions.length;\n\t\t\tfor (let i = 0; i < triggerPositionCount; ++i) {\n\t\t\t\tconst scrolledTriggerPosition = this.triggerPositions[i] - this.scrollPosition;\n\t\t\t\tconst distance = Math.abs(scrolledTriggerPosition - this.thresholdPosition);\n\t\t\t\tif (distance < nearestDistance) {\n\t\t\t\t\tnearestDistance = distance;\n\t\t\t\t\tnearestTriggerIndex = i;\n\t\t\t\t\tnearestScrolledTriggerPosition = scrolledTriggerPosition;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestTriggerIndex >= 0) {\n\t\t\t\tlet sectionIndex = -1;\n\t\t\t\tif (nearestScrolledTriggerPosition > this.thresholdPosition) {\n\t\t\t\t\tsectionIndex = nearestTriggerIndex;\n\t\t\t\t} else {\n\t\t\t\t\tsectionIndex = nearestTriggerIndex + 1;\n\t\t\t\t}\n\n\t\t\t\tif (this.currentSectionIndex != sectionIndex) {\n\t\t\t\t\tthis.prevSectionIndex = this.currentSectionIndex;\n\t\t\t\t\tthis.currentSectionIndex = sectionIndex;\n\t\t\t\t\tthis.dispatchEvent(new ScrollSectionTriggerEvent(ScrollSectionTriggerEvent.CHANGE, this, this.currentSectionIndex, this.prevSectionIndex));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate updateThresholdPosition():void {\n\t\t\tthis.thresholdPosition = WindowWatcher.getWindowHeight() * this.thresholdRatio;\n\t\t}\n\n\t\tprivate updateScrollPosition():void {\n\t\t\tthis.scrollPosition = WindowWatcher.getScrollTop();\n\t\t}\n\n\t\tprivate windowScrollHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t};\n\n\t\tprivate windowResizeHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.updateThresholdPosition();\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate scrollPosition:number;\n\t\tprivate triggerPositions:number[];\n\t\tprivate thresholdRatio:number;\n\t\tprivate thresholdPosition:number;\n\n\t\tprivate currentSectionIndex:number;\n\t\tprivate prevSectionIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\timport WindowWatcher = alm.browser.WindowWatcher;\n\timport WindowWatcherEvent = alm.browser.WindowWatcherEvent;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class ResponsiveObserver extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.breakPoints = [];\n\t\t\tthis.breakPointCount = 0;\n\n\t\t\tthis.currentIndex = -1;\n\t\t\tthis.prevIndex = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.start();\n\n\t\t\tthis.check();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.stop();\n\t\t}\n\n\t\tpublic setBreakpoints(breakPoints:number[]):void {\n\t\t\tthis.breakPoints = breakPoints.concat();\n\t\t\tthis.breakPointCount = this.breakPoints.length;\n\t\t\tthis.breakPoints.sort((a, b):number => { return a - b; });\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getCurrentIndex():number {\n\t\t\treturn this.currentIndex;\n\t\t}\n\n\t\tpublic getPrevIndex():number {\n\t\t\treturn this.prevIndex;\n\t\t}\n\n\t\tpublic getBreakPoints():number[] {\n\t\t\treturn this.breakPoints.concat();\n\t\t}\n\n\t\tpublic getBreakPointCount():number {\n\t\t\treturn this.breakPointCount;\n\t\t}\n\n\t\tprivate check():void {\n\t\t\tconst windowWidth = WindowWatcher.getWindowWidth();\n\t\t\tlet index;\n\t\t\tfor (index = 0; index < this.breakPointCount; ++index) {\n\t\t\t\tif (windowWidth <= this.breakPoints[index]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.currentIndex == index) return;\n\t\t\tthis.prevIndex = this.currentIndex;\n\t\t\tthis.currentIndex = index;\n\t\t\ttrace('[ResponsiveObserver] switch index :', this.prevIndex, '->', this.currentIndex, ', window width =', windowWidth);\n\n\t\t\tthis.dispatchEvent(new ResponsiveObserverEvent(ResponsiveObserverEvent.CHANGE, this, this.currentIndex, this.prevIndex));\n\t\t}\n\n\t\tprivate windowResizeHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.check();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate breakPoints:number[];\n\t\tprivate breakPointCount:number;\n\n\t\tprivate currentIndex:number;\n\t\tprivate prevIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\texport class ResponsiveObserverEvent extends alm.event.Event<ResponsiveObserver> {\n\n\t\tpublic static CHANGE:string = 'ResponsiveObserverEvent.CHANGE';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, target:ResponsiveObserver, currentIndex:number, prevIndex:number) {\n\t\t\tsuper(eventType, target);\n\n\t\t\tthis.currentIndex = currentIndex;\n\t\t\tthis.prevIndex = prevIndex;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentIndex:number;\n\t\tpublic readonly prevIndex:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Hash = alm.util.Hash;\n\n\texport class Scene extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.state = SceneState.Idling;\n\t\t\tthis.parent = null;\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\tthis.transferInfo = null;\n\t\t\tthis.onLoad = null;\n\t\t\tthis.onUnload = null;\n\t\t\tthis.onArrive = null;\n\t\t\tthis.onLeave = null;\n\t\t\tthis.onAscend = null;\n\t\t\tthis.onDescend = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child name \\'' + childName + '\\' is already contained.');\n\t\t\t\t} else {\n\t\t\t\t\t++this.numChildren;\n\t\t\t\t\tchild.parent = this;\n\t\t\t\t\tthis.childrenByName[childName] = child;\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic removeChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\t--this.numChildren;\n\t\t\t\t\tchild.parent = null;\n\t\t\t\t\tdelete this.childrenByName[childName];\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child name \\'' + childName + '\\' is not contained.');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic addChildren(children:Scene[]):Scene[] {\n\t\t\tconst addedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.addChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\taddedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn addedChildren;\n\t\t}\n\n\t\tpublic removeChildren(children:Scene[]):Scene[] {\n\t\t\tconst removedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.removeChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\tremovedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn removedChildren;\n\t\t}\n\n\t\tpublic removeAllChildren():Scene[] {\n\t\t\tconst children:Scene[] = [];\n\t\t\tlet child:Scene;\n\t\t\tfor (let name in this.childrenByName) {\n\t\t\t\tchild = this.childrenByName[name];\n\t\t\t\tchild.parent = null;\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\treturn children;\n\t\t}\n\n\t\tpublic contains(child:Scene|string):boolean {\n\t\t\tif (child) {\n\t\t\t\treturn this.childrenByName[typeof child == 'string' ? child : child.name] != null;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getState():SceneState {\n\t\t\treturn this.state;\n\t\t}\n\n\t\tpublic getLastState():SceneState {\n\t\t\treturn this.lastState;\n\t\t}\n\n\t\tpublic getParent():Scene {\n\t\t\treturn this.parent;\n\t\t}\n\n\t\tpublic getChildByName(name:string):Scene {\n\t\t\treturn this.childrenByName[name] || null;\n\t\t}\n\n\t\tpublic getChildrenByName():Hash<Scene> {\n\t\t\treturn this.childrenByName;\n\t\t}\n\n\t\tpublic getNumChildren():number {\n\t\t\treturn this.numChildren;\n\t\t}\n\n\t\tpublic getManager():SceneManager {\n\t\t\tif (this.parent) {\n\t\t\t\treturn this.parent.getManager();\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getManager was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getPath():string {\n\t\t\tconst manager:SceneManager = this.getManager();\n\t\t\tif (manager) {\n\t\t\t\tconst names:string[] = [this.name];\n\t\t\t\tlet scene:Scene = this;\n\t\t\t\twhile (scene = scene.parent) {\n\t\t\t\t\tnames.unshift(scene.name);\n\t\t\t\t}\n\t\t\t\treturn manager.getScenePathByNames(names);\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getPath was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getTransferInfo():SceneTransferInfo {\n\t\t\treturn this.transferInfo || null;\n\t\t}\n\n\t\tpublic gotoScene(path:string, message:any = null):void {\n\t\t\tthis.getManager().goto(path, message);\n\t\t}\n\n\n\n\n\n\t\tpublic _load(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Loading;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLoad) == 'function' ? this.onLoad() : this.implOnLoad();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _unload(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Unloading;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onUnload) == 'function' ? this.onUnload() : this.implOnUnload();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _arrive(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Arriving;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onArrive) == 'function' ? this.onArrive() : this.implOnArrive();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _leave(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Leaving;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLeave) == 'function' ? this.onLeave() : this.implOnLeave();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _ascend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Ascending;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onAscend) == 'function' ? this.onAscend() : this.implOnAscend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _descend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Descending;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onDescend) == 'function' ? this.onDescend() : this.implOnDescend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\n\n\n\n\t\tprotected implOnLoad():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnUnload():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnArrive():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnLeave():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnAscend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnDescend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t// The callback function is called preferentially over the override\n\t\tpublic onLoad:() => cmd.Command;\n\t\tpublic onUnload:() => cmd.Command;\n\t\tpublic onArrive:() => cmd.Command;\n\t\tpublic onLeave:() => cmd.Command;\n\t\tpublic onAscend:() => cmd.Command;\n\t\tpublic onDescend:() => cmd.Command;\n\n\t\tprivate name:string;\n\t\tprivate state:SceneState;\n\t\tprivate lastState:SceneState;\n\t\tprivate parent:Scene;\n\t\tprivate childrenByName:alm.util.Hash<Scene>;\n\t\tprivate numChildren:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneEvent extends Event<Scene> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static LOAD:string = 'SceneEvent.load';\n\t\tpublic static UNLOAD:string = 'SceneEvent.unload';\n\t\tpublic static ARRIVE:string = 'SceneEvent.arrive';\n\t\tpublic static LEAVE:string = 'SceneEvent.leave';\n\t\tpublic static ASCEND:string = 'SceneEvent.ascend';\n\t\tpublic static DESCEND:string = 'SceneEvent.descend';\n\n\t\tpublic static LOAD_COMPLETE:string = 'SceneEvent.loadComplete';\n\t\tpublic static UNLOAD_COMPLETE:string = 'SceneEvent.unloadComplete';\n\t\tpublic static ARRIVE_COMPLETE:string = 'SceneEvent.arriveComplete';\n\t\tpublic static LEAVE_COMPLETE:string = 'SceneEvent.leaveComplete';\n\t\tpublic static ASCEND_COMPLETE:string = 'SceneEvent.ascendComplete';\n\t\tpublic static DESCEND_COMPLETE:string = 'SceneEvent.descendComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:Scene) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneEvent {\n\t\t\treturn new SceneEvent(this.type, this.target);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\texport class SceneTransferInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(transferId:number, departurePath:string, destinationPath:string, message:any = null) {\n\t\t\tthis.transferId = transferId;\n\t\t\tthis.departurePath = departurePath;\n\t\t\tthis.destinationPath = destinationPath;\n\t\t\tthis.message = message;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTransferId():number {\n\t\t\treturn this.transferId;\n\t\t}\n\n\t\tpublic getDeparturePath():string {\n\t\t\treturn this.departurePath;\n\t\t}\n\n\t\tpublic getDestinationPath():string {\n\t\t\treturn this.destinationPath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic message:any;\n\n\t\tprivate transferId:number;\n\t\tprivate departurePath:string;\n\t\tprivate destinationPath:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\texport enum SceneState {\n\t\tIdling,\n\t\tLoading,\n\t\tUnloading,\n\t\tArriving,\n\t\tLeaving,\n\t\tAscending,\n\t\tDescending,\n\t}\n\n\texport function getSceneStateString(state:SceneState):string {\n\t\tswitch (state) {\n\t\t\tcase SceneState.Idling:\n\t\t\t\treturn 'idling';\n\t\t\tcase SceneState.Loading:\n\t\t\t\treturn 'loading';\n\t\t\tcase SceneState.Unloading:\n\t\t\t\treturn 'unloading';\n\t\t\tcase SceneState.Arriving:\n\t\t\t\treturn 'arriving';\n\t\t\tcase SceneState.Leaving:\n\t\t\t\treturn 'leaving';\n\t\t\tcase SceneState.Ascending:\n\t\t\t\treturn 'ascending';\n\t\t\tcase SceneState.Descending:\n\t\t\t\treturn 'descending';\n\t\t}\n\t\treturn '';\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport enum Direction {\n\t\tStatic,\n\t\tSibling,\n\t\tAscend,\n\t\tDescend,\n\t}\n\n\texport function getDirectionString(direction:Direction):string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.Static:\n\t\t\t\treturn 'static';\n\t\t\tcase Direction.Sibling:\n\t\t\t\treturn 'sibling';\n\t\t\tcase Direction.Ascend:\n\t\t\t\treturn 'ascend';\n\t\t\tcase Direction.Descend:\n\t\t\t\treturn 'descend';\n\t\t}\n\t\treturn '';\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport class Waypoint {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(path:string, level:number) {\n\t\t\tthis.path = path;\n\t\t\tthis.level = level;\n\t\t\tthis.from = Direction.Static;\n\t\t\tthis.to = Direction.Static;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getPath():string {\n\t\t\treturn this.path;\n\t\t}\n\n\t\tpublic getLevel():number {\n\t\t\treturn this.level;\n\t\t}\n\n\t\tpublic getFrom():Direction {\n\t\t\treturn this.from;\n\t\t}\n\n\t\tpublic getTo():Direction {\n\t\t\treturn this.to;\n\t\t}\n\n\t\tpublic _setFrom(from:Direction):void {\n\t\t\tthis.from = from;\n\t\t}\n\n\t\tpublic _setTo(to:Direction):void {\n\t\t\tthis.to = to;\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[Waypoint] path = \\'' + this.path + '\\', level = ' + this.level + ', from = ' + getDirectionString(this.from) + ', to = ' + getDirectionString(this.to);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate path:string;\n\t\tprivate level:number;\n\t\tprivate from:Direction;\n\t\tprivate to:Direction;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport class RootScene extends Scene {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(manager:SceneManager) {\n\t\t\tsuper('');\n\t\t\tthis.manager = manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getManager():SceneManager {\n\t\t\treturn this.manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate manager:SceneManager;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport LoggerLevel = alm.debug.LoggerLevel;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Obj = alm.util.Obj;\n\timport RootScene = scn.core.RootScene;\n\n\texport class SceneManager extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string = '', rootSceneClass:(new (sceneManager:SceneManager) => RootScene) = RootScene) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.root = new rootSceneClass(this);\n\t\t\tthis.currentScene = null;\n\n\t\t\tthis.waypoints = [];\n\t\t\tthis.waypointIndex = -1;\n\t\t\tthis.lastState = SceneState.Idling;\n\t\t\tthis.eventIndex = -1;\n\t\t\tthis.transferId = -1;\n\t\t\tthis.transferInfo = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start(message:any = null):void {\n\t\t\tLogger.verbose('----- scene manager start -----');\n\t\t\tthis.goto('/', message);\n\t\t}\n\n\t\tpublic goto(path:string, message:any = null):void {\n\t\t\tpath = this.resolvePath(path);\n\n\t\t\t// Return if current destination and new destination is same.\n\t\t\tif (this.transferInfo && this.transferInfo.getDestinationPath() == path) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Build waypoints\n\t\t\tlet newWaypoints:core.Waypoint[] = [];\n\t\t\tif (this.waypointIndex != -1) {\n\t\t\t\tnewWaypoints = this.createWaypoints(this.waypoints[this.waypointIndex].getPath(), path);\n\t\t\t} else {\n\t\t\t\t// Init\n\t\t\t\tnewWaypoints = [new core.Waypoint('/', 0)];\n\t\t\t}\n\n\t\t\t// Transfer\n\t\t\tif (newWaypoints.length > 0) {\n\t\t\t\tconst isDestinationChanged:boolean = this.transferInfo != null;\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.waypointIndex = 0;\n\t\t\t\t\tthis.eventIndex = 0;\n\t\t\t\t\t++this.transferId;\n\t\t\t\t\tthis.waypoints = newWaypoints;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.verbose('destination is changed');\n\t\t\t\t\tLogger.verbose('waypoint index : ' + this.waypointIndex);\n\t\t\t\t\tthis.waypoints = this.waypoints.slice(0, this.waypointIndex + 1).concat(newWaypoints.slice(1));\n\t\t\t\t\tthis.setDirection(this.waypoints);\n\t\t\t\t\tthis.dumpWaypoint(this.waypoints);\n\t\t\t\t}\n\n\t\t\t\tthis.transferInfo = new SceneTransferInfo(this.transferId, this.waypoints[this.waypointIndex].getPath(), this.waypoints[this.waypoints.length - 1].getPath(), message);\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerTransferEvent(SceneManagerTransferEvent.TRANSFER_START, this, this.transferInfo));\n\t\t\t\t}\n\n\t\t\t\tthis.checkState();\n\t\t\t}\n\t\t}\n\n\t\tpublic resolvePath(path:string):string {\n\t\t\t// Relative to absolute\n\t\t\tif (path[0] != '/') {\n\t\t\t\tif (this.currentScene) {\n\t\t\t\t\tpath = this.currentScene.getPath() + '/' + path;\n\t\t\t\t} else {\n\t\t\t\t\tpath = '/' + path;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Normalize\n\t\t\tconst names:string[] = path.split('/');\n\t\t\tconst normalized:string[] = [];\n\t\t\tfor (let i:number = 0; i < names.length; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (name == '') continue;\n\t\t\t\tif (name == '.') continue;\n\t\t\t\tif (name == '..') {\n\t\t\t\t\tnormalized.pop();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnormalized.push(name);\n\t\t\t}\n\n\t\t\treturn '/' + normalized.join('/');\n\t\t}\n\n\t\tpublic addSceneAt(path:string):Scene {\n\t\t\tlet success:boolean = false;\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (i == n - 1) {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tLogger.warn('[SceneManager \\'' + this.name + '\\'] addSceneAt was failed, because path \\'' + path + '\\' is already exist.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tscene = scene.getChildByName(name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn success ? scene : null;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getRoot():Scene {\n\t\t\treturn this.root;\n\t\t}\n\n\t\tpublic getSceneByPath(path:string):Scene {\n\t\t\treturn this.getSceneBySceneNames(this.getSceneNamesByPath(path));\n\t\t}\n\n\t\tpublic getParentSceneByPath(path:string):Scene {\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tnames.pop();\n\t\t\treturn this.getSceneBySceneNames(names);\n\t\t}\n\n\t\tprivate getSceneBySceneNames(names:string[]):Scene {\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tscene = scene.getChildByName(names[i]);\n\t\t\t}\n\t\t\treturn scene;\n\t\t}\n\n\t\tpublic getSceneNamesByPath(path:string):string[] {\n\t\t\treturn path == '/' ? [''] : this.resolvePath(path).split('/');\n\t\t}\n\n\t\tpublic getSceneLevelByNames(names:string[]):number {\n\t\t\treturn names.length - 1;\n\t\t}\n\n\t\tpublic getScenePathByNames(names:string[]):string {\n\t\t\treturn names.length == 0 ? '/' : names.length == 1 ? ('/' + names[0]) : names.join('/');\n\t\t}\n\n\n\t\tprivate createWaypoints(departurePath:string, destinationPath:string):core.Waypoint[] {\n\t\t\tif (departurePath == destinationPath) {\n\t\t\t\tLogger.warn('[SceneManager] departure path and destination path is same, path = \\'' + departurePath + '\\'');\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tLogger.verbose('----- scene flow -----');\n\n\t\t\tconst waypoints:core.Waypoint[] = [\n\t\t\t\tnew core.Waypoint(departurePath, this.getSceneLevelByNames(this.getSceneNamesByPath(departurePath)))\n\t\t\t];\n\n\t\t\tconst departureNames:string[] = this.getSceneNamesByPath(departurePath);\n\t\t\tconst destinationNames:string[] = this.getSceneNamesByPath(destinationPath);\n\n\t\t\tLogger.verbose('    path');\n\t\t\tLogger.verbose('        current    : \\'' + departurePath + '\\'');\n\t\t\tLogger.verbose('        destination: \\'' + destinationPath + '\\'');\n\n\t\t\tLogger.verbose('    names');\n\t\t\tLogger.verbose('        current(' + departureNames.length + ')    : \\'' + departureNames + '\\'');\n\t\t\tLogger.verbose('        destination(' + destinationNames.length + '): \\'' + destinationNames + '\\'');\n\n\t\t\t// 折り返しを見つける\n\t\t\tlet turningLevel:number = 0;\n\t\t\tlet turningNames:string[] = [];\n\t\t\tlet turningPath:string;\n\t\t\tif (destinationPath == '/') {\n\t\t\t\tturningLevel = -1;\n\t\t\t\tturningNames = [];\n\t\t\t\tturningPath = '/';\n\t\t\t} else {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (departureNames[turningLevel] == destinationNames[turningLevel]) {\n\t\t\t\t\t\tturningNames.push(departureNames[turningLevel]);\n\t\t\t\t\t\t++turningLevel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t--turningLevel;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tturningPath = this.getScenePathByNames(turningNames);\n\t\t\t}\n\n\t\t\tLogger.verbose('    turning');\n\t\t\tLogger.verbose('        path     : ' + turningPath);\n\t\t\tLogger.verbose('        level    : ' + turningLevel);\n\t\t\tLogger.verbose('        names(' + turningNames.length + ') : \\'' + turningNames + '\\'');\n\n\t\t\t// 出発シーンから折り返しまで\n\t\t\t{\n\t\t\t\tconst names:string[] = departureNames.concat();\n\t\t\t\tlet prevPath:string = departurePath;\n\t\t\t\tfor (let i:number = departureNames.length - 1; i > turningLevel + 1; --i) {\n\t\t\t\t\tnames.pop();\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (turningPath == destinationPath && turningLevel > 0) {\n\t\t\t\t// 折り返しと到着シーンが同一\n\t\t\t\tconst from:core.Direction = turningLevel == waypoints[waypoints.length - 1].getLevel() ? core.Direction.Sibling : core.Direction.Ascend;\n\t\t\t\twaypoints.push(new core.Waypoint(turningPath, turningLevel));\n\t\t\t} else {\n\n\t\t\t\t// 折り返しから到達シーンまで\n\t\t\t\tconst names:string[] = turningNames.concat();\n\t\t\t\tconst prev:core.Waypoint = waypoints[waypoints.length - 1];\n\t\t\t\tlet prevPath:string = prev.getPath();\n\t\t\t\tlet prevLevel:number = prev.getLevel();\n\t\t\t\tfor (let i:number = turningLevel + 1; i < destinationNames.length; ++i) {\n\t\t\t\t\tconst name:string = destinationNames[i];\n\t\t\t\t\tnames.push(name);\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevLevel = level;\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 進行方向\n\t\t\tthis.setDirection(waypoints);\n\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tthis.dumpWaypoint(waypoints);\n\t\t\t}\n\n\t\t\treturn waypoints;\n\t\t}\n\n\t\tprivate setDirection(waypoints:core.Waypoint[]):void {\n\t\t\tconst n:number = waypoints.length;\n\t\t\tlet prev:core.Waypoint = null;\n\t\t\tlet point:core.Waypoint;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tpoint = waypoints[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tconst d:number = point.getLevel() - prev.getLevel();\n\t\t\t\t\tpoint._setFrom(d > 0 ? core.Direction.Descend : d < 0 ? core.Direction.Ascend : core.Direction.Sibling);\n\t\t\t\t\tprev._setTo(point.getFrom());\n\t\t\t\t}\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tprivate dumpWaypoint(waypoints:core.Waypoint[]):void {\n\t\t\tLogger.verbose('    waypoints');\n\t\t\tconst n:number = waypoints.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tLogger.verbose('        [' + i + '] ' + waypoints[i]);\n\t\t\t}\n\t\t\tLogger.verbose('');\n\t\t}\n\n\t\tpublic dumpAllPath():void {\n\t\t\tLogger.info('----- scene all path -----');\n\t\t\tthis._dumpAllPath(this.root);\n\t\t}\n\n\t\tprivate _dumpAllPath(parent:Scene):void {\n\t\t\tconst children = parent.getChildrenByName();\n\t\t\tObj.each(children, (name:string, child:Scene):void => {\n\t\t\t\tLogger.info(child.getPath());\n\t\t\t\tthis._dumpAllPath(child);\n\t\t\t});\n\t\t}\n\n\n\n\n\n\t\tprivate checkState():void {\n\t\t\t//trace('lastState : ' + scn.getSceneStateString(this.lastState));\n\n\t\t\t//trace(this.waypointIndex + ' / ' + this.waypoints.length);\n\n\t\t\tif (this.waypointIndex >= this.waypoints.length) {\n\t\t\t\tLogger.verbose('----- scene transfer complete -----');\n\t\t\t\tconst tmpTransferId:number = this.transferInfo.getTransferId();\n\t\t\t\tthis.waypointIndex = this.waypoints.length - 1;\n\t\t\t\tthis.dispatchEvent(new SceneManagerTransferEvent(SceneManagerTransferEvent.TRANSFER_COMPLETE, this, this.transferInfo));\n\t\t\t\tif (tmpTransferId == this.transferInfo.getTransferId()) {\n\t\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentScene) {\n\t\t\t\tconst currentWaypoint:core.Waypoint = this.waypoints[this.waypointIndex];\n\t\t\t\tconst currentWaypointPath = currentWaypoint.getPath();\n\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypointPath);\n\n\t\t\t\tif (!this.currentScene) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerRequireSceneEvent(SceneManagerRequireSceneEvent.REQUIRE_SCENE, this, currentWaypointPath));\n\t\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypointPath);\n\t\t\t\t}\n\t\t\t\tif (!this.currentScene) {\n\t\t\t\t\tLogger.warn('[SceneManager] scene is null : scene path =', currentWaypointPath);\n\t\t\t\t}\n\n\t\t\t\t// Departure scene\n\t\t\t\tif (this.waypoints.length > 1 && this.waypointIndex == 0) {\n\t\t\t\t\t//trace('Departure scene');\n\n\t\t\t\t\t// Leave\n\t\t\t\t\tif (this.lastState != SceneState.Leaving && this.currentScene.getLastState() == SceneState.Arriving) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Leave   : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._leave(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Departure to child\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tthis.checkState();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Through scene\n\t\t\t\tif (this.waypointIndex > 0 && this.waypointIndex < this.waypoints.length - 1) {\n\t\t\t\t\t//trace('Through scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ascend\n\t\t\t\t\tif (this.lastState != SceneState.Ascending && currentWaypoint.getFrom() == core.Direction.Ascend) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Ascend  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._ascend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Descend\n\t\t\t\t\tif (this.lastState != SceneState.Descending && currentWaypoint.getTo() == core.Direction.Descend) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Descend : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._descend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Destination scene\n\t\t\t\tif (this.waypointIndex == this.waypoints.length - 1) {\n\t\t\t\t\t//trace('Destination scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Arrive\n\t\t\t\t\tif (this.lastState != SceneState.Arriving) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Arrive  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._arrive(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t//trace('Init scene');\n\n\t\t\t\t// Init\n\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\tthis.currentScene = this.root;\n\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t}\n\t\t}\n\n\t\tprivate sceneLoadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Loading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneUnloadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Unloading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneArriveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Arriving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneLeaveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Leaving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneAscendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Ascending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneDescendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Descending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate name:string;\n\t\tprivate root:Scene;\n\t\tprivate currentScene:Scene;\n\n\t\tprivate waypoints:core.Waypoint[];\n\t\tprivate waypointIndex:number;\n\t\tprivate lastState:SceneState;\n\t\tprivate eventIndex:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t\tprivate transferId:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerTransferEvent extends Event<SceneManager> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TRANSFER_START:string = 'SceneManagerTransferEvent.transferStart';\n\t\tpublic static TRANSFER_COMPLETE:string = 'SceneManagerTransferEvent.transferComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:SceneManager, transferInfo:SceneTransferInfo) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.transferInfo = transferInfo;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerTransferEvent {\n\t\t\treturn new SceneManagerTransferEvent(this.type, this.target, this.transferInfo);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneManagerTransferEvent] type = ' + this.type;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly transferInfo:SceneTransferInfo;\n\t}\n}\n"]}
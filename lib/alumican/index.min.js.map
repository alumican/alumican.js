{"version":3,"sources":["../src/alumican/cmd/Parallel.ts","../src/alumican/scn/core/Waypoint.ts","../src/alumican/index.ts","../src/alumican/alm/debug/Logger.ts","../src/alumican/alm/util/Time.ts","../src/alumican/alm/math/Easing.ts","../src/alumican/alm/browser/QueryString.ts","../src/alumican/alm/debug/FpsMonitor.ts","../src/alumican/alm/event/Event.ts","../src/alumican/alm/event/EventDispatcher.ts","../src/alumican/cmd/CommandState.ts","../src/alumican/cmd/CommandEvent.ts","../src/alumican/cmd/Command.ts","../src/alumican/cmd/CommandList.ts","../src/alumican/cmd/Break.ts","../src/alumican/cmd/Return.ts","../src/alumican/cmd/Log.ts","../src/alumican/cmd/Wait.ts","../src/alumican/cmd/Func.ts","../src/alumican/cmd/Listen.ts","../src/alumican/cmd/Tween.ts","../src/alumican/cmd/Serial.ts","../src/alumican/alm/geom/Vector2.ts","../src/alumican/alm/geom/Vector3.ts","../src/alumican/alm/geom/Rectangle.ts","../src/alumican/alm/geom/Boxer.ts","../src/alumican/alm/util/Obj.ts","../src/alumican/alm/util/Arr.ts","../src/alumican/alm/util/Num.ts","../src/alumican/alm/util/Str.ts","../src/alumican/alm/util/Cmd.ts","../src/alumican/alm/resource/ObjectPool.ts","../src/alumican/alm/state/Lottery.ts","../src/alumican/alm/state/Switcher.ts","../src/alumican/alm/state/SwitcherEvent.ts","../src/alumican/alm/state/LoHi.ts","../src/alumican/alm/state/LoHiEvent.ts","../src/alumican/alm/math/EasingValue.ts","../src/alumican/alm/math/SpringValue.ts","../src/alumican/alm/math/SimpleAverage.ts","../src/alumican/alm/math/SimpleMovingAverage.ts","../src/alumican/alm/math/MaxValue.ts","../src/alumican/alm/math/Circular.ts","../src/alumican/alm/time/AnimationFrameTicker.ts","../src/alumican/alm/time/AnimationFrameTickerEvent.ts","../src/alumican/alm/time/Timer.ts","../src/alumican/alm/time/TimerEvent.ts","../src/alumican/alm/io/FileLoader.ts","../src/alumican/alm/io/FileLoaderProgressEvent.ts","../src/alumican/alm/io/FileLoaderSuccessEvent.ts","../src/alumican/alm/io/FileLoaderErrorEvent.ts","../src/alumican/alm/io/FileQuery.ts","../src/alumican/alm/audio/core/AudioClip.ts","../src/alumican/alm/audio/AudioPlayer.ts","../src/alumican/alm/audio/CrossOverLoopAudio.ts","../src/alumican/alm/audio/FootstepAudio.ts","../src/alumican/alm/view/View.ts","../src/alumican/alm/view/ButtonBehavior.ts","../src/alumican/alm/view/SelectionBehavior.ts","../src/alumican/alm/browser/DeviceInfo.ts","../src/alumican/alm/browser/LocalStorage.ts","../src/alumican/alm/browser/KeyWatcher.ts","../src/alumican/alm/browser/KeyWatcherEvent.ts","../src/alumican/alm/browser/WindowWatcher.ts","../src/alumican/alm/browser/WindowWatcherEvent.ts","../src/alumican/alm/browser/ScrollSectionTriggerEvent.ts","../src/alumican/alm/browser/ScrollSectionTrigger.ts","../src/alumican/alm/browser/ResponsiveObserver.ts","../src/alumican/alm/browser/ResponsiveObserverEvent.ts","../src/alumican/scn/Scene.ts","../src/alumican/scn/SceneEvent.ts","../src/alumican/scn/SceneManager.ts","../src/alumican/scn/SceneManagerEvent.ts","../src/alumican/scn/SceneTransferInfo.ts","../src/alumican/scn/SceneState.ts","../src/alumican/scn/core/Direction.ts","../src/alumican/scn/core/RootScene.ts"],"names":["cmd","scn","alm","trace","messages","_i","arguments","length","debug","Logger","info","apply","caller","throwWarn","target","message","condition","warnIf","throwError","errorIf","util","Time","now","window","performance","Date","math","Easing","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","createEaseInElastic","s","p","a","asin","createEaseOutElastic","createEaseInOutElastic","easeInElastic","defaultEaseInElastic","easeOutElastic","defaultEaseOutElastic","easeInOutElastic","defaultEaseInOutElastic","createEaseInBack","createEaseOutBack","createEaseInOutBack","easeInBack","easeOutBack","defaultEaseOutBack","easeInOutBack","defaultEaseInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","defaultEaseInBack","browser","QueryString","url","this","set","prototype","index","search","indexOf","substring","location","hash","pair","pairs","split","i","getString","key","defaultValue","value","undefined","getInt","parseInt","isNaN","getFloat","parseFloat","getBool","getHash","setHash","setParam","removeParam","hasParam","LoggerLevel","NullLogging","verbose","prefix","warn","error","ConsoleLogging","console","Array","slice","call","concat","log","DOMLogging","print","line","join","html","dom","innerHTML","innerText","ParallelLogging","n","loggers","setLevelByQuery","level","Silent","setNamespace","namespace","Verbose","logger","Info","Warn","Error","stackTrace","FpsMonitor","reset","frameRate","frameCount","startTime","actualFrameRate","dummyFrameRate","update","currentTime","elapsedTime","setDummyFrameRate","clearDummyFrameRate","getFrameRate","event","Event","type","data","getType","getTarget","getData","setData","event_1","EventDispatcher","listeners","addEventListener","eventType","listener","numListeners","push","removeEventListener","splice","removeAllEventListener","hasEventListener","dispatchEvent","dispatchEventType","CommandState","_super","CommandEvent","__extends","clone","toString","COMPLETE","eventTarget","Command","execute","state","Sleeping","Executing","getExecuteFunction","interrupt","Interrupting","getInterruptFunction","destroy","getDestroyFunction","parent","executeFunction","interruptFunction","destroyFunction","notifyComplete","implExecuteFunction","command","implInterruptFunction","implDestroyFunction","setExecuteFunction","func","setInterruptFunction","setDestroyFunction","getState","getParent","setParent","getSelf","self","_this","CommandList","addCommand","commands","preProcess","getCommands","insertCommand","insertCommandAt","__spreadArrays","addCommandArray","insertCommandArray","insertCommandArrayAt","getLength","getCommandByIndex","numCommands","Func","Break","Return","Log","getMessages","setMessages","Wait","timerId","setTimeout","completeHandler","time","cancel","clearTimeout","getTime","setTime","eventDispatcher","args","getFunction","setFunction","getArguments","setArguments","getEventDispatcher","setEventDispatcher","getEventType","setEventType","Listen","Tween","internalFrom","to","from","tweenTarget","duration","setInterval","intervalHandler","updateInterval","onStart","progressTime","progressValue","onUpdate","onComplete","easing","clearInterval","timeRatio","value0","setTarget","getDuration","setDuration","getTo","setTo","getFrom","setFrom","getEasing","setEasing","getOnStart","setOnStart","getOnUpdate","setOnUpdate","getOnComplete","setOnComplete","getProgressTime","getProgressValue","getUpdateInterval","setUpdateInterval","milliseconds","Serial","position","next","currentCommand","isPaused","isCompleteOnPaused","implNotifyBreak","implNotifyReturn","getPosition","Parallel","completeCount","command_1","command_2","command_3","getCompleteCount","geom","Vector2","x","y","copyTo","point","getClone","zero","normalize","l","getSquareDistance","dx","dy","getDistance","Vector3","z","dz","Rectangle","width","height","rect","getTop","getBottom","getLeft","getRight","getTopLeft","getTopRight","getBottomLeft","getBottomRight","Align","ScaleMode","Boxer","resize","bounds","scaleMode","align","ShowAll","Middle_Center","tx","ty","tw","th","bx","by","bw","bh","NoBorder","ratioW","ratioH","ratio","ExactFit","Top_Left","Middle_Left","Bottom_Left","Top_Right","Middle_Right","Bottom_Right","Top_Center","Bottom_Center","Obj","each","Object","keys","forEach","get","Arr","sequence","count","init","step","result","v","unique","list","filter","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","m","Num","map","srcA","srcB","dstA","dstB","clamp","ease","random","min","max","randomInt","floor","clampAbs","minAbs","maxAbs","abs","dist","x1","y1","x2","y2","squared","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","PI3","PI2","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","Str","toTimeString","hours","minutes","seconds","h","substr","Cmd","stop","c","single","resource","ObjectPool","onRequireItem","onDestroyItem","initCount","growthCount","items","getItem","unshift","returnItem","item","reduce","shift","Lottery","values","initValues","restValues","restCount","isEmpty","onCheck","isAutoResetEnabled","add","getRestCount","getIsEmply","getIsAutoResetEnabled","setIsAutoResetEnabled","enabled","createIndices","Switcher","isLoopEnabled","itemCount","itemIds","itemIndexById","onChange","onPrev","onNext","setupById","ids","setup","setupByCount","currentItemIndex","oldItemIndex","currentItemId","prevItemId","gotoByIndex","itemIndex","useTransition","dispatchPagerEvent","SwitcherEvent","CHANGE","gotoById","itemId","hasOwnProperty","prev","PREV","NEXT","getIsLoopEnabled","setIsLoopEnabled","getCurrentItemIndex","getPrevItemIndex","getItemCount","getCurrentItemId","getPrevItemId","getItemIds","prevItemIndex","LoHi","lowThreshold","highThreshold","initValue","isHigh","_set","getIsHigh","getValue","getLowThreshold","getHighThreshold","setLowThreshold","threshold","setHighThreshold","LoHiEvent","LOW","HIGH","EasingValue","tolerance","d","SpringValue","spring","friction","acceleration","velocity","SimpleAverage","_value","_count","SimpleMovingAverage","maxCount","_maxCount","oldest","latest","MaxValue","maxLatestCount","_maxLatestCount","Number","MAX_VALUE","Circular","angle","setAngle","setVelocity","getAngle","getVelocity","getSin","getCos","getTan","tan","getMagnitude","getVector","xy","AnimationFrameTicker","updateHandler","requestId","requestAnimationFrame","targetFrameRate","frameStartTime","interval","toleranceDuration","AnimationFrameTickerEvent","TICK","isRunning","start","cancelAnimationFrame","getIsRunning","getTargetFrameRate","Timer","repeatCount","timerHandler","tStartTime","elapsedCount","isCompleted","tInterval","startInterval","dispatch","TimerEvent","tId","tRestTime","stopInterval","restart","getInterval","getElapsedTime","getRestTime","getElapsedCount","getRepeatCount","setRepeatCount","io","FileLoader","totalThreadCount","fileLoadCompleteHandler","query","content","currentThreadCount","isLoading","isLoadComplete","param","onLoad","FileLoaderSuccessEvent","SUCCESS","fileLoadErrorHandler","onError","FileLoaderErrorEvent","ERROR","isLoading_","currentCount","totalCount","loadingQueries","loadingQueryIndex","queriesByQueryId","queriesByUrl","handlersByType","require","id","addQuery","FileQuery","String","load","progress","this_1","FileLoaderProgressEvent","query_1","handler","START","PROGRESS","addHandler","getQueryByQueryId","queryId","getQueryByUrl","getCurrentCount","getTotalCount","getContentByUrl","getContentByQueryId","textureId","getCurrentThreadCount","getTotalThreadCount","loadedCount","audio","AudioClip","context","destination","fileName","masterVolume","buffer","sourceNode","isAvailable","gainNode","createGain","connect","volume","applyVolume","request","XMLHttpRequest","responseType","onreadystatechange","readyState","status","decodeAudioData","response","open","send","play","loop","overwrite","createBufferSource","disconnect","getVolume","setVolume","volumeTween","fadeTo","fadeIn","fadeOut","stopOnComplete","gain","getIsAvailable","getCurrentTime","AudioPlayer","AudioContext","clipsById","masterGainNode","masterVolute","getClip","getMasterVolume","setMasterVolume","getInstance","instance","CrossOverLoopAudio","crossOverDuration","clipIndex","clipCount","playCurrent","audioPlayer","clipIds","clip","isPlaying","timeoutId","stopCurrent","FootstepAudio","intervalMin","intervalMax","clipId","isWaitingForFirstStep","intervalId","immediately","setSpeed","speedRatio","view_1","View","view","viewCount","name","autoHideWithInit","isInitializing","isInitialized","isReadying","isReadied","isShowing","isShown","isHiding","viewsById","initialize","implInitialize","hide","ready","implReady","finalize","implFinalize","show","getShowCommand","getHideCommand","showCommand","hideCommand","implShow","implHide","getIsInitializing","getIsInitialized","getIsReadying","getIsReadied","getIsShowing","getIsShown","getIsHiding","getIsHidden","getId","getView","getName","setName","getAutoHideWithInit","setAutoHideWithInit","getViewById","ButtonBehavior","hitArea","isHoverCursorEnabled","isPreventDefaultEnabled","isStopPropagationEnabled","mouseOverHandler","preventDefault","stopPropagation","over","applyMouseCursor","mouseOutHandler","out","mouseDownHandler","down","mouseUpHandler","up","clickHandler","click","touchStartHandler","touchEndHandler","touchCancelHandler","isEnabled","isOver","isDown","isOverInternal","isDownInternal","defaultMouseCursor","setHitArea","implButtonOver","_out","checkEnabled","implButtonOut","implButtonDown","_up","implButtonUp","implButtonClick","on","off","getIsEnabled","setIsEnabled","implButtonChangeEnabled","getIsOver","getIsDown","getHitArea","clearHitArea","getIsPreventDefaultEnabled","setIsPreventDefaultEnabled","getIsStopPropagationEnabled","setIsStopPropagationEnabled","getIsHoverCursorEnabled","setIsHoverCursorEnabled","style","cursor","SelectionBehavior","select","isSelected","implSelectionChanged","deselect","getIsSelected","DeviceInfo","u","navigator","userAgent","toLowerCase","isTablet","isMobile","isDesktop","isIOS","isAndroid","isIE","isEdge","isChrome","isSafari","isFireFox","isOpera","isUnknownBrowser","isTouchEnabled","ontouchstart","isDownloadEnabled","devicePixelRatio","isRetina","getIsDesktop","getIsTablet","getIsMobile","getIsIOS","getIsAndroid","getIsIE","getIsEdge","getIsChrome","getIsSafari","getIsFireFox","getIsOpera","getIsUnknownBrowser","getIsTouchEnabled","getIsDownloadEnabled","getIsRetina","getDevicePixelRatio","getDpi","div","dpi","document","createElement","setAttribute","body","appendChild","offsetHeight","removeChild","LocalStorage","save","expiredAt","record","JSON","stringify","localStorage","setItem","saveWithTerm","parse","removeItem","remove","isAvailable_","toMilliseconds","dates","KeyCode","KeyWatcher","windowKeyDownHandler","windowKeyUpHandler","getIsAnyKeyPressed","pressedKeyCount","getIsKeyPressed","keyCode","isKeyPressedByKeyCode","getIsContinuousPressEnabled","isContinuousPressEnabled","setIsContinuousPressEnabled","KeyWatcherEvent","KEY_DOWN","KEY_UP","isLongPressed","originalEvent","altKey","ctrlKey","shiftKey","WindowWatcher","windowResizeHandler","windowScrollHandler","windowWidth","innerWidth","windowHeight","innerHeight","scrollTop","pageYOffset","documentElement","scrollBottom","calcScrolledPosition","calcScrolledPositionRatio","WindowWatcherEvent","RESIZE","getWindow","getScrollTop","getScrollBottom","getWindowWidth","getWindowHeight","getIsMobileOrientationResize","isMobileOrientationResize","setIsMobileOrientationResize","windowOrientationChangeHandler","SCROLL","ScrollSectionTriggerEvent","currentSectionIndex","prevSectionIndex","ScrollSectionTrigger","updateScrollPosition","check","updateThresholdPosition","scrollPosition","triggerPositions","thresholdRatio","thresholdPosition","getCurrentIndex","getPrevIndex","getTriggerPositions","setTriggerPositions","positions","sort","b","getThreshold","setThreshold","sectionIndex","nearestTriggerIndex","nearestScrolledTriggerPosition","nearestDistance","triggerPositionCount","scrolledTriggerPosition","distance","ResponsiveObserver","breakPoints","breakPointCount","currentIndex","prevIndex","setBreakpoints","getBreakPoints","getBreakPointCount","ResponsiveObserverEvent","Scene","addChild","child","childName","childrenByName","numChildren","addChildren","children","addedChildren","removeChildren","removedChildren","removeAllChildren","name_1","contains","getLastState","lastState","getChildByName","getNumChildren","getManager","getPath","manager","names","scene","getScenePathByNames","gotoScene","path","goto","_load","transferInfo","SceneState","Loading","isEntered","SceneEvent","LOAD","implOnLoad","Idling","LOAD_COMPLETE","_unload","Unloading","UNLOAD","onUnload","implOnUnload","UNLOAD_COMPLETE","_arrive","Arriving","ARRIVE","onArrive","implOnArrive","ARRIVE_COMPLETE","_leave","Leaving","LEAVE","onLeave","implOnLeave","LEAVE_COMPLETE","_ascend","Ascending","ASCEND","onAscend","implOnAscend","ASCEND_COMPLETE","_descend","Descending","DESCEND","onDescend","implOnDescend","DESCEND_COMPLETE","SceneManager","isDestinationChanged","newWaypoints","resolvePath","getDestinationPath","waypointIndex","createWaypoints","waypoints","core","Waypoint","setDirection","printWaypoint","eventIndex","transferId","SceneTransferInfo","SceneManagerEvent","TRANSFER_START","checkState","currentScene","normalized","name_2","pop","addSceneAt","createScene","success","getSceneNamesByPath","root","name_3","getRoot","getSceneByPath","getSceneLevelByNames","departurePath","destinationPath","departureNames","destinationNames","turningPath","turningLevel","turningNames","prevPath","getLevel","Direction","Sibling","Ascend","name_4","_setFrom","Descend","_setTo","getSceneStateString","tmpTransferId","getTransferId","TRANSFER_COMPLETE","currentWaypoint","sceneLeaveCompleteHandler","sceneUnloadCompleteHandler","sceneLoadCompleteHandler","sceneAscendCompleteHandler","sceneDescendCompleteHandler","sceneArriveCompleteHandler","RootScene","getDeparturePath","relay","getDirectionString","direction","Static","getVersion"],"mappings":"IAEUA,ICAAC,ICqGAC,I,ykBCiHV,SAASC,Q,IAAM,IAAAC,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACdH,IAAIM,MAAMC,OAAOC,KAAKC,MAAMR,MAAMS,OAAQN,WAG3C,SAASO,UAAUC,EAAYC,EAAgBC,QAAA,IAAAA,IAAAA,GAAA,GAC9Cd,IAAIM,MAAMC,OAAOQ,OAAON,MAAM,KAAML,WAGrC,SAASY,WAAWJ,EAAYC,EAAgBC,QAAA,IAAAA,IAAAA,GAAA,GAC/Cd,IAAIM,MAAMC,OAAOU,QAAQR,MAAM,KAAML,YC/NtC,SAAUJ,GAAI,IAAAkB,EAEbC,EAUC,SAAAA,KAZYD,EAAAlB,EAAAkB,OAAAlB,EAAAkB,KAAI,IAQFC,EAAAC,IAAd,WACC,OAAQC,OAAOC,aAAeC,MAAMH,OAPtCD,EAWAA,EAXaD,EAAAC,KAAIA,EAFlB,CAAUnB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAwB,EAIbC,EAAA,SAAAA,KAJaD,EAAAxB,EAAAwB,OAAAxB,EAAAwB,KAAI,IAMFC,EAAAC,OAAd,SAAqBC,GACpB,OAAOA,GAOMF,EAAAG,WAAd,SAAyBD,GACxB,OAAQA,GAAK,GAAKA,GAGLF,EAAAI,YAAd,SAA0BF,GACzB,QAASA,GAAK,IAAMA,EAAI,IAGXF,EAAAK,cAAd,SAA4BH,GAC3B,OAAKA,GAAK,IAAO,EAAU,GAAMA,EAAIA,GAC7B,MAAUA,GAAMA,EAAI,GAAK,IAOpBF,EAAAM,YAAd,SAA0BJ,GACzB,OAAQA,GAAK,GAAKA,EAAIA,GAGTF,EAAAO,aAAd,SAA2BL,GAC1B,QAAQA,EAAaA,EAAIA,EAAI,GAGhBF,EAAAQ,eAAd,SAA6BN,GAC5B,OAAKA,GAAK,IAAO,EAAU,GAAMA,EAAIA,EAAIA,EAClC,KAAQA,GAAK,GAAKA,EAAIA,EAAI,IAOpBF,EAAAS,YAAd,SAA0BP,GACzB,OAAQA,GAAK,GAAKA,EAAIA,EAAIA,GAGbF,EAAAU,aAAd,SAA2BR,GAC1B,UAAUA,EAAaA,EAAIA,EAAIA,EAAI,IAGtBF,EAAAW,eAAd,SAA6BT,GAC5B,OAAKA,GAAK,IAAO,EAAU,GAAMA,EAAIA,EAAIA,EAAIA,GACrC,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,IAOzBF,EAAAY,YAAd,SAA0BV,GACzB,OAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,GAGjBF,EAAAa,aAAd,SAA2BX,GAC1B,QAASA,EAAaA,EAAIA,EAAIA,EAAIA,EAAI,GAGzBF,EAAAc,eAAd,SAA6BZ,GAC5B,OAAKA,GAAK,IAAO,EAAU,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAC1C,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,IAO5BF,EAAAe,WAAd,SAAyBb,GACxB,OAAsC,EAA9Bc,KAAKC,IAAIf,GAAKc,KAAKE,GAAK,KAGnBlB,EAAAmB,YAAd,SAA0BjB,GACzB,OAAOc,KAAKI,IAAIlB,GAAKc,KAAKE,GAAK,KAGlBlB,EAAAqB,cAAd,SAA4BnB,GAC3B,OAAQ,IAAOc,KAAKC,IAAID,KAAKE,GAAKhB,GAAK,IAO1BF,EAAAsB,WAAd,SAAyBpB,GACxB,OAAS,GAALA,EAAe,EACZc,KAAKO,IAAI,EAAG,IAAMrB,EAAI,KAGhBF,EAAAwB,YAAd,SAA0BtB,GACzB,OAAS,GAALA,EAAe,EACY,EAAvBc,KAAKO,IAAI,GAAI,GAAKrB,IAGbF,EAAAyB,cAAd,SAA4BvB,GAC3B,OAAS,GAALA,EAAe,EACV,GAALA,EAAe,GACdA,GAAK,IAAO,EAAU,GAAMc,KAAKO,IAAI,EAAG,IAAMrB,EAAI,IAChD,IAAiC,EAAzBc,KAAKO,IAAI,GAAI,KAAOrB,KAOtBF,EAAA0B,WAAd,SAAyBxB,GACxB,QAASc,KAAKW,KAAK,GAAKzB,GAAK,GAAKA,GAAK,IAG1BF,EAAA4B,YAAd,SAA0B1B,GACzB,OAAOc,KAAKW,KAAK,KAAKzB,EAAaA,IAGtBF,EAAA6B,cAAd,SAA4B3B,GAC3B,OAAKA,GAAK,IAAO,GAAW,IAAOc,KAAKW,KAAK,EAAIzB,EAAIA,GAAK,GACnD,IAAOc,KAAKW,KAAK,GAAKzB,GAAK,GAAKA,GAAK,IAO/BF,EAAA8B,oBAAd,SAAkCC,GACjC,YADiC,IAAAA,IAAAA,EAAA,SAC1B,SAAU7B,GAChB,IAAI8B,EAAW,EACXC,EAAW,EACf,OAAS,GAAL/B,EAAe,EACH,IAAXA,GAAK,GAAgB,GACjB,GAAL8B,IAAQA,EAAI,IAGfD,EAFGE,EAAI,GACPA,EAAI,EACAD,EAAI,GAEJA,GAAK,EAAIhB,KAAKE,IAAMF,KAAKkB,KAAK,EAAID,IAE/BA,EAAIjB,KAAKO,IAAI,EAAG,KAAMrB,GAAWc,KAAKI,KAAKlB,EAAI6B,IAAM,EAAIf,KAAKE,IAAMc,MAIhEhC,EAAAmC,qBAAd,SAAmCJ,GAClC,YADkC,IAAAA,IAAAA,EAAA,SAC3B,SAAU7B,GAChB,IAAI8B,EAAW,EACXC,EAAW,EACf,OAAS,GAAL/B,EAAe,EACH,IAAXA,GAAK,GAAgB,GACjB,GAAL8B,IAAQA,EAAI,IAGfD,EAFGE,EAAI,GACPA,EAAI,EACAD,EAAI,GAEJA,GAAK,EAAIhB,KAAKE,IAAMF,KAAKkB,KAAK,EAAID,GAEhCA,EAAIjB,KAAKO,IAAI,GAAI,GAAKrB,GAAKc,KAAKI,KAAKlB,EAAI6B,IAAM,EAAIf,KAAKE,IAAMc,GAAK,KAI9DhC,EAAAoC,uBAAd,SAAqCL,GACpC,YADoC,IAAAA,IAAAA,EAAA,SAC7B,SAAU7B,GAChB,IAAI8B,EAAW,EACXC,EAAW,EACf,OAAS,GAAL/B,EAAe,EACD,IAAbA,GAAK,IAAkB,GACnB,GAAL8B,IAAQA,EAAI,GAAM,KAGrBD,EAFGE,EAAI,GACPA,EAAI,EACAD,EAAI,GAEJA,GAAK,EAAIhB,KAAKE,IAAMF,KAAKkB,KAAK,EAAID,GAEnC/B,EAAI,GAAW,GAAM+B,EAAIjB,KAAKO,IAAI,EAAG,KAAMrB,GAAWc,KAAKI,KAAKlB,EAAI6B,IAAM,EAAIf,KAAKE,IAAMc,GACtFC,EAAIjB,KAAKO,IAAI,GAAI,KAAMrB,GAAWc,KAAKI,KAAKlB,EAAI6B,IAAM,EAAIf,KAAKE,IAAMc,GAAK,GAAM,KAI3EhC,EAAAqC,cAAd,SAA4BnC,GAC3B,OAAOF,EAAOsC,qBAAqBpC,IAGtBF,EAAAuC,eAAd,SAA6BrC,GAC5B,OAAOF,EAAOwC,sBAAsBtC,IAGvBF,EAAAyC,iBAAd,SAA+BvC,GAC9B,OAAOF,EAAO0C,wBAAwBxC,IAWzBF,EAAA2C,iBAAd,SAA+BZ,GAC9B,YAD8B,IAAAA,IAAAA,EAAA,SACvB,SAAU7B,GAChB,OAAQA,GAAK,GAAKA,IAAM6B,EAAI,GAAK7B,EAAI6B,KAIzB/B,EAAA4C,kBAAd,SAAgCb,GAC/B,YAD+B,IAAAA,IAAAA,EAAA,SACxB,SAAU7B,GAChB,QAAQA,EAAaA,IAAM6B,EAAI,GAAK7B,EAAI6B,GAAK,IAIjC/B,EAAA6C,oBAAd,SAAkCd,GACjC,YADiC,IAAAA,IAAAA,EAAA,SAC1B,SAAU7B,GAChB,OAAKA,GAAK,IAAO,EAAU,GAAMA,EAAIA,IAAqB,GAAd6B,GAAK,QAAc7B,EAAI6B,GAC5D,KAAQ7B,GAAK,GAAKA,IAAqB,GAAd6B,GAAK,QAAc7B,EAAI6B,GAAK,KAIhD/B,EAAA8C,WAAd,SAAyB5C,GACxB,OAAOF,EAAOsC,qBAAqBpC,IAGtBF,EAAA+C,YAAd,SAA0B7C,GACzB,OAAOF,EAAOgD,mBAAmB9C,IAGpBF,EAAAiD,cAAd,SAA4B/C,GAC3B,OAAOF,EAAOkD,qBAAqBhD,IAWtBF,EAAAmD,aAAd,SAA2BjD,GAC1B,OAAO,EAAIF,EAAOoD,cAAc,EAAIlD,IAGvBF,EAAAoD,cAAd,SAA4BlD,GAC3B,OAAKA,GAAK,GAAM,EAAI,KACZ,OAASA,EAAIA,EACVA,EAAK,EAAI,KACZ,QAAUA,GAAM,IAAM,MAASA,EAAI,IAChCA,EAAK,IAAM,KACd,QAAUA,GAAM,KAAO,MAASA,EAAI,MAEpC,QAAUA,GAAM,MAAQ,MAASA,EAAI,SAIhCF,EAAAqD,gBAAd,SAA8BnD,GAC7B,OAAIA,EAAI,GAAyC,GAA7BF,EAAOmD,aAAiB,EAAJjD,GACC,GAAlCF,EAAOoD,cAAkB,EAAJlD,EAAQ,GAAW,IAjEjCF,EAAAsC,qBAAsCtC,EAAO8B,sBAC7C9B,EAAAwC,sBAAuCxC,EAAOmC,uBAC9CnC,EAAA0C,wBAAyC1C,EAAOoC,yBAqChDpC,EAAAsD,kBAAmCtD,EAAO2C,mBAC1C3C,EAAAgD,mBAAoChD,EAAO4C,oBAC3C5C,EAAAkD,qBAAsClD,EAAO6C,sBA7O7D7C,EAuQAA,EAvQaD,EAAAC,OAAMA,EAJpB,CAAUzB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgF,EAIbC,EAQC,SAAAA,EAAYC,QAAA,IAAAA,IAAAA,EAAA,IACXC,KAAKC,IAAIF,GAbEF,EAAAhF,EAAAgF,UAAAhF,EAAAgF,QAAO,IA0BZC,EAAAI,UAAAD,IAAP,SAAWF,QAAA,IAAAA,IAAAA,EAAA,IAEV,IAEOI,EAFHC,EAAgB,GACT,IAAPL,GAEW,IADRI,EAAeJ,EAAIM,QAAQ,QAEhCD,EAASL,EAAIO,UAAUH,IAGxBC,EAASG,SAASH,OAGnBJ,KAAKQ,KAAO,GAGZ,IAFA,IACIC,EADEC,EAAiBN,EAAOE,UAAU,GAAGK,MAAM,KAEzCC,EAAW,EAAGF,EAAME,KAAMA,EACjCH,EAAOC,EAAME,GAAGD,MAAM,KACtBX,KAAKQ,KAAKC,EAAK,IAAMA,EAAK,IAKrBX,EAAAI,UAAAW,UAAP,SAAiBC,EAAYC,GAC5B,IAAMC,EAAehB,KAAKQ,KAAKM,GAC/B,YAAiBG,IAAVD,EAAsBD,EAAeC,GAItClB,EAAAI,UAAAgB,OAAP,SAAcJ,EAAYC,GACzB,IAAMC,EAAeG,SAASnB,KAAKQ,KAAKM,IACxC,OAAOM,MAAMJ,GAASD,EAAeC,GAI/BlB,EAAAI,UAAAmB,SAAP,SAAgBP,EAAYC,GAC3B,IAAMC,EAAeM,WAAWtB,KAAKQ,KAAKM,IAC1C,OAAOM,MAAMJ,GAASD,EAAeC,GAI/BlB,EAAAI,UAAAqB,QAAP,SAAeT,EAAYC,GAC1B,IAAMC,EAAehB,KAAKQ,KAAKM,GAC/B,YAAiBG,IAAVD,EAAsBD,EAA8B,GAATC,GAG5ClB,EAAAI,UAAAsB,QAAP,WACC,OAAOxB,KAAKQ,MAGNV,EAAAI,UAAAuB,QAAP,SAAejB,GACdR,KAAKQ,KAAOA,GAGNV,EAAAI,UAAAwB,SAAP,SAAgBZ,EAAYE,GAC3BhB,KAAKQ,KAAKM,GAAOE,GAGXlB,EAAAI,UAAAyB,YAAP,SAAmBb,UACXd,KAAKQ,KAAKM,IAGXhB,EAAAI,UAAA0B,SAAP,SAAgBd,GACf,YAA0BG,IAAnBjB,KAAKQ,KAAKM,IApFnBhB,EAkGAA,EAlGaD,EAAAC,YAAWA,EAJzB,CAAUjF,IAAAA,KAAG,IHAb,SAAUA,IAAI,SAAAM,GAEb,IAEY0G,EAAAA,EAFL/B,EAAcjF,EAAIgF,QAAQC,aAErB+B,EAAAA,EAAA1G,EAAA0G,cAAA1G,EAAA0G,YAAW,KACtBA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SAmBD,IAAAC,GAEQA,EAAA5B,UAAA6B,QAAP,SAAeC,EAAejH,KAGvB+G,EAAA5B,UAAA7E,KAAP,SAAY2G,EAAejH,KAGpB+G,EAAA5B,UAAA+B,KAAP,SAAYD,EAAejH,KAGpB+G,EAAA5B,UAAAgC,MAAP,SAAaF,EAAejH,KAE7B+G,GAbA,SAAAA,KAAa3G,EAAA2G,YAAWA,EAmBxB,IAAAK,GAEQA,EAAAjC,UAAA6B,QAAP,SAAeC,EAAejH,GAC7BqH,QAAQjH,MAAMG,MAAM8G,QAASC,MAAMnC,UAAUoC,MAAMC,KAAK,CAACP,GAAQQ,OAAOzH,MAGlEoH,EAAAjC,UAAA7E,KAAP,SAAY2G,EAAejH,GAC1BqH,QAAQK,IAAInH,MAAM8G,QAASC,MAAMnC,UAAUoC,MAAMC,KAAK,CAACP,GAAQQ,OAAOzH,MAGhEoH,EAAAjC,UAAA+B,KAAP,SAAYD,EAAejH,GAC1BqH,QAAQH,KAAK3G,MAAM8G,QAASC,MAAMnC,UAAUoC,MAAMC,KAAK,CAACP,GAAQQ,OAAOzH,MAGjEoH,EAAAjC,UAAAgC,MAAP,SAAaF,EAAejH,GAC3BqH,QAAQF,MAAM5G,MAAM8G,QAASC,MAAMnC,UAAUoC,MAAMC,KAAK,CAACP,GAAQQ,OAAOzH,MAE1EoH,GAjBA,SAAAA,KAAahH,EAAAgH,eAAcA,EAuB3B,IAAAO,GAOQA,EAAAxC,UAAA6B,QAAP,SAAeC,EAAejH,GAC7BiF,KAAK2C,MAAMX,EAAQjH,IAGb2H,EAAAxC,UAAA7E,KAAP,SAAY2G,EAAejH,GAC1BiF,KAAK2C,MAAMX,EAAQjH,IAGb2H,EAAAxC,UAAA+B,KAAP,SAAYD,EAAejH,GAC1BiF,KAAK2C,MAAMX,EAAQjH,IAGb2H,EAAAxC,UAAAgC,MAAP,SAAaF,EAAejH,GAC3BiF,KAAK2C,MAAMX,EAAQjH,IAGZ2H,EAAAxC,UAAAyC,MAAR,SAAcX,EAAejH,GAC5B,IAAM6H,EAAcZ,EAASjH,EAAS8H,KAAK,MACvC7C,KAAK8C,KACR9C,KAAK+C,IAAIC,UAAYJ,EAAO,SAAW5C,KAAK+C,IAAIC,UAEhDhD,KAAK+C,IAAIE,UAAYL,EAAO,KAAO5C,KAAK+C,IAAIE,WAM/CP,GAhCC,SAAAA,EAAYK,EAAiBD,GAC5B9C,KAAK+C,IAAMA,EACX/C,KAAK8C,KAAOA,EAJD3H,EAAAuH,WAAUA,EAwCvB,IAAAQ,GAMQA,EAAAhD,UAAA6B,QAAP,SAAeC,EAAejH,GAE7B,IADA,IAAMoI,EAAWnD,KAAKoD,QAAQlI,OACrB0F,EAAW,EAAGA,EAAIuC,IAAKvC,EAC/BZ,KAAKoD,QAAQxC,GAAGmB,QAAQC,EAAQjH,IAI3BmI,EAAAhD,UAAA7E,KAAP,SAAY2G,EAAejH,GAE1B,IADA,IAAMoI,EAAWnD,KAAKoD,QAAQlI,OACrB0F,EAAW,EAAGA,EAAIuC,IAAKvC,EAC/BZ,KAAKoD,QAAQxC,GAAGvF,KAAK2G,EAAQjH,IAIxBmI,EAAAhD,UAAA+B,KAAP,SAAYD,EAAejH,GAE1B,IADA,IAAMoI,EAAWnD,KAAKoD,QAAQlI,OACrB0F,EAAW,EAAGA,EAAIuC,IAAKvC,EAC/BZ,KAAKoD,QAAQxC,GAAGqB,KAAKD,EAAQjH,IAIxBmI,EAAAhD,UAAAgC,MAAP,SAAaF,EAAejH,GAE3B,IADA,IAAMoI,EAAWnD,KAAKoD,QAAQlI,OACrB0F,EAAW,EAAGA,EAAIuC,IAAKvC,EAC/BZ,KAAKoD,QAAQxC,GAAGsB,MAAMF,EAAQjH,IAKjCmI,GAjCC,SAAAA,EAAYE,GACXpD,KAAKoD,QAAUA,EAHJjI,EAAA+H,gBAAeA,EAyC5B,IAAA9H,GAMeA,EAAAiI,gBAAd,SAA8BvC,GAC7B,IAAMwC,GAAe,IAAIxD,GAAcoB,OAAOJ,EAAKe,EAAY0B,QAC/DnI,EAAOkI,MAAQlC,MAAMkC,GAASzB,EAAY0B,OAASD,GAGtClI,EAAAoI,aAAd,SAA2BC,GAC1BrI,EAAOqI,UAAyB,IAAbA,EAAmBA,EAAY,IAAO,IAG5CrI,EAAA2G,QAAd,W,IAAsB,IAAAhH,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACjBI,EAAOkI,OAASzB,EAAY6B,SAC/BtI,EAAOuI,OAAO5B,QAAQ,IAAM3G,EAAOqI,UAAY,YAAa1I,IAIhDK,EAAAC,KAAd,W,IAAmB,IAAAN,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACdI,EAAOkI,OAASzB,EAAY+B,MAC/BxI,EAAOuI,OAAOtI,KAAK,IAAMD,EAAOqI,UAAY,YAAa1I,IAI7CK,EAAA6G,KAAd,W,IAAmB,IAAAlH,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACdI,EAAOkI,OAASzB,EAAYgC,MAC/BzI,EAAOuI,OAAO1B,KAAK,IAAM7G,EAAOqI,UAAY,YAAa1I,IAK7CK,EAAA8G,MAAd,W,IAAoB,IAAAnH,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACfI,EAAOkI,OAASzB,EAAYiC,OAC/B1I,EAAOuI,OAAOzB,MAAM,IAAM9G,EAAOqI,UAAY,YAAa1I,IAK9CK,EAAAQ,OAAd,SAAqBH,EAAYC,EAAgBC,QAAA,IAAAA,IAAAA,GAAA,GAC5CP,EAAOkI,OAASzB,EAAYgC,MAAQlI,GACvCP,EAAOuI,OAAO1B,KAAK,IAAM7G,EAAOqI,UAAY,YAAa,CAAC/H,EAAU,MAAQD,KAKhEL,EAAAU,QAAd,SAAsBL,EAAYC,EAAiBC,QAAA,IAAAA,IAAAA,GAAA,GAC9CP,EAAOkI,OAASzB,EAAYiC,OAASnI,GACxCP,EAAOuI,OAAOzB,MAAM,IAAM9G,EAAOqI,UAAY,YAAa,CAAC/H,EAAU,MAAQD,KAKjEL,EAAA2I,WAAd,WACC3B,QAAQtH,SAtDKM,EAAAkI,MAAezB,EAAY6B,QAC3BtI,EAAAuI,OAAkB,IAAIxB,EACrB/G,EAAAqI,UAAmB,GAwDnCrI,GADC,SAAAA,KA3DYD,EAAAC,OAAMA,EAvJN,CAAAP,EAAAM,QAAAN,EAAAM,MAAK,KAAnB,CAAUN,IAAAA,KAAG,IIAb,SAAUA,GAAI,IAAAM,EAENa,EAEPgI,EAQC,SAAAA,IACChE,KAAKiE,QAbM9I,EAAAN,EAAAM,QAAAN,EAAAM,MAAK,IAEXa,EAAOnB,EAAIkB,KAAKC,KAwBfgI,EAAA9D,UAAA+D,MAAP,WACCjE,KAAKkE,UAAY,EACjBlE,KAAKmE,WAAa,EAClBnE,KAAKoE,UAAYpI,EAAKC,MACtB+D,KAAKqE,iBAAmB,EACxBrE,KAAKsE,gBAAkB,GAGjBN,EAAA9D,UAAAqE,OAAP,aACGvE,KAAKmE,WACP,IAAMK,EAAqBxI,EAAKC,MAC1BwI,EAAqBD,EAAcxE,KAAKoE,UAC3B,KAAfK,IACHzE,KAAKqE,gBAAkB,IAAOrE,KAAKmE,WAAaM,EAChDzE,KAAKmE,WAAa,EAClBnE,KAAKoE,UAAYI,EACbxE,KAAKsE,eAAiB,IACzBtE,KAAKkE,UAAYlE,KAAKqE,mBAKlBL,EAAA9D,UAAAwE,kBAAP,SAAyBR,GACxBlE,KAAKsE,eAAiBJ,EACtBlE,KAAKkE,UAAYlE,KAAKsE,gBAGhBN,EAAA9D,UAAAyE,oBAAP,WACC3E,KAAKsE,gBAAkB,EACvBtE,KAAKkE,UAAYlE,KAAKqE,iBAGhBL,EAAA9D,UAAA0E,aAAP,WACC,OAAO5E,KAAKkE,WAvDdF,EAyEAA,EAzEa7I,EAAA6I,WAAUA,EAJxB,CAAUnJ,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgK,EAEbC,EAQC,SAAAA,EAAYC,EAAatJ,EAAeuJ,QAAA,IAAAA,IAAAA,EAAA,MACvChF,KAAK+E,KAAOA,EACZ/E,KAAKvE,OAASA,EACduE,KAAKgF,KAAOA,EAbDH,EAAAhK,EAAAgK,QAAAhK,EAAAgK,MAAK,IAgBVC,EAAA5E,UAAA+E,QAAP,WACC,OAAOjF,KAAK+E,MAGND,EAAA5E,UAAAgF,UAAP,WACC,OAAOlF,KAAKvE,QAGNqJ,EAAA5E,UAAAiF,QAAP,WACC,OAAOnF,KAAKgF,MAGNF,EAAA5E,UAAAkF,QAAP,SAAeJ,GACdhF,KAAKgF,KAAOA,GA3BdF,EA2CAA,EA3CaD,EAAAC,MAAKA,EAFnB,CAAUjK,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAwK,EAENjK,EAGPkK,EAQC,SAAAA,EAAY7J,QAAA,IAAAA,IAAAA,EAAA,MACXuE,KAAKvE,OAASA,GAAUuE,KACxBA,KAAKuF,UAAY,GAfNF,EAAAxK,EAAAgK,QAAAhK,EAAAgK,MAAK,IAEXzJ,EAASP,EAAIM,MAAMC,OA0BlBkK,EAAApF,UAAAsF,iBAAP,SAAwBC,EAAkBC,GACzC,GAAwB,mBAAd,EAAV,CAIA,IAAIH,EAA4BvF,KAAKuF,UAAUE,GAC/C,GAAIF,GAEH,IADA,IAAMI,EAAsBJ,EAAUrK,OAC7B0F,EAAW,EAAGA,EAAI+E,IAAgB/E,EAC1C,GAAI8E,GAAYH,EAAU3E,GAAI,YAG/BZ,KAAKuF,UAAUE,GAAaF,EAAY,GAEzCA,EAAUK,KAAKF,QAZdtK,EAAO6G,KAAK,+EAAkFwD,EAAY,iBAAoBC,IAezHJ,EAAApF,UAAA2F,oBAAP,SAA2BJ,EAAkBC,GAC5C,GAAwB,mBAAd,EAAV,CAIA,IAAIH,EAA4BvF,KAAKuF,UAAUE,GAC/C,GAAIF,EAAW,CAEd,IADA,IAAMI,EAAsBJ,EAAUrK,OAC7B0F,EAAW,EAAGA,EAAI+E,IAAgB/E,EAC1C,GAAI8E,GAAYH,EAAU3E,GAAI,CAC7B2E,EAAUO,OAAOlF,EAAI,GACrB,MAGsB,GAApB2E,EAAUrK,eACN8E,KAAKuF,UAAUE,SAbvBrK,EAAO6G,KAAK,kFAAqFwD,EAAY,iBAAoBC,IAkB5HJ,EAAApF,UAAA6F,uBAAP,SAA8BN,QAAA,IAAAA,IAAAA,EAAA,MACzBA,SACIzF,KAAKuF,UAAUE,GAEtBzF,KAAKuF,UAAY,IAIZD,EAAApF,UAAA8F,iBAAP,SAAwBP,GACvB,OAAoC,MAA7BzF,KAAKuF,UAAUE,IAGhBH,EAAApF,UAAA+F,cAAP,SAAqBpB,GACpB,IAAIU,EAA4BvF,KAAKuF,UAAUV,EAAMI,WACrD,GAAIM,EAEH,IADA,IAAMI,EAAsBJ,EAAUrK,OAC7B0F,EAAW,EAAGA,EAAI+E,IAAgB/E,EAC1C2E,EAAU3E,GAAG2B,KAAKvC,KAAKvE,OAAQoJ,IAK3BS,EAAApF,UAAAgG,kBAAP,SAAkCT,EAAkBhK,EAAsBuJ,QAAtB,IAAAvJ,IAAAA,EAAA,WAAsB,IAAAuJ,IAAAA,EAAA,MACzEhF,KAAKiG,cAAc,IAAIZ,EAAAP,MAASW,EAAWhK,EAAQuJ,KAnFrDM,EAkGAA,EAlGaD,EAAAC,gBAAeA,EAL7B,CAAUzK,IAAAA,KAAG,ICAb,SAAUF,GAET,IAAYwL,GAAAA,EAAAxL,EAAAwL,eAAAxL,EAAAwL,aAAY,KACvBA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,aAAA,GAAA,eALF,CAAUxL,IAAAA,KAAG,ICAb,SAAUA,GAET,IAEAyL,EAFOtB,EAAQjK,IAAIgK,MAAMC,MAEzBuB,GAAkCC,UAAAD,EAAlCD,EAAkCtB,GAkC1BuB,EAAAnG,UAAAqG,MAAP,WACC,OAAO,IAAIF,EAAarG,KAAKiF,UAAWjF,KAAKkF,cAGvCmB,EAAAnG,UAAAsG,SAAP,WACC,MAAO,yBAA2BxG,KAAKiF,WA/B1BoB,EAAAI,SAAkB,WA2CjCJ,GA/BC,SAAAA,EAAYZ,EAAkBiB,G,YAAA,IAAAA,IAAAA,EAAA,MAC7BN,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,KArBlBrF,EAAA0L,aAAYA,EAJ1B,CAAU1L,IAAAA,KAAG,ICAb,SAAUA,GAET,IAEAyL,EAFOd,EAAkBzK,IAAIgK,MAAMS,gBAEnCqB,GAA6BL,UAAAK,EAA7BP,EAA6Bd,GA8BrBqB,EAAAzG,UAAA0G,QAAP,WACC,GAAI5G,KAAK6G,MAAQlM,EAAAwL,aAAaW,SAC7B,MAAM,IAAIhD,MAAM,qDAEjB9D,KAAK6G,MAAQlM,EAAAwL,aAAaY,UAC1B/G,KAAKgH,qBAAqBzE,KAAKvC,KAAMA,OAG/B2G,EAAAzG,UAAA+G,UAAP,WACKjH,KAAK6G,OAASlM,EAAAwL,aAAaY,YAC9B/G,KAAK6G,MAAQlM,EAAAwL,aAAae,aAC1BlH,KAAKmH,uBAAuB5E,KAAKvC,KAAMA,QAIlC2G,EAAAzG,UAAAkH,QAAP,WACCpH,KAAK6G,MAAQlM,EAAAwL,aAAaW,SAC1B9G,KAAKqH,qBAAqB9E,KAAKvC,KAAMA,MACrCA,KAAKsH,OAAS,KACdtH,KAAKuH,gBAAkB,KACvBvH,KAAKwH,kBAAoB,KACzBxH,KAAKyH,gBAAkB,MAGdd,EAAAzG,UAAAwH,eAAV,WACC,OAAQ1H,KAAK6G,OACZ,KAAKlM,EAAAwL,aAAaW,SACjB,MACD,KAAKnM,EAAAwL,aAAaY,UAIlB,KAAKpM,EAAAwL,aAAae,aACjBlH,KAAKiG,cAAc,IAAItL,EAAA0L,aAAa1L,EAAA0L,aAAaI,SAAUzG,OAC3DA,KAAKoH,YAKET,EAAAzG,UAAAyH,oBAAV,SAA8BC,GAC7B5H,KAAK0H,kBAEIf,EAAAzG,UAAA2H,sBAAV,SAAgCD,KAGtBjB,EAAAzG,UAAA4H,oBAAV,SAA8BF,KAavBjB,EAAAzG,UAAA8G,mBAAP,WAAuC,OAAOhH,KAAKuH,iBAAmBvH,KAAK2H,qBACpEhB,EAAAzG,UAAA6H,mBAAP,SAA0BC,GAAsBhI,KAAKuH,gBAAkBS,GAGhErB,EAAAzG,UAAAiH,qBAAP,WAAyC,OAAOnH,KAAKwH,mBAAqBxH,KAAK6H,uBACxElB,EAAAzG,UAAA+H,qBAAP,SAA4BD,GAAsBhI,KAAKwH,kBAAoBQ,GAGpErB,EAAAzG,UAAAmH,mBAAP,WAAuC,OAAOrH,KAAKyH,iBAAmBzH,KAAK8H,qBACpEnB,EAAAzG,UAAAgI,mBAAP,SAA0BF,GAAsBhI,KAAKyH,gBAAkBO,GAGhErB,EAAAzG,UAAAiI,SAAP,WAAiC,OAAOnI,KAAK6G,OAGtCF,EAAAzG,UAAAkI,UAAP,WAA6B,OAAOpI,KAAKsH,QAClCX,EAAAzG,UAAAmI,UAAP,SAAiBf,GAAuBtH,KAAKsH,OAASA,GAG/CX,EAAAzG,UAAAoI,QAAP,WAA2B,OAAOtI,KAAKuI,MAExC5B,GArGC,SAAAA,EAAYY,EAAiCC,EAAmCC,QAApE,IAAAF,IAAAA,EAAA,WAAiC,IAAAC,IAAAA,EAAA,WAAmC,IAAAC,IAAAA,EAAA,MAAhF,IAAAe,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAEPwI,EAAKT,mBAAmBR,GACxBiB,EAAKP,qBAAqBT,GAC1BgB,EAAKN,mBAAmBT,GAExBe,EAAK3B,MAAQlM,EAAAwL,aAAaW,UAC1B0B,EAAKD,KAAOC,GACPlB,OAAS,K,EAjBH3M,EAAAgM,QAAOA,EAJrB,CAAUhM,IAAAA,KAAG,ICAb,SAAUA,GAET,IAAAyL,EAAAqC,GAAArC,EAA0CzL,EAAAgM,QAAAL,UAAAmC,EAAArC,GAwBlCqC,EAAAvI,UAAAwI,WAAP,W,IAAkB,IAAAC,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,GAAAC,UAAAD,GACK,EAAlB2N,EAASzN,SACZ8E,KAAK4I,WAAWD,GAChB3I,KAAK2I,SAAW3I,KAAK6I,cAAcrG,OAAkBmG,KAIhDF,EAAAvI,UAAA4I,cAAP,W,IAAqB,IAAAH,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,GAAAC,UAAAD,GACpBgF,KAAK+I,gBAAezN,MAApB0E,KAAIgJ,eAAA,CAAiB,GAAML,KAGlBF,EAAAvI,UAAA6I,gBAAV,SAA0B5I,G,IAAc,IAAAwI,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,EAAA,GAAAC,UAAAD,GACjB,EAAlB2N,EAASzN,SACZ8E,KAAK4I,WAAWD,GAChBtG,MAAMnC,UAAU4F,OAAOxK,MAAM0E,KAAK6I,cAAuB,CAAC1I,EAAO,GAAIqC,OAAOmG,MAIvEF,EAAAvI,UAAA+I,gBAAP,SAAuBN,GACtB3I,KAAK0I,WAAUpN,MAAf0E,KAAmB2I,IAGbF,EAAAvI,UAAAgJ,mBAAP,SAA0BP,GACzB3I,KAAK8I,cAAaxN,MAAlB0E,KAAsB2I,IAGbF,EAAAvI,UAAAiJ,qBAAV,SAA+BhJ,EAAcwI,GAC5C3I,KAAK+I,gBAAezN,MAApB0E,KAAIgJ,eAAA,CAAiB7I,GAAUwI,KAGzBF,EAAAvI,UAAAkJ,UAAP,WACC,OAAOpJ,KAAK2I,SAASzN,QAGfuN,EAAAvI,UAAAmJ,kBAAP,SAAyBlJ,GAAwB,OAAOH,KAAK2I,SAASxI,IAC/DsI,EAAAvI,UAAA2I,YAAP,WAAiC,OAAO7I,KAAK2I,UAErCF,EAAAvI,UAAA0I,WAAR,SAAmBD,GAGlB,IAFA,IACIf,EADE0B,EAAqBX,EAASzN,OAE3B0F,EAAW,EAAGA,EAAI0I,IAAe1I,EAElB,mBADvBgH,EAAUe,EAAS/H,MACgB+H,EAAS/H,GAAKgH,EAAU,IAAIjN,EAAA4O,KAAK3B,IACpEA,EAAQS,UAAUrI,OAIVyI,EAAAvI,UAAAyH,oBAAV,SAA8BC,GAC7B5H,KAAK0H,kBAGIe,EAAAvI,UAAA2H,sBAAV,SAAgCD,KAGtBa,EAAAvI,UAAA4H,oBAAV,SAA8BF,KAiB/Ba,GAvFC,SAAAA,I,IAAY,IAAAE,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,GAAAC,UAAAD,GAAZ,IAAAwN,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OACPwI,EAAKG,SAAW,GAChBH,EAAKE,WAAUpN,MAAfkN,EAAmBG,G,EAXChO,EAAA8N,YAAWA,EAFlC,CAAU9N,IAAAA,KAAG,ICAb,SAAUA,GAET,IAAAyL,EAAAoD,GAAApD,EAA2BzL,EAAAgM,QAAAL,UAAAkD,EAAApD,GAsBhBoD,EAAAtJ,UAAAyH,oBAAV,SAA8BC,GAC7B,IAAMI,EAAgBhI,KAAKoI,YAAyB,YAChDJ,GAAMA,IACVhI,KAAK0H,kBAGI8B,EAAAtJ,UAAA2H,sBAAV,SAAgCD,KAGtB4B,EAAAtJ,UAAA4H,oBAAV,SAA8BF,KAY/B4B,GAnCC,SAAAA,I,OACCpD,EAAA7D,KAAAvC,OAAOA,KATIrF,EAAA6O,MAAKA,EAFnB,CAAU7O,IAAAA,KAAG,ICAb,SAAUA,GAET,IAAAyL,EAAAqD,GAAArD,EAA4BzL,EAAAgM,QAAAL,UAAAmD,EAAArD,GAsBjBqD,EAAAvJ,UAAAyH,oBAAV,SAA8BC,GAC7B,IAAMI,EAAgBhI,KAAKoI,YAA0B,aACjDJ,GAAMA,IACVhI,KAAK0H,kBAGI+B,EAAAvJ,UAAA2H,sBAAV,SAAgCD,KAGtB6B,EAAAvJ,UAAA4H,oBAAV,SAA8BF,KAY/B6B,GAnCC,SAAAA,I,OACCrD,EAAA7D,KAAAvC,OAAOA,KATIrF,EAAA8O,OAAMA,EAFpB,CAAU9O,IAAAA,KAAG,ICAb,SAAUA,GAET,IAAAyL,EAAAsD,GAAAtD,EAAyBzL,EAAAgM,QAAAL,UAAAoD,EAAAtD,GAuBdsD,EAAAxJ,UAAAyH,oBAAV,SAA8BC,GAC7BxF,QAAQK,IAAInH,MAAM8G,QAASC,MAAMnC,UAAUoC,MAAMC,KAAKvC,KAAKjF,WAC3DiF,KAAK0H,kBAGIgC,EAAAxJ,UAAA2H,sBAAV,SAAgCD,KAGtB8B,EAAAxJ,UAAA4H,oBAAV,SAA8BF,GAC7B5H,KAAKjF,SAAW,MAaV2O,EAAAxJ,UAAAyJ,YAAP,WAA6B,OAAO3J,KAAKjF,UAClC2O,EAAAxJ,UAAA0J,YAAP,SAAmB7O,GAAuBiF,KAAKjF,SAAWA,GAE3D2O,GAxCC,SAAAA,I,IAAY,IAAA3O,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GAAZ,IAAAwN,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OACPwI,EAAKzN,SAAWA,E,EAVLJ,EAAA+O,IAAGA,EAFjB,CAAU/O,IAAAA,KAAG,ICAb,SAAUA,GAET,IAAAyL,EAAAyD,GAAAzD,EAA0BzL,EAAAgM,QAAAL,UAAAuD,EAAAzD,GAwBfyD,EAAA3J,UAAAyH,oBAAV,SAA8BC,GAC7B5H,KAAK8J,QAAU5N,OAAO6N,WAAW/J,KAAKgK,gBAAiBhK,KAAKiK,OAGnDJ,EAAA3J,UAAA2H,sBAAV,SAAgCD,GAC/B5H,KAAKkK,UAGIL,EAAA3J,UAAA4H,oBAAV,SAA8BF,GAC7B5H,KAAKkK,UAGEL,EAAA3J,UAAAgK,OAAR,YACsB,GAAjBlK,KAAK8J,UACRK,aAAanK,KAAK8J,SAClB9J,KAAK8J,SAAW,IAkBXD,EAAA3J,UAAAkK,QAAP,WAA0B,OAAOpK,KAAKiK,MAC/BJ,EAAA3J,UAAAmK,QAAP,SAAeJ,GAAoBjK,KAAKiK,KAAOA,GAIhDJ,GAtDC,SAAAA,EAAYI,QAAA,IAAAA,IAAAA,EAAA,KAAZ,IAAAzB,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAkCAwI,EAAAwB,gBAAkB,SAACnF,GAC1B2D,EAAKd,kBAlCLc,EAAKyB,KAAOA,EACZzB,EAAKsB,SAAW,E,EAXLnP,EAAAkP,KAAIA,EAFlB,CAAUlP,IAAAA,KAAG,ICAb,SAAUA,GAKT,IAAAyL,EAAAmD,GAAAnD,EAA0BzL,EAAAgM,QAAAL,UAAAiD,EAAAnD,GA0BfmD,EAAArJ,UAAAyH,oBAAV,SAA8BC,GACzB5H,KAAKsK,iBAAmBtK,KAAKyF,WAChCzF,KAAKsK,gBAAgB9E,iBAAiBxF,KAAKyF,UAAWzF,KAAKgK,iBAC3DhK,KAAKgI,KAAI1M,MAAT0E,KAAaA,KAAKuK,QAElBvK,KAAKgI,KAAI1M,MAAT0E,KAAaA,KAAKuK,MAClBvK,KAAK0H,mBAIG6B,EAAArJ,UAAA2H,sBAAV,SAAgCD,GAC3B5H,KAAKsK,iBAAmBtK,KAAKyF,WAChCzF,KAAKsK,gBAAgBzE,oBAAoB7F,KAAKyF,UAAWzF,KAAKgK,kBAItDT,EAAArJ,UAAA4H,oBAAV,SAA8BF,GACzB5H,KAAKsK,iBAAmBtK,KAAKyF,WAChCzF,KAAKsK,gBAAgBzE,oBAAoB7F,KAAKyF,UAAWzF,KAAKgK,iBAG/DhK,KAAKgI,KAAO,KACZhI,KAAKuK,KAAO,KACZvK,KAAKsK,gBAAkB,KACvBtK,KAAKyF,UAAY,MAiBX8D,EAAArJ,UAAAsK,YAAP,WAAgC,OAAOxK,KAAKgI,MACrCuB,EAAArJ,UAAAuK,YAAP,SAAmBzC,GAAsBhI,KAAKgI,KAAOA,GAG9CuB,EAAArJ,UAAAwK,aAAP,WAA8B,OAAO1K,KAAKuK,MACnChB,EAAArJ,UAAAyK,aAAP,SAAoBJ,GAAmBvK,KAAKuK,KAAOA,GAG5ChB,EAAArJ,UAAA0K,mBAAP,WAA8C,OAAO5K,KAAKsK,iBACnDf,EAAArJ,UAAA2K,mBAAP,SAA0BP,GAAwCtK,KAAKsK,gBAAkBA,GAGlFf,EAAArJ,UAAA4K,aAAP,WAA+B,OAAO9K,KAAKyF,WACpC8D,EAAArJ,UAAA6K,aAAP,SAAoBtF,GAAyBzF,KAAKyF,UAAYA,GAE/D8D,GA1EC,SAAAA,EAAYvB,EAAsBuC,EAAiBD,EAAwC7E,QAA/E,IAAAuC,IAAAA,EAAA,WAAsB,IAAAuC,IAAAA,EAAA,SAAiB,IAAAD,IAAAA,EAAA,WAAwC,IAAA7E,IAAAA,EAAA,MAA3F,IAAA+C,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OA4CAwI,EAAAwB,gBAAkB,SAACnF,GAC1B2D,EAAKd,kBA5CLc,EAAKR,KAAOA,EACZQ,EAAK+B,KAAOA,EACZ/B,EAAK8B,gBAAkBA,EACvB9B,EAAK/C,UAAYA,E,EAbN9K,EAAA4O,KAAIA,EALlB,CAAU5O,IAAAA,KAAG,ICAb,SAAUA,GAKT,IAAAyL,EAAA4E,GAAA5E,EAA4BzL,EAAAgM,QAAAL,UAAA0E,EAAA5E,GAwBjB4E,EAAA9K,UAAAyH,oBAAV,SAA8BC,GACzB5H,KAAKsK,iBAAmBtK,KAAKyF,WAChCzF,KAAKsK,gBAAgB9E,iBAAiBxF,KAAKyF,UAAWzF,KAAKgK,kBAInDgB,EAAA9K,UAAA2H,sBAAV,SAAgCD,GAC3B5H,KAAKsK,iBAAmBtK,KAAKyF,WAChCzF,KAAKsK,gBAAgBzE,oBAAoB7F,KAAKyF,UAAWzF,KAAKgK,kBAItDgB,EAAA9K,UAAA4H,oBAAV,SAA8BF,GACzB5H,KAAKsK,iBAAmBtK,KAAKyF,WAChCzF,KAAKsK,gBAAgBzE,oBAAoB7F,KAAKyF,UAAWzF,KAAKgK,iBAG/DhK,KAAKyF,UAAY,KACjBzF,KAAKsK,gBAAkB,MAiBjBU,EAAA9K,UAAA0K,mBAAP,WAA8C,OAAO5K,KAAKsK,iBACnDU,EAAA9K,UAAA2K,mBAAP,SAA0BP,GAAwCtK,KAAKsK,gBAAkBA,GAGlFU,EAAA9K,UAAA4K,aAAP,WAA+B,OAAO9K,KAAKyF,WACpCuF,EAAA9K,UAAA6K,aAAP,SAAoBtF,GAAyBzF,KAAKyF,UAAYA,GAE/DuF,GA1DC,SAAAA,EAAYV,EAAwC7E,QAAxC,IAAA6E,IAAAA,EAAA,WAAwC,IAAA7E,IAAAA,EAAA,MAApD,IAAA+C,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAoCAwI,EAAAwB,gBAAkB,SAACnF,GAC1B2D,EAAKd,kBApCLc,EAAK8B,gBAAkBA,EACvB9B,EAAK/C,UAAYA,E,EAXN9K,EAAAqQ,OAAMA,EALpB,CAAUrQ,IAAAA,KAAG,ICAb,SAAUA,GAET,IAMAyL,EANO9J,EAASzB,IAAIwB,KAAKC,OAElBN,EAAOnB,IAAIkB,KAAKC,KAIvBiP,GAAA7E,EAA2BzL,EAAAgM,QAAAL,UAAA2E,EAAA7E,GAkChB6E,EAAA/K,UAAAyH,oBAAV,SAA8BC,GAI7B,IAAK,IAAI9G,KAHTd,KAAKkL,aAAe,GAGJlL,KAAKmL,GACXnL,KAAKmL,GAAGrK,GACbd,KAAKoL,MAA0B,MAAlBpL,KAAKoL,KAAKtK,GAC1Bd,KAAKkL,aAAapK,GAAOd,KAAKoL,KAAKtK,GAEnCd,KAAKkL,aAAapK,GAAOd,KAAKqL,YAAYvK,GAGxB,EAAhBd,KAAKsL,UACRtL,KAAK8J,QAAU5N,OAAOqP,YAAYvL,KAAKwL,gBAAiBP,EAAMQ,gBAC9DzL,KAAKoE,UAAYpI,EAAKC,MACtB+D,KAAK1E,MAAM,GACP0E,KAAK0L,SAAS1L,KAAK0L,QAAQ1L,KAAK2L,aAAc3L,KAAK4L,iBAEvD5L,KAAK1E,MAAM,GACP0E,KAAK0L,SAAS1L,KAAK0L,QAAQ1L,KAAK2L,aAAc3L,KAAK4L,eACvD5L,KAAK1E,MAAM,GACP0E,KAAK6L,UAAU7L,KAAK6L,SAAS7L,KAAK2L,aAAc3L,KAAK4L,eACrD5L,KAAK8L,YAAY9L,KAAK8L,WAAW9L,KAAK2L,aAAc3L,KAAK4L,eAC7D5L,KAAK0H,mBAIGuD,EAAA/K,UAAA2H,sBAAV,SAAgCD,GAC/B5H,KAAKkK,UAGIe,EAAA/K,UAAA4H,oBAAV,SAA8BF,GAC7B5H,KAAKkK,SAELlK,KAAKqL,YAAc,KACnBrL,KAAKmL,GAAK,KACVnL,KAAKoL,KAAO,KACZpL,KAAK+L,OAAS,KACd/L,KAAK0L,QAAU,KACf1L,KAAK6L,SAAW,KAChB7L,KAAK8L,WAAa,KAClB9L,KAAKkL,aAAe,MAGbD,EAAA/K,UAAAgK,OAAR,YACsB,GAAjBlK,KAAK8J,UACRkC,cAAchM,KAAK8J,SACnB9J,KAAK8J,SAAW,IAIVmB,EAAA/K,UAAA5E,MAAR,SAAc2Q,GAGb,IAAIC,EACJ,IAAK,IAAIpL,KAHTd,KAAK2L,aAAeM,EACpBjM,KAAK4L,cAAgB5L,KAAK+L,OAAO/L,KAAK2L,cAEtB3L,KAAKmL,GACpBe,EAASlM,KAAKkL,aAAapK,GAC3Bd,KAAKqL,YAAYvK,GAAOoL,GAAUlM,KAAKmL,GAAGrK,GAAOoL,GAAUlM,KAAK4L,eA4B3DX,EAAA/K,UAAAgF,UAAP,WAA4B,OAAOlF,KAAKqL,aACjCJ,EAAA/K,UAAAiM,UAAP,SAAiB1Q,GAAsBuE,KAAKqL,YAAc5P,GAGnDwP,EAAA/K,UAAAkM,YAAP,WAA8B,OAAOpM,KAAKsL,UACnCL,EAAA/K,UAAAmM,YAAP,SAAmBf,GAAwBtL,KAAKsL,SAAWA,GAGpDL,EAAA/K,UAAAoM,MAAP,WAAwB,OAAOtM,KAAKmL,IAC7BF,EAAA/K,UAAAqM,MAAP,SAAapB,GAAkBnL,KAAKmL,GAAKA,GAGlCF,EAAA/K,UAAAsM,QAAP,WAA0B,OAAOxM,KAAKoL,MAC/BH,EAAA/K,UAAAuM,QAAP,SAAerB,GAAoBpL,KAAKoL,KAAOA,GAGxCH,EAAA/K,UAAAwM,UAAP,WAAoC,OAAO1M,KAAK+L,QACzCd,EAAA/K,UAAAyM,UAAP,SAAiBZ,GAA8B/L,KAAK+L,OAASA,GAGtDd,EAAA/K,UAAA0M,WAAP,WAA4C,OAAO5M,KAAK0L,SACjDT,EAAA/K,UAAA2M,WAAP,SAAkB7E,GAAmChI,KAAK0L,QAAU1D,GAG7DiD,EAAA/K,UAAA4M,YAAP,WAA6C,OAAO9M,KAAK6L,UAClDZ,EAAA/K,UAAA6M,YAAP,SAAmB/E,GAAmChI,KAAK6L,SAAW7D,GAG/DiD,EAAA/K,UAAA8M,cAAP,WAA+C,OAAOhN,KAAK8L,YACpDb,EAAA/K,UAAA+M,cAAP,SAAqBjF,GAAmChI,KAAK8L,WAAa9D,GAGnEiD,EAAA/K,UAAAgN,gBAAP,WAAkC,OAAOlN,KAAK2L,cAGvCV,EAAA/K,UAAAiN,iBAAP,WAAmC,OAAOnN,KAAK4L,eAOxCX,EAAA/K,UAAAkN,kBAAP,WAAoC,OAAOnC,EAAMQ,gBAC1CR,EAAA/K,UAAAmN,kBAAP,SAAyBC,GAA4BrC,EAAMQ,eAAiB6B,GAC7DrC,EAAAQ,eAAwB,IAAO,GAC/CR,GA5JC,SAAAA,EAAYxP,EAAe0P,EAAWC,EAAoBE,EAAwBS,EAAuCL,EAAsCG,EAAuCC,QAAhK,IAAAV,IAAAA,EAAA,WAAoB,IAAAE,IAAAA,EAAA,UAAwB,IAAAS,IAAAA,EAAwBzP,EAAOC,aAAQ,IAAAmP,IAAAA,EAAA,WAAsC,IAAAG,IAAAA,EAAA,WAAuC,IAAAC,IAAAA,EAAA,MAAtM,IAAAtD,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAsFAwI,EAAAgD,gBAAkB,WACzB,IAAM/G,EAAqBzI,EAAKC,MAAQuM,EAAKpE,UACzCK,EAAc+D,EAAK8C,UACtB9C,EAAKlN,MAAMmJ,EAAc+D,EAAK8C,UAC1B9C,EAAKqD,UAAUrD,EAAKqD,SAASrD,EAAKmD,aAAcnD,EAAKoD,iBAEzDpD,EAAKlN,MAAM,GACXkN,EAAK0B,SACD1B,EAAKqD,UAAUrD,EAAKqD,SAASrD,EAAKmD,aAAcnD,EAAKoD,eACrDpD,EAAKsD,YAAYtD,EAAKsD,WAAWtD,EAAKmD,aAAcnD,EAAKoD,eAC7DpD,EAAKd,mBA/FNc,EAAK6C,YAAc5P,EACnB+M,EAAK2C,GAAKA,EACV3C,EAAK4C,KAAOA,EACZ5C,EAAK8C,SAAWA,EAChB9C,EAAKuD,OAASA,EACdvD,EAAKkD,QAAUA,EACflD,EAAKqD,SAAWA,EAChBrD,EAAKsD,WAAaA,EAClBtD,EAAKmD,aAAe,EACpBnD,EAAKoD,cAAgB,EACrBpD,EAAKpE,UAAY,EACjBoE,EAAKsB,SAAW,E,EArBLnP,EAAAsQ,MAAKA,EARnB,CAAUtQ,IAAAA,KAAG,ICAb,SAAUA,GAIT,IAAAyL,EAAAmH,GAAAnH,EAA4BzL,EAAA8N,YAAAnC,UAAAiH,EAAAnH,GA0BpBmH,EAAArN,UAAAwI,WAAP,W,IAAkB,IAAAC,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,GAAAC,UAAAD,GACjBoL,EAAAlG,UAAMwI,WAAUpN,MAAA0E,KAAI2I,IAGd4E,EAAArN,UAAA4I,cAAP,W,IAAqB,IAAAH,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,GAAAC,UAAAD,GACpBoL,EAAAlG,UAAM6I,gBAAezN,MAAA0E,KAAAgJ,eAAA,CAAChJ,KAAKwN,SAAW,GAAM7E,KAGtC4E,EAAArN,UAAA+I,gBAAP,SAAuBN,GACtB3I,KAAK0I,WAAUpN,MAAf0E,KAAmB2I,IAGb4E,EAAArN,UAAAgJ,mBAAP,SAA0BP,GACzB3I,KAAK8I,cAAaxN,MAAlB0E,KAAsB2I,IAGf4E,EAAArN,UAAAuN,KAAR,WACCzN,KAAK0N,eAAiB1N,KAAKqJ,kBAAkBrJ,KAAKwN,UAClDxN,KAAK0N,eAAelI,iBAAiB7K,EAAA0L,aAAaI,SAAUzG,KAAKgK,iBACjEhK,KAAK0N,eAAe9G,WAaX2G,EAAArN,UAAAyH,oBAAV,SAA8BC,IAC7B5H,KAAKwN,SAAW,GACZxN,KAAKoJ,YACRpJ,KAAKyN,OAELzN,KAAK0H,kBAIG6F,EAAArN,UAAA2H,sBAAV,SAAgCD,GAC3B5H,KAAK0N,iBACR1N,KAAK0N,eAAe7H,oBAAoBlL,EAAA0L,aAAaI,SAAUzG,KAAKgK,iBACpEhK,KAAK0N,eAAezG,YACpBjH,KAAK0N,eAAiB,MAEvB1N,KAAKwN,UAAY,EACjBpH,EAAAlG,UAAM2H,sBAAqBtF,KAAAvC,KAAC4H,IAGnB2F,EAAArN,UAAA4H,oBAAV,SAA8BF,GACzB5H,KAAK0N,iBACR1N,KAAK0N,eAAe7H,oBAAoBlL,EAAA0L,aAAaI,SAAUzG,KAAKgK,iBACpEhK,KAAK0N,eAAetG,UACpBpH,KAAK0N,eAAiB,MAEvB1N,KAAKwN,UAAY,EACjBxN,KAAK2N,UAAW,EAChB3N,KAAK4N,oBAAqB,EAC1BxH,EAAAlG,UAAM4H,oBAAmBvF,KAAAvC,KAAC4H,IAGjB2F,EAAArN,UAAA2N,gBAAV,WACK7N,KAAK0N,eAAevF,YAAcxN,EAAAwL,aAAaY,YAClD/G,KAAK0N,eAAe7H,oBAAoBlL,EAAA0L,aAAaI,SAAUzG,KAAKgK,iBACpEhK,KAAK0N,eAAezG,aAErBjH,KAAK0H,kBAGI6F,EAAArN,UAAA4N,iBAAV,WACK9N,KAAK0N,eAAevF,YAAcxN,EAAAwL,aAAaY,YAClD/G,KAAK0N,eAAe7H,oBAAoBlL,EAAA0L,aAAaI,SAAUzG,KAAKgK,iBACpEhK,KAAK0N,eAAezG,aAErB,IAAMe,EAAgBhI,KAAKoI,YAA0B,aACjDJ,GAAMA,IACVhI,KAAKoH,WAaImG,EAAArN,UAAA6N,YAAV,WAAiC,OAAO/N,KAAKwN,UAM9CD,GAnHC,SAAAA,I,IAAY,IAAA5E,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,GAAAC,UAAAD,GAAZ,IAAAwN,EAAApC,EAAA9K,MAAA0E,KACU2I,IAAQ3I,K,OAuCVwI,EAAAwB,gBAAkB,SAACnF,GAC1B2D,EAAKkF,eAAe7H,oBAAoBlL,EAAA0L,aAAaI,SAAU+B,EAAKwB,iBACpExB,EAAKkF,eAAiB,OAChBlF,EAAKgF,UAAYhF,EAAKY,YAC3BZ,EAAKd,iBAELc,EAAKiF,QA5CNjF,EAAKkF,eAAiB,KACtBlF,EAAKgF,UAAY,EACjBhF,EAAKmF,UAAW,EAChBnF,EAAKoF,oBAAqB,E,EAbfjT,EAAA4S,OAAMA,EAJpB,CAAU5S,IAAAA,KAAG,IrBAb,SAAUA,GAIT,IAAAyL,EAAA4H,GAAA5H,EAA8BzL,EAAA8N,YAAAnC,UAAA0H,EAAA5H,GAuBtB4H,EAAA9N,UAAAwI,WAAP,W,IAAkB,IAAAC,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,GAAAC,UAAAD,GACjBoL,EAAAlG,UAAMwI,WAAUpN,MAAA0E,KAAI2I,IAGdqF,EAAA9N,UAAA4I,cAAP,W,IAAqB,IAAAH,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,GAAAC,UAAAD,GACpBgF,KAAK0I,WAAUpN,MAAf0E,KAAmB2I,IAGbqF,EAAA9N,UAAA+I,gBAAP,SAAuBN,GACtB3I,KAAK0I,WAAUpN,MAAf0E,KAAmB2I,IAGbqF,EAAA9N,UAAAgJ,mBAAP,SAA0BP,GACzB3I,KAAK0I,WAAUpN,MAAf0E,KAAmB2I,IASVqF,EAAA9N,UAAAyH,oBAAV,SAA8BC,GAC7B5H,KAAKiO,cAAgB,EACrB,IAAM/S,EAAgB8E,KAAKoJ,YAC3B,GAAa,EAATlO,EAGH,IAFA,IACIgT,EADEvF,EAAqB3I,KAAK6I,cAEvBjI,EAAW,EAAGA,EAAI1F,IAAU0F,GACpCsN,EAAUvF,EAAS/H,IACX4E,iBAAiB7K,EAAA0L,aAAaI,SAAUzG,KAAKgK,iBACrDkE,EAAQtH,eAGT5G,KAAK0H,kBAIGsG,EAAA9N,UAAA2H,sBAAV,SAAgCD,GAC/B,IAAM1M,EAAgB8E,KAAKoJ,YAC3B,GAAa,EAATlO,EAGH,IAFA,IACIiT,EADExF,EAAqB3I,KAAK6I,cAEvBjI,EAAW,EAAGA,EAAI1F,IAAU0F,GACpCuN,EAAUxF,EAAS/H,IACXiF,oBAAoBlL,EAAA0L,aAAaI,SAAUzG,KAAKgK,iBACxDmE,EAAQlH,YAGVb,EAAAlG,UAAM2H,sBAAqBtF,KAAAvC,KAAC4H,IAGnBoG,EAAA9N,UAAA4H,oBAAV,SAA8BF,GAC7B,IAAM1M,EAAgB8E,KAAKoJ,YAC3B,GAAa,EAATlO,EAGH,IAFA,IACIkT,EADEzF,EAAqB3I,KAAK6I,cAEvBjI,EAAW,EAAGA,EAAI1F,IAAU0F,GACpCwN,EAAUzF,EAAS/H,IACXiF,oBAAoBlL,EAAA0L,aAAaI,SAAUzG,KAAKgK,iBACxDoE,EAAQhH,UAGVhB,EAAAlG,UAAM4H,oBAAmBvF,KAAAvC,KAAC4H,IAGjBoG,EAAA9N,UAAA2N,gBAAV,WACC,IAAM3S,EAAgB8E,KAAKoJ,YAC3B,GAAa,EAATlO,EAGH,IAFA,IAAMyN,EAAqB3I,KAAK6I,cAC5BjB,OAAO,EACFhH,EAAW,EAAGA,EAAI1F,IAAU0F,GACpCgH,EAAUe,EAAS/H,IACPuH,YAAcxN,EAAAwL,aAAaY,YACtCa,EAAQ/B,oBAAoBlL,EAAA0L,aAAaI,SAAUzG,KAAKgK,iBACxDpC,EAAQX,aAIXjH,KAAK0H,kBAGIsG,EAAA9N,UAAA4N,iBAAV,WACC,IAAM5S,EAAgB8E,KAAKoJ,YAC3B,GAAa,EAATlO,EAGH,IAFA,IAAMyN,EAAqB3I,KAAK6I,cAC5BjB,OAAO,EACFhH,EAAW,EAAGA,EAAI1F,IAAU0F,GACpCgH,EAAUe,EAAS/H,IACPuH,YAAcxN,EAAAwL,aAAaY,YACtCa,EAAQ/B,oBAAoBlL,EAAA0L,aAAaI,SAAUzG,KAAKgK,iBACxDpC,EAAQX,aAIX,IAAMe,EAAgBhI,KAAKoI,YAA0B,aACjDJ,GAAMA,IACVhI,KAAKoH,WAaI4G,EAAA9N,UAAAmO,iBAAV,WAAsC,OAAOrO,KAAKiO,eAMnDD,GAnIC,SAAAA,I,IAAY,IAAArF,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,GAAAC,UAAAD,GAAZ,IAAAwN,EAAApC,EAAA9K,MAAA0E,KACU2I,IAAQ3I,K,OA8BVwI,EAAAwB,gBAAkB,SAACnF,KACpB2D,EAAKyF,eAAiBzF,EAAKY,aAChCZ,EAAKd,kBA/BNc,EAAKyF,cAAgB,E,EAVVtT,EAAAqT,SAAQA,EAJtB,CAAUrT,IAAAA,KAAG,IsBAb,SAAUE,GAAI,IAAAyT,EAEbC,EAQC,SAAAA,EAAYC,EAAcC,QAAd,IAAAD,IAAAA,EAAA,QAAc,IAAAC,IAAAA,EAAA,GACzBzO,KAAKC,IAAIuO,EAAGC,GAXDH,EAAAzT,EAAAyT,OAAAzT,EAAAyT,KAAI,IAwBTC,EAAArO,UAAAD,IAAP,SAAWuO,EAAUC,GACpBzO,KAAKwO,EAAIA,EACTxO,KAAKyO,EAAIA,GAGHF,EAAArO,UAAAwO,OAAP,SAAcC,GACbA,EAAM1O,IAAID,KAAKwO,EAAGxO,KAAKyO,IAGjBF,EAAArO,UAAA0O,SAAP,WACC,OAAO,IAAIL,EAAQvO,KAAKwO,EAAGxO,KAAKyO,IAG1BF,EAAArO,UAAA2O,KAAP,WACC7O,KAAKC,IAAI,EAAG,IAGNsO,EAAArO,UAAA4O,UAAP,WACC,IAAMC,EAAW/O,KAAKoJ,YACtBpJ,KAAKwO,GAAKO,EACV/O,KAAKyO,GAAKM,GAGJR,EAAArO,UAAAkJ,UAAP,WACC,OAAO9L,KAAKW,KAAK+B,KAAKwO,EAAIxO,KAAKwO,EAAIxO,KAAKyO,EAAIzO,KAAKyO,IAG3CF,EAAArO,UAAA8O,kBAAP,SAAyBL,GACxB,IAAMM,EAAYN,EAAMH,EAAIxO,KAAKwO,EAC3BU,EAAYP,EAAMF,EAAIzO,KAAKyO,EACjC,OAAOQ,EAAKA,EAAKC,EAAKA,GAGhBX,EAAArO,UAAAiP,YAAP,SAAmBR,GAClB,OAAOrR,KAAKW,KAAK+B,KAAKgP,kBAAkBL,KAxD1CJ,EAuEAA,EAvEaD,EAAAC,QAAOA,EAFrB,CAAU1T,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAyT,EAEbc,EAQC,SAAAA,EAAYZ,EAAcC,EAAcY,QAA5B,IAAAb,IAAAA,EAAA,QAAc,IAAAC,IAAAA,EAAA,QAAc,IAAAY,IAAAA,EAAA,GACvCrP,KAAKC,IAAIuO,EAAGC,EAAGY,GAXJf,EAAAzT,EAAAyT,OAAAzT,EAAAyT,KAAI,IAwBTc,EAAAlP,UAAAD,IAAP,SAAWuO,EAAUC,EAAUY,GAC9BrP,KAAKwO,EAAIA,EACTxO,KAAKyO,EAAIA,EACTzO,KAAKqP,EAAIA,GAGHD,EAAAlP,UAAAwO,OAAP,SAAcC,GACbA,EAAM1O,IAAID,KAAKwO,EAAGxO,KAAKyO,EAAGzO,KAAKqP,IAGzBD,EAAAlP,UAAA0O,SAAP,WACC,OAAO,IAAIQ,EAAQpP,KAAKwO,EAAGxO,KAAKyO,EAAGzO,KAAKqP,IAGlCD,EAAAlP,UAAA2O,KAAP,WACC7O,KAAKC,IAAI,EAAG,EAAG,IAGTmP,EAAAlP,UAAA4O,UAAP,WACC,IAAMC,EAAW/O,KAAKoJ,YACtBpJ,KAAKwO,GAAKO,EACV/O,KAAKyO,GAAKM,EACV/O,KAAKqP,GAAKN,GAGJK,EAAAlP,UAAAkJ,UAAP,WACC,OAAO9L,KAAKW,KAAK+B,KAAKwO,EAAIxO,KAAKwO,EAAIxO,KAAKyO,EAAIzO,KAAKyO,EAAIzO,KAAKqP,EAAIrP,KAAKqP,IAG7DD,EAAAlP,UAAA8O,kBAAP,SAAyBL,GACxB,IAAMM,EAAYN,EAAMH,EAAIxO,KAAKwO,EAC3BU,EAAYP,EAAMF,EAAIzO,KAAKyO,EAC3Ba,EAAYX,EAAMU,EAAIrP,KAAKqP,EACjC,OAAOJ,EAAKA,EAAKC,EAAKA,EAAKI,EAAKA,GAG1BF,EAAAlP,UAAAiP,YAAP,SAAmBR,GAClB,OAAOrR,KAAKW,KAAK+B,KAAKgP,kBAAkBL,KA3D1CS,EA2EAA,EA3Ead,EAAAc,QAAOA,EAFrB,CAAUvU,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAyT,EAEbiB,EAQC,SAAAA,EAAYf,EAAcC,EAAce,EAAkBC,QAA9C,IAAAjB,IAAAA,EAAA,QAAc,IAAAC,IAAAA,EAAA,QAAc,IAAAe,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,GACzDzP,KAAKC,IAAIuO,EAAGC,EAAGe,EAAOC,GAXXnB,EAAAzT,EAAAyT,OAAAzT,EAAAyT,KAAI,IAwBTiB,EAAArP,UAAAD,IAAP,SAAWuO,EAAUC,EAAUe,EAAcC,GAC5CzP,KAAKwO,EAAIA,EACTxO,KAAKyO,EAAIA,EACTzO,KAAKwP,MAAQA,EACbxP,KAAKyP,OAASA,GAGRF,EAAArP,UAAAwO,OAAP,SAAcgB,GACbA,EAAKzP,IAAID,KAAKwO,EAAGxO,KAAKyO,EAAGzO,KAAKwP,MAAOxP,KAAKyP,SAGpCF,EAAArP,UAAA0O,SAAP,WACC,OAAO,IAAIW,EAAUvP,KAAKwO,EAAGxO,KAAKyO,EAAGzO,KAAKwP,MAAOxP,KAAKyP,SAGhDF,EAAArP,UAAAyP,OAAP,WACC,OAAO3P,KAAKyO,GAGNc,EAAArP,UAAA0P,UAAP,WACC,OAAO5P,KAAKyO,EAAIzO,KAAKyP,QAGfF,EAAArP,UAAA2P,QAAP,WACC,OAAO7P,KAAKwO,GAGNe,EAAArP,UAAA4P,SAAP,WACC,OAAO9P,KAAKwO,EAAIxO,KAAKwP,OAGfD,EAAArP,UAAA6P,WAAP,WACC,OAAO,IAAIzB,EAAAC,QAAQvO,KAAK6P,UAAW7P,KAAK2P,WAGlCJ,EAAArP,UAAA8P,YAAP,WACC,OAAO,IAAI1B,EAAAC,QAAQvO,KAAK8P,WAAY9P,KAAK2P,WAGnCJ,EAAArP,UAAA+P,cAAP,WACC,OAAO,IAAI3B,EAAAC,QAAQvO,KAAK6P,UAAW7P,KAAK4P,cAGlCL,EAAArP,UAAAgQ,eAAP,WACC,OAAO,IAAI5B,EAAAC,QAAQvO,KAAK8P,WAAY9P,KAAK4P,cAlE3CL,EAmFAA,EAnFajB,EAAAiB,UAASA,EAFvB,CAAU1U,IAAAA,KAAG,ICAb,SAAUA,IAAI,SAAAyT,GAEb,IAAY6B,EAAAA,EAYAC,EAAAA,GAZAD,EAAAA,EAAA7B,EAAA6B,QAAA7B,EAAA6B,MAAK,KAChBA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,aAAA,GAAA,gBAGWC,EAAAA,EAAA9B,EAAA8B,YAAA9B,EAAA8B,UAAS,KACpBA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,QAAA,GAAA,UAGD,IAAAC,GAEeA,EAAAC,OAAd,SAAqB7U,EAAuB8U,EAAuBC,EAAyCC,QAAzC,IAAAD,IAAAA,EAAsBJ,EAAUM,cAAS,IAAAD,IAAAA,EAAcN,EAAMQ,eAC/H,IAAIC,EAAYnV,EAAO+S,EACnBqC,EAAYpV,EAAOgT,EACnBqC,EAAYrV,EAAO+T,MACnBuB,EAAYtV,EAAOgU,OAEjBuB,EAAYT,EAAO/B,EACnByC,EAAYV,EAAO9B,EACnByC,EAAYX,EAAOf,MACnB2B,EAAYZ,EAAOd,OAEzB,OAAQe,GACP,KAAKJ,EAAUM,QACf,KAAKN,EAAUgB,SACd,IAAMC,EAAgBH,EAAKJ,EACrBQ,EAAgBH,EAAKJ,EACrBQ,EAAef,GAAaJ,EAAUM,QAAWW,EAASC,EAASD,EAASC,EAAoBA,EAATD,EAAkBA,EAASC,EACxHR,GAAMS,EACNR,GAAMQ,EACN,MAED,KAAKnB,EAAUoB,SACd,OAAO,IAAIlD,EAAKiB,UAAUyB,EAAIC,EAAIC,EAAIC,GAQxC,OALAP,EAAKI,GAAOP,GAASN,EAAMsB,UAAYhB,GAASN,EAAMuB,aAAejB,GAASN,EAAMwB,YAAe,EACjGlB,GAASN,EAAMyB,WAAanB,GAASN,EAAM0B,cAAgBpB,GAASN,EAAM2B,aAAiBZ,EAAKJ,GAAOI,EAAKJ,GAAM,GACpHD,EAAKI,GAAOR,GAASN,EAAMsB,UAAYhB,GAASN,EAAM4B,YAActB,GAASN,EAAMyB,UAAa,EAC9FnB,GAASN,EAAMwB,aAAelB,GAASN,EAAM6B,eAAiBvB,GAASN,EAAM2B,aAAiBX,EAAKJ,GAAOI,EAAKJ,GAAM,GAEhH,IAAIzC,EAAKiB,UAAUqB,EAAIC,EAAIC,EAAIC,IAIxCV,GADC,SAAAA,KAnCY/B,EAAA+B,MAAKA,EArBL,CAAAxV,EAAAyT,OAAAzT,EAAAyT,KAAI,KAAlB,CAAUzT,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAkB,EAEbkW,EAcC,SAAAA,KAhBYlW,EAAAlB,EAAAkB,OAAAlB,EAAAkB,KAAI,IAIFkW,EAAAC,KAAd,SAAmBzW,EAAYuM,GAChB,MAAVvM,GACJ0W,OAAOC,KAAK3W,GAAQ4W,QAAQ,SAACvR,GAC5BkH,EAAKlH,EAAKrF,EAAOqF,OAILmR,EAAAK,IAAd,SAAkB7W,EAAYqF,EAAYC,GACzC,IAAMC,EAAYvF,EAAOqF,GACzB,YAAwB,IAAVE,EAAwBA,EAAQD,GAXhDkR,EAeAA,EAfalW,EAAAkW,IAAGA,EAFjB,CAAUpX,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAkB,EAEbwW,EAuEC,SAAAA,KAzEYxW,EAAAlB,EAAAkB,OAAAlB,EAAAkB,KAAI,IAWFwW,EAAAC,SAAd,SAAuBC,EAAcC,EAAiBC,QAAjB,IAAAD,IAAAA,EAAA,QAAiB,IAAAC,IAAAA,EAAA,GAGrD,IAFA,IAAMC,EAAkB,IAAIvQ,MAAMoQ,GAC9BI,EAAWH,EACN9R,EAAW,EAAGA,EAAI6R,IAAS7R,EACnCgS,EAAOhS,GAAKiS,EACZA,GAAKF,EAEN,OAAOC,GAQML,EAAAO,OAAd,SAAwBC,GACvB,OAAOA,EAAKC,OAAO,SAAUxE,EAAK5N,EAAU2H,GAC3C,OAAOA,EAAKlI,QAAQmO,KAAO5N,KAUf2R,EAAAU,WAAd,SAA4BF,EAAUD,GAErC,YAFqC,IAAAA,IAAAA,GAAA,GAEjCA,EACIC,EAAKC,OAAO,SAAUxE,EAAK5N,EAAU2H,GAC3C,OAAOA,EAAKlI,QAAQmO,KAAOjG,EAAK2K,YAAY1E,KAGtCuE,EAAKC,OAAO,SAAUxE,EAAK5N,EAAU2H,GAC3C,OAAQA,EAAKlI,QAAQmO,KAAO5N,GAAO2H,EAAK2K,YAAY1E,KAAO5N,KAgBhD2R,EAAAY,WAAd,SAA4BC,EAAWC,EAAWC,GAIjD,IAHA,IAAcC,EAAUjV,EAAW,EAC7BkV,EAAWJ,EAAMlY,OACjBiI,EAAWkQ,EAAMnY,OAClB0F,EAAI,EAAGA,EAAI4S,IAAK5S,EACpB,IAAK2S,EAAI3S,EAAI,EAAG2S,EAAIpQ,IAAKoQ,EACxBD,EAAShV,IAAKsC,EAAG2S,EAAGH,EAAMxS,GAAIyS,EAAME,KAlExChB,EAwEAA,EAxEaxW,EAAAwW,IAAGA,EAFjB,CAAU1X,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAkB,EAIb0X,EAuKC,SAAAA,KA3KY1X,EAAAlB,EAAAkB,OAAAlB,EAAAkB,KAAI,IAgBF0X,EAAAC,IAAd,SAAkB1S,EAAc2S,EAAaC,EAAaC,EAAaC,EAAaC,GACnF,YADmF,IAAAA,IAAAA,GAAA,GAC/EJ,GAAQC,EAAaC,GACrBE,IACCJ,EAAOC,EACN5S,EAAQ2S,EAAM3S,EAAQ2S,EACTC,EAAR5S,IAAcA,EAAQ4S,GAE3B5S,EAAQ4S,EAAM5S,EAAQ4S,EACTD,EAAR3S,IAAcA,EAAQ2S,KAGzB3S,EAAQ2S,IAASG,EAAOD,IAASD,EAAOD,GAAQE,IAa3CJ,EAAAO,KAAd,SAAmBhT,EAAc2S,EAAaC,EAAaC,EAAaC,EAAa/H,GACpF,OAAI4H,GAAQC,EAAaC,EACrBF,EAAOC,GACN5S,EAAQ2S,EAAM3S,EAAQ2S,EACTC,EAAR5S,IAAcA,EAAQ4S,GACxB7H,GAAQ/K,EAAQ2S,IAASC,EAAOD,KAAUG,EAAOD,GAAQA,IAE5D7S,EAAQ4S,EAAM5S,EAAQ4S,EACTD,EAAR3S,IAAcA,EAAQ2S,GACxB5H,GAAQ/K,EAAQ4S,IAASD,EAAOC,KAAUE,EAAOD,GAAQA,IAUpDJ,EAAAQ,OAAd,SAAqBC,EAAgBC,GACpC,YADoB,IAAAD,IAAAA,EAAA,QAAgB,IAAAC,IAAAA,EAAA,GAC7BD,GAAOC,EAAMD,GAAO5W,KAAK2W,UASnBR,EAAAW,UAAd,SAAwBF,EAAgBC,GACvC,YADuB,IAAAD,IAAAA,EAAA,QAAgB,IAAAC,IAAAA,EAAA,GAChC7W,KAAK+W,MAAMZ,EAAIQ,OAAOC,EAAKC,KAUrBV,EAAAM,MAAd,SAAoB/S,EAAckT,EAAYC,GAC7C,OAAOnT,EAAQkT,EAAMA,EAAeC,EAARnT,EAAcmT,EAAMnT,GAUnCyS,EAAAa,SAAd,SAAuBtT,EAAcuT,EAAeC,GACnD,OAAY,EAARxT,EACIA,EAAQuT,EAASA,EAAkBC,EAARxT,EAAiBwT,EAASxT,KAE5DA,EAAQ1D,KAAKmX,IAAIzT,IACAuT,EAASA,EAAkBC,EAARxT,EAAiBwT,EAASxT,IAalDyS,EAAAiB,KAAd,SAAmBC,EAAWC,EAAWC,EAAWC,EAAWC,QAAA,IAAAA,IAAAA,GAAA,GAC9D,IAAM9F,EAAY4F,EAAKF,EACjBzF,EAAY4F,EAAKF,EACvB,OAAOG,EAAW9F,EAAKA,EAAKC,EAAKA,EAAM5R,KAAKW,KAAKgR,EAAKA,EAAKC,EAAKA,IAQnDuE,EAAAuB,SAAd,SAAuBC,GACtB,OAAOA,EAASxB,EAAIyB,SAQPzB,EAAA0B,SAAd,SAAuBC,GACtB,OAAOA,EAAS3B,EAAI4B,SAUP5B,EAAA6B,KAAd,SAAmBlK,EAAaD,EAAW8J,GAC1C,YAD0C,IAAAA,IAAAA,GAAA,GACnCA,GAAW9J,EAAKC,EAAOqI,EAAI8B,KAAO9B,EAAI+B,IAAMlY,KAAKE,IAAQ2N,EAAKC,EAAO,KAAO,IAAM,KAa5EqI,EAAA+B,IAAuB,EAAVlY,KAAKE,GAClBiW,EAAA8B,IAAuB,EAAVjY,KAAKE,GAClBiW,EAAAgC,IAAuB,EAAVnY,KAAKE,GAClBiW,EAAAiC,IAAuB,EAAVpY,KAAKE,GAClBiW,EAAAkC,IAAuB,EAAVrY,KAAKE,GAClBiW,EAAAmC,KAActY,KAAKE,GAAK,EACxBiW,EAAAoC,KAAcvY,KAAKE,GAAK,EACxBiW,EAAAqC,KAAcxY,KAAKE,GAAK,EACxBiW,EAAAsC,KAAczY,KAAKE,GAAK,EAEvBiW,EAAAyB,QAAiB,IAAM5X,KAAKE,GAC5BiW,EAAA4B,QAAiB/X,KAAKE,GAAK,IAjK3CiW,EAwKAA,EAxKa1X,EAAA0X,IAAGA,EAJjB,CAAU5Y,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAkB,EAEbia,EAqBC,SAAAA,KAvBYja,EAAAlB,EAAAkB,OAAAlB,EAAAkB,KAAI,IAWFia,EAAAC,aAAd,SAA2BC,EAAkBC,EAAoBC,QAAtC,IAAAF,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,QAAoB,IAAAC,IAAAA,EAAA,GAChEA,GAAqB,GAAVD,EAAuB,KAARD,EAC1B,IAAIG,EAAW/Y,KAAK+W,MAAM+B,EAAU,MAAM5P,WACtCgN,EAAWlW,KAAK+W,MAAO+B,EAAU,GAAM,IAAI5P,WAC3CnI,GAAY,IAAMf,KAAK+W,MAAM+B,EAAU,KAAKE,QAAQ,EAAG,GAC3D,MAAS,KAALD,EACIA,EAAI,KAAO,IAAM7C,GAAG8C,QAAQ,EAAG,GAAK,IAAMjY,EAE1CmV,EAAI,IAAMnV,GAjBpB2X,EAsBAA,EAtBaja,EAAAia,IAAGA,EAFjB,CAAUnb,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAkB,EAEbwa,EAmBC,SAAAA,KArBYxa,EAAAlB,EAAAkB,OAAAlB,EAAAkB,KAAI,IAIFwa,EAAAC,KAAd,SAAmB5O,GAElB,OADIA,GAASA,EAAQX,YACd,MAGMsP,EAAA/D,SAAd,SAAuB5L,G,IAAiB,IAAA+B,EAAA,GAAA3N,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA2N,EAAA3N,EAAA,GAAAC,UAAAD,GACvC,IAAMyb,EAAe,IAAI9b,IAAI4S,OAG7B,OAFAkJ,EAAE/N,WAAUpN,MAAZmb,EAAgB9N,GACZ/B,GAAS6P,EAAE7P,UACR6P,GAGMF,EAAAG,OAAd,SAAqB9P,EAAiBgB,GAErC,OADIhB,GAAWgB,GAASA,EAAQhB,UACzBgB,GAhBT2O,EAoBAA,EApBaxa,EAAAwa,IAAGA,EAFjB,CAAU1b,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAA8b,EAEbC,EAyBC,SAAAA,EAAYC,EAAuBC,EAAgCC,EAAwBC,QAAxB,IAAAD,IAAAA,EAAA,UAAwB,IAAAC,IAAAA,EAAA,IAC1FhX,KAAK6W,cAAgBA,EACrB7W,KAAK8W,cAAgBA,EACrB9W,KAAKgX,YAAcA,EACnBhX,KAAKiX,MAAQ,IAAI5U,MAAM0U,GACvB,IAAK,IAAInW,EAAI,EAAGA,EAAImW,IAAanW,EAChCZ,KAAKiX,MAAMrW,GAAKZ,KAAK6W,gBAEtB7W,KAAKG,MAAQ4W,EAnCFJ,EAAA9b,EAAA8b,WAAA9b,EAAA8b,SAAQ,IAoDbC,EAAA1W,UAAAgX,QAAP,WACC,GAAiB,EAAblX,KAAKG,MACR,OAAOH,KAAKiX,QAAQjX,KAAKG,OAE1B,IAAK,IAAIS,EAAI,EAAGA,EAAIZ,KAAKgX,cAAepW,EACvCZ,KAAKiX,MAAME,QAAQnX,KAAK6W,iBAGzB,OADA7W,KAAKG,MAAQH,KAAKgX,YACXhX,KAAKkX,WAQNN,EAAA1W,UAAAkX,WAAP,SAAkBC,GACjBrX,KAAKiX,MAAMjX,KAAKG,SAAWkX,GAOrBT,EAAA1W,UAAAoX,OAAP,WAEC,IADA,IAAMnU,EAAInD,KAAKG,MACNS,EAAI,EAAGA,EAAIuC,IAAKvC,EACxBZ,KAAK8W,cAAc9W,KAAKiX,MAAMM,SAE/BvX,KAAKG,MAAQ,GAOPyW,EAAA1W,UAAAkH,QAAP,WAEC,IADA,IAAMjE,EAAInD,KAAKiX,MAAM/b,OACZ0F,EAAI,EAAGA,EAAIuC,IAAKvC,EACxBZ,KAAK8W,cAAc9W,KAAKiX,MAAMrW,IAE/BZ,KAAKG,MAAQ,EACbH,KAAKiX,MAAQ,KACbjX,KAAK6W,cAAgB,KACrB7W,KAAK8W,cAAgB,MA9FvBF,EAiHAA,EAjHaD,EAAAC,WAAUA,EAFxB,CAAU/b,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgM,EAEb2Q,EAQC,SAAAA,EAAYC,QAAA,IAAAA,IAAAA,EAAA,MACPA,EACHzX,KAAKC,IAAIwX,IAETzX,KAAK0X,WAAa1X,KAAK2X,WAAa,KACpC3X,KAAK4X,UAAY5X,KAAK2X,WAAWzc,OACjC8E,KAAK6X,SAAU,GAEhB7X,KAAK8X,QAAU,KACf9X,KAAK+X,oBAAqB,EAnBflR,EAAAhM,EAAAgM,QAAAhM,EAAAgM,MAAK,IAgCV2Q,EAAAtX,UAAAD,IAAP,SAAWwX,GACVzX,KAAK0X,WAAaD,EAAOjV,SACzBxC,KAAKiE,SAGCuT,EAAAtX,UAAAoS,IAAP,WACKtS,KAAK6X,SAAW7X,KAAK+X,oBACxB/X,KAAKiE,QAEN,IAAM9D,EAAe7C,KAAK+W,MAAM/W,KAAK2W,SAAWjU,KAAK4X,WAC/C5W,EAAUhB,KAAK2X,WAAWxX,GAC5ByS,GAAiB,EAOrB,OANI5S,KAAK8X,UAASlF,EAAS5S,KAAK8X,QAAQ9W,IACpC4R,IACH5S,KAAK2X,WAAW7R,OAAO3F,EAAO,GAC9BH,KAAK4X,UAAY5X,KAAK2X,WAAWzc,OACjC8E,KAAK6X,QAA4B,GAAlB7X,KAAK4X,WAEd5W,GAGDwW,EAAAtX,UAAA8X,IAAP,SAAWhX,EAASiD,QAAA,IAAAA,IAAAA,GAAA,GACnBjE,KAAK0X,WAAW9R,KAAK5E,GACrBhB,KAAK2X,WAAW/R,KAAK5E,GACrBhB,KAAK4X,UAAY5X,KAAK2X,WAAWzc,OACjC8E,KAAK6X,QAA4B,GAAlB7X,KAAK4X,UAChB3T,GACHjE,KAAKiE,SAIAuT,EAAAtX,UAAA+D,MAAP,WACCjE,KAAK2X,WAAa3X,KAAK0X,WAAWlV,SAClCxC,KAAK4X,UAAY5X,KAAK2X,WAAWzc,OACjC8E,KAAK6X,QAA4B,GAAlB7X,KAAK4X,WAGdJ,EAAAtX,UAAA+X,aAAP,WACC,OAAOjY,KAAK4X,WAGNJ,EAAAtX,UAAAgY,WAAP,WACC,OAAOlY,KAAK6X,SAGNL,EAAAtX,UAAAiY,sBAAP,WACC,OAAOnY,KAAK+X,oBAGNP,EAAAtX,UAAAkY,sBAAP,SAA6BC,GAC5BrY,KAAK+X,mBAAqBM,GAGbb,EAAAc,cAAd,SAA4B7F,GAE3B,IADA,IAAMgF,EAAkB,IAAIpV,MAAMoQ,GACzB7R,EAAW,EAAGA,EAAI6R,IAAS7R,EAAG6W,EAAO7W,GAAKA,EACnD,OAAO,IAAI4W,EAAgBC,IAtF7BD,EA0GAA,EA1Ga3Q,EAAA2Q,QAAOA,EAFrB,CAAU3c,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgM,EAIbT,EAAAmS,EAQC,SAAAA,IAAA,IAAA/P,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAEPwI,EAAKgQ,eAAgB,EAErBhQ,EAAKiQ,UAAY,EACjBjQ,EAAKkQ,QAAU,KACflQ,EAAKmQ,cAAgB,KAErBnQ,EAAKoQ,SAAW,KAChBpQ,EAAKqQ,OAAS,KACdrQ,EAAKsQ,OAAS,K,EAvBHjS,EAAAhM,EAAAgM,QAAAhM,EAAAgM,MAAK,IAIlBT,EAA0CvL,EAAIgK,MAAMS,gBAAVgB,UAAAiS,EAAAnS,GAgClCmS,EAAArY,UAAA6Y,UAAP,SAAiBC,GAChBhZ,KAAKyY,UAAYO,EAAI9d,OACrB8E,KAAK0Y,QAAUM,EAEfhZ,KAAK2Y,cAAgB,GACrB,IAAK,IAAI/X,EAAW,EAAGA,EAAIZ,KAAKyY,YAAa7X,EAC5CZ,KAAK2Y,cAAc3Y,KAAK0Y,QAAQ9X,IAA2BA,EAG5DZ,KAAKiZ,SAGCV,EAAArY,UAAAgZ,aAAP,SAAoBT,GACnBzY,KAAKyY,UAAYA,EAEjBzY,KAAK0Y,QAAU,KACf1Y,KAAK2Y,cAAgB,KAErB3Y,KAAKiZ,SAGEV,EAAArY,UAAA+Y,MAAR,WACCjZ,KAAKmZ,kBAAoB,EACzBnZ,KAAKoZ,cAAgB,EAErBpZ,KAAKqZ,cAAgB,KACrBrZ,KAAKsZ,WAAa,MAGZf,EAAArY,UAAAqZ,YAAP,SAAmBC,EAAkBC,GAEpC,YAFoC,IAAAA,IAAAA,GAAA,IAChCD,EAAY,GAAKA,GAAaxZ,KAAKyY,aAAWe,GAAa,GAC3DA,GAAaxZ,KAAKmZ,mBAEtBnZ,KAAKoZ,aAAepZ,KAAKmZ,iBACzBnZ,KAAKmZ,iBAAmBK,EAEpBxZ,KAAK0Y,UACR1Y,KAAKsZ,YAAmC,GAAtBtZ,KAAKoZ,aAAqBpZ,KAAK0Y,QAAQ1Y,KAAKoZ,cAAgB,KAC9EpZ,KAAKqZ,eAA0C,GAA1BrZ,KAAKmZ,iBAAyBnZ,KAAK0Y,QAAQ1Y,KAAKmZ,kBAAoB,MAG1FnZ,KAAK0Z,mBAAmB7S,EAAA8S,cAAcC,OAAQ5Z,KAAK4Y,SAAUa,IAEtD,IAGDlB,EAAArY,UAAA2Z,SAAP,SAAgBC,EAAeL,QAAA,IAAAA,IAAAA,GAAA,GAC9B,IAAMD,EAAmBxZ,KAAK2Y,cAAcoB,eAAeD,GAAU9Z,KAAK2Y,cAAcmB,IAAW,EACnG,OAAO9Z,KAAKuZ,YAAYC,EAAWC,IAG7BlB,EAAArY,UAAA8Z,KAAP,SAAYP,QAAA,IAAAA,IAAAA,GAAA,GACX,IAAID,EAAYxZ,KAAKmZ,iBAAmB,EACpCnZ,KAAKwY,eAAiBgB,EAAY,IAAGA,EAAYxZ,KAAKyY,UAAY,GAEtE,IAAM7F,EAAiB5S,KAAKuZ,YAAYC,EAAWC,GAKnD,OAJI7G,GACH5S,KAAK0Z,mBAAmB7S,EAAA8S,cAAcM,KAAMja,KAAK6Y,OAAQY,GAGnD7G,GAGD2F,EAAArY,UAAAuN,KAAP,SAAYgM,QAAA,IAAAA,IAAAA,GAAA,GACX,IAAID,EAAYxZ,KAAKmZ,iBAAmB,EACpCnZ,KAAKwY,eAAiBgB,GAAaxZ,KAAKyY,YAAWe,EAAY,GAEnE,IAAM5G,EAAiB5S,KAAKuZ,YAAYC,EAAWC,GAKnD,OAJI7G,GACH5S,KAAK0Z,mBAAmB7S,EAAA8S,cAAcO,KAAMla,KAAK8Y,OAAQW,GAGnD7G,GAGA2F,EAAArY,UAAAwZ,mBAAR,SAA2BjU,EAAkB6N,EAA2CmG,GACvF,IAAM5U,EAAyB,IAAIgC,EAAA8S,cAAiBlU,EAAWzF,KAAMA,KAAKmZ,iBAAkBnZ,KAAKoZ,aAAcpZ,KAAKqZ,cAAerZ,KAAKsZ,WAAYG,GAChJnG,GACHA,EAASzO,GAEV7E,KAAKiG,cAAcpB,IAab0T,EAAArY,UAAAia,iBAAP,WAAoC,OAAOna,KAAKwY,eACzCD,EAAArY,UAAAka,iBAAP,SAAwBpZ,GAAsBhB,KAAKwY,cAAgBxX,GAG5DuX,EAAArY,UAAAma,oBAAP,WAAsC,OAAOra,KAAKmZ,kBAG3CZ,EAAArY,UAAAoa,iBAAP,WAAmC,OAAOta,KAAKoZ,cAGxCb,EAAArY,UAAAqa,aAAP,WAA+B,OAAOva,KAAKyY,WAGpCF,EAAArY,UAAAsa,iBAAP,WAA8B,OAAOxa,KAAKqZ,eAGnCd,EAAArY,UAAAua,cAAP,WAA2B,OAAOza,KAAKsZ,YAGhCf,EAAArY,UAAAwa,WAAP,WAA0B,OAAO1a,KAAK0Y,SAhJvCH,EAwJAA,EAxJa1R,EAAA0R,SAAQA,EAJtB,CAAU1d,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgM,EAEbT,EAAAuT,EAsBC,SAAAA,EAAYlU,EAAkBiB,EAAiByS,EAAyBwB,EAAsBtB,EAAiBC,EAAcG,GAA7H,IAAAjR,EACCpC,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,K,OAC7BwI,EAAK2Q,iBAAmBA,EACxB3Q,EAAKmS,cAAgBA,EACrBnS,EAAK6Q,cAAgBA,EACrB7Q,EAAK8Q,WAAaA,EAClB9Q,EAAKiR,cAAgBA,E,EA9BV5S,EAAAhM,EAAAgM,QAAAhM,EAAAgM,MAAK,IAElBT,EAA+CvL,EAAIgK,MAAMC,MAAVwB,UAAAqT,EAAAvT,GAyCvCuT,EAAAzZ,UAAAqG,MAAP,WACC,OAAO,IAAIoT,EAAiB3Z,KAAKiF,UAAWjF,KAAKkF,YAAalF,KAAKmZ,iBAAkBnZ,KAAK2a,cAAe3a,KAAKqZ,cAAerZ,KAAKsZ,WAAYtZ,KAAKyZ,gBAG7IE,EAAAzZ,UAAAsG,SAAP,WACC,MAAO,0BAA4BxG,KAAKiF,UAAY,KAAOjF,KAAK2a,cAAgB,OAAS3a,KAAKmZ,iBAAmB,kBAAoBnZ,KAAKyZ,eAtC7HE,EAAAC,OAAgB,SAChBD,EAAAM,KAAc,OACdN,EAAAO,KAAc,OAV7BP,EAgEAA,EAhEa9S,EAAA8S,cAAaA,EAF3B,CAAU9e,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgM,EAIbT,EAFOd,EAEPsV,EAQC,SAAAA,EAAYC,EAAqBC,EAAsBC,QAAA,IAAAA,IAAAA,EAAA,GAAvD,IAAAvS,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAEPwI,EAAKqS,aAAeA,EACpBrS,EAAKsS,cAAgBA,EACrBtS,EAAKwS,QAAS,EACdxS,EAAKyS,KAAKF,GAAW,G,EAlBVlU,EAAAhM,EAAAgM,QAAAhM,EAAAgM,MAAK,IAEXvB,EAAkBzK,EAAIgK,MAAMS,gBAETgB,UAAAsU,EAA1BxU,EAA0Bd,GAgClBsV,EAAA1a,UAAAD,IAAP,SAAWe,GACV,OAAOhB,KAAKib,KAAKja,GAAO,IAGlB4Z,EAAA1a,UAAAgb,UAAP,WACC,OAAOlb,KAAKgb,QAGNJ,EAAA1a,UAAAib,SAAP,WACC,OAAOnb,KAAKgB,OAGN4Z,EAAA1a,UAAAkb,gBAAP,WACC,OAAOpb,KAAK6a,cAGND,EAAA1a,UAAAmb,iBAAP,WACC,OAAOrb,KAAK8a,eAGNF,EAAA1a,UAAAob,gBAAP,SAAuBC,GACtBvb,KAAK6a,aAAeU,EACpBvb,KAAKib,KAAKjb,KAAKgB,OAAO,IAGhB4Z,EAAA1a,UAAAsb,iBAAP,SAAwBD,GACvBvb,KAAK8a,cAAgBS,EACrBvb,KAAKib,KAAKjb,KAAKgB,OAAO,IAGf4Z,EAAA1a,UAAA+a,KAAR,SAAaja,EAAciF,GAE1B,OADAjG,KAAKgB,MAAQA,EACThB,KAAKgb,QAAUhb,KAAKgB,MAAQhB,KAAK6a,cACpC7a,KAAKgb,QAAS,EACV/U,IACHjG,KAAKiG,cAAc,IAAIY,EAAA4U,UAAU5U,EAAA4U,UAAUC,IAAK1b,KAAMA,KAAKgb,SAC3Dhb,KAAKiG,cAAc,IAAIY,EAAA4U,UAAU5U,EAAA4U,UAAU7B,OAAQ5Z,KAAMA,KAAKgb,WAExD,IACIhb,KAAKgb,QAAUhb,KAAKgB,MAAQhB,KAAK8a,gBAC5C9a,KAAKgb,QAAS,EACV/U,IACHjG,KAAKiG,cAAc,IAAIY,EAAA4U,UAAU5U,EAAA4U,UAAUE,KAAM3b,KAAMA,KAAKgb,SAC5Dhb,KAAKiG,cAAc,IAAIY,EAAA4U,UAAU5U,EAAA4U,UAAU7B,OAAQ5Z,KAAMA,KAAKgb,WAExD,IA7EVJ,EAgGAA,EAhGa/T,EAAA+T,KAAIA,EAJlB,CAAU/f,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgM,EAEbT,EAAAqV,EAsBC,SAAAA,EAAYhW,EAAkBiB,EAAiBsU,GAA/C,IAAAxS,EACCpC,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,K,OAC7BwI,EAAKwS,OAASA,E,EA1BHnU,EAAAhM,EAAAgM,QAAAhM,EAAAgM,MAAK,IAElBT,EAA+BvL,EAAIgK,MAAMC,MAAVwB,UAAAmV,EAAArV,GAqCvBqV,EAAAvb,UAAAqG,MAAP,WACC,OAAO,IAAIkV,EAAUzb,KAAKiF,UAAWjF,KAAKkF,YAAalF,KAAKgb,SAGtDS,EAAAvb,UAAAsG,SAAP,WACC,MAAO,sBAAwBxG,KAAKiF,UAAY,cAAgBjF,KAAKgb,QAlCxDS,EAAA7B,OAAgB,SAChB6B,EAAAC,IAAa,MACbD,EAAAE,KAAc,OAV7BF,EAwDAA,EAxDa5U,EAAA4U,UAASA,EAFvB,CAAU5gB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAwB,EAEbuf,EAQC,SAAAA,EAAYb,EAAkBhP,EAAqB8P,QAArB,IAAA9P,IAAAA,EAAA,SAAqB,IAAA8P,IAAAA,EAAA,GAClD7b,KAAKgB,MAAQhB,KAAKvE,OAASsf,EAC3B/a,KAAK+L,OAASA,EACd/L,KAAK6b,UAAYA,EAbNxf,EAAAxB,EAAAwB,OAAAxB,EAAAwB,KAAI,IA0BTuf,EAAA1b,UAAAqE,OAAP,SAAckV,GACb,IACOqC,EAUP,YAZa,IAAArC,IAAAA,GAAA,GACTA,GACGqC,EAAW9b,KAAKvE,OAASuE,KAAKgB,MACf,EAAjBhB,KAAK6b,WAAiBve,KAAKmX,IAAIqH,IAAM9b,KAAK6b,UAC7C7b,KAAKgB,MAAQhB,KAAKvE,OAElBuE,KAAKgB,OAAS8a,EAAI9b,KAAK+L,QAGxB/L,KAAKgB,MAAQhB,KAAKvE,OAGZuE,KAAKgB,OAGN4a,EAAA1b,UAAAqG,MAAP,WACC,IAAMsM,EAAgB,IAAI+I,EAAY5b,KAAKgB,MAAOhB,KAAK+L,OAAQ/L,KAAK6b,WAEpE,OADAhJ,EAAEpX,OAASuE,KAAKvE,OACToX,GA1CT+I,EA0DAA,EA1Davf,EAAAuf,YAAWA,EAFzB,CAAU/gB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAwB,EAEb0f,EAQC,SAAAA,EAAYhB,EAAkBiB,EAAqBC,QAArB,IAAAD,IAAAA,EAAA,SAAqB,IAAAC,IAAAA,EAAA,IAClDjc,KAAKkc,aAAe,EACpBlc,KAAKmc,SAAW,EAChBnc,KAAKgB,MAAQhB,KAAKvE,OAASsf,EAC3B/a,KAAKgc,OAASA,EACdhc,KAAKic,SAAWA,EAfL5f,EAAAxB,EAAAwB,OAAAxB,EAAAwB,KAAI,IA4BT0f,EAAA7b,UAAAqE,OAAP,SAAckV,GAYb,YAZa,IAAAA,IAAAA,GAAA,GACTA,GACHzZ,KAAKkc,cAAgBlc,KAAKvE,OAASuE,KAAKgB,OAAShB,KAAKgc,OACtDhc,KAAKmc,UAAYnc,KAAKkc,aACtBlc,KAAKmc,UAAYnc,KAAKic,SACtBjc,KAAKgB,OAAShB,KAAKmc,WAEnBnc,KAAKkc,aAAe,EACpBlc,KAAKmc,SAAW,EAChBnc,KAAKgB,MAAQhB,KAAKvE,QAGZuE,KAAKgB,OAGN+a,EAAA7b,UAAAqG,MAAP,WACC,IAAMsM,EAAgB,IAAIkJ,EAAY/b,KAAKgB,MAAOhB,KAAKgc,OAAQhc,KAAKic,UAIpE,OAHApJ,EAAEqJ,aAAelc,KAAKkc,aACtBrJ,EAAEsJ,SAAWnc,KAAKmc,SAClBtJ,EAAEpX,OAASuE,KAAKvE,OACToX,GA9CTkJ,EAiEAA,EAjEa1f,EAAA0f,YAAWA,EAFzB,CAAUlhB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAwB,EAEb+f,EAQC,SAAAA,IACCpc,KAAKgB,MAAQhB,KAAKqc,OAAS,EAC3Brc,KAAKyS,MAAQzS,KAAKsc,OAAS,EAZhBjgB,EAAAxB,EAAAwB,OAAAxB,EAAAwB,KAAI,IAyBT+f,EAAAlc,UAAA8X,IAAP,SAAW7U,GAMV,OALAnD,KAAKqc,QAAUrc,KAAKqc,OAASrc,KAAKsc,OAASnZ,KAAOnD,KAAKsc,OAEvDtc,KAAKgB,MAAQhB,KAAKqc,OAClBrc,KAAKyS,MAAQzS,KAAKsc,OAEXtc,KAAKqc,QA7BdD,EA+CAA,EA/Ca/f,EAAA+f,cAAaA,EAF3B,CAAUvhB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAwB,EAEbkgB,EAQC,SAAAA,EAAYC,GACXxc,KAAKwc,SAAWxc,KAAKyc,UAAYD,EACjCxc,KAAKgB,MAAQhB,KAAKqc,OAAS,EAC3Brc,KAAKyS,MAAQzS,KAAKsc,OAAS,EAC3Btc,KAAKyX,OAAS,GAdHpb,EAAAxB,EAAAwB,OAAAxB,EAAAwB,KAAI,IA2BTkgB,EAAArc,UAAA8X,IAAP,SAAW7U,GACV,IAGOuZ,EAGAC,EA+BP,QArCM3c,KAAKsc,OAAStc,KAAKyc,WACxBzc,KAAKsc,OAAStc,KAAKyc,UAEbC,EAAgB1c,KAAKyX,OAAOF,QAClCvX,KAAKqc,QAAUK,EAETC,EAAgBxZ,EAAInD,KAAKyc,UAC/Bzc,KAAKqc,QAAUM,EAEf3c,KAAKyX,OAAO7R,KAAK+W,KAGjB3c,KAAKqc,QAAWrc,KAAKsc,OAAS,EAC9Btc,KAAKqc,QAAUlZ,EACfnD,KAAKqc,QAAUrc,KAAKsc,OAEpBtc,KAAKyX,OAAO7R,KAAKzC,EAAInD,KAAKyc,YAkB3Bzc,KAAKgB,MAAQhB,KAAKqc,OAClBrc,KAAKyS,MAAQzS,KAAKsc,OAEXtc,KAAKqc,QA/DdE,EAqFAA,EArFalgB,EAAAkgB,oBAAmBA,EAFjC,CAAU1hB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAwB,EAEbugB,EAQC,SAAAA,EAAYC,QAAA,IAAAA,IAAAA,EAAA,GACX7c,KAAK6c,eAAiB7c,KAAK8c,gBAAkBD,EAC7C7c,KAAKgB,MAAQhB,KAAKqc,QAAUU,OAAOC,UACnChd,KAAKyS,MAAQzS,KAAKsc,OAAS,EAC3Btc,KAAKyX,OAAS,GAdHpb,EAAAxB,EAAAwB,OAAAxB,EAAAwB,KAAI,IA2BTugB,EAAA1c,UAAA8X,IAAP,SAAW7U,GACV,GAA2B,EAAvBnD,KAAK8c,gBACR,KAAM9c,KAAKsc,OAAStc,KAAK8c,gBAAiB,CACzC9c,KAAKsc,OAAStc,KAAK8c,gBAEnB9c,KAAKyX,OAAO7R,KAAKzC,GACjB,IAAMuZ,EAAgB1c,KAAKyX,OAAOF,QAClC,GAAIvX,KAAKqc,OAASK,EACb1c,KAAKqc,OAASlZ,IACjBnD,KAAKqc,OAASlZ,OAET,CACNnD,KAAKqc,QAAUU,OAAOC,UACtB,IAAK,IAAIpc,EAAW,EAAGA,EAAIZ,KAAKsc,SAAU1b,EAAG,CAC5C,IAAMiS,EAAW7S,KAAKyX,OAAO7W,GACzBZ,KAAKqc,OAASxJ,IACjB7S,KAAKqc,OAASxJ,UAMjB7S,KAAKyX,OAAO7R,KAAKzC,GACbnD,KAAKqc,OAASlZ,IACjBnD,KAAKqc,OAASlZ,SAIdnD,KAAKsc,OACHtc,KAAKqc,OAASlZ,IACjBnD,KAAKqc,OAASlZ,GAOhB,OAHAnD,KAAKgB,MAAQhB,KAAKqc,OAClBrc,KAAKyS,MAAQzS,KAAKsc,OAEXtc,KAAKqc,QA9DdO,EAoFAA,EApFavgB,EAAAugB,SAAQA,EAFtB,CAAU/hB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAwB,EAEb4gB,EAQC,SAAAA,EAAYC,EAAkBf,EAAqBlH,QAAvC,IAAAiI,IAAAA,EAAA,QAAkB,IAAAf,IAAAA,EAAA,QAAqB,IAAAlH,IAAAA,GAAA,GAClDjV,KAAKmd,SAASD,EAAOjI,GACrBjV,KAAKod,YAAYjB,EAAUlH,GAZhB5Y,EAAAxB,EAAAwB,OAAAxB,EAAAwB,KAAI,IAyBT4gB,EAAA/c,UAAAmd,SAAP,SAAgBpI,GACf,YADe,IAAAA,IAAAA,GAAA,GACRA,EAASjV,KAAKkd,MAAsB,IAAbld,KAAKkd,MAAc5f,KAAKE,IAGhDyf,EAAA/c,UAAAid,SAAP,SAAgBD,EAAcjI,QAAA,IAAAA,IAAAA,GAAA,GAC7BjV,KAAKkd,MAAQjI,EAASiI,EAASA,EAAQ5f,KAAKE,GAAK,KAG3Cyf,EAAA/c,UAAAod,YAAP,SAAmBrI,GAClB,YADkB,IAAAA,IAAAA,GAAA,GACXA,EAASjV,KAAKmc,SAA4B,IAAhBnc,KAAKmc,SAAiB7e,KAAKE,IAGtDyf,EAAA/c,UAAAkd,YAAP,SAAmBjB,EAAiBlH,QAAA,IAAAA,IAAAA,GAAA,GACnCjV,KAAKmc,SAAWlH,EAASkH,EAAYA,EAAW7e,KAAKE,GAAK,KAGpDyf,EAAA/c,UAAAqE,OAAP,WACCvE,KAAKkd,OAASld,KAAKmc,UAGbc,EAAA/c,UAAAqd,OAAP,SAAcriB,GACb,YADa,IAAAA,IAAAA,EAAA,GACNA,EAASoC,KAAKI,IAAIsC,KAAKkd,QAGxBD,EAAA/c,UAAAsd,OAAP,SAActiB,GACb,YADa,IAAAA,IAAAA,EAAA,GACNA,EAASoC,KAAKC,IAAIyC,KAAKkd,QAGxBD,EAAA/c,UAAAud,OAAP,SAAcviB,GACb,YADa,IAAAA,IAAAA,EAAA,GACNA,EAASoC,KAAKogB,IAAI1d,KAAKkd,QAGxBD,EAAA/c,UAAAyd,aAAP,SAAoBziB,GACnB,YADmB,IAAAA,IAAAA,EAAA,GACZA,GAAU,EAAIoC,KAAKI,IAAIsC,KAAKkd,QAAU,GAGvCD,EAAA/c,UAAA0d,UAAP,SAAiB1iB,EAAmB2iB,GACnC,QADgB,IAAA3iB,IAAAA,EAAA,QAAmB,IAAA2iB,IAAAA,EAAA,MACzB,MAANA,EAIH,MAAO,CAAErP,EAAGxO,KAAKwd,OAAOtiB,GAASuT,EAAGzO,KAAKud,OAAOriB,IAHhD2iB,EAAGrP,EAAIxO,KAAKwd,OAAOtiB,GACnB2iB,EAAGpP,EAAIzO,KAAKud,OAAOriB,IA9DtB+hB,EAgFAA,EAhFa5gB,EAAA4gB,SAAQA,EAFtB,CAAUpiB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAoP,EAKb7D,EAHOd,EACAtJ,EAEP8hB,EAaC,SAAAA,EAAY5Z,EAAsB2X,QAAtB,IAAA3X,IAAAA,EAAA,QAAsB,IAAA2X,IAAAA,EAAA,IAAlC,IAAArT,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAoDAwI,EAAAuV,cAAgB,WAEvB,IACOvZ,EAFPgE,EAAKwV,UAAY9hB,OAAO+hB,sBAAsBzV,EAAKuV,eACxB,EAAvBvV,EAAK0V,iBACF1Z,EAAqBxI,EAAKC,OACSuM,EAAK2V,gBAC3B3V,EAAK4V,SAAW5V,EAAK6V,oBAEvC7V,EAAK2V,eAAiB3Z,EACtBgE,EAAKvC,cAAc,IAAIgE,EAAAqU,0BAA0BrU,EAAAqU,0BAA0BC,KAAM/V,KAGlFA,EAAKvC,cAAc,IAAIgE,EAAAqU,0BAA0BrU,EAAAqU,0BAA0BC,KAAM/V,KA7DlFA,EAAK0V,gBAAkBha,EACvBsE,EAAK4V,SAAW,IAAO5V,EAAK0V,gBAE5B1V,EAAKqT,UAAYA,EACjBrT,EAAK6V,kBAAoB7V,EAAK4V,SAAW5V,EAAKqT,UAE9CrT,EAAKgW,WAAY,E,EA3BNvU,EAAApP,EAAAoP,OAAApP,EAAAoP,KAAI,IAEV3E,EAAkBzK,EAAIgK,MAAMS,gBAC5BtJ,EAAOnB,EAAIkB,KAAKC,KAEmBsK,UAAAwX,EAA1C1X,EAA0Cd,GAmClCwY,EAAA5d,UAAAue,MAAP,WACKze,KAAKwe,YACTxe,KAAKwe,WAAY,EAEjBxe,KAAKme,eAAiBniB,EAAKC,MAC3B+D,KAAKge,UAAY9hB,OAAO+hB,sBAAsBje,KAAK+d,iBAG7CD,EAAA5d,UAAAsW,KAAP,WACMxW,KAAKwe,YACVxe,KAAKwe,WAAY,EAEjBtiB,OAAOwiB,qBAAqB1e,KAAKge,aAG3BF,EAAA5d,UAAAye,aAAP,WACC,OAAO3e,KAAKwe,WAGNV,EAAA5d,UAAA0e,mBAAP,WACC,OAAO5e,KAAKwe,WAGLV,EAAA5d,UAAAqL,YAAR,SAAoB+H,GACnB,OAAOpX,OAAO6N,WAAWuJ,EAAU,IAAO,KAGnCwK,EAAA5d,UAAA8L,cAAR,SAAsBgS,GACrB9hB,OAAO8P,cAAcgS,IA/DvBF,EAoGAA,EApGa7T,EAAA6T,qBAAoBA,EALlC,CAAUjjB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAoP,EAIb7D,EAFOtB,EAEPwZ,EAoBC,SAAAA,EAAY7Y,EAAkBiB,G,YAAA,IAAAA,IAAAA,EAAA,MAC7BN,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,KAzBlBiK,EAAApP,EAAAoP,OAAApP,EAAAoP,KAAI,IAEVnF,EAAQjK,EAAIgK,MAAMC,MAEsBwB,UAAAgY,EAA/ClY,EAA+CtB,GAkCvCwZ,EAAApe,UAAAqG,MAAP,WACC,OAAO,IAAI+X,EAA0Bte,KAAKiF,UAAWjF,KAAKkF,cAGpDoZ,EAAApe,UAAAsG,SAAP,WACC,MAAO,sCAAwCxG,KAAKiF,WA/BvCqZ,EAAAC,KAAc,OAR7BD,EAmDAA,EAnDarU,EAAAqU,0BAAyBA,EAJvC,CAAUzjB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAoP,EAKb7D,EAHOd,EACAtJ,EAEP6iB,EAQC,SAAAA,EAAYT,EAAwBU,QAAxB,IAAAV,IAAAA,EAAA,UAAwB,IAAAU,IAAAA,EAAA,GAApC,IAAAtW,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAgEAwI,EAAAuW,aAAe,WACtBvW,EAAKwW,WAAahjB,EAAKC,QACrBuM,EAAKyW,aACP,IAAIC,GAAsB,EACH,EAAnB1W,EAAKsW,aAAmBtW,EAAKyW,cAAgBzW,EAAKsW,aACrDI,GAAc,EACd1W,EAAKgO,QACKhO,EAAK2W,WAAa3W,EAAK4V,UACjC5V,EAAK4W,cAAc5W,EAAK4V,UAEzB5V,EAAK6W,SAASpV,EAAAqV,WAAWf,MACrBW,GACH1W,EAAK6W,SAASpV,EAAAqV,WAAW7Y,WA3E1B+B,EAAK4V,SAAWA,EAChB5V,EAAKsW,YAAcA,EACnBtW,EAAKgW,WAAY,EACjBhW,EAAK+W,KAAO,EACZ/W,EAAKvE,Q,EAnBMgG,EAAApP,EAAAoP,OAAApP,EAAAoP,KAAI,IAEV3E,EAAkBzK,EAAIgK,MAAMS,gBAC5BtJ,EAAOnB,EAAIkB,KAAKC,KAEIsK,UAAAuY,EAA3BzY,EAA2Bd,GA2BnBuZ,EAAA3e,UAAAue,MAAP,WACKze,KAAKwe,YACTxe,KAAKwe,WAAY,EACjBxe,KAAKgf,WAAahjB,EAAKC,MACvB+D,KAAKof,eAAiC,GAAnBpf,KAAKwf,UAAkBxf,KAAKwf,UAAYxf,KAAKoe,YAG1DS,EAAA3e,UAAAsW,KAAP,WACMxW,KAAKwe,YACVxe,KAAKwe,WAAY,EACjBxe,KAAKwf,UAAYxjB,EAAKC,MAAQ+D,KAAKgf,WACnChf,KAAKyf,iBAGCZ,EAAA3e,UAAA+D,MAAP,WACCjE,KAAKwW,OACLxW,KAAKif,aAAe,EACpBjf,KAAKwf,WAAa,GAGZX,EAAA3e,UAAAwf,QAAP,WACC1f,KAAKiE,QACLjE,KAAKye,SAOEI,EAAA3e,UAAAkf,cAAR,SAAsBhB,GACrBpe,KAAKyf,eACLzf,KAAKmf,UAAYf,EACjBpe,KAAKuf,IAAMrjB,OAAOqP,YAAYvL,KAAK+e,aAAc/e,KAAKmf,YAG/CN,EAAA3e,UAAAuf,aAAR,YACkB,GAAbzf,KAAKuf,MACRvT,cAAchM,KAAKuf,KACnBvf,KAAKuf,KAAO,IAINV,EAAA3e,UAAAmf,SAAR,SAAiB5Z,GAChBzF,KAAKiG,cAAc,IAAIgE,EAAAqV,WAAW7Z,EAAWzF,KAAMA,KAAKif,aAAcjf,KAAK8e,YAAa9e,KAAKiY,kBA6BvF4G,EAAA3e,UAAAye,aAAP,WAAgC,OAAO3e,KAAKwe,WAGrCK,EAAA3e,UAAAyf,YAAP,WAA8B,OAAO3f,KAAKoe,UACnCS,EAAA3e,UAAAqL,YAAP,SAAmB6S,GAAwBpe,KAAKoe,SAAWA,GAGpDS,EAAA3e,UAAA0f,eAAP,WAAiC,OAAO5jB,EAAKC,MAAQ+D,KAAKgf,YAEnDH,EAAA3e,UAAA2f,YAAP,WAA8B,OAAO7f,KAAKoe,SAAWpe,KAAK4f,kBAEnDf,EAAA3e,UAAA4f,gBAAP,WAAkC,OAAO9f,KAAKif,cAGvCJ,EAAA3e,UAAA6f,eAAP,WAAiC,OAAO/f,KAAK8e,aACtCD,EAAA3e,UAAA8f,eAAP,SAAsBvN,GAAqBzS,KAAK8e,YAAcrM,GAGvDoM,EAAA3e,UAAA+X,aAAP,WAA+B,OAAOjY,KAAK8e,YAAc9e,KAAKif,cArH/DJ,EA2HAA,EA3Ha5U,EAAA4U,MAAKA,EALnB,CAAUhkB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAoP,EAIb7D,EAFOtB,EAEPwa,EAqBC,SAAAA,EAAY7Z,EAAkBiB,EAAwBuY,EAAyBH,EAAwBlH,QAAzE,IAAAlR,IAAAA,EAAA,WAAwB,IAAAuY,IAAAA,EAAA,QAAyB,IAAAH,IAAAA,EAAA,QAAwB,IAAAlH,IAAAA,EAAA,GAAvG,IAAApP,EACCpC,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,K,OAC7BwI,EAAKyW,aAAeA,EACpBzW,EAAKsW,YAAcA,EACnBtW,EAAKoP,UAAYA,E,EA7BN3N,EAAApP,EAAAoP,OAAApP,EAAAoP,KAAI,IAEVnF,EAAQjK,EAAIgK,MAAMC,MAEOwB,UAAAgZ,EAAhClZ,EAAgCtB,GAsCxBwa,EAAApf,UAAAqG,MAAP,WACC,OAAO,IAAI+Y,EAAWtf,KAAKiF,UAAWjF,KAAKkF,YAAalF,KAAKif,aAAcjf,KAAK8e,YAAa9e,KAAK4X,YAG5F0H,EAAApf,UAAAsG,SAAP,WACC,MAAO,uBAAyBxG,KAAKiF,UAAY,oBAAsBjF,KAAKif,aAAe,iBAAmBjf,KAAK8e,YAAc,eAAiB9e,KAAK4X,WAnC1I0H,EAAAf,KAAc,OACde,EAAA7Y,SAAkB,WATjC6Y,EA2DAA,EA3DarV,EAAAqV,WAAUA,EAJxB,CAAUzkB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAolB,EAMb7Z,EAJOd,EAIP4a,EAQC,SAAAA,EAAYC,QAAA,IAAAA,IAAAA,EAAA,GAAZ,IAAA3X,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAgJAwI,EAAA4X,wBAA0B,SAACC,EAAiBC,EAAajlB,QAAA,IAAAA,IAAAA,EAAA,QAC9DmN,EAAK+X,mBACPF,EAAMG,WAAY,EAClBH,EAAMI,gBAAiB,EACvBJ,EAAMC,QAAUA,EACZD,EAAMK,MAAMC,QACfN,EAAMK,MAAMC,OAAOL,EAASjlB,GAG7BmN,EAAKvC,cAAc,IAAIga,EAAAW,uBAAuBX,EAAAW,uBAAuBC,QAASrY,EAAM8X,EAASjlB,IAC7FmN,EAAKiF,QAGEjF,EAAAsY,qBAAuB,SAACT,EAAiBhlB,QAAA,IAAAA,IAAAA,EAAA,QAC9CmN,EAAK+X,mBACPF,EAAMG,WAAY,EAClBH,EAAMI,gBAAiB,EACnBJ,EAAMK,MAAMK,SACfV,EAAMK,MAAMK,QAAQ1lB,GAGrBmN,EAAKvC,cAAc,IAAIga,EAAAe,qBAAqBf,EAAAe,qBAAqBC,MAAOzY,EAAMnN,IAC9EmN,EAAKiF,QApKLjF,EAAK0Y,YAAa,EAElB1Y,EAAK2Y,aAAe,EACpB3Y,EAAK4Y,WAAa,EAElB5Y,EAAK+X,mBAAqB,EAC1B/X,EAAK2X,iBAAmBA,EAExB3X,EAAK6Y,eAAiB,GACtB7Y,EAAK8Y,mBAAqB,EAE1B9Y,EAAK+Y,iBAAmB,GACxB/Y,EAAKgZ,aAAe,GAEpBhZ,EAAKiZ,eAAiB,GAEtB3mB,MAAM,mCAAqC0N,EAAK2X,kB,EAjCrCF,EAAAplB,EAAAolB,KAAAplB,EAAAolB,GAAE,IAER3a,EAAkBzK,EAAIgK,MAAMS,gBAIHgB,UAAA4Z,EAAhC9Z,EAAgCd,GAwCxB4a,EAAAhgB,UAAAwhB,QAAP,SAAe3hB,EAAYgF,EAAa4c,GACvC,YADuC,IAAAA,IAAAA,EAAA,IAChC3hB,KAAK4hB,SAAS7c,EAAMhF,EAAK,GAAI4hB,IAG7BzB,EAAAhgB,UAAA0hB,SAAR,SAAiB7c,EAAahF,EAAY2gB,EAAWiB,GACpD,QADoD,IAAAA,IAAAA,EAAA,IAChD3hB,KAAKwhB,aAAazhB,GAAM,OAAOC,KAAKwhB,aAAazhB,GAAK4hB,GAE1D,IAAMtB,EAAkB,IAAIJ,EAAA4B,UAe5B,OAdAxB,EAAMtb,KAAOA,EACbsb,EAAMtgB,IAAMA,EACZsgB,EAAMK,MAAQA,EAEJ,IAANiB,EACHtB,EAAMsB,GAAKA,GAEXtB,EAAMsB,GAAKG,OAAO5B,EAAWyB,MAC3BzB,EAAWyB,IAGd3hB,KAAKqhB,eAAezb,KAAKya,GACzBrgB,KAAKuhB,iBAAiBlB,EAAMsB,IAAMtB,GAClCrgB,KAAKwhB,aAAanB,EAAMtgB,KAAOsgB,GAClBsB,IAGPzB,EAAAhgB,UAAA6hB,KAAP,WACK/hB,KAAKkhB,aACTlhB,KAAKkhB,YAAa,EAClBlhB,KAAKshB,mBAAqB,EAC1BthB,KAAKyN,SAGEyS,EAAAhgB,UAAAuN,KAAR,WAAA,IAAAjF,EAAAxI,KACCA,KAAKmhB,aAAenhB,KAAKshB,kBAAoB,EAC7CthB,KAAKohB,WAAaphB,KAAKqhB,eAAenmB,OAEtC,IAAM8mB,EAAWhiB,KAAKmhB,aAAenhB,KAAKohB,W,aAQzC,KAAIa,EAAKX,kBAAoB,EAAIW,EAAKb,Y,OAyBrCa,EAAKf,YAAa,EAClBe,EAAKZ,eAAiB,GACtBY,EAAKX,mBAAqB,EAC1BW,EAAKhc,cAAc,IAAIga,EAAAiC,wBAAwBjC,EAAAiC,wBAAwBzb,SAAQwb,EAAQD,EAAUC,EAAKd,aAAcc,EAAKb,a,UA1BvHa,EAAK1B,qBAEL0B,EAAKX,kBACP,IAAMa,EAAkBF,EAAKZ,eAAeY,EAAKX,mBACjDa,EAAM3B,WAAY,EAClB2B,EAAM1B,gBAAiB,EACvB3lB,MAAM,4BAAoCqnB,EAAMpiB,IAAM,SAAaoiB,EAAMpd,KAAO,KAEhF,IAAMqd,EAAuBH,EAAKR,eAAeU,EAAMpd,MACnDqd,EACHA,EAAQL,KAAKI,EAAMpiB,IAAK,SAACugB,EAAajlB,QAAA,IAAAA,IAAAA,EAAA,MACrCmN,EAAK4X,wBAAwB+B,EAAO7B,EAASjlB,IAC5C,SAACA,QAAA,IAAAA,IAAAA,EAAA,MACFmN,EAAKsY,qBAAqBqB,EAAO9mB,MAGlCP,MAAM,sCAAyCqnB,EAAMpd,KAAO,OAC1Dkd,EAAK1B,oBA1Be,GAArBvgB,KAAKmhB,aACRnhB,KAAKiG,cAAc,IAAIga,EAAAiC,wBAAwBjC,EAAAiC,wBAAwBG,MAAOriB,KAAMgiB,EAAUhiB,KAAKmhB,aAAcnhB,KAAKohB,aAEtHphB,KAAKiG,cAAc,IAAIga,EAAAiC,wBAAwBjC,EAAAiC,wBAAwBI,SAAUtiB,KAAMgiB,EAAUhiB,KAAKmhB,aAAcnhB,KAAKohB,aAG1H,I,WAAOphB,KAAKugB,mBAAqBvgB,KAAKmgB,kB,kBAkEhCD,EAAAhgB,UAAAqiB,WAAP,SAAkBH,GACjBpiB,KAAKyhB,eAAeW,EAAQnd,WAAamd,GA4BnClC,EAAAhgB,UAAAsiB,kBAAP,SAAyBC,GACxB,OAAOziB,KAAKuhB,iBAAiBkB,IAGvBvC,EAAAhgB,UAAAwiB,cAAP,SAAqB3iB,GACpB,OAAOC,KAAKwhB,aAAazhB,IAGnBmgB,EAAAhgB,UAAAsgB,UAAP,WACC,OAAOxgB,KAAKkhB,YAGNhB,EAAAhgB,UAAAyiB,gBAAP,WACC,OAAO3iB,KAAKmhB,cAGNjB,EAAAhgB,UAAA0iB,cAAP,WACC,OAAO5iB,KAAKohB,YAGNlB,EAAAhgB,UAAA2iB,gBAAP,SAAgC9iB,GAC/B,OAAOC,KAAKwhB,aAAazhB,GAAKugB,SAGxBJ,EAAAhgB,UAAA4iB,oBAAP,SAAoCC,GACnC,OAAO/iB,KAAKuhB,iBAAiBwB,GAAWzC,SAGlCJ,EAAAhgB,UAAA8iB,sBAAP,WACC,OAAOhjB,KAAKugB,oBAGNL,EAAAhgB,UAAA+iB,oBAAP,WACC,OAAOjjB,KAAKmgB,kBA6BED,EAAAyB,GAAY,EAhP5BzB,EAiPAA,EAjPaD,EAAAC,WAAUA,EANxB,CAAUrlB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAolB,EAEb7Z,EAAA8b,EAsBC,SAAAA,EAAYzc,EAAkBiB,EAAwBsb,EAAqBkB,EAAwB9B,QAArE,IAAA1a,IAAAA,EAAA,WAAwB,IAAAsb,IAAAA,EAAA,QAAqB,IAAAkB,IAAAA,EAAA,QAAwB,IAAA9B,IAAAA,EAAA,GAAnG,IAAA5Y,EACCpC,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,K,OAC7BwI,EAAKwZ,SAAWA,EAChBxZ,EAAK0a,YAAcA,EACnB1a,EAAK4Y,WAAaA,E,EA5BPnB,EAAAplB,EAAAolB,KAAAplB,EAAAolB,GAAE,IAEf7Z,EAA6CvL,EAAIgK,MAAMC,MAAVwB,UAAA4b,EAAA9b,GAuCrC8b,EAAAhiB,UAAAqG,MAAP,WACC,OAAO,IAAI2b,EAAwBliB,KAAKiF,UAAWjF,KAAKkF,YAAalF,KAAKgiB,SAAUhiB,KAAKkjB,YAAaljB,KAAKohB,aAGrGc,EAAAhiB,UAAAsG,SAAP,WACC,MAAO,oCAAsCxG,KAAKiF,UAAY,gBAAkBjF,KAAKgiB,SAAW,mBAAqBhiB,KAAKkjB,YAAc,kBAAoBljB,KAAKohB,YApC3Jc,EAAAG,MAAe,QACfH,EAAAI,SAAkB,WAClBJ,EAAAzb,SAAkB,WAV1Byb,EA4DAA,EA5DajC,EAAAiC,wBAAuBA,EAFrC,CAAUrnB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAolB,EAEb7Z,EAAAwa,EAoBC,SAAAA,EAAYnb,EAAkBiB,EAAwB4Z,EAAajlB,QAArC,IAAAqL,IAAAA,EAAA,WAAqC,IAAArL,IAAAA,EAAA,MAAnE,IAAAmN,EACCpC,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,K,OAC7BwI,EAAK8X,QAAUA,EACf9X,EAAKnN,KAAOA,E,EAzBD4kB,EAAAplB,EAAAolB,KAAAplB,EAAAolB,GAAE,IAEf7Z,EAA4CvL,EAAIgK,MAAMC,MAAVwB,UAAAsa,EAAAxa,GAoCpCwa,EAAA1gB,UAAAqG,MAAP,WACC,OAAO,IAAIqa,EAAuB5gB,KAAKiF,UAAWjF,KAAKkF,YAAalF,KAAKsgB,QAAStgB,KAAK3E,OAGjFulB,EAAA1gB,UAAAsG,SAAP,WACC,MAAO,mCAAqCxG,KAAKiF,UAAY,YAAcjF,KAAK3E,MAjC1EulB,EAAAC,QAAiB,UARzBD,EAwDAA,EAxDaX,EAAAW,uBAAsBA,EAFpC,CAAU/lB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAolB,EAEb7Z,EAAA4a,EAoBC,SAAAA,EAAYvb,EAAkBiB,EAAwBrL,QAAxB,IAAAqL,IAAAA,EAAA,WAAwB,IAAArL,IAAAA,EAAA,MAAtD,IAAAmN,EACCpC,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,K,OAC7BwI,EAAKnN,KAAOA,E,EAxBD4kB,EAAAplB,EAAAolB,KAAAplB,EAAAolB,GAAE,IAEf7Z,EAA0CvL,EAAIgK,MAAMC,MAAVwB,UAAA0a,EAAA5a,GAmClC4a,EAAA9gB,UAAAqG,MAAP,WACC,OAAO,IAAIya,EAAqBhhB,KAAKiF,UAAWjF,KAAKkF,YAAalF,KAAK3E,OAGjE2lB,EAAA9gB,UAAAsG,SAAP,WACC,MAAO,iCAAmCxG,KAAKiF,UAAY,YAAcjF,KAAK3E,MAhCxE2lB,EAAAC,MAAe,QARvBD,EAsDAA,EAtDaf,EAAAe,qBAAoBA,EAFlC,CAAUnmB,IAAAA,KAAG,ICAb,SAAUA,GAUR,SARDgnB,IASE7hB,KAAKwgB,WAAY,EACjBxgB,KAAKygB,gBAAiB,GAZX5lB,EAAAolB,KAAAplB,EAAAolB,GAAE,KAEF4B,UAASA,EAFvB,CAAUhnB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAsoB,EAEN5M,EACAja,EAEP8mB,EAQC,SAAAA,EAAmBC,EAAsBC,EAAuBC,EAAsBC,QAAtB,IAAAD,IAAAA,EAAA,SAAsB,IAAAC,IAAAA,EAAA,GAErFxjB,KAAKqjB,QAAUA,EACfrjB,KAAKwjB,aAAeA,EAEpBxjB,KAAKyjB,OAAS,KACdzjB,KAAK0jB,WAAa,KAClB1jB,KAAK2jB,aAAc,EAEnB3jB,KAAKsL,SAAW,EAEhBtL,KAAK4jB,SAAW5jB,KAAKqjB,QAAQQ,aAC7B7jB,KAAK4jB,SAASE,QAAQR,GAEtBtjB,KAAK+jB,OAAS,EACd/jB,KAAKgkB,cAEW,IAAZT,GACHvjB,KAAK+hB,KAAKwB,GA/BAJ,EAAAtoB,EAAAsoB,QAAAtoB,EAAAsoB,MAAK,IAEX5M,EAAM1b,EAAIkB,KAAKwa,IACfja,EAASzB,EAAIwB,KAAKC,OA0CjB8mB,EAAAljB,UAAA6hB,KAAP,SAAYhiB,GAAZ,IAAAyI,EAAAxI,KACOikB,EAAyB,IAAIC,eACnCD,EAAQE,aAAe,cACvBF,EAAQG,mBAAqB,WACF,GAAtBH,EAAQI,aACW,GAAlBJ,EAAQK,QAAiC,KAAlBL,EAAQK,QAClC9b,EAAK6a,QAAQkB,gBAAgBN,EAAQO,SAAU,SAACf,GAC/C3oB,MAAM,8BAA+BiF,GACrCyI,EAAKmb,aAAc,EACnBnb,EAAKib,OAASA,EACdjb,EAAK8C,SAAW9C,EAAKib,OAAOnY,UAC1B,SAACpJ,GACHpH,MAAM,2BAA4BoH,GAClCpH,MAAMoH,OAKV+hB,EAAQQ,KAAK,MAAO1kB,GAAK,GACzBkkB,EAAQS,KAAK,KAGPtB,EAAAljB,UAAAykB,KAAP,SAAYC,EAAsBC,QAAtB,IAAAD,IAAAA,GAAA,QAAsB,IAAAC,IAAAA,GAAA,GAC5B7kB,KAAK2jB,eACLkB,GAAa7kB,KAAK0jB,aACvB1jB,KAAKwW,OACLxW,KAAK0jB,WAAa1jB,KAAKqjB,QAAQyB,qBAC/B9kB,KAAK0jB,WAAWD,OAASzjB,KAAKyjB,OAC9BzjB,KAAK0jB,WAAWkB,KAAOA,EACvB5kB,KAAK0jB,WAAWI,QAAQ9jB,KAAK4jB,UAC7B5jB,KAAK0jB,WAAWjF,MAAM,MAGhB2E,EAAAljB,UAAAsW,KAAP,WACKxW,KAAK0jB,aACR1jB,KAAK0jB,WAAWlN,OAChBxW,KAAK0jB,WAAWqB,WAAW/kB,KAAK4jB,UAChC5jB,KAAK0jB,WAAa,OAIbN,EAAAljB,UAAA8kB,UAAP,WACC,OAAOhlB,KAAK+jB,QAGNX,EAAAljB,UAAA+kB,UAAP,SAAiBlB,GAChBxN,EAAIC,KAAKxW,KAAKklB,aACVllB,KAAK+jB,QAAUA,IACnB/jB,KAAK+jB,OAASA,EACd/jB,KAAKgkB,gBAGCZ,EAAAljB,UAAAilB,OAAP,SAAcha,EAAWG,EAAwBQ,GAAjD,IAAAtD,EAAAxI,UAAyB,IAAAsL,IAAAA,EAAA,UAAwB,IAAAQ,IAAAA,EAAA,MAChDyK,EAAIC,KAAKxW,KAAKklB,aACdllB,KAAKklB,YAAc,IAAIvqB,IAAIsQ,MAAMjL,KAAM,CAAE+jB,OAAQ5Y,GAAM,KAAMG,EAAUhP,EAAOC,OAAQ,KAAM,WAC3FiM,EAAKwb,eACH,WACElY,GAAYA,MAEjB9L,KAAKklB,YAAYte,WAGXwc,EAAAljB,UAAAklB,OAAP,SAAc9Z,QAAA,IAAAA,IAAAA,EAAA,KACbtL,KAAKmlB,OAAO,EAAG7Z,IAGT8X,EAAAljB,UAAAmlB,QAAP,SAAe/Z,EAAwBga,GAAvC,IAAA9c,EAAAxI,UAAe,IAAAsL,IAAAA,EAAA,UAAwB,IAAAga,IAAAA,GAAA,GACtCtlB,KAAKmlB,OAAO,EAAG7Z,EAAU,WACpBga,GACH9c,EAAKgO,UAKA4M,EAAAljB,UAAA8jB,YAAR,WACChkB,KAAK4jB,SAAS2B,KAAKvkB,MAAQhB,KAAK+jB,OAAS/jB,KAAKwjB,cAGxCJ,EAAAljB,UAAAslB,eAAP,WACC,OAAOxlB,KAAK2jB,aAGNP,EAAAljB,UAAAkM,YAAP,WACC,OAAOpM,KAAKsL,UAGN8X,EAAAljB,UAAAulB,eAAP,WACC,OAAOzlB,KAAKqjB,QAAQ7e,aA/HtB4e,EAqJAA,EArJaD,EAAAC,UAASA,EALvB,CAAUvoB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAsoB,EAKb/c,EAHOd,EAGPogB,EAYC,SAAAA,IAAA,IAAAld,EACCpC,EAAA7D,KAAAvC,OAAOA,KAED2lB,EAAmBzpB,OAAqB,cAAKA,OAA2B,oBAAK,K,OACnFsM,EAAKmb,YAA8B,MAAhBgC,EACfnd,EAAKmb,cACRnb,EAAK6a,QAAU,IAAIsC,EACnBnd,EAAKod,UAAY,GAEjBpd,EAAKqd,eAAiBrd,EAAK6a,QAAQQ,aACnCrb,EAAKqd,eAAe/B,QAAQtb,EAAK6a,QAAQC,aACzC9a,EAAKgb,aAAe,G,EA5BVL,EAAAtoB,EAAAsoB,QAAAtoB,EAAAsoB,MAAK,IAEX7d,EAAkBzK,EAAIgK,MAAMS,gBAGFgB,UAAAof,EAAjCtf,EAAiCd,GAqCzBogB,EAAAxlB,UAAA8X,IAAP,SAAWjY,EAAY+lB,EAAyBnE,GAC/C,YADsB,IAAAmE,IAAAA,EAAA,QAAyB,IAAAnE,IAAAA,EAAA,MAC1C3hB,KAAK2jB,cACA,IAANhC,IAAUA,EAAK5hB,IACfC,KAAK4lB,UAAUjE,KACnB3hB,KAAK4lB,UAAUjE,GAAM,IAAIwB,EAAAC,UAAUpjB,KAAKqjB,QAASrjB,KAAK6lB,eAAgB9lB,EAAK+lB,IACpE,KAGDJ,EAAAxlB,UAAA6lB,QAAP,SAAepE,GACd,GAAK3hB,KAAK2jB,YACV,OAAO3jB,KAAK4lB,UAAUjE,IAGhB+D,EAAAxlB,UAAA8lB,gBAAP,WACC,OAAKhmB,KAAK2jB,YACH3jB,KAAKwjB,aADkB,GAIxBkC,EAAAxlB,UAAA+lB,gBAAP,SAAuBlC,GACjB/jB,KAAK2jB,cACV3jB,KAAKwjB,aAAeO,EACpB/jB,KAAK6lB,eAAeN,KAAKvkB,MAAQhB,KAAKwjB,eAazBkC,EAAAQ,YAAd,WAA0C,OAAOR,EAAYS,WAAaT,EAAYS,SAAW,IAAIT,IACtFA,EAAAS,SAAuB,KAxEvCT,EAgFAA,EAhFavC,EAAAuC,YAAWA,EALzB,CAAU7qB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAsoB,EAEbiD,EAQC,SAAAA,EAAmBC,GAAnB,IAAA7d,EAAAxI,UAAmB,IAAAqmB,IAAAA,EAAA,GA2EXrmB,KAAA+e,aAAe,aAChBvW,EAAK8d,WAAa9d,EAAK+d,YAAW/d,EAAK8d,UAAY,GACzD9d,EAAKge,eA5ELxmB,KAAKymB,YAActD,EAAAuC,YAAYQ,cAE/BlmB,KAAKumB,UAAY,EACjBvmB,KAAKsmB,UAAY,EACjBtmB,KAAK0mB,QAAU,GACf1mB,KAAK2mB,KAAO,KAEZ3mB,KAAK4mB,WAAY,EACjB5mB,KAAK+jB,OAAS,EAEd/jB,KAAKqmB,kBAAoBA,EACzBrmB,KAAK6mB,WAAa,EAtBP1D,EAAAtoB,EAAAsoB,QAAAtoB,EAAAsoB,MAAK,IAmCViD,EAAAlmB,UAAA8X,IAAP,SAAWjY,EAAYyjB,QAAA,IAAAA,IAAAA,EAAA,GACtB,IAAM7B,EAAK5hB,EAAM,IAAMC,KAAKumB,UAC5BvmB,KAAKymB,YAAYzO,IAAIjY,EAAKyjB,EAAc7B,GACxC3hB,KAAK0mB,QAAQ9gB,KAAK+b,GAClB3hB,KAAKumB,UAAYvmB,KAAK0mB,QAAQxrB,QAGxBkrB,EAAAlmB,UAAAykB,KAAP,WACK3kB,KAAK4mB,YACT5mB,KAAK4mB,WAAY,EAEjB5mB,KAAKwmB,gBAGCJ,EAAAlmB,UAAAsW,KAAP,WACMxW,KAAK4mB,YACV5mB,KAAK4mB,WAAY,EAEjB5mB,KAAK8mB,gBAGCV,EAAAlmB,UAAA+kB,UAAP,SAAiBlB,GAChB/jB,KAAK+jB,OAASA,EAEV/jB,KAAK2mB,MACR3mB,KAAK2mB,KAAK1B,UAAUjlB,KAAK+jB,SAInBqC,EAAAlmB,UAAAsmB,YAAR,WACCxmB,KAAK2mB,KAAO3mB,KAAKymB,YAAYV,QAAQ/lB,KAAK0mB,QAAQ1mB,KAAKsmB,YACvDtmB,KAAK2mB,KAAK1B,UAAUjlB,KAAK+jB,QACzB/jB,KAAK2mB,KAAKhC,MAAK,GAAO,GAEtB,IAAMvG,EAAgE,KAApDpe,KAAK2mB,KAAKva,cAAgBpM,KAAKqmB,mBACjDrmB,KAAK6mB,UAAY3qB,OAAO6N,WAAW/J,KAAK+e,aAAcX,IAG/CgI,EAAAlmB,UAAA4mB,YAAR,YACwB,GAAnB9mB,KAAK6mB,YACR3qB,OAAOiO,aAAanK,KAAK6mB,WACzB7mB,KAAK6mB,WAAa,GAGf7mB,KAAK2mB,OACR3mB,KAAK2mB,KAAKnQ,OACVxW,KAAK2mB,KAAO,OA/EfP,EA8GAA,EA9GajD,EAAAiD,mBAAkBA,EAFhC,CAAUvrB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAsoB,EAEN1P,EACAnX,EAEPyqB,EAQC,SAAAA,EAAmBC,EAA2BC,GAA9C,IAAAze,EAAAxI,UAAmB,IAAAgnB,IAAAA,EAAA,UAA2B,IAAAC,IAAAA,EAAA,IA0DtCjnB,KAAA+e,aAAe,WACtB,IASOmI,EATD9I,EAAW5V,EAAK2e,sBAAyC,GAAhB3e,EAAK4V,SAAkB5V,EAAK4V,SACrEnU,GAAO,IAAI7N,MAAOgO,UACpBH,EAAOzB,EAAKpE,WAAwB,IAAXga,IAC5B5V,EAAKpE,UAAY6F,EACjBzB,EAAK2e,uBAAwB,IAEvB3e,EAAK8d,WAAa9d,EAAK+d,YAC5B/d,EAAK8d,UAAY,GAEZY,EAAS1e,EAAKke,QAAQle,EAAK8d,WACjC9d,EAAKie,YAAYV,QAAQmB,GAAQjC,UAAUzc,EAAKub,QAChDvb,EAAKie,YAAYV,QAAQmB,GAAQvC,MAAK,GAAO,KArE9C3kB,KAAKymB,YAActD,EAAAuC,YAAYQ,cAE/BlmB,KAAKgnB,YAAcA,EACnBhnB,KAAKinB,YAAcA,EACnBjnB,KAAKonB,YAAc,EACnBpnB,KAAKoe,SAAWpe,KAAKinB,YAErBjnB,KAAKsmB,WAAa,EAClBtmB,KAAKumB,UAAY,EACjBvmB,KAAK0mB,QAAU,GAEf1mB,KAAK4mB,WAAY,EACjB5mB,KAAK+jB,OAAS,EA1BHZ,EAAAtoB,EAAAsoB,QAAAtoB,EAAAsoB,MAAK,IAEX1P,EAAM5Y,EAAIkB,KAAK0X,IACfnX,EAASzB,EAAIwB,KAAKC,OAoCjByqB,EAAA7mB,UAAA8X,IAAP,SAAWjY,EAAYyjB,QAAA,IAAAA,IAAAA,EAAA,GACtB,IAAM7B,EAAK5hB,EAAM,IAAMC,KAAKumB,UAC5BvmB,KAAKymB,YAAYzO,IAAIjY,EAAKyjB,EAAc7B,GACxC3hB,KAAK0mB,QAAQ9gB,KAAK+b,GAClB3hB,KAAKumB,UAAYvmB,KAAK0mB,QAAQxrB,QAGxB6rB,EAAA7mB,UAAAykB,KAAP,SAAY0C,QAAA,IAAAA,IAAAA,GAAA,GACPrnB,KAAK4mB,YACT5mB,KAAK4mB,WAAY,EAEjB5mB,KAAKmnB,uBAAwB,EAC7BnnB,KAAKoE,UAAYijB,EAAc,GAAI,IAAIjrB,MAAOgO,UAC9CpK,KAAKonB,WAAalrB,OAAOqP,YAAYvL,KAAK+e,aAAc,IAAO,IAC/D/e,KAAK+e,iBAGCgI,EAAA7mB,UAAAsW,KAAP,WACMxW,KAAK4mB,YACV5mB,KAAK4mB,WAAY,EAEjB1qB,OAAO8P,cAAchM,KAAKonB,cAGpBL,EAAA7mB,UAAAonB,SAAP,SAAgBC,GACfvnB,KAAKoe,SAAW3K,EAAIO,KAAKuT,EAAY,EAAG,EAAGvnB,KAAKinB,YAAajnB,KAAKgnB,YAAa1qB,EAAOmB,cAGhFspB,EAAA7mB,UAAA+kB,UAAP,SAAiBlB,GAChB/jB,KAAK+jB,OAASA,GA/DhBgD,EA4GAA,EA5Ga5D,EAAA4D,cAAaA,EAL3B,CAAUlsB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAA2sB,EAKbphB,EAHOd,EACAlK,EAEPqsB,EAQC,SAAAA,EAAYC,EAAe/F,QAAf,IAAA+F,IAAAA,EAAA,WAAe,IAAA/F,IAAAA,EAAA,MAA3B,IAAAnZ,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OACPwI,EAAKmZ,GAAW,MAANA,EAAaA,EAAKG,OAAO2F,EAAKE,WACxCnf,EAAKkf,KAAOA,EACZlf,EAAKof,KAAO,GACZpf,EAAKqf,kBAAmB,EACxBrf,EAAKsf,gBAAiB,EACtBtf,EAAKuf,eAAgB,EACrBvf,EAAKwf,YAAa,EAClBxf,EAAKyf,WAAY,EACjBzf,EAAK0f,WAAY,EACjB1f,EAAK2f,SAAU,EACf3f,EAAK4f,UAAW,EAEZX,EAAKY,UAAU7f,EAAKmZ,KACvBvmB,EAAO6G,KAAK,YAAeuG,EAAKmZ,GAAK,kBAEtC8F,EAAKY,UAAU7f,EAAKmZ,IAAMnZ,IACxBif,EAAKE,U,EA/BIH,EAAA3sB,EAAA6sB,OAAA7sB,EAAA6sB,KAAI,IAEVpiB,EAAkBzK,EAAIgK,MAAMS,gBAC5BlK,EAASP,EAAIM,MAAMC,OAEkBkL,UAAAmhB,EAA5CrhB,EAA4Cd,GAuCpCmiB,EAAAvnB,UAAAooB,WAAP,WACKtoB,KAAK8nB,gBAAkB9nB,KAAK+nB,gBAChC/nB,KAAK8nB,gBAAiB,EAMtB9nB,KAAK0nB,KAAO1nB,KAAKuoB,iBACbvoB,KAAK8nB,gBACRjsB,WAAWmE,KAAK4nB,MAAQ5nB,KAAM,wBAAyBA,KAAK0nB,MACxD1nB,KAAK6nB,kBACR7nB,KAAKwoB,MAAK,GAEXxoB,KAAK8nB,gBAAiB,EACtB9nB,KAAK+nB,eAAgB,GAGrB/nB,KAAK0nB,KAAO,OAIPD,EAAAvnB,UAAAuoB,MAAP,WACKzoB,KAAKgoB,YAAchoB,KAAKioB,YAC5BjoB,KAAKgoB,YAAa,EAClBnsB,WAAWmE,KAAK4nB,MAAQ5nB,KAAM,6CAA8CA,KAAK+nB,eACjF/nB,KAAK0oB,YACL1oB,KAAKgoB,YAAa,EAClBhoB,KAAKioB,WAAY,IAGXR,EAAAvnB,UAAAyoB,SAAP,YACM3oB,KAAK8nB,gBAAmB9nB,KAAK+nB,iBAClC/nB,KAAK4oB,eACL5oB,KAAK8nB,gBAAiB,EACtB9nB,KAAK+nB,eAAgB,SAEdN,EAAKY,UAAUroB,KAAK2hB,IAC3B8F,EAAKY,UAAUroB,KAAK2hB,IAAM,OAGpB8F,EAAAvnB,UAAA2oB,KAAP,SAAYpP,QAAA,IAAAA,IAAAA,GAAA,GACPzZ,KAAKmoB,SACTnoB,KAAK8oB,eAAerP,GAAe7S,WAG7B6gB,EAAAvnB,UAAAsoB,KAAP,SAAY/O,QAAA,IAAAA,IAAAA,GAAA,GACNzZ,KAAKmoB,SACVnoB,KAAK+oB,eAAetP,GAAe7S,WAG7B6gB,EAAAvnB,UAAA4oB,eAAP,SAAsBrP,GAAtB,IAAAjR,EAAAxI,UAAsB,IAAAyZ,IAAAA,GAAA,GACrB,IAAM7R,EAAqB,IAAIjN,IAAI4S,OA6BnC,OA5BA3F,EAAQc,WACP,IAAI/N,IAAI4O,KAAK,WACRf,EAAK2f,UACTtsB,WAAW2M,EAAKof,MAAQpf,EAAM,wDAAyDA,EAAKsf,iBAAmBtf,EAAKuf,eACpHvsB,UAAUgN,EAAKof,MAAQpf,EAAM,mDAAoDA,EAAKwf,aAAcxf,EAAKyf,WACzGzf,EAAK2f,SAAU,EACf3f,EAAK0f,WAAY,EACjB1f,EAAK4f,UAAW,EAEZ5f,EAAKwgB,cACRxgB,EAAKwgB,YAAY/hB,YACjBuB,EAAKwgB,YAAc,MAEhBxgB,EAAKygB,cACRzgB,EAAKygB,YAAYhiB,YACjBuB,EAAKygB,YAAc,OAGpBzgB,EAAKwgB,YAAcphB,GACXkB,cACPN,EAAK0gB,SAAS1gB,EAAKkf,KAAMjO,GACzB,IAAI9e,IAAI4O,KAAK,WACZf,EAAKwgB,YAAc,KACnBxgB,EAAK0f,WAAY,SAKdtgB,GAGD6f,EAAAvnB,UAAA6oB,eAAP,SAAsBtP,GAAtB,IAAAjR,EAAAxI,UAAsB,IAAAyZ,IAAAA,GAAA,GACrB,IAAM7R,EAAqB,IAAIjN,IAAI4S,OA+BnC,OA9BA3F,EAAQc,WACP,IAAI/N,IAAI4O,KAAK,WACPf,EAAK2f,UACL3f,EAAKsf,iBACTjsB,WAAW2M,EAAKof,MAAQpf,EAAM,wDAAyDA,EAAKsf,iBAAmBtf,EAAKuf,eACpHvsB,UAAUgN,EAAKof,MAAQpf,EAAM,mDAAoDA,EAAKwf,aAAexf,EAAKyf,YAE3Gzf,EAAK2f,SAAU,EACf3f,EAAK0f,WAAY,EACjB1f,EAAK4f,UAAW,EAEZ5f,EAAKwgB,cACRxgB,EAAKwgB,YAAY/hB,YACjBuB,EAAKwgB,YAAc,MAEhBxgB,EAAKygB,cACRzgB,EAAKygB,YAAYhiB,YACjBuB,EAAKygB,YAAc,OAGpBzgB,EAAKygB,YAAcrhB,GACXkB,cACPN,EAAK2gB,SAAS3gB,EAAKkf,KAAMjO,GACzB,IAAI9e,IAAI4O,KAAK,WACZf,EAAKygB,YAAc,KACnBzgB,EAAK4f,UAAW,SAKbxgB,GAGD6f,EAAAvnB,UAAAkpB,kBAAP,WACC,OAAOppB,KAAK8nB,gBAGNL,EAAAvnB,UAAAmpB,iBAAP,WACC,OAAOrpB,KAAK+nB,eAGNN,EAAAvnB,UAAAopB,cAAP,WACC,OAAOtpB,KAAKgoB,YAGNP,EAAAvnB,UAAAqpB,aAAP,WACC,OAAOvpB,KAAKioB,WAGNR,EAAAvnB,UAAAspB,aAAP,WACC,OAAOxpB,KAAKkoB,WAGNT,EAAAvnB,UAAAupB,WAAP,WACC,OAAOzpB,KAAKmoB,SAGNV,EAAAvnB,UAAAwpB,YAAP,WACC,OAAO1pB,KAAKooB,UAGNX,EAAAvnB,UAAAypB,YAAP,WACC,OAAQ3pB,KAAKmoB,SAGPV,EAAAvnB,UAAA0pB,MAAP,WACC,OAAO5pB,KAAK2hB,IAGN8F,EAAAvnB,UAAA2pB,QAAP,WACC,OAAO7pB,KAAK0nB,MAGND,EAAAvnB,UAAA4pB,QAAP,WACC,OAAO9pB,KAAK4nB,MAGNH,EAAAvnB,UAAA6pB,QAAP,SAAe/oB,GACdhB,KAAK4nB,KAAO5mB,GAGNymB,EAAAvnB,UAAA8pB,oBAAP,WACC,OAAOhqB,KAAK6nB,kBAGNJ,EAAAvnB,UAAA+pB,oBAAP,SAA2BjpB,GAC1BhB,KAAK6nB,iBAAmB7mB,GAiBXymB,EAAAyC,YAAd,SAA0BvI,GACzB,OAAO8F,EAAKY,UAAU1G,IA2BR8F,EAAAE,UAAmB,EACnBF,EAAAY,UAA4B,GAjQ5CZ,EAkQAA,EAlQsBD,EAAAC,KAAIA,EAL3B,CAAU5sB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAA6sB,EAEbyC,EAQC,SAAAA,EAAY1uB,EAAgB2uB,EAA4BC,EAAqCC,EAAwCC,GAArI,IAAA/hB,EAAAxI,UAA4B,IAAAoqB,IAAAA,EAAA,WAA4B,IAAAC,IAAAA,GAAA,QAAqC,IAAAC,IAAAA,GAAA,QAAwC,IAAAC,IAAAA,GAAA,GAkM7HvqB,KAAAwqB,iBAAmB,SAAC3lB,GACvB2D,EAAK8hB,yBAAyBzlB,EAAM4lB,iBACpCjiB,EAAK+hB,0BAA0B1lB,EAAM6lB,kBACzCliB,EAAKmiB,OACLniB,EAAKoiB,oBAGE5qB,KAAA6qB,gBAAkB,SAAChmB,GACtB2D,EAAK8hB,yBAAyBzlB,EAAM4lB,iBACpCjiB,EAAK+hB,0BAA0B1lB,EAAM6lB,kBACzCliB,EAAKsiB,MACLtiB,EAAKoiB,oBAGE5qB,KAAA+qB,iBAAmB,SAAClmB,GACvB2D,EAAK8hB,yBAAyBzlB,EAAM4lB,iBACpCjiB,EAAK+hB,0BAA0B1lB,EAAM6lB,kBACzCliB,EAAKwiB,QAGEhrB,KAAAirB,eAAiB,SAACpmB,GACrB2D,EAAK8hB,yBAAyBzlB,EAAM4lB,iBACpCjiB,EAAK+hB,0BAA0B1lB,EAAM6lB,kBACzCliB,EAAK0iB,MAGElrB,KAAAmrB,aAAe,SAACtmB,GACnB2D,EAAK8hB,yBAAyBzlB,EAAM4lB,iBACpCjiB,EAAK+hB,0BAA0B1lB,EAAM6lB,kBACzCliB,EAAK4iB,SAMEprB,KAAAqrB,kBAAoB,SAACxmB,GACxB2D,EAAK8hB,yBAAyBzlB,EAAM4lB,iBACpCjiB,EAAK+hB,0BAA0B1lB,EAAM6lB,kBACzCliB,EAAKwiB,QAGEhrB,KAAAsrB,gBAAkB,SAACzmB,GACtB2D,EAAK8hB,yBAAyBzlB,EAAM4lB,iBACpCjiB,EAAK+hB,0BAA0B1lB,EAAM6lB,kBACzCliB,EAAK0iB,KACL1iB,EAAK4iB,SAGEprB,KAAAurB,mBAAqB,SAAC1mB,GACzB2D,EAAK8hB,yBAAyBzlB,EAAM4lB,iBACpCjiB,EAAK+hB,0BAA0B1lB,EAAM6lB,kBACzCliB,EAAK0iB,MApPLlrB,KAAKvE,OAASA,EACduE,KAAKoqB,QAAU,KACfpqB,KAAKqqB,qBAAuBA,EAC5BrqB,KAAKsqB,wBAA0BA,EAC/BtqB,KAAKuqB,yBAA2BA,EAChCvqB,KAAKwrB,WAAY,EACjBxrB,KAAKyrB,QAAS,EACdzrB,KAAK0rB,QAAS,EACd1rB,KAAK2rB,gBAAiB,EACtB3rB,KAAK4rB,gBAAiB,EACtB5rB,KAAK6rB,mBAAqB,GAE1B7rB,KAAK8rB,WAAW1B,GAvBL1C,EAAA7sB,EAAA6sB,OAAA7sB,EAAA6sB,KAAI,IAoCTyC,EAAAjqB,UAAAyqB,KAAP,SAAYlR,GAEX,QAFW,IAAAA,IAAAA,GAAA,GACXzZ,KAAK2rB,gBAAiB,EAClB3rB,KAAKwrB,UAAW,CACnB,GAAIxrB,KAAKyrB,OAAQ,OACjBzrB,KAAKyrB,QAAS,EACdzrB,KAAKvE,OAAOswB,eAAetS,KAItB0Q,EAAAjqB,UAAA4qB,IAAP,SAAWrR,QAAA,IAAAA,IAAAA,GAAA,GACVzZ,KAAKgsB,MAAK,EAAMvS,IAGT0Q,EAAAjqB,UAAA8rB,KAAR,SAAaC,EAAsBxS,GAElC,QAFkC,IAAAA,IAAAA,GAAA,GAClCzZ,KAAK2rB,gBAAiB,EAClB3rB,KAAKwrB,YAAcS,EAAc,CACpC,IAAKjsB,KAAKyrB,OAAQ,OAClBzrB,KAAKyrB,QAAS,EACdzrB,KAAKvE,OAAOywB,cAAczS,KAIrB0Q,EAAAjqB,UAAA8qB,KAAP,SAAYvR,GAEX,QAFW,IAAAA,IAAAA,GAAA,GACXzZ,KAAK4rB,gBAAiB,EAClB5rB,KAAKwrB,UAAW,CACnB,GAAIxrB,KAAK0rB,OAAQ,OACjB1rB,KAAK0rB,QAAS,EACd1rB,KAAKvE,OAAO0wB,eAAe1S,KAItB0Q,EAAAjqB,UAAAgrB,GAAP,SAAUzR,QAAA,IAAAA,IAAAA,GAAA,GACTzZ,KAAKosB,KAAI,EAAM3S,IAGR0Q,EAAAjqB,UAAAksB,IAAR,SAAYH,EAAsBxS,GAEjC,QAFiC,IAAAA,IAAAA,GAAA,GACjCzZ,KAAK4rB,gBAAiB,EAClB5rB,KAAKwrB,YAAcS,EAAc,CACpC,IAAKjsB,KAAK0rB,OAAQ,OAClB1rB,KAAK0rB,QAAS,EACd1rB,KAAKvE,OAAO4wB,aAAa5S,KAIpB0Q,EAAAjqB,UAAAkrB,MAAP,SAAa3R,QAAA,IAAAA,IAAAA,GAAA,GACRzZ,KAAKwrB,WACRxrB,KAAKvE,OAAO6wB,gBAAgB7S,IAItB0Q,EAAAjqB,UAAAqsB,GAAR,WACqB,MAAhBvsB,KAAKoqB,UAETpqB,KAAKoqB,QAAQ5kB,iBAAiB,YAAaxF,KAAKwqB,kBAChDxqB,KAAKoqB,QAAQ5kB,iBAAiB,WAAYxF,KAAK6qB,iBAC/C7qB,KAAKoqB,QAAQ5kB,iBAAiB,YAAaxF,KAAK+qB,kBAChD/qB,KAAKoqB,QAAQ5kB,iBAAiB,UAAWxF,KAAKirB,gBAC9CjrB,KAAKoqB,QAAQ5kB,iBAAiB,QAASxF,KAAKmrB,cAE5CnrB,KAAKoqB,QAAQ5kB,iBAAiB,aAAcxF,KAAKqrB,mBACjDrrB,KAAKoqB,QAAQ5kB,iBAAiB,WAAYxF,KAAKsrB,iBAC/CtrB,KAAKoqB,QAAQ5kB,iBAAiB,cAAexF,KAAKurB,sBAG3CpB,EAAAjqB,UAAAssB,IAAR,WACqB,MAAhBxsB,KAAKoqB,UAETpqB,KAAKoqB,QAAQvkB,oBAAoB,YAAa7F,KAAKwqB,kBACnDxqB,KAAKoqB,QAAQvkB,oBAAoB,WAAY7F,KAAK6qB,iBAClD7qB,KAAKoqB,QAAQvkB,oBAAoB,YAAa7F,KAAK+qB,kBACnD/qB,KAAKoqB,QAAQvkB,oBAAoB,UAAW7F,KAAKirB,gBACjDjrB,KAAKoqB,QAAQvkB,oBAAoB,QAAS7F,KAAKmrB,cAE/CnrB,KAAKoqB,QAAQvkB,oBAAoB,aAAc7F,KAAKqrB,mBACpDrrB,KAAKoqB,QAAQvkB,oBAAoB,WAAY7F,KAAKsrB,iBAClDtrB,KAAKoqB,QAAQvkB,oBAAoB,cAAe7F,KAAKurB,sBAG/CpB,EAAAjqB,UAAAusB,aAAP,WACC,OAAOzsB,KAAKwrB,WAGNrB,EAAAjqB,UAAAwsB,aAAP,SAAoB1rB,EAAeyY,QAAA,IAAAA,IAAAA,GAAA,GAC9BzZ,KAAKwrB,WAAaxqB,IACrBhB,KAAKwrB,UAAYxqB,EACbhB,KAAKwrB,WACJxrB,KAAK2rB,gBACR3rB,KAAK2qB,OAEF3qB,KAAK4rB,gBACR5rB,KAAKgrB,SAGFhrB,KAAKyrB,SACRzrB,KAAKgsB,MAAK,GACVhsB,KAAK2rB,gBAAiB,GAEnB3rB,KAAK0rB,SACR1rB,KAAKosB,KAAI,GACTpsB,KAAK4rB,gBAAiB,IAGxB5rB,KAAKvE,OAAOkxB,wBAAwB3sB,KAAKwrB,UAAW/R,KAI/C0Q,EAAAjqB,UAAA0sB,UAAP,WACC,OAAO5sB,KAAKyrB,QAGNtB,EAAAjqB,UAAA2sB,UAAP,WACC,OAAO7sB,KAAK0rB,QAGNvB,EAAAjqB,UAAA4sB,WAAP,WACC,OAAO9sB,KAAKoqB,SAGND,EAAAjqB,UAAA4rB,WAAP,SAAkB1B,GACbpqB,KAAKoqB,UAAYA,IACpBpqB,KAAKwsB,MACLxsB,KAAKoqB,QAAUA,EACfpqB,KAAKusB,OAIApC,EAAAjqB,UAAA6sB,aAAP,WACC/sB,KAAK8rB,WAAW,OAGV3B,EAAAjqB,UAAA8sB,2BAAP,WACC,OAAOhtB,KAAKsqB,yBAGNH,EAAAjqB,UAAA+sB,2BAAP,SAAkC5U,GACjCrY,KAAKsqB,wBAA0BjS,GAGzB8R,EAAAjqB,UAAAgtB,4BAAP,WACC,OAAOltB,KAAKuqB,0BAGNJ,EAAAjqB,UAAAitB,4BAAP,SAAmC9U,GAClCrY,KAAKuqB,yBAA2BlS,GAG1B8R,EAAAjqB,UAAAktB,wBAAP,WACC,OAAOptB,KAAKqqB,sBAGNF,EAAAjqB,UAAAmtB,wBAAP,SAA+BhV,GAC9BrY,KAAKqqB,qBAAuBhS,GAGrB8R,EAAAjqB,UAAA0qB,iBAAR,WACK5qB,KAAKqqB,uBACJrqB,KAAK2rB,gBAAkB3rB,KAAKwrB,WAA6B,MAAhBxrB,KAAKoqB,SACjDpqB,KAAK6rB,mBAAqB7rB,KAAKoqB,QAAQkD,MAAMC,OAC7CvtB,KAAKoqB,QAAQkD,MAAMC,OAAS,WAE5BvtB,KAAKoqB,QAAQkD,MAAMC,OAAoC,IAA3BvtB,KAAK6rB,mBAA2B7rB,KAAK6rB,mBAAqB,SAlM1F1B,EAqRAA,EArRazC,EAAAyC,eAAcA,EAF5B,CAAUtvB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAA6sB,EAEb8F,EAQC,SAAAA,EAAY/xB,GACXuE,KAAKvE,OAASA,EAXHisB,EAAA7sB,EAAA6sB,OAAA7sB,EAAA6sB,KAAI,IAwBT8F,EAAAttB,UAAAutB,OAAP,SAAchU,QAAA,IAAAA,IAAAA,GAAA,GACTzZ,KAAK0tB,aACT1tB,KAAK0tB,YAAa,EAClB1tB,KAAKvE,OAAOkyB,qBAAqB3tB,KAAK0tB,WAAYjU,KAG5C+T,EAAAttB,UAAA0tB,SAAP,SAAgBnU,QAAA,IAAAA,IAAAA,GAAA,GACVzZ,KAAK0tB,aACV1tB,KAAK0tB,YAAa,EAClB1tB,KAAKvE,OAAOkyB,qBAAqB3tB,KAAK0tB,WAAYjU,KAG5C+T,EAAAttB,UAAA2tB,cAAP,WACC,OAAO7tB,KAAK0tB,YAnCdF,EAkDAA,EAlDa9F,EAAA8F,kBAAiBA,EAF/B,CAAU3yB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgF,EAEbiuB,EA8MC,SAAAA,KAhNYjuB,EAAAhF,EAAAgF,UAAAhF,EAAAgF,QAAO,IAUJiuB,EAAAxF,WAAf,WACC,IAGMyF,EAHF/tB,KAAK+nB,gBACT/nB,KAAK+nB,eAAgB,EAEfgG,EAAW7xB,OAAO8xB,UAAUC,UAAUC,cAG5CluB,KAAKmuB,UAAqC,GAAzBJ,EAAE1tB,QAAQ,aAA2C,GAAvB0tB,EAAE1tB,QAAQ,WAC/B,GAAtB0tB,EAAE1tB,QAAQ,UACgB,GAAzB0tB,EAAE1tB,QAAQ,aAA4C,GAAxB0tB,EAAE1tB,QAAQ,YACf,GAAzB0tB,EAAE1tB,QAAQ,aAA4C,GAAxB0tB,EAAE1tB,QAAQ,YACjB,GAAxB0tB,EAAE1tB,QAAQ,YACY,GAAtB0tB,EAAE1tB,QAAQ,UACgB,GAA1B0tB,EAAE1tB,QAAQ,YAEdL,KAAKouB,UAAqC,GAAzBL,EAAE1tB,QAAQ,aAA2C,GAAvB0tB,EAAE1tB,QAAQ,WAC7B,GAAxB0tB,EAAE1tB,QAAQ,YACY,GAAtB0tB,EAAE1tB,QAAQ,UACgB,GAAzB0tB,EAAE1tB,QAAQ,aAA4C,GAAxB0tB,EAAE1tB,QAAQ,YACf,GAAzB0tB,EAAE1tB,QAAQ,aAA4C,GAAxB0tB,EAAE1tB,QAAQ,YACb,GAA5B0tB,EAAE1tB,QAAQ,cAEdL,KAAKquB,WAAaruB,KAAKmuB,WAAanuB,KAAKouB,SAGzCpuB,KAAKsuB,OAA8B,GAAtBP,EAAE1tB,QAAQ,UAAyC,GAAxB0tB,EAAE1tB,QAAQ,YAAyC,GAAtB0tB,EAAE1tB,QAAQ,QAC/EL,KAAKuuB,WAAqC,GAAzBR,EAAE1tB,QAAQ,aAA4C,GAAxB0tB,EAAE1tB,QAAQ,WAGhC,GAAtB0tB,EAAE1tB,QAAQ,UAA0C,GAAzB0tB,EAAE1tB,QAAQ,WACvCL,KAAKwuB,MAAO,GACmB,GAAtBT,EAAE1tB,QAAQ,QACnBL,KAAKyuB,QAAS,GACmB,GAAxBV,EAAE1tB,QAAQ,UACnBL,KAAK0uB,UAAW,GACiB,GAAxBX,EAAE1tB,QAAQ,UACnBL,KAAK2uB,UAAW,GACkB,GAAzBZ,EAAE1tB,QAAQ,WACnBL,KAAK4uB,WAAY,GACe,GAAvBb,EAAE1tB,QAAQ,SACnBL,KAAK6uB,SAAU,EAEf7uB,KAAK8uB,kBAAmB,EAIzB9uB,KAAK+uB,oBAAkD,IAAzB7yB,OAAO8yB,aACrChvB,KAAKivB,mBAAqBjvB,KAAKsuB,MAG/BtuB,KAAKkvB,iBAAmBhzB,OAAOgzB,iBAC/BlvB,KAAKmvB,SAAmC,EAAxBnvB,KAAKkvB,mBAMRpB,EAAAsB,aAAd,WAEC,OADApvB,KAAKsoB,aACEtoB,KAAKquB,WAGCP,EAAAuB,YAAd,WAEC,OADArvB,KAAKsoB,aACEtoB,KAAKmuB,UAGCL,EAAAwB,YAAd,WAEC,OADAtvB,KAAKsoB,aACEtoB,KAAKouB,UAMCN,EAAAyB,SAAd,WAEC,OADAvvB,KAAKsoB,aACEtoB,KAAKsuB,OAGCR,EAAA0B,aAAd,WAEC,OADAxvB,KAAKsoB,aACEtoB,KAAKuuB,WAMCT,EAAA2B,QAAd,WAEC,OADAzvB,KAAKsoB,aACEtoB,KAAKwuB,MAGCV,EAAA4B,UAAd,WAEC,OADA1vB,KAAKsoB,aACEtoB,KAAKyuB,QAGCX,EAAA6B,YAAd,WAEC,OADA3vB,KAAKsoB,aACEtoB,KAAK0uB,UAGCZ,EAAA8B,YAAd,WAEC,OADA5vB,KAAKsoB,aACEtoB,KAAK2uB,UAGCb,EAAA+B,aAAd,WAEC,OADA7vB,KAAKsoB,aACEtoB,KAAK4uB,WAGCd,EAAAgC,WAAd,WAEC,OADA9vB,KAAKsoB,aACEtoB,KAAK6uB,SAGCf,EAAAiC,oBAAd,WAEC,OADA/vB,KAAKsoB,aACEtoB,KAAK8uB,kBAMChB,EAAAkC,kBAAd,WAEC,OADAhwB,KAAKsoB,aACEtoB,KAAK+uB,gBAGCjB,EAAAmC,qBAAd,WAEC,OADAjwB,KAAKsoB,aACEtoB,KAAKivB,mBAMCnB,EAAAoC,YAAd,WAEC,OADAlwB,KAAKsoB,aACEtoB,KAAKmvB,UAGCrB,EAAAqC,oBAAd,WAEC,OADAnwB,KAAKsoB,aACEtoB,KAAKkvB,kBAGCpB,EAAAsC,OAAd,WACC,IACOC,EAMP,OAPiB,GAAbrwB,KAAKswB,OACFD,EAAkBE,SAASC,cAAc,QAC3CC,aAAa,QAAS,gEAC1BF,SAASG,KAAKC,YAAYN,GAC1BrwB,KAAKswB,IAAMD,EAAIO,aACfL,SAASG,KAAKG,YAAYR,IAEpBrwB,KAAKswB,KAaExC,EAAAO,WAAoB,EACpBP,EAAAK,UAAmB,EACnBL,EAAAM,UAAmB,EAEnBN,EAAAQ,OAAgB,EAChBR,EAAAS,WAAoB,EAEpBT,EAAAU,MAAe,EACfV,EAAAW,QAAiB,EACjBX,EAAAY,UAAmB,EACnBZ,EAAAa,UAAmB,EACnBb,EAAAc,WAAoB,EACpBd,EAAAe,SAAkB,EAClBf,EAAAgB,kBAA2B,EAE3BhB,EAAAiB,gBAAyB,EACzBjB,EAAAmB,mBAA4B,EAE5BnB,EAAAqB,UAAmB,EACnBrB,EAAAoB,iBAA0B,EAC1BpB,EAAAwC,KAAc,EAEdxC,EAAA/F,eAAwB,EAxMxC+F,EA+MAA,EA/MajuB,EAAAiuB,WAAUA,EAFxB,CAAUjzB,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgF,EAEN7D,EAEP80B,EAsHC,SAAAA,KA1HYjxB,EAAAhF,EAAAgF,UAAAhF,EAAAgF,QAAO,IAEb7D,EAAOnB,EAAIkB,KAAKC,KAiBR80B,EAAAC,KAAd,SAAmBjwB,EAAYE,EAAWgwB,GACzC,QADyC,IAAAA,IAAAA,GAAoB,IACxDF,EAAanN,cAAe,OAAO,EACxC,IAAMsN,EAA4C,CAAEjwB,MAAMkwB,KAAKC,UAAUnwB,GAAQgwB,UAAWA,GAE5F,OADAI,aAAaC,QAAQvwB,EAAKowB,KAAKC,UAAUF,KAClC,GASMH,EAAAQ,aAAd,SAA2BxwB,EAAYE,EAAWsM,QAAA,IAAAA,IAAAA,GAAuB,GACxE,IAAM0jB,EAAkC,EAAf1jB,EAAmBtR,EAAKC,MAAQqR,GAAgB,EACzE,OAAOwjB,EAAaC,KAAKjwB,EAAKE,EAAOgwB,IAQxBF,EAAA/O,KAAd,SAAmBjhB,EAAYC,GAC9B,QAD8B,IAAAA,IAAAA,EAAA,OACzB+vB,EAAanN,cAAe,OAAO5iB,EACxC,IAAMkwB,EAA4CC,KAAKK,MAAMH,aAAala,QAAQpW,IAClF,OAAImwB,IAEoB,EAAnBA,EAAOD,YAENh1B,EAAKC,MAAQg1B,EAAOD,UAUjBE,KAAKK,MAAMN,EAAOjwB,QALxBowB,aAAaI,WAAW1wB,GACjBC,GAQFA,GAQK+vB,EAAAW,OAAd,SAAqB3wB,GACfgwB,EAAanN,eAClByN,aAAaI,WAAW1wB,IAOXgwB,EAAAnN,YAAd,WACC,GAAiC,MAA7BmN,EAAaY,aAChB,IACCN,aAAaC,QAAQ,YAAa,aAClCD,aAAaI,WAAW,aACxBV,EAAaY,cAAe,EAC3B,MAAOxvB,GACR4uB,EAAaY,cAAe,EAG9B,OAAOZ,EAAaY,cAYPZ,EAAAa,eAAd,SAA6BC,EAAkB1b,EAAkBC,EAAoBC,EAAoB9I,GACxG,YAD4B,IAAAskB,IAAAA,EAAA,QAAkB,IAAA1b,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,QAAoB,IAAAC,IAAAA,EAAA,QAAoB,IAAA9I,IAAAA,EAAA,GACjGA,EAAwE,KAAxD8I,EAAkD,IAAvCD,EAAiC,IAAtBD,EAAgB,GAAR0b,MAavCd,EAAAY,aAAuB,KAhHvCZ,EAuHAA,EAvHajxB,EAAAixB,aAAYA,EAJ1B,CAAUj2B,IAAAA,KAAG,ICAb,SAAUA,IAAI,SAAAgF,GAGb,IAAYgyB,GAAAA,EAAAhyB,EAAAgyB,UAAAhyB,EAAAgyB,QAAO,KAClBA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,KAAA,IAAA,OAEAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,UAAA,IAAA,YAEAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,OAAA,IAAA,SAEAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OAEAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,UAAA,IAAA,YAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IAEAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,UAAA,IAAA,YAEAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UAEAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,IAAA,KAAA,MACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,OAAA,KAAA,SAEAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,GAAA,KAAA,KACAA,EAAAA,EAAA,IAAA,KAAA,MACAA,EAAAA,EAAA,IAAA,KAAA,MACAA,EAAAA,EAAA,IAAA,KAAA,MAEAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,WAAA,KAAA,aAEAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,OAAA,KAAA,SACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,KAAA,KAAA,OACAA,EAAAA,EAAA,OAAA,KAAA,SACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,MAAA,KAAA,QACAA,EAAAA,EAAA,YAAA,KAAA,cAEAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,MAAA,KAAA,QAOD,IAAAC,GAQgBA,EAAAxJ,WAAf,WACKtoB,KAAK+nB,gBACT/nB,KAAK+nB,eAAgB,EAErB/nB,KAAKsK,gBAAkB,IAAIzP,EAAIgK,MAAMS,kBAGxBwsB,EAAArT,MAAd,WACKze,KAAKwe,YACTxe,KAAKwe,WAAY,EAEjBxe,KAAKsoB,aACLxtB,MAAM,sBAENoB,OAAOsJ,iBAAiB,UAAWxF,KAAK+xB,sBACxC71B,OAAOsJ,iBAAiB,QAASxF,KAAKgyB,sBAIzBF,EAAAtb,KAAd,WACMxW,KAAKwe,YACVxe,KAAKwe,WAAY,EAEjBxe,KAAKsoB,aACLxtB,MAAM,qBAENoB,OAAO2J,oBAAoB,UAAW7F,KAAK+xB,sBAC3C71B,OAAO2J,oBAAoB,QAAS7F,KAAKgyB,sBAG5BF,EAAAtsB,iBAAd,SAA+BC,EAAkBC,GAChD1F,KAAKsoB,aACLtoB,KAAKsK,gBAAgB9E,iBAAiBC,EAAWC,IAGpCosB,EAAAjsB,oBAAd,SAAkCJ,EAAkBC,GACnD1F,KAAKsoB,aACLtoB,KAAKsK,gBAAgBzE,oBAAoBJ,EAAWC,IAqCvCosB,EAAAnT,aAAd,WAAuC,OAAO3e,KAAKwe,WAGrCsT,EAAAG,mBAAd,WAA6C,OAA8B,EAAvBjyB,KAAKkyB,iBAG3CJ,EAAAK,gBAAd,SAA8BC,GAA0B,OAA8C,MAAvCpyB,KAAKqyB,sBAAsBD,IAI5EN,EAAAQ,4BAAd,WAAsD,OAAOtyB,KAAKuyB,0BACpDT,EAAAU,4BAAd,SAA0Cna,GAAwBrY,KAAKuyB,yBAA2Bla,GAzCnFyZ,EAAAC,qBAAuB,SAACltB,GACtC,IAAMutB,EAAiBvtB,EAAMutB,QACoB,MAA7CN,EAAWO,sBAAsBD,IACpCN,EAAWO,sBAAsBD,IAAW,IAC1CN,EAAWI,gBACbJ,EAAWxnB,gBAAgBrE,cAAc,IAAIpG,EAAA4yB,gBAAgB5yB,EAAA4yB,gBAAgBC,SAAUZ,EAAYjtB,KACzFitB,EAAWS,0BACrBT,EAAWxnB,gBAAgBrE,cAAc,IAAIpG,EAAA4yB,gBAAgB5yB,EAAA4yB,gBAAgBC,SAAUZ,EAAYjtB,KAItFitB,EAAAE,mBAAqB,SAACntB,GACpC,IAAMutB,EAAiBvtB,EAAMutB,QACoB,MAA7CN,EAAWO,sBAAsBD,YAC7BN,EAAWO,sBAAsBD,KACtCN,EAAWI,gBACbJ,EAAWxnB,gBAAgBrE,cAAc,IAAIpG,EAAA4yB,gBAAgB5yB,EAAA4yB,gBAAgBE,OAAQb,EAAYjtB,MAepFitB,EAAAtT,WAAoB,EAGpBsT,EAAAI,gBAAyB,EAGzBJ,EAAAO,sBAA2C,GAK3CP,EAAAS,0BAAmC,EAEnCT,EAAA/J,eAAwB,EACxB+J,EAAAc,eAAwB,EACxBd,EAAAxnB,gBAA4C,KAO5DwnB,GADC,SAAAA,KAxGYjyB,EAAAiyB,WAAUA,EAxIV,CAAAj3B,EAAAgF,UAAAhF,EAAAgF,QAAO,KAArB,CAAUhF,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgF,EAEbuG,EAAAqsB,EAqBC,SAAAA,EAAYhtB,EAAkBiB,EAAwBmsB,QAAxB,IAAAnsB,IAAAA,EAAA,WAAwB,IAAAmsB,IAAAA,EAAA,MAAtD,IAAArqB,EACCpC,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,K,OAC7BwI,EAAKqqB,cAAgBA,EACrBrqB,EAAK1H,IAAM0H,EAAKqqB,cAAc/xB,IAC9B0H,EAAK4pB,QAAU5pB,EAAKqqB,cAAcT,QAClC5pB,EAAKsqB,OAAStqB,EAAKqqB,cAAcC,OACjCtqB,EAAKuqB,QAAUvqB,EAAKqqB,cAAcE,QAClCvqB,EAAKwqB,SAAWxqB,EAAKqqB,cAAcG,S,EA9BxBnzB,EAAAhF,EAAAgF,UAAAhF,EAAAgF,QAAO,IAEpBuG,EAAqCvL,EAAIgK,MAAMC,MAAVwB,UAAAmsB,EAAArsB,GAyC7BqsB,EAAAvyB,UAAAqG,MAAP,WACC,OAAO,IAAIksB,EAAgBzyB,KAAKiF,UAAWjF,KAAKkF,YAAalF,KAAK6yB,gBAG5DJ,EAAAvyB,UAAAsG,SAAP,WACC,MAAO,4BAA8BxG,KAAKiF,UAAY,WAAajF,KAAKc,IAAM,eAAiBd,KAAKoyB,QAAU,cAAgBpyB,KAAK8yB,OAAS,eAAiB9yB,KAAK+yB,QAAU,gBAAkB/yB,KAAKgzB,UAtC7LP,EAAAE,OAAgB,QAChBF,EAAAC,SAAkB,UAT1BD,EAiEAA,EAjEa5yB,EAAA4yB,gBAAeA,EAF7B,CAAU53B,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgF,EAEbozB,EAqIC,SAAAA,KAvIYpzB,EAAAhF,EAAAgF,UAAAhF,EAAAgF,QAAO,IAUJozB,EAAA3K,WAAf,WACKtoB,KAAK+nB,gBACT/nB,KAAK+nB,eAAgB,EAErB/nB,KAAKsK,gBAAkB,IAAIzP,EAAIgK,MAAMS,kBAGxB2tB,EAAAxU,MAAd,SAAoBhjB,QAAA,IAAAA,IAAAA,EAAA,MACfuE,KAAKwe,YACTxe,KAAKwe,WAAY,EAEjBxe,KAAKsoB,aACLxtB,MAAM,yBAENkF,KAAK9D,OAAST,GAAUS,OAExB8D,KAAK9D,OAAOsJ,iBAAiB,SAAUxF,KAAKkzB,qBAC5ClzB,KAAK9D,OAAOsJ,iBAAiB,oBAAqBxF,KAAKkzB,qBACvDlzB,KAAK9D,OAAOsJ,iBAAiB,SAAUxF,KAAKmzB,qBAC5CnzB,KAAK1E,UAGQ23B,EAAAzc,KAAd,WACMxW,KAAKwe,YACVxe,KAAKwe,WAAY,EAEjBxe,KAAKsoB,aACLxtB,MAAM,wBAENkF,KAAK9D,OAAO2J,oBAAoB,SAAU7F,KAAKkzB,qBAC/ClzB,KAAK9D,OAAO2J,oBAAoB,oBAAqB7F,KAAKkzB,qBAC1DlzB,KAAK9D,OAAO2J,oBAAoB,SAAU7F,KAAKmzB,uBAGlCF,EAAA33B,MAAd,WACC0E,KAAKozB,YAAcpzB,KAAK9D,OAAOm3B,WAC/BrzB,KAAKszB,aAAetzB,KAAK9D,OAAOq3B,YAEhCvzB,KAAKwzB,eAAyCvyB,IAA5BjB,KAAK9D,OAAOu3B,YAA6BzzB,KAAK9D,OAAOu3B,YAAclD,SAASmD,gBAAgBF,UAC9GxzB,KAAK2zB,aAAe3zB,KAAKwzB,UAAYxzB,KAAKszB,cAG7BL,EAAAztB,iBAAd,SAA+BC,EAAkBC,GAChD1F,KAAKsoB,aACLtoB,KAAKsK,gBAAgB9E,iBAAiBC,EAAWC,IAGpCutB,EAAAptB,oBAAd,SAAkCJ,EAAkBC,GACnD1F,KAAKsoB,aACLtoB,KAAKsK,gBAAgBzE,oBAAoBJ,EAAWC,IAGvCutB,EAAAW,qBAAd,SAAmCnlB,GAClC,OAAOA,EAAIzO,KAAKwzB,WAGHP,EAAAY,0BAAd,SAAwCplB,GACvC,OAAOzO,KAAK4zB,qBAAqBnlB,GAAKzO,KAAKszB,cAG7BL,EAAA3iB,OAAf,SAAsBzL,GACrBouB,EAAc33B,QACd23B,EAAc3oB,gBAAgBrE,cAAc,IAAIpG,EAAAi0B,mBAAmBj0B,EAAAi0B,mBAAmBC,OAAQd,EAAepuB,EAAOouB,EAAcO,UAAWP,EAAcU,aAAcV,EAAcG,YAAaH,EAAcK,gBAkCrML,EAAAtU,aAAd,WAAuC,OAAO3e,KAAKwe,WAGrCyU,EAAAe,UAAd,WAAmC,OAAOh0B,KAAK9D,QAGjC+2B,EAAAgB,aAAd,WAAsC,OAAOj0B,KAAKwzB,WAGpCP,EAAAiB,gBAAd,WAAyC,OAAOl0B,KAAK2zB,cAGvCV,EAAAkB,eAAd,WAAwC,OAAOn0B,KAAKozB,aAGtCH,EAAAmB,gBAAd,WAAyC,OAAOp0B,KAAKszB,cAGvCL,EAAAoB,6BAAd,WAAuD,OAAOr0B,KAAKs0B,2BACrDrB,EAAAsB,6BAAd,SAA2CvzB,GAAsBhB,KAAKs0B,0BAA4BtzB,GA9CnFiyB,EAAAC,oBAAsB,SAACruB,IAChChF,EAAAiuB,WAAWsB,gBAAkB6D,EAAcqB,4BAChDx5B,MAAM,2CACNm4B,EAAc3iB,OAAOzL,KAGPouB,EAAAuB,+BAAiC,SAAC3vB,IAC5ChF,EAAAiuB,WAAWsB,gBAAmB6D,EAAcqB,4BAChDx5B,MAAM,sDACNm4B,EAAc3iB,OAAOzL,KAGPouB,EAAAE,oBAAsB,SAACtuB,GACrCouB,EAAc33B,QACd23B,EAAc3oB,gBAAgBrE,cAAc,IAAIpG,EAAAi0B,mBAAmBj0B,EAAAi0B,mBAAmBW,OAAQxB,EAAepuB,EAAOouB,EAAcO,UAAWP,EAAcU,aAAcV,EAAcG,YAAaH,EAAcK,gBAcpML,EAAAzU,WAAoB,EAGpByU,EAAA/2B,OAAgB,KAShB+2B,EAAAG,YAAqB,EAGrBH,EAAAK,aAAsB,EAItBL,EAAAqB,2BAAoC,EAEpCrB,EAAAlL,eAAwB,EACxBkL,EAAA3oB,gBAA4C,KA/H5D2oB,EAsIAA,EAtIapzB,EAAAozB,cAAaA,EAF3B,CAAUp4B,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgF,EAEbuG,EAAA0tB,EAqBC,SAAAA,EAAYruB,EAAkBiB,EAAwBmsB,EAA4BW,EAAsBG,EAAyBP,EAAwBE,QAA3H,IAAA5sB,IAAAA,EAAA,WAAwB,IAAAmsB,IAAAA,EAAA,WAA4B,IAAAW,IAAAA,EAAA,QAAsB,IAAAG,IAAAA,EAAA,QAAyB,IAAAP,IAAAA,EAAA,QAAwB,IAAAE,IAAAA,EAAA,GAAzJ,IAAA9qB,EACCpC,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,K,OAC7BwI,EAAKqqB,cAAgBA,EACrBrqB,EAAKgrB,UAAYA,EACjBhrB,EAAKmrB,aAAeA,EACpBnrB,EAAK4qB,YAAcA,EACnB5qB,EAAK8qB,aAAeA,E,EA7BTzzB,EAAAhF,EAAAgF,UAAAhF,EAAAgF,QAAO,IAEpBuG,EAAwCvL,EAAIgK,MAAMC,MAAVwB,UAAAwtB,EAAA1tB,GAwChC0tB,EAAA5zB,UAAAqG,MAAP,WACC,OAAO,IAAIutB,EAAmB9zB,KAAKiF,UAAWjF,KAAKkF,YAAalF,KAAK6yB,cAAe7yB,KAAKwzB,UAAWxzB,KAAK2zB,aAAc3zB,KAAKozB,YAAapzB,KAAKszB,eAGxIQ,EAAA5zB,UAAAsG,SAAP,WACC,MAAO,+BAAiCxG,KAAKiF,UAAY,iBAAmBjF,KAAKwzB,UAAY,oBAAsBxzB,KAAK2zB,aAAe,mBAAqB3zB,KAAKozB,YAAc,oBAAsBpzB,KAAKszB,cArCpMQ,EAAAW,OAAgB,SAChBX,EAAAC,OAAgB,SATxBD,EA+DAA,EA/Daj0B,EAAAi0B,mBAAkBA,EAFhC,CAAUj5B,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgF,EAEbuG,EAAAsuB,EAcC,SAAAA,EAAYjvB,EAAkBhK,EAAek5B,EAA4BC,GAAzE,IAAApsB,EACCpC,EAAA7D,KAAAvC,KAAMyF,EAAWhK,IAAOuE,K,OAExBwI,EAAKmsB,oBAAsBA,EAC3BnsB,EAAKosB,iBAAmBA,E,EApBb/0B,EAAAhF,EAAAgF,UAAAhF,EAAAgF,QAAO,IAEpBuG,EAA+CvL,EAAIgK,MAAMC,MAAVwB,UAAAouB,EAAAtuB,GAEhCsuB,EAAA9a,OAAgB,mCAF/B8a,EA2CAA,EA3Ca70B,EAAA60B,0BAAyBA,EAFvC,CAAU75B,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgF,EAObuG,EALOhL,EACA63B,EACAa,EACAxuB,EAEPuvB,EAQC,SAAAA,EAAYtZ,QAAA,IAAAA,IAAAA,EAAA,IAAZ,IAAA/S,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OA6HAwI,EAAA2qB,oBAAsB,SAACtuB,GAC9B2D,EAAKssB,uBACLtsB,EAAKusB,SAGEvsB,EAAA0qB,oBAAsB,SAACruB,GAC9B2D,EAAKwsB,0BACLxsB,EAAKssB,uBACLtsB,EAAKusB,SAnILvsB,EAAKgW,WAAY,EAEjBhW,EAAKysB,eAAiB,KACtBzsB,EAAK0sB,iBAAmB,GACxB1sB,EAAK2sB,eAAiB5Z,EACtB/S,EAAK4sB,kBAAoB,KAEzB5sB,EAAKmsB,qBAAuB,EAC5BnsB,EAAKosB,kBAAoB,E,EA1Bd/0B,EAAAhF,EAAAgF,UAAAhF,EAAAgF,QAAO,IAEbzE,EAASP,EAAIM,MAAMC,OACnB63B,EAAgBp4B,EAAIgF,QAAQozB,cAC5Ba,EAAqBj5B,EAAIgF,QAAQi0B,mBACjCxuB,EAAkBzK,EAAIgK,MAAMS,gBAEOgB,UAAAuuB,EAA1CzuB,EAA0Cd,GAgClCuvB,EAAA30B,UAAAue,MAAP,WACKze,KAAKwe,YACTxe,KAAKwe,WAAY,EAEjByU,EAAcztB,iBAAiBsuB,EAAmBW,OAAQz0B,KAAKmzB,qBAC/DF,EAAcztB,iBAAiBsuB,EAAmBC,OAAQ/zB,KAAKkzB,qBAC/DD,EAAcxU,QAEdze,KAAKg1B,0BACLh1B,KAAK80B,uBACL90B,KAAK+0B,UAGCF,EAAA30B,UAAAsW,KAAP,WACMxW,KAAKwe,YACVxe,KAAKwe,WAAY,EAEjByU,EAAcptB,oBAAoBiuB,EAAmBW,OAAQz0B,KAAKmzB,qBAClEF,EAAcptB,oBAAoBiuB,EAAmBC,OAAQ/zB,KAAKkzB,qBAClED,EAAczc,SAGRqe,EAAA30B,UAAAye,aAAP,WACC,OAAO3e,KAAKwe,WAGNqW,EAAA30B,UAAAm1B,gBAAP,WACC,OAAOr1B,KAAK20B,qBAGNE,EAAA30B,UAAAo1B,aAAP,WACC,OAAOt1B,KAAK40B,kBAGNC,EAAA30B,UAAAq1B,oBAAP,WACC,OAAOv1B,KAAKk1B,iBAAiB1yB,UAGvBqyB,EAAA30B,UAAAs1B,oBAAP,SAA2BC,GAC1Bz1B,KAAKk1B,iBAAmBO,EAAUjzB,SAClCxC,KAAKk1B,iBAAiBQ,KAAK,SAACn3B,EAAGo3B,GAAe,OAAOp3B,EAAIo3B,IACrD31B,KAAKwe,WACRxe,KAAK+0B,SAIAF,EAAA30B,UAAA01B,aAAP,WACC,OAAO51B,KAAKm1B,gBAGNN,EAAA30B,UAAA21B,aAAP,SAAoBtkB,GACnBvR,KAAKm1B,eAAiB5jB,EACtBvR,KAAKg1B,0BACDh1B,KAAKwe,WACRxe,KAAK+0B,SAICF,EAAA30B,UAAA60B,MAAR,WACC,GAA2B,MAAvB/0B,KAAKi1B,eAAT,CASA,IAJA,IAiBEa,EAjBEC,GAAuB,EACvBC,GAAkC,EAClCC,EAAyBlZ,OAAOC,UAC9BkZ,EAAuBl2B,KAAKk1B,iBAAiBh6B,OAC1C0F,EAAI,EAAGA,EAAIs1B,IAAwBt1B,EAAG,CAC9C,IAAMu1B,EAA0Bn2B,KAAKk1B,iBAAiBt0B,GAAKZ,KAAKi1B,eAC1DmB,EAAW94B,KAAKmX,IAAI0hB,EAA0Bn2B,KAAKo1B,mBACrDgB,EAAWH,IACdA,EAAkBG,EAClBL,EAAsBn1B,EACtBo1B,EAAiCG,GAIR,GAAvBJ,IACCD,GAAgB,EAEnBA,EADGE,EAAiCh2B,KAAKo1B,kBAC1BW,EAEAA,EAAsB,EAGlC/1B,KAAK20B,qBAAuBmB,IAC/B91B,KAAK40B,iBAAmB50B,KAAK20B,oBAC7B30B,KAAK20B,oBAAsBmB,EAC3B91B,KAAKiG,cAAc,IAAIpG,EAAA60B,0BAA0B70B,EAAA60B,0BAA0B9a,OAAQ5Z,KAAMA,KAAK20B,oBAAqB30B,KAAK40B,0BA7BzHx5B,EAAO6G,KAAK,gDAkCN4yB,EAAA30B,UAAA80B,wBAAR,WACCh1B,KAAKo1B,kBAAoBnC,EAAcmB,kBAAoBp0B,KAAKm1B,gBAGzDN,EAAA30B,UAAA40B,qBAAR,WACC90B,KAAKi1B,eAAiBhC,EAAcgB,gBAnItCY,EAoKAA,EApKah1B,EAAAg1B,qBAAoBA,EAPlC,CAAUh6B,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgF,EAMbuG,EAJO6sB,EACAa,EACAxuB,EAEP+wB,EAQC,SAAAA,IAAA,IAAA7tB,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAmFAwI,EAAA0qB,oBAAsB,SAACruB,GAC9B2D,EAAKusB,SAlFLvsB,EAAK8tB,YAAc,GACnB9tB,EAAK+tB,gBAAkB,EAEvB/tB,EAAKguB,cAAgB,EACrBhuB,EAAKiuB,WAAa,E,EArBP52B,EAAAhF,EAAAgF,UAAAhF,EAAAgF,QAAO,IAEbozB,EAAgBp4B,EAAIgF,QAAQozB,cAC5Ba,EAAqBj5B,EAAIgF,QAAQi0B,mBACjCxuB,EAAkBzK,EAAIgK,MAAMS,gBAEKgB,UAAA+vB,EAAxCjwB,EAAwCd,GA4BhC+wB,EAAAn2B,UAAAue,MAAP,WACKze,KAAKwe,YACTxe,KAAKwe,WAAY,EAEjByU,EAAcztB,iBAAiBsuB,EAAmBC,OAAQ/zB,KAAKkzB,qBAC/DD,EAAcxU,QAEdze,KAAK+0B,UAGCsB,EAAAn2B,UAAAsW,KAAP,WACMxW,KAAKwe,YACVxe,KAAKwe,WAAY,EAEjByU,EAAcptB,oBAAoBiuB,EAAmBC,OAAQ/zB,KAAKkzB,qBAClED,EAAczc,SAGR6f,EAAAn2B,UAAAw2B,eAAP,SAAsBJ,GACrBt2B,KAAKs2B,YAAcA,EAAY9zB,SAC/BxC,KAAKu2B,gBAAkBv2B,KAAKs2B,YAAYp7B,OACxC8E,KAAKs2B,YAAYZ,KAAK,SAACn3B,EAAGo3B,GAAe,OAAOp3B,EAAIo3B,IAChD31B,KAAKwe,WACRxe,KAAK+0B,SAIAsB,EAAAn2B,UAAAye,aAAP,WACC,OAAO3e,KAAKwe,WAGN6X,EAAAn2B,UAAAm1B,gBAAP,WACC,OAAOr1B,KAAKw2B,cAGNH,EAAAn2B,UAAAo1B,aAAP,WACC,OAAOt1B,KAAKy2B,WAGNJ,EAAAn2B,UAAAy2B,eAAP,WACC,OAAO32B,KAAKs2B,YAAY9zB,UAGlB6zB,EAAAn2B,UAAA02B,mBAAP,WACC,OAAO52B,KAAKu2B,iBAGLF,EAAAn2B,UAAA60B,MAAR,WAGC,IAFA,IAAM3B,EAAcH,EAAckB,iBAE7Bh0B,EAAQ,EAAGA,EAAQH,KAAKu2B,mBACxBnD,GAAepzB,KAAKs2B,YAAYn2B,MADWA,GAM5CH,KAAKw2B,cAAgBr2B,IACzBH,KAAKy2B,UAAYz2B,KAAKw2B,aACtBx2B,KAAKw2B,aAAer2B,EACpBrF,MAAM,sCAAuCkF,KAAKy2B,UAAW,KAAMz2B,KAAKw2B,aAAc,mBAAoBpD,GAE1GpzB,KAAKiG,cAAc,IAAIpG,EAAAg3B,wBAAwBh3B,EAAAg3B,wBAAwBjd,OAAQ5Z,KAAMA,KAAKw2B,aAAcx2B,KAAKy2B,cAzF/GJ,EAiHAA,EAjHax2B,EAAAw2B,mBAAkBA,EANhC,CAAUx7B,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAAgF,EAEbuG,EAAAywB,EAcC,SAAAA,EAAYpxB,EAAkBhK,EAAe+6B,EAAqBC,GAAlE,IAAAjuB,EACCpC,EAAA7D,KAAAvC,KAAMyF,EAAWhK,IAAOuE,K,OAExBwI,EAAKguB,aAAeA,EACpBhuB,EAAKiuB,UAAYA,E,EApBN52B,EAAAhF,EAAAgF,UAAAhF,EAAAgF,QAAO,IAEpBuG,EAA6CvL,EAAIgK,MAAMC,MAAVwB,UAAAuwB,EAAAzwB,GAE9BywB,EAAAjd,OAAgB,iCAF/Bid,EA2CAA,EA3Cah3B,EAAAg3B,wBAAuBA,EAFrC,CAAUh8B,IAAAA,KAAG,ICAb,SAAUD,GAET,IAGAwL,EAHOhL,EAASP,IAAIM,MAAMC,OACnBkK,EAAkBzK,IAAIgK,MAAMS,gBAEnCwxB,GAA2BxwB,UAAAwwB,EAA3B1wB,EAA2Bd,GAkCnBwxB,EAAA52B,UAAA62B,SAAP,SAAgBC,GACf,GAAIA,EAAO,CACV,IAAMC,EAAmBD,EAAMpP,KAC/B,IAAI5nB,KAAKk3B,eAAeD,GAMvB,QAHEj3B,KAAKm3B,aACPH,EAAM1vB,OAAStH,MACVk3B,eAAeD,GAAaD,EAJjC57B,EAAO6G,KAAK,WAAcjC,KAAK4nB,KAAO,+CAAmDqP,EAAY,gCAQtG77B,EAAO6G,KAAK,WAAcjC,KAAK4nB,KAAO,kDAEvC,OAAO,MAGDkP,EAAA52B,UAAA2wB,YAAP,SAAmBmG,GAClB,GAAIA,EAAO,CACV,IAAMC,EAAmBD,EAAMpP,KAC/B,GAAI5nB,KAAKk3B,eAAeD,GAIvB,QAHEj3B,KAAKm3B,YACPH,EAAM1vB,OAAS,YACRtH,KAAKk3B,eAAeD,GACpBD,EAEP57B,EAAO6G,KAAK,WAAcjC,KAAK4nB,KAAO,kDAAsDqP,EAAY,4BAGzG77B,EAAO6G,KAAK,WAAcjC,KAAK4nB,KAAO,qDAEvC,OAAO,MAGDkP,EAAA52B,UAAAk3B,YAAP,SAAmBC,GAIlB,IAHA,IAEI5gB,EAFE6gB,EAAwB,GACxBn0B,EAAWk0B,EAASn8B,OAEjB0F,EAAW,EAAGA,EAAIuC,IAAKvC,GAC/B6V,EAAIzW,KAAK+2B,SAASM,EAASz2B,MAE1B02B,EAAc1xB,KAAK6Q,GAGrB,OAAO6gB,GAGDR,EAAA52B,UAAAq3B,eAAP,SAAsBF,GAIrB,IAHA,IAEI5gB,EAFE+gB,EAA0B,GAC1Br0B,EAAWk0B,EAASn8B,OAEjB0F,EAAW,EAAGA,EAAIuC,IAAKvC,GAC/B6V,EAAIzW,KAAK6wB,YAAYwG,EAASz2B,MAE7B42B,EAAgB5xB,KAAK6Q,GAGvB,OAAO+gB,GAGDV,EAAA52B,UAAAu3B,kBAAP,WACC,IACIT,EADEK,EAAmB,GAEzB,IAAK,IAAIK,KAAQ13B,KAAKk3B,gBACrBF,EAAQh3B,KAAKk3B,eAAeQ,IACtBpwB,OAAS,KACf+vB,EAASzxB,KAAKoxB,GAIf,OAFAh3B,KAAKk3B,eAAiB,GACtBl3B,KAAKm3B,YAAc,EACZE,GAGDP,EAAA52B,UAAAy3B,SAAP,SAAgBX,GACf,QAAIA,GAC0E,MAAtEh3B,KAAKk3B,eAA+B,iBAATF,EAAoBA,EAAQA,EAAMpP,OAM/DkP,EAAA52B,UAAA4pB,QAAP,WACC,OAAO9pB,KAAK4nB,MAGNkP,EAAA52B,UAAAiI,SAAP,WACC,OAAOnI,KAAK6G,OAGNiwB,EAAA52B,UAAA03B,aAAP,WACC,OAAO53B,KAAK63B,WAGNf,EAAA52B,UAAAkI,UAAP,WACC,OAAOpI,KAAKsH,QAGNwvB,EAAA52B,UAAA43B,eAAP,SAAsBlQ,GACrB,OAAO5nB,KAAKk3B,eAAetP,IAGrBkP,EAAA52B,UAAA63B,eAAP,WACC,OAAO/3B,KAAKm3B,aAGNL,EAAA52B,UAAA83B,WAAP,WACC,OAAIh4B,KAAKsH,OACDtH,KAAKsH,OAAO0wB,cAEnB58B,EAAO6G,KAAK,WAAcjC,KAAK4nB,KAAO,0EAEhC,OAGDkP,EAAA52B,UAAA+3B,QAAP,WACC,IAAMC,EAAuBl4B,KAAKg4B,aAClC,GAAIE,EAAS,CAGZ,IAFA,IAAMC,EAAiB,CAACn4B,KAAK4nB,MACzBwQ,EAAcp4B,KACXo4B,EAAQA,EAAM9wB,QACpB6wB,EAAMhhB,QAAQihB,EAAMxQ,MAErB,OAAOsQ,EAAQG,oBAAoBF,GAIpC,OAFC/8B,EAAO6G,KAAK,WAAcjC,KAAK4nB,KAAO,uEAEhC,MAGDkP,EAAA52B,UAAAo4B,UAAP,SAAiBC,GAChBv4B,KAAKg4B,aAAaQ,KAAKD,IAOjBzB,EAAA52B,UAAAu4B,MAAP,SAAaC,GAAb,IAAAlwB,EAAAxI,KACCA,KAAK04B,aAAeA,EACpB14B,KAAK6G,MAAQjM,EAAA+9B,WAAWC,QACxB54B,KAAK64B,WAAY,EACjB,IAAMjxB,EAAqB,IAAIjN,IAAI4S,OAClC,WACC/E,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAWC,KAAMvwB,IACnD,IAAMiO,EAAuC,mBAAhBjO,EAAW,OAAkBA,EAAKmY,SAAWnY,EAAKwwB,aAC3EviB,GAAG7O,EAAQkB,cAAc2N,IAE9B,WACCjO,EAAKqvB,UAAYrvB,EAAK3B,MACtB2B,EAAK3B,MAAQjM,EAAA+9B,WAAWM,OACxBzwB,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAWI,cAAe1wB,MAG9DZ,EAAQhB,WAGFkwB,EAAA52B,UAAAi5B,QAAP,SAAeT,GAAf,IAAAlwB,EAAAxI,KACCA,KAAK04B,aAAeA,EACpB14B,KAAK6G,MAAQjM,EAAA+9B,WAAWS,UACxBp5B,KAAK64B,WAAY,EACjB,IAAMjxB,EAAqB,IAAIjN,IAAI4S,OAClC,WACC/E,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAWO,OAAQ7wB,IACrD,IAAMiO,EAAyC,mBAAlBjO,EAAa,SAAkBA,EAAK8wB,WAAa9wB,EAAK+wB,eAC/E9iB,GAAG7O,EAAQkB,cAAc2N,IAE9B,WACCjO,EAAKqvB,UAAYrvB,EAAK3B,MACtB2B,EAAK3B,MAAQjM,EAAA+9B,WAAWM,OACxBzwB,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAWU,gBAAiBhxB,MAGhEZ,EAAQhB,WAGFkwB,EAAA52B,UAAAu5B,QAAP,SAAef,GAAf,IAAAlwB,EAAAxI,KACCA,KAAK04B,aAAeA,EACpB14B,KAAK6G,MAAQjM,EAAA+9B,WAAWe,SACxB15B,KAAK64B,WAAY,EACjB,IAAMjxB,EAAqB,IAAIjN,IAAI4S,OAClC,WACC/E,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAWa,OAAQnxB,IACrD,IAAMiO,EAAyC,mBAAlBjO,EAAa,SAAkBA,EAAKoxB,WAAapxB,EAAKqxB,eAC/EpjB,GAAG7O,EAAQkB,cAAc2N,IAE9B,WACCjO,EAAKqvB,UAAYrvB,EAAK3B,MACtB2B,EAAK3B,MAAQjM,EAAA+9B,WAAWM,OACxBzwB,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAWgB,gBAAiBtxB,MAGhEZ,EAAQhB,WAGFkwB,EAAA52B,UAAA65B,OAAP,SAAcrB,GAAd,IAAAlwB,EAAAxI,KACCA,KAAK04B,aAAeA,EACpB14B,KAAK6G,MAAQjM,EAAA+9B,WAAWqB,QACxBh6B,KAAK64B,WAAY,EACjB,IAAMjxB,EAAqB,IAAIjN,IAAI4S,OAClC,WACC/E,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAWmB,MAAOzxB,IACpD,IAAMiO,EAAwC,mBAAjBjO,EAAY,QAAkBA,EAAK0xB,UAAY1xB,EAAK2xB,cAC7E1jB,GAAG7O,EAAQkB,cAAc2N,IAE9B,WACCjO,EAAKqvB,UAAYrvB,EAAK3B,MACtB2B,EAAK3B,MAAQjM,EAAA+9B,WAAWM,OACxBzwB,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAWsB,eAAgB5xB,MAG/DZ,EAAQhB,WAGFkwB,EAAA52B,UAAAm6B,QAAP,SAAe3B,GAAf,IAAAlwB,EAAAxI,KACCA,KAAK04B,aAAeA,EACpB14B,KAAK6G,MAAQjM,EAAA+9B,WAAW2B,UACxBt6B,KAAK64B,WAAY,EACjB,IAAMjxB,EAAqB,IAAIjN,IAAI4S,OAClC,WACC/E,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAWyB,OAAQ/xB,IACrD,IAAMiO,EAAyC,mBAAlBjO,EAAa,SAAkBA,EAAKgyB,WAAahyB,EAAKiyB,eAC/EhkB,GAAG7O,EAAQkB,cAAc2N,IAE9B,WACCjO,EAAKqvB,UAAYrvB,EAAK3B,MACtB2B,EAAK3B,MAAQjM,EAAA+9B,WAAWM,OACxBzwB,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAW4B,gBAAiBlyB,MAGhEZ,EAAQhB,WAGFkwB,EAAA52B,UAAAy6B,SAAP,SAAgBjC,GAAhB,IAAAlwB,EAAAxI,KACCA,KAAK04B,aAAeA,EACpB14B,KAAK6G,MAAQjM,EAAA+9B,WAAWiC,WACxB56B,KAAK64B,WAAY,EACjB,IAAMjxB,EAAqB,IAAIjN,IAAI4S,OAClC,WACC/E,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAW+B,QAASryB,IACtD,IAAMiO,EAA0C,mBAAnBjO,EAAc,UAAkBA,EAAKsyB,YAActyB,EAAKuyB,gBACjFtkB,GAAG7O,EAAQkB,cAAc2N,IAE9B,WACCjO,EAAKqvB,UAAYrvB,EAAK3B,MACtB2B,EAAK3B,MAAQjM,EAAA+9B,WAAWM,OACxBzwB,EAAKvC,cAAc,IAAIrL,EAAAk+B,WAAWl+B,EAAAk+B,WAAWkC,iBAAkBxyB,MAGjEZ,EAAQhB,WAOCkwB,EAAA52B,UAAA84B,WAAV,WACC,OAAO,IAAIr+B,IAAIgM,SAGNmwB,EAAA52B,UAAAq5B,aAAV,WACC,OAAO,IAAI5+B,IAAIgM,SAGNmwB,EAAA52B,UAAA25B,aAAV,WACC,OAAO,IAAIl/B,IAAIgM,SAGNmwB,EAAA52B,UAAAi6B,YAAV,WACC,OAAO,IAAIx/B,IAAIgM,SAGNmwB,EAAA52B,UAAAu6B,aAAV,WACC,OAAO,IAAI9/B,IAAIgM,SAGNmwB,EAAA52B,UAAA66B,cAAV,WACC,OAAO,IAAIpgC,IAAIgM,SA6BjBmwB,GA3UC,SAAAA,EAAYlP,GAAZ,IAAApf,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OACPwI,EAAKof,KAAOA,EACZpf,EAAK3B,MAAQjM,EAAA+9B,WAAWM,OACxBzwB,EAAKlB,OAAS,KACdkB,EAAK0uB,eAAiB,GACtB1uB,EAAK2uB,YAAc,EACnB3uB,EAAKqwB,WAAY,EACjBrwB,EAAKmY,OAAS,KACdnY,EAAK8wB,SAAW,KAChB9wB,EAAKoxB,SAAW,KAChBpxB,EAAK0xB,QAAU,KACf1xB,EAAKgyB,SAAW,KAChBhyB,EAAKsyB,UAAY,K,EArBNlgC,EAAAk8B,MAAKA,EALnB,CAAUl8B,IAAAA,KAAG,ICAb,SAAUA,GAET,IAEAwL,EAFOtB,EAAQjK,IAAIgK,MAAMC,MAEzBg0B,GAAgCxyB,UAAAwyB,EAAhC1yB,EAAgCtB,GA8CxBg0B,EAAA54B,UAAAqG,MAAP,WACC,OAAO,IAAIuyB,EAAW94B,KAAKiF,UAAWjF,KAAKkF,cAGrC4zB,EAAA54B,UAAAsG,SAAP,WACC,MAAO,uBAAyBxG,KAAKiF,WA3CxB6zB,EAAAC,KAAc,OACdD,EAAAO,OAAgB,SAChBP,EAAAa,OAAgB,SAChBb,EAAAmB,MAAe,QACfnB,EAAAyB,OAAgB,SAChBzB,EAAA+B,QAAiB,UAEjB/B,EAAAI,cAAuB,eACvBJ,EAAAU,gBAAyB,iBACzBV,EAAAgB,gBAAyB,iBACzBhB,EAAAsB,eAAwB,gBACxBtB,EAAA4B,gBAAyB,iBACzB5B,EAAAkC,iBAA0B,kBA2CzClC,GA/BC,SAAAA,EAAYrzB,EAAkBiB,G,YAAA,IAAAA,IAAAA,EAAA,MAC7BN,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,KAjClBpF,EAAAk+B,WAAUA,EAJxB,CAAUl+B,IAAAA,KAAG,ICAb,SAAUA,GAET,IAIAwL,EAJOhL,EAASP,IAAIM,MAAMC,OACnByG,EAAchH,IAAIM,MAAM0G,YACxByD,EAAkBzK,IAAIgK,MAAMS,gBAEnC21B,GAAkC30B,UAAA20B,EAAlC70B,EAAkCd,GAgC1B21B,EAAA/6B,UAAAue,MAAP,WACCrjB,EAAO2G,QAAQ,mCACf/B,KAAKw4B,KAAK,MAGJyC,EAAA/6B,UAAAs4B,KAAP,SAAYD,GAIX,IAeO2C,EARNC,EAVD5C,EAAOv4B,KAAKo7B,YAAY7C,GAGpBv4B,KAAK04B,cAAgB14B,KAAK04B,aAAa2C,sBAAwB9C,IAK/D4C,EAA+B,GAST,GAPzBA,GAD0B,GAAvBn7B,KAAKs7B,cACOt7B,KAAKu7B,gBAAgBv7B,KAAKw7B,UAAUx7B,KAAKs7B,eAAerD,UAAWM,GAGnE,CAAC,IAAI39B,EAAA6gC,KAAKC,SAAS,IAAK,KAIvBxgC,UACVggC,EAAoD,MAArBl7B,KAAK04B,eAQzCt9B,EAAO2G,QAAQ,0BACf3G,EAAO2G,QAAQ,oBAAsB/B,KAAKs7B,eAC1Ct7B,KAAKw7B,UAAYx7B,KAAKw7B,UAAUl5B,MAAM,EAAGtC,KAAKs7B,cAAgB,GAAG94B,OAAO24B,EAAa74B,MAAM,IAC3FtC,KAAK27B,aAAa37B,KAAKw7B,WACvBx7B,KAAK47B,cAAc57B,KAAKw7B,aATxBx7B,KAAKs7B,cAAgB,EACrBt7B,KAAK67B,WAAa,IAChB77B,KAAK87B,WACP97B,KAAKw7B,UAAYL,GASlBn7B,KAAK04B,aAAe,IAAI99B,EAAAmhC,kBAAkB/7B,KAAK87B,WAAY97B,KAAKw7B,UAAUx7B,KAAKs7B,eAAerD,UAAWj4B,KAAKw7B,UAAUx7B,KAAKw7B,UAAUtgC,OAAS,GAAG+8B,WAE9IiD,GACJl7B,KAAKiG,cAAc,IAAIrL,EAAAohC,kBAAkBphC,EAAAohC,kBAAkBC,eAAgBj8B,OAG5EA,KAAKk8B,gBAIAjB,EAAA/6B,UAAAk7B,YAAP,SAAmB7C,GAEH,KAAXA,EAAK,KAEPA,EADGv4B,KAAKm8B,aACDn8B,KAAKm8B,aAAalE,UAAY,IAAMM,EAEpC,IAAMA,GAOf,IAFA,IAAMJ,EAAiBI,EAAK53B,MAAM,KAC5By7B,EAAsB,GACnBx7B,EAAW,EAAGA,EAAIu3B,EAAMj9B,SAAU0F,EAAG,CAC7C,IAAMy7B,EAAclE,EAAMv3B,GACd,IAARy7B,GACQ,KAARA,IACQ,MAARA,EAIJD,EAAWx2B,KAAKy2B,GAHfD,EAAWE,OAMb,MAAO,IAAMF,EAAWv5B,KAAK,MAGvBo4B,EAAA/6B,UAAAq8B,WAAP,SAAkBhE,EAAaiE,QAAA,IAAAA,IAAAA,GAAA,GAK9B,IAJA,IAAIC,GAAkB,EAChBtE,EAAiBn4B,KAAK08B,oBAAoBnE,GAC1Cp1B,EAAWg1B,EAAMj9B,OACnBk9B,EAAcp4B,KAAK28B,KACd/7B,EAAW,EAAGA,EAAIuC,IAAKvC,EAAG,CAClC,IAAMg8B,EAAczE,EAAMv3B,GACtBA,GAAKuC,EAAI,EACRi1B,EAAMT,SAASiF,GAClBxhC,EAAO6G,KAAK,kBAAqBjC,KAAK4nB,KAAO,2CAA+C2Q,EAAO,wBAEnGH,EAAQA,EAAMrB,SAAS,IAAIn8B,EAAAk8B,MAAM8F,IACjCH,GAAU,GAIVrE,EADGA,EAAMT,SAASiF,GACVxE,EAAMN,eAAe8E,GAErBxE,EAAMrB,SAAS,IAAIn8B,EAAAk8B,MAAM8F,IAIpC,OAAOH,EAAUrE,EAAQ,MAGnB6C,EAAA/6B,UAAA4pB,QAAP,WACC,OAAO9pB,KAAK4nB,MAGNqT,EAAA/6B,UAAA28B,QAAP,WACC,OAAO78B,KAAK28B,MAGN1B,EAAA/6B,UAAA48B,eAAP,SAAsBvE,GAIrB,IAHA,IAAMJ,EAAiBn4B,KAAK08B,oBAAoBnE,GAC1Cp1B,EAAWg1B,EAAMj9B,OACnBk9B,EAAcp4B,KAAK28B,KACd/7B,EAAW,EAAGA,EAAIuC,IAAKvC,EAC/Bw3B,EAAQA,EAAMN,eAAeK,EAAMv3B,IAEpC,OAAOw3B,GAGD6C,EAAA/6B,UAAAw8B,oBAAP,SAA2BnE,GAC1B,MAAe,KAARA,EAAc,CAAC,IAAMv4B,KAAKo7B,YAAY7C,GAAM53B,MAAM,MAGnDs6B,EAAA/6B,UAAA68B,qBAAP,SAA4B5E,GAC3B,OAAOA,EAAMj9B,OAAS,GAGhB+/B,EAAA/6B,UAAAm4B,oBAAP,SAA2BF,GAC1B,OAAuB,GAAhBA,EAAMj9B,OAAc,IAAsB,GAAhBi9B,EAAMj9B,OAAe,IAAMi9B,EAAM,GAAMA,EAAMt1B,KAAK,MAG5Eo4B,EAAA/6B,UAAAq7B,gBAAR,SAAwByB,EAAsBC,GAC7C,GAAID,GAAiBC,EAEpB,OADA7hC,EAAO6G,KAAK,uEAA0E+6B,EAAgB,KAC/F,GAGR5hC,EAAO2G,QAAQ,0BAEf,IAAMy5B,EAA4B,CACjC,IAAI5gC,EAAA6gC,KAAKC,SAASsB,EAAeh9B,KAAK+8B,qBAAqB/8B,KAAK08B,oBAAoBM,MAG/EE,EAA0Bl9B,KAAK08B,oBAAoBM,GACnDG,EAA4Bn9B,KAAK08B,oBAAoBO,GAE3D7hC,EAAO2G,QAAQ,YACf3G,EAAO2G,QAAQ,yBAA4Bi7B,EAAgB,KAC3D5hC,EAAO2G,QAAQ,yBAA4Bk7B,EAAkB,KAE7D7hC,EAAO2G,QAAQ,aACf3G,EAAO2G,QAAQ,mBAAqBm7B,EAAehiC,OAAS,WAAcgiC,EAAiB,KAC3F9hC,EAAO2G,QAAQ,uBAAyBo7B,EAAiBjiC,OAAS,OAAUiiC,EAAmB,KAG/F,IAEIC,EAFAC,EAAsB,EACtBC,EAAwB,GAE5B,GAAuB,KAAnBL,EACHI,GAAgB,EAChBC,EAAe,GACfF,EAAc,QACR,CACN,OAAa,CACZ,GAAIF,EAAeG,IAAiBF,EAAiBE,GAG9C,GACJA,EACF,MAJAC,EAAa13B,KAAKs3B,EAAeG,MAC/BA,EAMJD,EAAcp9B,KAAKq4B,oBAAoBiF,GAGxCliC,EAAO2G,QAAQ,eACf3G,EAAO2G,QAAQ,sBAAwBq7B,GACvChiC,EAAO2G,QAAQ,sBAAwBs7B,GACvCjiC,EAAO2G,QAAQ,iBAAmBu7B,EAAapiC,OAAS,QAAWoiC,EAAe,KAMjF,IAFA,IAAMnF,EAAiB+E,EAAe16B,SAClC+6B,EAAkBP,EACbp8B,EAAWs8B,EAAehiC,OAAS,EAAOmiC,EAAe,EAAnBz8B,IAAwBA,EACtEu3B,EAAMmE,OACA/D,EAAcv4B,KAAKq4B,oBAAoBF,KACjCoF,IACLj6B,EAAetD,KAAK+8B,qBAAqB5E,GAC/CqD,EAAU51B,KAAK,IAAIhL,EAAA6gC,KAAKC,SAASnD,EAAMj1B,IACvCi6B,EAAWhF,GAKd,GAAI6E,GAAeH,GAAkC,EAAfI,EAETA,GAAgB7B,EAAUA,EAAUtgC,OAAS,GAAGsiC,WAAa5iC,EAAA6gC,KAAKgC,UAAUC,QAAU9iC,EAAA6gC,KAAKgC,UAAUE,OACjInC,EAAU51B,KAAK,IAAIhL,EAAA6gC,KAAKC,SAAS0B,EAAaC,SAQ9C,IAJA,IAAMlF,EAAiBmF,EAAa96B,SAC9BwX,EAAqBwhB,EAAUA,EAAUtgC,OAAS,GACpDqiC,EAAkBvjB,EAAKie,UAElBr3B,GADcoZ,EAAKwjB,WACRH,EAAe,GAAGz8B,EAAIu8B,EAAiBjiC,SAAU0F,EAAG,CACvE,IAEM23B,EAECj1B,EAJDs6B,EAAcT,EAAiBv8B,GACrCu3B,EAAMvyB,KAAKg4B,IACLrF,EAAcv4B,KAAKq4B,oBAAoBF,KACjCoF,IACLj6B,EAAetD,KAAK+8B,qBAAqB5E,GAC/CqD,EAAU51B,KAAK,IAAIhL,EAAA6gC,KAAKC,SAASnD,EAAMj1B,IAEvCi6B,EAAWhF,GAYd,OANAv4B,KAAK27B,aAAaH,GAEdpgC,EAAOkI,OAASzB,EAAY6B,SAC/B1D,KAAK47B,cAAcJ,GAGbA,GAGAP,EAAA/6B,UAAAy7B,aAAR,SAAqBH,GAIpB,IAHA,IAAMr4B,EAAWq4B,EAAUtgC,OACvB8e,EAAqB,KAEhBpZ,EAAW,EAAGA,EAAIuC,IAAKvC,EAAG,CAElC,IACOkb,EAFPnN,EAAQ6sB,EAAU56B,GACV,EAAJA,IACGkb,EAAWnN,EAAM6uB,WAAaxjB,EAAKwjB,WACzC7uB,EAAMkvB,SAAa,EAAJ/hB,EAAQlhB,EAAA6gC,KAAKgC,UAAUK,QAAUhiB,EAAI,EAAIlhB,EAAA6gC,KAAKgC,UAAUE,OAAS/iC,EAAA6gC,KAAKgC,UAAUC,SAC/F1jB,EAAK+jB,OAAOpvB,EAAMnC,YAEnBwN,EAAOrL,IAIDssB,EAAA/6B,UAAA07B,cAAR,SAAsBJ,GACrBpgC,EAAO2G,QAAQ,iBAEf,IADA,IAAMoB,EAAWq4B,EAAUtgC,OAClB0F,EAAW,EAAGA,EAAIuC,IAAKvC,EAC/BxF,EAAO2G,QAAQ,YAAcnB,EAAI,KAAO46B,EAAU56B,IAEnDxF,EAAO2G,QAAQ,KAORk5B,EAAA/6B,UAAAg8B,WAAR,WAKC,GAJAphC,MAAM,eAAiBF,EAAIojC,oBAAoBh+B,KAAK63B,YAIhD73B,KAAKs7B,eAAiBt7B,KAAKw7B,UAAUtgC,OAAQ,CAChDE,EAAO2G,QAAQ,uCACf,IAAMk8B,EAAuBj+B,KAAK04B,aAAawF,gBAO/C,OANAl+B,KAAKs7B,cAAgBt7B,KAAKw7B,UAAUtgC,OAAS,EAC7C8E,KAAKiG,cAAc,IAAIrL,EAAAohC,kBAAkBphC,EAAAohC,kBAAkBmC,kBAAmBn+B,YAC1Ei+B,GAAiBj+B,KAAK04B,aAAawF,kBACtCl+B,KAAK63B,UAAYj9B,EAAA+9B,WAAWM,OAC5Bj5B,KAAK04B,aAAe,OAKtB,GAAI14B,KAAKm8B,aAAc,CACtB,IAAMiC,EAAgCp+B,KAAKw7B,UAAUx7B,KAAKs7B,eAI1D,GAHAt7B,KAAKm8B,aAAen8B,KAAK88B,eAAesB,EAAgBnG,WAG5B,EAAxBj4B,KAAKw7B,UAAUtgC,QAAoC,GAAtB8E,KAAKs7B,cAIrC,OAHAxgC,MAAM,mBAGFkF,KAAK63B,WAAaj9B,EAAA+9B,WAAWqB,SAAWh6B,KAAKm8B,aAAavE,gBAAkBh9B,EAAA+9B,WAAWe,UAC1Ft+B,EAAO2G,QAAQ/B,KAAK67B,WAAa,eAAkB77B,KAAKm8B,aAAalE,UAAY,KACjFj4B,KAAKm8B,aAAa32B,iBAAiB5K,EAAAk+B,WAAWsB,eAAgBp6B,KAAKq+B,gCACnEr+B,KAAKm8B,aAAapC,OAAO/5B,KAAK04B,eAK3B14B,KAAK63B,WAAaj9B,EAAA+9B,WAAWS,WAAcgF,EAAgB9xB,SAAW1R,EAAA6gC,KAAKgC,UAAUC,SAAWU,EAAgB9xB,SAAW1R,EAAA6gC,KAAKgC,UAAUE,UAS3I39B,KAAKs7B,mBACPt7B,KAAKk8B,iBATHl8B,KAAKs7B,cACPlgC,EAAO2G,QAAQ/B,KAAK67B,WAAa,eAAkB77B,KAAKm8B,aAAalE,UAAY,KACjFj4B,KAAKm8B,aAAa32B,iBAAiB5K,EAAAk+B,WAAWU,gBAAiBx5B,KAAKs+B,iCACpEt+B,KAAKm8B,aAAahD,QAAQn5B,KAAK04B,eAYjC,GAAyB,EAArB14B,KAAKs7B,eAAqBt7B,KAAKs7B,cAAgBt7B,KAAKw7B,UAAUtgC,OAAS,EAAG,CAI7E,GAHAJ,MAAM,iBAGFkF,KAAK63B,WAAaj9B,EAAA+9B,WAAWC,UAAYwF,EAAgB5xB,WAAa5R,EAAA6gC,KAAKgC,UAAUC,SAAWU,EAAgB5xB,WAAa5R,EAAA6gC,KAAKgC,UAAUK,SAI/I,OAHA1iC,EAAO2G,QAAQ/B,KAAK67B,WAAa,eAAkB77B,KAAKm8B,aAAalE,UAAY,KACjFj4B,KAAKm8B,aAAa32B,iBAAiB5K,EAAAk+B,WAAWI,cAAel5B,KAAKu+B,+BAClEv+B,KAAKm8B,aAAa1D,MAAMz4B,KAAK04B,cAK9B,GAAI14B,KAAK63B,WAAaj9B,EAAA+9B,WAAW2B,WAAa8D,EAAgB5xB,WAAa5R,EAAA6gC,KAAKgC,UAAUE,OAIzF,OAHAviC,EAAO2G,QAAQ/B,KAAK67B,WAAa,eAAkB77B,KAAKm8B,aAAalE,UAAY,KACjFj4B,KAAKm8B,aAAa32B,iBAAiB5K,EAAAk+B,WAAW4B,gBAAiB16B,KAAKw+B,iCACpEx+B,KAAKm8B,aAAa9B,QAAQr6B,KAAK04B,cAKhC,GAAI14B,KAAK63B,WAAaj9B,EAAA+9B,WAAWS,YAAcgF,EAAgB9xB,SAAW1R,EAAA6gC,KAAKgC,UAAUC,SAAWU,EAAgB9xB,SAAW1R,EAAA6gC,KAAKgC,UAAUE,QAK7I,QAJE39B,KAAKs7B,cACPlgC,EAAO2G,QAAQ/B,KAAK67B,WAAa,eAAkB77B,KAAKm8B,aAAalE,UAAY,KACjFj4B,KAAKm8B,aAAa32B,iBAAiB5K,EAAAk+B,WAAWU,gBAAiBx5B,KAAKs+B,iCACpEt+B,KAAKm8B,aAAahD,QAAQn5B,KAAK04B,cAKhC,GAAI14B,KAAK63B,WAAaj9B,EAAA+9B,WAAWiC,YAAcwD,EAAgB9xB,SAAW1R,EAAA6gC,KAAKgC,UAAUK,QAKxF,QAJE99B,KAAKs7B,cACPlgC,EAAO2G,QAAQ/B,KAAK67B,WAAa,eAAkB77B,KAAKm8B,aAAalE,UAAY,KACjFj4B,KAAKm8B,aAAa32B,iBAAiB5K,EAAAk+B,WAAWkC,iBAAkBh7B,KAAKy+B,kCACrEz+B,KAAKm8B,aAAaxB,SAAS36B,KAAK04B,cAMlC,GAAI14B,KAAKs7B,eAAiBt7B,KAAKw7B,UAAUtgC,OAAS,EAAG,CAIpD,GAHAJ,MAAM,qBAGFkF,KAAK63B,WAAaj9B,EAAA+9B,WAAWC,UAAYwF,EAAgB5xB,WAAa5R,EAAA6gC,KAAKgC,UAAUC,SAAWU,EAAgB5xB,WAAa5R,EAAA6gC,KAAKgC,UAAUK,SAI/I,OAHA1iC,EAAO2G,QAAQ/B,KAAK67B,WAAa,eAAkB77B,KAAKm8B,aAAalE,UAAY,KACjFj4B,KAAKm8B,aAAa32B,iBAAiB5K,EAAAk+B,WAAWI,cAAel5B,KAAKu+B,+BAClEv+B,KAAKm8B,aAAa1D,MAAMz4B,KAAK04B,cAK9B,GAAI14B,KAAK63B,WAAaj9B,EAAA+9B,WAAWe,SAKhC,QAJE15B,KAAKs7B,cACPlgC,EAAO2G,QAAQ/B,KAAK67B,WAAa,eAAkB77B,KAAKm8B,aAAalE,UAAY,KACjFj4B,KAAKm8B,aAAa32B,iBAAiB5K,EAAAk+B,WAAWgB,gBAAiB95B,KAAK0+B,iCACpE1+B,KAAKm8B,aAAa1C,QAAQz5B,KAAK04B,oBAMjC59B,MAAM,cAGNkF,KAAK63B,UAAYj9B,EAAA+9B,WAAWM,OAC5Bj5B,KAAKm8B,aAAen8B,KAAK28B,KACzBvhC,EAAO2G,QAAQ/B,KAAK67B,WAAa,eAAkB77B,KAAKm8B,aAAalE,UAAY,KACjFj4B,KAAKm8B,aAAa32B,iBAAiB5K,EAAAk+B,WAAWI,cAAel5B,KAAKu+B,0BAClEv+B,KAAKm8B,aAAa1D,MAAMz4B,KAAK04B,eAkEhCuC,GAjdC,SAAAA,EAAYrT,QAAA,IAAAA,IAAAA,EAAA,IAAZ,IAAApf,EACCpC,EAAA7D,KAAAvC,OAAOA,K,OAkZAwI,EAAA+1B,yBAA2B,SAAC15B,GACnC2D,EAAK2zB,aAAat2B,oBAAoBjL,EAAAk+B,WAAWI,cAAe1wB,EAAK+1B,0BACrE/1B,EAAKqvB,UAAYj9B,EAAA+9B,WAAWC,UAC1BpwB,EAAKqzB,WACPrzB,EAAK0zB,cAGE1zB,EAAA81B,2BAA6B,SAACz5B,GACrC2D,EAAK2zB,aAAat2B,oBAAoBjL,EAAAk+B,WAAWU,gBAAiBhxB,EAAK81B,4BACvE91B,EAAKqvB,UAAYj9B,EAAA+9B,WAAWS,YAC1B5wB,EAAKqzB,WACPrzB,EAAK0zB,cAGE1zB,EAAAk2B,2BAA6B,SAAC75B,GACrC2D,EAAK2zB,aAAat2B,oBAAoBjL,EAAAk+B,WAAWgB,gBAAiBtxB,EAAKk2B,4BACvEl2B,EAAKqvB,UAAYj9B,EAAA+9B,WAAWe,WAC1BlxB,EAAKqzB,WACPrzB,EAAK0zB,cAGE1zB,EAAA61B,0BAA4B,SAACx5B,GACpC2D,EAAK2zB,aAAat2B,oBAAoBjL,EAAAk+B,WAAWsB,eAAgB5xB,EAAK61B,2BACtE71B,EAAKqvB,UAAYj9B,EAAA+9B,WAAWqB,UAC1BxxB,EAAKqzB,WACPrzB,EAAK0zB,cAGE1zB,EAAAg2B,2BAA6B,SAAC35B,GACrC2D,EAAK2zB,aAAat2B,oBAAoBjL,EAAAk+B,WAAW4B,gBAAiBlyB,EAAKg2B,4BACvEh2B,EAAKqvB,UAAYj9B,EAAA+9B,WAAW2B,YAC1B9xB,EAAKqzB,WACPrzB,EAAK0zB,cAGE1zB,EAAAi2B,4BAA8B,SAAC55B,GACtC2D,EAAK2zB,aAAat2B,oBAAoBjL,EAAAk+B,WAAWkC,iBAAkBxyB,EAAKi2B,6BACxEj2B,EAAKqvB,UAAYj9B,EAAA+9B,WAAWiC,aAC1BpyB,EAAKqzB,WACPrzB,EAAK0zB,cAxbL1zB,EAAKof,KAAOA,EACZpf,EAAKm0B,KAAO,IAAI/hC,EAAA6gC,KAAKkD,UAAUn2B,GAC/BA,EAAK2zB,aAAe,KAEpB3zB,EAAKgzB,UAAY,GACjBhzB,EAAK8yB,eAAiB,EACtB9yB,EAAKqvB,UAAYj9B,EAAA+9B,WAAWM,OAC5BzwB,EAAKqzB,YAAc,EACnBrzB,EAAKszB,YAAc,EACnBtzB,EAAKkwB,aAAe,K,EAnBT99B,EAAAqgC,aAAYA,EAN1B,CAAUrgC,IAAAA,KAAG,ICAb,SAAUA,GAET,IAEAwL,EAFOtB,EAAQjK,IAAIgK,MAAMC,MAEzBk3B,GAAuC11B,UAAA01B,EAAvC51B,EAAuCtB,GAmC/Bk3B,EAAA97B,UAAAqG,MAAP,WACC,OAAO,IAAIy1B,EAAkBh8B,KAAKiF,UAAWjF,KAAKkF,cAG5C82B,EAAA97B,UAAAsG,SAAP,WACC,MAAO,8BAAgCxG,KAAKiF,WAhC/B+2B,EAAAC,eAAwB,gBACxBD,EAAAmC,kBAA2B,mBA2C1CnC,GA/BC,SAAAA,EAAYv2B,EAAkBiB,G,YAAA,IAAAA,IAAAA,EAAA,MAC7BN,EAAA7D,KAAAvC,KAAMyF,EAAWiB,IAAY1G,KAtBlBpF,EAAAohC,kBAAiBA,EAJ/B,CAAUphC,IAAAA,KAAG,ICAb,SAAUA,GAET,IAAAmhC,GAyBQA,EAAA77B,UAAAg+B,cAAP,WACC,OAAOl+B,KAAK87B,YAGNC,EAAA77B,UAAA0+B,iBAAP,WACC,OAAO5+B,KAAKg9B,eAGNjB,EAAA77B,UAAAm7B,mBAAP,WACC,OAAOr7B,KAAKi9B,iBAkBdlB,GA5CC,SAAAA,EAAYD,EAAmBkB,EAAsBC,GACpDj9B,KAAK87B,WAAaA,EAClB97B,KAAKg9B,cAAgBA,EACrBh9B,KAAKi9B,gBAAkBA,EACvBj9B,KAAK6+B,MAAQ,KAZFjkC,EAAAmhC,kBAAiBA,EAF/B,CAAUnhC,IAAAA,KAAG,ICAb,SAAUA,GAET,IAAY+9B,EAAAA,GAAAA,EAAAA,EAAA/9B,EAAA+9B,aAAA/9B,EAAA+9B,WAAU,KACrBA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,WAAA,GAAA,aAGe/9B,EAAAojC,oBAAhB,SAAoCn3B,GACnC,OAAQA,GACP,KAAK8xB,EAAWM,OACf,MAAO,SACR,KAAKN,EAAWC,QACf,MAAO,UACR,KAAKD,EAAWS,UACf,MAAO,YACR,KAAKT,EAAWe,SACf,MAAO,WACR,KAAKf,EAAWqB,QACf,MAAO,UACR,KAAKrB,EAAW2B,UACf,MAAO,YACR,KAAK3B,EAAWiC,WACf,MAAO,aAET,MAAO,IA7BT,CAAUhgC,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAA6gC,EAEDgC,EAAAA,EAFChC,EAAA7gC,EAAA6gC,OAAA7gC,EAAA6gC,KAAI,KAELgC,EAAAA,EAAAhC,EAAAgC,YAAAhC,EAAAgC,UAAS,KACpBA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,UAGehC,EAAAqD,mBAAhB,SAAmCC,GAClC,OAAQA,GACP,KAAKtB,EAAUuB,OACd,MAAO,SACR,KAAKvB,EAAUC,QACd,MAAO,UACR,KAAKD,EAAUE,OACd,MAAO,SACR,KAAKF,EAAUK,QACd,MAAO,UAET,MAAO,IApBT,CAAUljC,IAAAA,KAAG,ICAb,SAAUA,GAAI,IAAA6gC,EAEbr1B,EAAAu4B,EAQC,SAAAA,EAAYzG,GAAZ,IAAA1vB,EACCpC,EAAA7D,KAAAvC,KAAM,KAAGA,K,OACTwI,EAAK0vB,QAAUA,E,EAZJuD,EAAA7gC,EAAA6gC,OAAA7gC,EAAA6gC,KAAI,IAEjBr1B,EAA+BxL,EAAAk8B,MAAAxwB,UAAAq4B,EAAAv4B,GAuBvBu4B,EAAAz+B,UAAA83B,WAAP,WACC,OAAOh4B,KAAKk4B,SAxBdyG,EAsCAA,EAtCalD,EAAAkD,UAASA,EAFvB,CAAU/jC,IAAAA,KAAG,I3EAb,SAAUA,GAAI,IAAA6gC,EAEbC,EAQC,SAAAA,EAAYnD,EAAaj1B,GACxBtD,KAAKu4B,KAAOA,EACZv4B,KAAKsD,MAAQA,EACbtD,KAAKoL,KAAOqwB,EAAAgC,UAAUuB,OACtBh/B,KAAKmL,GAAKswB,EAAAgC,UAAUuB,OAdTvD,EAAA7gC,EAAA6gC,OAAA7gC,EAAA6gC,KAAI,IA2BTC,EAAAx7B,UAAA+3B,QAAP,WACC,OAAOj4B,KAAKu4B,MAGNmD,EAAAx7B,UAAAs9B,SAAP,WACC,OAAOx9B,KAAKsD,OAGNo4B,EAAAx7B,UAAAsM,QAAP,WACC,OAAOxM,KAAKoL,MAGNswB,EAAAx7B,UAAAoM,MAAP,WACC,OAAOtM,KAAKmL,IAGNuwB,EAAAx7B,UAAA29B,SAAP,SAAgBzyB,GACfpL,KAAKoL,KAAOA,GAGNswB,EAAAx7B,UAAA69B,OAAP,SAAc5yB,GACbnL,KAAKmL,GAAKA,GAGJuwB,EAAAx7B,UAAAsG,SAAP,WACC,MAAO,sBAAyBxG,KAAKu4B,KAAO,cAAiBv4B,KAAKsD,MAAQ,YAAcm4B,EAAAqD,mBAAmB9+B,KAAKoL,MAAQ,UAAYqwB,EAAAqD,mBAAmB9+B,KAAKmL,KAlD9JuwB,EAmEAA,EAnEaD,EAAAC,SAAQA,EAFtB,CAAU9gC,IAAAA,KAAG,ICqGb,WAGC,SAAgBqkC,IACf,MAAO,SAJCpkC,MAAAA,IAAG,KAGIokC,WAAUA,EAK1B,IAAM3R,EAAe,cACf3qB,EAAiBP,QAAQjH,MAC/BwH,EAAM,wDAAyD2qB,GAC/D3qB,EAAM,kBAAmB2qB,GACzB3qB,EAAM,oBAA+B2qB,GACrC3qB,EAAM,0BAA2B2qB,GACjC3qB,EAAM,8CAA+C2qB,GACrD3qB,EAAM,wDAAyD2qB,GAC/D3qB,EAAM,IAhBP","file":"index.min.js","sourcesContent":["/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Parallel extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.completeCount = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tif (++this.completeCount >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.completeCount = 0;\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.execute();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.interrupt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\tcommand.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tconst length:number = this.getLength();\n\t\t\tif (length > 0) {\n\t\t\t\tconst commands:Command[] = this.getCommands();\n\t\t\t\tlet command:Command;\n\t\t\t\tfor (let i:number = 0; i < length; ++i) {\n\t\t\t\t\tcommand = commands[i];\n\t\t\t\t\tif (command.getState() == CommandState.Executing) {\n\t\t\t\t\t\tcommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\t\t\tcommand.interrupt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getCompleteCount():number { return this.completeCount; }\n\t\tprivate completeCount:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport class Waypoint {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(path:string, level:number) {\n\t\t\tthis.path = path;\n\t\t\tthis.level = level;\n\t\t\tthis.from = Direction.Static;\n\t\t\tthis.to = Direction.Static;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getPath():string {\n\t\t\treturn this.path;\n\t\t}\n\n\t\tpublic getLevel():number {\n\t\t\treturn this.level;\n\t\t}\n\n\t\tpublic getFrom():Direction {\n\t\t\treturn this.from;\n\t\t}\n\n\t\tpublic getTo():Direction {\n\t\t\treturn this.to;\n\t\t}\n\n\t\tpublic _setFrom(from:Direction):void {\n\t\t\tthis.from = from;\n\t\t}\n\n\t\tpublic _setTo(to:Direction):void {\n\t\t\tthis.to = to;\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[Waypoint] path = \\'' + this.path + '\\', level = ' + this.level + ', from = ' + getDirectionString(this.from) + ', to = ' + getDirectionString(this.to);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate path:string;\n\t\tprivate level:number;\n\t\tprivate from:Direction;\n\t\tprivate to:Direction;\n\t}\n}\n","/* ---------- project dependencies ---------- */\n\n\n/* ---------- project scripts ---------- */\n\n/// <reference path='alm/util/Time.ts' />\n/// <reference path='alm/math/Easing.ts' />\n/// <reference path='alm/browser/QueryString.ts' />\n\n/// <reference path='alm/debug/Logger.ts' />\n/// <reference path='alm/debug/FpsMonitor.ts' />\n\n/// <reference path='alm/event/Event.ts' />\n/// <reference path='alm/event/EventDispatcher.ts' />\n\n/// <reference path='cmd/CommandState.ts' />\n/// <reference path='cmd/CommandEvent.ts' />\n/// <reference path='cmd/Command.ts' />\n/// <reference path='cmd/CommandList.ts' />\n/// <reference path='cmd/Break.ts' />\n/// <reference path='cmd/Return.ts' />\n/// <reference path='cmd/Log.ts' />\n/// <reference path='cmd/Wait.ts' />\n/// <reference path='cmd/Func.ts' />\n/// <reference path='cmd/Listen.ts' />\n/// <reference path='cmd/Tween.ts' />\n/// <reference path='cmd/Serial.ts' />\n/// <reference path='cmd/Parallel.ts' />\n\n/// <reference path='alm/geom/Vector2.ts' />\n/// <reference path='alm/geom/Vector3.ts' />\n/// <reference path='alm/geom/Rectangle.ts' />\n/// <reference path='alm/geom/Boxer.ts' />\n\n/// <reference path='alm/util/Hash.ts' />\n/// <reference path='alm/util/Obj.ts' />\n/// <reference path='alm/util/Arr.ts' />\n/// <reference path='alm/util/Num.ts' />\n/// <reference path='alm/util/Str.ts' />\n/// <reference path='alm/util/Cmd.ts' />\n\n/// <reference path='alm/resource/ObjectPool.ts' />\n\n/// <reference path='alm/state/Lottery.ts' />\n/// <reference path='alm/state/Switcher.ts' />\n/// <reference path='alm/state/SwitcherEvent.ts' />\n/// <reference path='alm/state/LoHi.ts' />\n/// <reference path='alm/state/LoHiEvent.ts' />\n\n/// <reference path='alm/math/EasingValue.ts' />\n/// <reference path='alm/math/SpringValue.ts' />\n/// <reference path='alm/math/SimpleAverage.ts' />\n/// <reference path='alm/math/SimpleMovingAverage.ts' />\n/// <reference path='alm/math/MaxValue.ts' />\n/// <reference path='alm/math/Circular.ts' />\n\n/// <reference path='alm/time/AnimationFrameTicker.ts' />\n/// <reference path='alm/time/AnimationFrameTickerEvent.ts' />\n/// <reference path='alm/time/Timer.ts' />\n/// <reference path='alm/time/TimerEvent.ts' />\n\n/// <reference path='alm/io/FileLoader.ts' />\n/// <reference path='alm/io/FileLoaderProgressEvent.ts' />\n/// <reference path='alm/io/FileLoaderSuccessEvent.ts' />\n/// <reference path='alm/io/FileLoaderErrorEvent.ts' />\n/// <reference path='alm/io/FileQuery.ts' />\n/// <reference path='alm/io/IFileHandler.ts' />\n\n/// <reference path='alm/audio/core/AudioClip.ts' />\n/// <reference path='alm/audio/AudioPlayer.ts' />\n/// <reference path='alm/audio/CrossOverLoopAudio.ts' />\n/// <reference path='alm/audio/FootstepAudio.ts' />\n\n/// <reference path='alm/view/View.ts' />\n/// <reference path='alm/view/ButtonBehavior.ts' />\n/// <reference path='alm/view/IButton.ts' />\n/// <reference path='alm/view/SelectionBehavior.ts' />\n/// <reference path='alm/view/ISelection.ts' />\n\n/// <reference path='alm/browser/DeviceInfo.ts' />\n/// <reference path='alm/browser/LocalStorage.ts' />\n/// <reference path='alm/browser/KeyWatcher.ts' />\n/// <reference path='alm/browser/KeyWatcherEvent.ts' />\n/// <reference path='alm/browser/WindowWatcher.ts' />\n/// <reference path='alm/browser/WindowWatcherEvent.ts' />\n/// <reference path=\"alm/browser/ScrollSectionTriggerEvent.ts\" />\n/// <reference path=\"alm/browser/ScrollSectionTrigger.ts\" />\n/// <reference path=\"alm/browser/ResponsiveObserver.ts\" />\n/// <reference path=\"alm/browser/ResponsiveObserverEvent.ts\" />\n\n/// <reference path='scn/Scene.ts' />\n/// <reference path='scn/SceneEvent.ts' />\n/// <reference path='scn/SceneManager.ts' />\n/// <reference path='scn/SceneManagerEvent.ts' />\n/// <reference path='scn/SceneTransferInfo.ts' />\n/// <reference path='scn/SceneState.ts' />\n/// <reference path='scn/core/Direction.ts' />\n/// <reference path='scn/core/RootScene.ts' />\n/// <reference path='scn/core/Waypoint.ts' />\n\n\n/* ---------- init ---------- */\n\nnamespace alm {\n\n\t// Library version info\n\texport function getVersion():string {\n\t\treturn '0.0.1';\n\t}\n\n\t// Credit info\n\tconst style:string = 'color:#999;';\n\tconst print:Function = console.debug;\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('%c+ alumican.js', style);\n\tprint('%c+ version ' + getVersion(), style);\n\tprint('%c+ http://alumican.net', style);\n\tprint('%c+ https://github.com/alumican/alumican.js', style);\n\tprint('%c+ + + + + + + + + + + + + + + + + + + + + + + + + +', style);\n\tprint('');\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.debug {\n\n\timport QueryString = alm.browser.QueryString;\n\n\texport enum LoggerLevel {\n\t\tVerbose = 0,\n\t\tInfo = 1,\n\t\tWarn = 2,\n\t\tError = 3,\n\t\tSilent = 4,\n\t}\n\n\n\n\n\n\texport interface ILogging {\n\n\t\tverbose(prefix:string, messages:any[]):void;\n\t\tinfo(prefix:string, messages:any[]):void;\n\t\twarn(prefix:string, messages:any[]):void;\n\t\terror(prefix:string, messages:any[]):void;\n\t}\n\n\n\n\n\n\texport class NullLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t}\n\t}\n\n\n\n\n\n\texport class ConsoleLogging implements ILogging {\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconsole.debug.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconsole.warn.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconsole.error.apply(console, Array.prototype.slice.call([prefix].concat(messages)));\n\t\t}\n\t}\n\n\n\n\n\n\texport class DOMLogging implements ILogging {\n\n\t\tconstructor(dom:HTMLElement, html:boolean) {\n\t\t\tthis.dom = dom;\n\t\t\tthis.html = html;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tthis.print(prefix, messages);\n\t\t}\n\n\t\tprivate print(prefix:string, messages:any[]):void {\n\t\t\tconst line:string = prefix + messages.join(', ');\n\t\t\tif (this.html) {\n\t\t\t\tthis.dom.innerHTML = line + '<br>\\n' + this.dom.innerHTML;\n\t\t\t} else {\n\t\t\t\tthis.dom.innerText = line + '\\n' + this.dom.innerText;\n\t\t\t}\n\t\t}\n\n\t\tprivate dom:HTMLElement;\n\t\tprivate html:boolean;\n\t}\n\n\n\n\n\n\texport class ParallelLogging implements ILogging {\n\n\t\tconstructor(loggers:ILogging[]) {\n\t\t\tthis.loggers = loggers;\n\t\t}\n\n\t\tpublic verbose(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].verbose(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic info(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].info(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic warn(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].warn(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic error(prefix:string, messages:any[]):void {\n\t\t\tconst n:number = this.loggers.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tthis.loggers[i].error(prefix, messages);\n\t\t\t}\n\t\t}\n\n\t\tprivate loggers:ILogging[];\n\t}\n\n\n\n\n\n\texport class Logger {\n\n\t\tpublic static level:number = LoggerLevel.Verbose;\n\t\tpublic static logger:ILogging = new ConsoleLogging();\n\t\tprivate static namespace:string = '';\n\n\t\tpublic static setLevelByQuery(key:string):void {\n\t\t\tconst level:number = new QueryString().getInt(key, LoggerLevel.Silent);\n\t\t\tLogger.level = isNaN(level) ? LoggerLevel.Silent : level;\n\t\t}\n\n\t\tpublic static setNamespace(namespace:string):void {\n\t\t\tLogger.namespace = namespace != '' ? (namespace + '#') : '';\n\t\t}\n\n\t\tpublic static verbose(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tLogger.logger.verbose('[' + Logger.namespace + 'Verbose] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static info(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Info) {\n\t\t\t\tLogger.logger.info('[' + Logger.namespace + 'Info   ] ', messages);\n\t\t\t}\n\t\t}\n\n\t\tpublic static warn(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', messages);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static error(...messages:any[]):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', messages);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static warnIf(target:any, message:string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Warn && condition) {\n\t\t\t\tLogger.logger.warn('[' + Logger.namespace + 'Warn   ] ', [message + ' : ' + target]);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static errorIf(target:any, message: string, condition:boolean = true):void {\n\t\t\tif (Logger.level <= LoggerLevel.Error && condition) {\n\t\t\t\tLogger.logger.error('[' + Logger.namespace + 'Error  ] ', [message + ' : ' + target]);\n\t\t\t\t//Logger.stackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic static stackTrace():void {\n\t\t\tconsole.trace();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n\nfunction trace(...messages:any[]):void {\n\talm.debug.Logger.info.apply(trace.caller, arguments);\n}\n\nfunction throwWarn(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.warnIf.apply(null, arguments);\n}\n\nfunction throwError(target:any, message:string, condition:boolean = true):void {\n\talm.debug.Logger.errorIf.apply(null, arguments);\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Time {\n\n\t\t/**\n\t\t * 現在の時刻(ミリ秒)を取得する\n\t\t * @returns {number} UNIX時間（ミリ秒）\n\t\t */\n\t\tpublic static now():number {\n\t\t\treturn (window.performance || Date).now();\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport type EasingFunction = (t:number)=>number;\n\n\texport class Easing {\n\n\t\tpublic static linear(t:number):number {\n\t\t\treturn t;\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuad(t:number):number {\n\t\t\treturn (t /= 1) * t;\n\t\t}\n\n\t\tpublic static easeOutQuad(t:number):number {\n\t\t\treturn -(t /= 1) * (t - 2);\n\t\t}\n\n\t\tpublic static easeInOutQuad(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t;\n\t\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCubic(t:number):number {\n\t\t\treturn (t /= 1) * t * t;\n\t\t}\n\n\t\tpublic static easeOutCubic(t:number):number {\n\t\t\treturn (t = t - 1) * t * t + 1;\n\t\t}\n\n\t\tpublic static easeInOutCubic(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuart(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuart(t:number):number {\n\t\t\treturn -((t = t - 1) * t * t * t - 1);\n\t\t}\n\n\t\tpublic static easeInOutQuart(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t;\n\t\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInQuint(t:number):number {\n\t\t\treturn (t /= 1) * t * t * t * t;\n\t\t}\n\n\t\tpublic static easeOutQuint(t:number):number {\n\t\t\treturn ((t = t - 1) * t * t * t * t + 1);\n\t\t}\n\n\t\tpublic static easeInOutQuint(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t * t;\n\t\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInSine(t:number):number {\n\t\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t\t}\n\n\t\tpublic static easeOutSine(t:number):number {\n\t\t\treturn Math.sin(t * (Math.PI / 2));\n\t\t}\n\n\t\tpublic static easeInOutSine(t:number):number {\n\t\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\treturn Math.pow(2, 10 * (t - 1));\n\t\t}\n\n\t\tpublic static easeOutExpo(t:number):number {\n\t\t\tif (t == 1) return 1;\n\t\t\treturn -Math.pow(2, -10 * t) + 1;\n\t\t}\n\n\t\tpublic static easeInOutExpo(t:number):number {\n\t\t\tif (t == 0) return 0;\n\t\t\tif (t == 1) return 1;\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t\t}\n\n\n\n\n\n\t\tpublic static easeInCirc(t:number):number {\n\t\t\treturn -(Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t}\n\n\t\tpublic static easeOutCirc(t:number):number {\n\t\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t\t}\n\n\t\tpublic static easeInOutCirc(t:number):number {\n\t\t\tif ((t /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t}\n\n\n\n\n\n\t\tpublic static createEaseInElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (p == 0) p = 0.3;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutElastic(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tlet p:number = 0;\n\t\t\t\tlet a:number = 1;\n\t\t\t\tif (t == 0) return 0;\n\t\t\t\tif ((t /= 0.5) == 2) return 1;\n\t\t\t\tif (p == 0) p = 0.3 * 1.5;\n\t\t\t\tif (a < 1) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1) return -0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseOutElastic(t);\n\t\t}\n\n\t\tpublic static easeInOutElastic(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutElastic(t);\n\t\t}\n\n\t\tprivate static defaultEaseInElastic:EasingFunction = Easing.createEaseInElastic();\n\t\tprivate static defaultEaseOutElastic:EasingFunction = Easing.createEaseOutElastic();\n\t\tprivate static defaultEaseInOutElastic:EasingFunction = Easing.createEaseInOutElastic();\n\n\n\n\n\n\t\tpublic static createEaseInBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic static createEaseInOutBack(s:number = 1.70158):EasingFunction {\n\t\t\treturn function (t:number) {\n\t\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * (((s *= 1.525) + 1) * t - s);\n\t\t\t\treturn 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInElastic(t);\n\t\t}\n\n\t\tpublic static easeOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseOutBack(t);\n\t\t}\n\n\t\tpublic static easeInOutBack(t:number):number {\n\t\t\treturn Easing.defaultEaseInOutBack(t);\n\t\t}\n\n\t\tprivate static defaultEaseInBack:EasingFunction = Easing.createEaseInBack();\n\t\tprivate static defaultEaseOutBack:EasingFunction = Easing.createEaseOutBack();\n\t\tprivate static defaultEaseInOutBack:EasingFunction = Easing.createEaseInOutBack();\n\n\n\n\n\n\t\tpublic static easeInBounce(t:number):number {\n\t\t\treturn 1 - Easing.easeOutBounce(1 - t);\n\t\t}\n\n\t\tpublic static easeOutBounce(t:number):number {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * t * t;\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t\t\t}\n\t\t}\n\n\t\tpublic static easeInOutBounce(t:number):number {\n\t\t\tif (t < 0.5) return Easing.easeInBounce(t * 2) * 0.5;\n\t\t\treturn Easing.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t\t}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\timport Hash = alm.util.Hash;\n\n\texport class QueryString {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(url:string = '') {\n\t\t\tthis.set(url);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(url:string = ''):void {\n\t\t\t// normalize url\n\t\t\tlet search:string = '';\n\t\t\tif (url != '') {\n\t\t\t\tconst index:number = url.indexOf('?');\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tsearch = url.substring(index);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsearch = location.search;\n\t\t\t}\n\t\t\t// parse query\n\t\t\tthis.hash = {};\n\t\t\tconst pairs:string[] = search.substring(1).split('&');\n\t\t\tlet pair:string[];\n\t\t\tfor(let i:number = 0; pairs[i]; ++i) {\n\t\t\t\tpair = pairs[i].split('=');\n\t\t\t\tthis.hash[pair[0]] = pair[1];\n\t\t\t}\n\t\t}\n\n\t\t// 'abc' -> 'abc'\n\t\tpublic getString(key:string, defaultValue:string):string {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : value;\n\t\t}\n\n\t\t// '123' -> 123\n\t\tpublic getInt(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseInt(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '1.23' -> 1.23\n\t\tpublic getFloat(key:string, defaultValue:number):number {\n\t\t\tconst value:number = parseFloat(this.hash[key]);\n\t\t\treturn isNaN(value) ? defaultValue : value;\n\t\t}\n\n\t\t// '0' -> false, otherwise true\n\t\tpublic getBool(key:string, defaultValue:boolean):boolean {\n\t\t\tconst value:string = this.hash[key];\n\t\t\treturn value === undefined ? defaultValue : (<any>value == true);\n\t\t}\n\n\t\tpublic getHash():Hash<string> {\n\t\t\treturn this.hash;\n\t\t}\n\n\t\tpublic setHash(hash:Hash<string>):void {\n\t\t\tthis.hash = hash;\n\t\t}\n\n\t\tpublic setParam(key:string, value:any):void {\n\t\t\tthis.hash[key] = value;\n\t\t}\n\n\t\tpublic removeParam(key:string):void {\n\t\t\tdelete this.hash[key];\n\t\t}\n\n\t\tpublic hasParam(key:string):boolean {\n\t\t\treturn this.hash[key] !== undefined;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate hash:Hash<string>;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.debug {\n\n\timport Time = alm.util.Time;\n\n\texport class FpsMonitor {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic reset():void {\n\t\t\tthis.frameRate = 0;\n\t\t\tthis.frameCount = 0;\n\t\t\tthis.startTime = Time.now();\n\t\t\tthis.actualFrameRate = -1;\n\t\t\tthis.dummyFrameRate = -1;\n\t\t}\n\n\t\tpublic update():void {\n\t\t\t++this.frameCount;\n\t\t\tconst currentTime:number = Time.now();\n\t\t\tconst elapsedTime:number = currentTime - this.startTime;\n\t\t\tif (elapsedTime >= 1000) {\n\t\t\t\tthis.actualFrameRate = 1000 * this.frameCount / elapsedTime;\n\t\t\t\tthis.frameCount = 0;\n\t\t\t\tthis.startTime = currentTime;\n\t\t\t\tif (this.dummyFrameRate < 0) {\n\t\t\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic setDummyFrameRate(frameRate:number):void {\n\t\t\tthis.dummyFrameRate = frameRate;\n\t\t\tthis.frameRate = this.dummyFrameRate;\n\t\t}\n\n\t\tpublic clearDummyFrameRate():void {\n\t\t\tthis.dummyFrameRate = -1;\n\t\t\tthis.frameRate = this.actualFrameRate;\n\t\t}\n\n\t\tpublic getFrameRate():number {\n\t\t\treturn this.frameRate;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate frameRate:number;\n\t\tprivate frameCount:number;\n\t\tprivate startTime:number;\n\t\tprivate actualFrameRate:number;\n\t\tprivate dummyFrameRate:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\r\n\r\nnamespace alm.event {\r\n\r\n\texport class Event<T = any> {\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// CONSTRUCTOR\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tconstructor(type:string, target:Object, data:T = null) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.target = target;\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\t\tpublic getType():string {\r\n\t\t\treturn this.type;\r\n\t\t}\r\n\r\n\t\tpublic getTarget():Object {\r\n\t\t\treturn this.target;\r\n\t\t}\r\n\r\n\t\tpublic getData():T {\r\n\t\t\treturn this.data;\r\n\t\t}\r\n\r\n\t\tpublic setData(data:T):void {\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\t// --------------------------------------------------\r\n\t\t//\r\n\t\t// VARIABLE\r\n\t\t//\r\n\t\t// --------------------------------------------------\r\n\r\n\t\tprivate type:string;\r\n\t\tprivate target:Object;\r\n\t\tprivate data:T;\r\n\t}\r\n}\r\n","/// <reference path='../../index.ts' />\n\nnamespace alm.event {\n\n\timport Logger = alm.debug.Logger;\n\texport type EventListener = (event:Event) => void;\n\n\texport class EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:any = null) {\n\t\t\tthis.target = target || this;\n\t\t\tthis.listeners = {};\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] addEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) return;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.listeners[eventType] = listeners = [];\n\t\t\t}\n\t\t\tlisteners.push(listener);\n\t\t}\n\n\t\tpublic removeEventListener(eventType:string, listener:EventListener):void {\n\t\t\tif (typeof(listener) != 'function') {\n\t\t\t\tLogger.warn('[EventDispatcher] removeEventListener : listener is not function, eventType = \\'' + eventType + '\\', listener = ' + listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners:EventListener[] = this.listeners[eventType];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tif (listener == listeners[i]) {\n\t\t\t\t\t\tlisteners.splice(i,  1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (listeners.length == 0) {\n\t\t\t\t\tdelete this.listeners[eventType];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic removeAllEventListener(eventType:string = null):void {\n\t\t\tif (eventType) {\n\t\t\t\tdelete this.listeners[eventType];\n\t\t\t} else {\n\t\t\t\tthis.listeners = {};\n\t\t\t}\n\t\t}\n\n\t\tpublic hasEventListener(eventType:string):boolean {\n\t\t\treturn this.listeners[eventType] != null;\n\t\t}\n\n\t\tpublic dispatchEvent(event:Event):void {\n\t\t\tlet listeners:EventListener[] = this.listeners[event.getType()];\n\t\t\tif (listeners) {\n\t\t\t\tconst numListeners:number = listeners.length;\n\t\t\t\tfor (let i:number = 0; i < numListeners; ++i) {\n\t\t\t\t\tlisteners[i].call(this.target, event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic dispatchEventType<T = any>(eventType:string, target:Object = null, data:T = null):void {\n\t\t\tthis.dispatchEvent(new Event<T>(eventType, target, data));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:any;\n\t\tprivate listeners:util.Hash<EventListener[]>;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport enum CommandState {\n\t\tSleeping     = 0,\n\t\tExecuting    = 1,\n\t\tInterrupting = 2,\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class CommandEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():CommandEvent {\n\t\t\treturn new CommandEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[CommandEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Command extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(executeFunction:Function = null, interruptFunction:Function = null, destroyFunction:Function = null) {\n\t\t\tsuper();\n\n\t\t\tthis.setExecuteFunction(executeFunction);\n\t\t\tthis.setInterruptFunction(interruptFunction);\n\t\t\tthis.setDestroyFunction(destroyFunction);\n\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.self = this;\n\t\t\tthis.parent = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic execute():void {\n\t\t\tif (this.state > CommandState.Sleeping) {\n\t\t\t\tthrow new Error('[Command.execute] + Command is already executing.');\n\t\t\t}\n\t\t\tthis.state = CommandState.Executing;\n\t\t\tthis.getExecuteFunction().call(this, this);\n\t\t}\n\n\t\tpublic interrupt():void {\n\t\t\tif (this.state == CommandState.Executing) {\n\t\t\t\tthis.state = CommandState.Interrupting;\n\t\t\t\tthis.getInterruptFunction().call(this, this);\n\t\t\t}\n\t\t}\n\n\t\tpublic destroy():void {\n\t\t\tthis.state = CommandState.Sleeping;\n\t\t\tthis.getDestroyFunction().call(this, this);\n\t\t\tthis.parent = null;\n\t\t\tthis.executeFunction = null;\n\t\t\tthis.interruptFunction = null;\n\t\t\tthis.destroyFunction = null;\n\t\t}\n\n\t\tprotected notifyComplete():void {\n\t\t\tswitch (this.state) {\n\t\t\t\tcase CommandState.Sleeping:\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Executing:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase CommandState.Interrupting:\n\t\t\t\t\tthis.dispatchEvent(new CommandEvent(CommandEvent.COMPLETE, this));\n\t\t\t\t\tthis.destroy();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getExecuteFunction():Function { return this.executeFunction || this.implExecuteFunction };\n\t\tpublic setExecuteFunction(func:Function):void { this.executeFunction = func; }\n\t\tprivate executeFunction:Function;\n\n\t\tpublic getInterruptFunction():Function { return this.interruptFunction || this.implInterruptFunction };\n\t\tpublic setInterruptFunction(func:Function):void { this.interruptFunction = func; }\n\t\tprivate interruptFunction:Function;\n\n\t\tpublic getDestroyFunction():Function { return this.destroyFunction || this.implDestroyFunction };\n\t\tpublic setDestroyFunction(func:Function):void { this.destroyFunction = func; }\n\t\tprivate destroyFunction:Function;\n\n\t\tpublic getState():CommandState { return this.state; }\n\t\tprivate state:CommandState;\n\n\t\tpublic getParent():Command { return this.parent; }\n\t\tpublic setParent(parent:Command):void { this.parent = parent; }\n\t\tprivate parent:Command;\n\n\t\tpublic getSelf():Command { return this.self; }\n\t\tprivate self:Command;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport abstract class CommandList extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper();\n\t\t\tthis.commands = [];\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tthis.commands = this.getCommands().concat(<Command[]>commands);\n\t\t\t}\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(0, ...commands);\n\t\t}\n\n\t\tprotected insertCommandAt(index:number, ...commands:(Command|Function)[]):void {\n\t\t\tif (commands.length > 0) {\n\t\t\t\tthis.preProcess(commands);\n\t\t\t\tArray.prototype.splice.apply(this.getCommands(), (<any[]>[index, 0]).concat(commands));\n\t\t\t}\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprotected insertCommandArrayAt(index:number, commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommandAt(index, ...commands);\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn this.commands.length;\n\t\t}\n\n\t\tpublic getCommandByIndex(index:number):Command { return this.commands[index]; }\n\t\tpublic getCommands():Command[] { return this.commands; }\n\n\t\tprivate preProcess(commands:(Command|Function)[]):void {\n\t\t\tconst numCommands:number = commands.length;\n\t\t\tlet command:Command|Function;\n\t\t\tfor (let i:number = 0; i < numCommands; ++i) {\n\t\t\t\tcommand = commands[i];\n\t\t\t\tif (typeof(command) == 'function') commands[i] = command = new Func(command);\n\t\t\t\tcommand.setParent(this);\n\t\t\t}\n\t\t}\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\t\tprotected abstract implNotifyBreak():void;\n\t\tprotected abstract implNotifyReturn():void;\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate commands:Command[];\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Break extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyBreak'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Return extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Log extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...messages:any[]) {\n\t\t\tsuper();\n\t\t\tthis.messages = messages;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tconsole.log.apply(console, Array.prototype.slice.call(this.messages));\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.messages = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getMessages():any[] { return this.messages; }\n\t\tpublic setMessages(messages:any[]):void { this.messages = messages; }\n\t\tprivate messages:any[];\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\texport class Wait extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(time:number = 1000) {\n\t\t\tsuper();\n\t\t\tthis.time = time;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.timerId = window.setTimeout(this.completeHandler, this.time);\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearTimeout(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTime():number { return this.time; }\n\t\tpublic setTime(time:number):void { this.time = time; }\n\t\tprivate time:number;\n\n\t\tprivate timerId:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Func extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(func:Function = null, args:any[] = [], eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.func = func;\n\t\t\tthis.args = args;\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t\tthis.func(...this.args);\n\t\t\t} else {\n\t\t\t\tthis.func(...this.args);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.func = null;\n\t\t\tthis.args = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t\tthis.eventType = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getFunction():Function { return this.func; }\n\t\tpublic setFunction(func:Function):void { this.func = func; }\n\t\tprivate func:Function;\n\n\t\tpublic getArguments():any[] { return this.args; }\n\t\tpublic setArguments(args:any[]):void { this.args = args; }\n\t\tprivate args:any[];\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Listen extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventDispatcher:EventDispatcher = null, eventType:string = null) {\n\t\t\tsuper();\n\t\t\tthis.eventDispatcher = eventDispatcher;\n\t\t\tthis.eventType = eventType;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.addEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.eventDispatcher && this.eventType) {\n\t\t\t\tthis.eventDispatcher.removeEventListener(this.eventType, this.completeHandler);\n\t\t\t}\n\n\t\t\tthis.eventType = null;\n\t\t\tthis.eventDispatcher = null;\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.notifyComplete();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getEventDispatcher():EventDispatcher { return this.eventDispatcher; }\n\t\tpublic setEventDispatcher(eventDispatcher:EventDispatcher):void { this.eventDispatcher = eventDispatcher; }\n\t\tprivate eventDispatcher:EventDispatcher;\n\n\t\tpublic getEventType():string { return this.eventType; }\n\t\tpublic setEventType(eventType:string):void { this.eventType = eventType; }\n\t\tprivate eventType:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Easing = alm.math.Easing;\n\timport EasingFunction = alm.math.EasingFunction;\n\timport Time = alm.util.Time;\n\n\texport type TweenCallbackFunction = (progressTime:number, progressValue:number) => void;\n\n\texport class Tween extends Command {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:Object, to:Object, from:Object = null, duration:number = 1000, easing:EasingFunction = Easing.linear, onStart:TweenCallbackFunction = null, onUpdate:TweenCallbackFunction = null, onComplete:TweenCallbackFunction = null) {\n\t\t\tsuper();\n\t\t\tthis.tweenTarget = target;\n\t\t\tthis.to = to;\n\t\t\tthis.from = from;\n\t\t\tthis.duration = duration;\n\t\t\tthis.easing = easing;\n\t\t\tthis.onStart = onStart;\n\t\t\tthis.onUpdate = onUpdate;\n\t\t\tthis.onComplete = onComplete;\n\t\t\tthis.progressTime = 0;\n\t\t\tthis.progressValue = 0;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.timerId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.internalFrom = {};\n\t\t\tlet value0:number;\n\t\t\tlet value1:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue1 = this.to[key];\n\t\t\t\tif (this.from && this.from[key] != null) {\n\t\t\t\t\tthis.internalFrom[key] = this.from[key];\n\t\t\t\t} else {\n\t\t\t\t\tthis.internalFrom[key] = this.tweenTarget[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.duration > 0) {\n\t\t\t\tthis.timerId = window.setInterval(this.intervalHandler, Tween.updateInterval);\n\t\t\t\tthis.startTime = Time.now();\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(0);\n\t\t\t\tif (this.onStart) this.onStart(this.progressTime, this.progressValue);\n\t\t\t\tthis.apply(1);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tthis.cancel();\n\n\t\t\tthis.tweenTarget = null;\n\t\t\tthis.to = null;\n\t\t\tthis.from = null;\n\t\t\tthis.easing = null;\n\t\t\tthis.onStart = null;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.onComplete = null;\n\t\t\tthis.internalFrom = null;\n\t\t}\n\n\t\tprivate cancel():void {\n\t\t\tif (this.timerId != -1) {\n\t\t\t\tclearInterval(this.timerId);\n\t\t\t\tthis.timerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate apply(timeRatio:number):void {\n\t\t\tthis.progressTime = timeRatio;\n\t\t\tthis.progressValue = this.easing(this.progressTime);\n\t\t\tlet value0:number;\n\t\t\tfor (let key in this.to) {\n\t\t\t\tvalue0 = this.internalFrom[key];\n\t\t\t\tthis.tweenTarget[key] = value0 + (this.to[key] - value0) * this.progressValue;\n\t\t\t}\n\t\t}\n\n\t\tprivate intervalHandler = ():void => {\n\t\t\tconst elapsedTime:number = Time.now() - this.startTime;\n\t\t\tif (elapsedTime < this.duration) {\n\t\t\t\tthis.apply(elapsedTime / this.duration);\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t} else {\n\t\t\t\tthis.apply(1);\n\t\t\t\tthis.cancel();\n\t\t\t\tif (this.onUpdate) this.onUpdate(this.progressTime, this.progressValue);\n\t\t\t\tif (this.onComplete) this.onComplete(this.progressTime, this.progressValue);\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTarget():Object { return this.tweenTarget; }\n\t\tpublic setTarget(target:Object):void { this.tweenTarget = target; }\n\t\tprivate tweenTarget:Object;\n\n\t\tpublic getDuration():number { return this.duration; }\n\t\tpublic setDuration(duration:number):void { this.duration = duration; }\n\t\tprivate duration:number;\n\n\t\tpublic getTo():Object { return this.to; }\n\t\tpublic setTo(to:Object):void { this.to = to; }\n\t\tprivate to:Object;\n\n\t\tpublic getFrom():Object { return this.from; }\n\t\tpublic setFrom(from:Object):void { this.from = from; }\n\t\tprivate from:Object;\n\n\t\tpublic getEasing():EasingFunction { return this.easing; }\n\t\tpublic setEasing(easing:EasingFunction):void { this.easing = easing; }\n\t\tprivate easing:EasingFunction;\n\n\t\tpublic getOnStart():TweenCallbackFunction { return this.onStart; }\n\t\tpublic setOnStart(func:TweenCallbackFunction):void { this.onStart = func; }\n\t\tprivate onStart:TweenCallbackFunction;\n\n\t\tpublic getOnUpdate():TweenCallbackFunction { return this.onUpdate; }\n\t\tpublic setOnUpdate(func:TweenCallbackFunction):void { this.onUpdate = func; }\n\t\tprivate onUpdate:TweenCallbackFunction;\n\n\t\tpublic getOnComplete():TweenCallbackFunction { return this.onComplete; }\n\t\tpublic setOnComplete(func:TweenCallbackFunction):void { this.onComplete = func; }\n\t\tprivate onComplete:TweenCallbackFunction;\n\n\t\tpublic getProgressTime():number { return this.progressTime; }\n\t\tprivate progressTime:number;\n\n\t\tpublic getProgressValue():number { return this.progressValue; }\n\t\tprivate progressValue:number;\n\n\t\tprivate startTime:number;\n\t\tprivate timerId:number;\n\t\tprivate internalFrom:Object;\n\n\t\tpublic getUpdateInterval():number { return Tween.updateInterval; }\n\t\tpublic setUpdateInterval(milliseconds:number):void { Tween.updateInterval = milliseconds; }\n\t\tprivate static updateInterval:number = 1000 / 60;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace cmd {\n\n\timport Event = alm.event.Event;\n\n\texport class Serial extends CommandList {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(...commands:(Command|Function)[]) {\n\t\t\tsuper(...commands);\n\t\t\tthis.currentCommand = null;\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommand(...commands:(Command|Function)[]):void {\n\t\t\tsuper.insertCommandAt(this.position + 1, ...commands);\n\t\t}\n\n\t\tpublic addCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.addCommand(...commands);\n\t\t}\n\n\t\tpublic insertCommandArray(commands:(Command|Function)[]):void {\n\t\t\tthis.insertCommand(...commands);\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCommand = this.getCommandByIndex(this.position);\n\t\t\tthis.currentCommand.addEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand.execute();\n\t\t}\n\n\t\tprivate completeHandler = (event:Event):void => {\n\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\tthis.currentCommand = null;\n\t\t\tif (++this.position >= this.getLength()) {\n\t\t\t\tthis.notifyComplete();\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t};\n\n\t\tprotected implExecuteFunction(command:Command):void {\n\t\t\tthis.position = 0;\n\t\t\tif (this.getLength() > 0) {\n\t\t\t\tthis.next();\n\t\t\t} else {\n\t\t\t\tthis.notifyComplete();\n\t\t\t}\n\t\t}\n\n\t\tprotected implInterruptFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tsuper.implInterruptFunction(command);\n\t\t}\n\n\t\tprotected implDestroyFunction(command:Command):void {\n\t\t\tif (this.currentCommand) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.destroy();\n\t\t\t\tthis.currentCommand = null;\n\t\t\t}\n\t\t\tthis.position = -1;\n\t\t\tthis.isPaused = false;\n\t\t\tthis.isCompleteOnPaused = false;\n\t\t\tsuper.implDestroyFunction(command);\n\t\t}\n\n\t\tprotected implNotifyBreak():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tthis.notifyComplete();\n\t\t}\n\n\t\tprotected implNotifyReturn():void {\n\t\t\tif (this.currentCommand.getState() == CommandState.Executing) {\n\t\t\t\tthis.currentCommand.removeEventListener(CommandEvent.COMPLETE, this.completeHandler);\n\t\t\t\tthis.currentCommand.interrupt();\n\t\t\t}\n\t\t\tconst func:Function = this.getParent()['notifyReturn'];\n\t\t\tif (func) func();\n\t\t\tthis.destroy();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprotected getPosition():number { return this.position; }\n\t\tprivate position:number;\n\n\t\tprivate currentCommand:Command;\n\t\tprivate isPaused:boolean;\n\t\tprivate isCompleteOnPaused:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector2 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0) {\n\t\t\tthis.set(x, y);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic copyTo(point:Vector2):void {\n\t\t\tpoint.set(this.x, this.y);\n\t\t}\n\n\t\tpublic getClone():Vector2 {\n\t\t\treturn new Vector2(this.x, this.y);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector2):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tpublic getDistance(point:Vector2):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Vector3 {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, z:number = 0) {\n\t\t\tthis.set(x, y, z);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, z:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic copyTo(point:Vector3):void {\n\t\t\tpoint.set(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic getClone():Vector3 {\n\t\t\treturn new Vector3(this.x, this.y, this.z);\n\t\t}\n\n\t\tpublic zero():void {\n\t\t\tthis.set(0, 0, 0);\n\t\t}\n\n\t\tpublic normalize():void {\n\t\t\tconst l:number = this.getLength();\n\t\t\tthis.x /= l;\n\t\t\tthis.y /= l;\n\t\t\tthis.z /= l;\n\t\t}\n\n\t\tpublic getLength():number {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tpublic getSquareDistance(point:Vector3):number {\n\t\t\tconst dx:number = point.x - this.x;\n\t\t\tconst dy:number = point.y - this.y;\n\t\t\tconst dz:number = point.z - this.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tpublic getDistance(point:Vector3):number {\n\t\t\treturn Math.sqrt(this.getSquareDistance(point));\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic z:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport class Rectangle {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0) {\n\t\t\tthis.set(x, y, width, height);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(x:number, y:number, width:number, height:number):void {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tpublic copyTo(rect:Rectangle):void {\n\t\t\trect.set(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getClone():Rectangle {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t}\n\n\t\tpublic getTop():number {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tpublic getBottom():number {\n\t\t\treturn this.y + this.height;\n\t\t}\n\n\t\tpublic getLeft():number {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tpublic getRight():number {\n\t\t\treturn this.x + this.width;\n\t\t}\n\n\t\tpublic getTopLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getTop());\n\t\t}\n\n\t\tpublic getTopRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getTop());\n\t\t}\n\n\t\tpublic getBottomLeft():Vector2 {\n\t\t\treturn new Vector2(this.getLeft(), this.getBottom());\n\t\t}\n\n\t\tpublic getBottomRight():Vector2 {\n\t\t\treturn new Vector2(this.getRight(), this.getBottom());\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic x:number;\n\t\tpublic y:number;\n\t\tpublic width:number;\n\t\tpublic height:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.geom {\n\n\texport enum Align {\n\t\tTop_Left,\n\t\tTop_Center,\n\t\tTop_Right,\n\t\tMiddle_Left,\n\t\tMiddle_Center,\n\t\tMiddle_Right,\n\t\tBottom_Left,\n\t\tBottom_Center,\n\t\tBottom_Right\n\t}\n\n\texport enum ScaleMode {\n\t\tExactFit,\n\t\tShowAll,\n\t\tNoBorder,\n\t\tNoScale,\n\t}\n\n\texport class Boxer {\n\n\t\tpublic static resize(target:geom.Rectangle, bounds:geom.Rectangle, scaleMode:ScaleMode = ScaleMode.ShowAll, align:Align = Align.Middle_Center):geom.Rectangle {\n\t\t\tlet tx:number = target.x;\n\t\t\tlet ty:number = target.y;\n\t\t\tlet tw:number = target.width;\n\t\t\tlet th:number = target.height;\n\n\t\t\tconst bx:number = bounds.x;\n\t\t\tconst by:number = bounds.y;\n\t\t\tconst bw:number = bounds.width;\n\t\t\tconst bh:number = bounds.height;\n\n\t\t\tswitch (scaleMode) {\n\t\t\t\tcase ScaleMode.ShowAll:\n\t\t\t\tcase ScaleMode.NoBorder:\n\t\t\t\t\tconst ratioW:number = bw / tw;\n\t\t\t\t\tconst ratioH:number = bh / th;\n\t\t\t\t\tconst ratio:number = scaleMode == ScaleMode.ShowAll ? (ratioW < ratioH ? ratioW : ratioH) : (ratioW > ratioH ? ratioW : ratioH);\n\t\t\t\t\ttw *= ratio;\n\t\t\t\t\tth *= ratio;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ScaleMode.ExactFit:\n\t\t\t\t\treturn new geom.Rectangle(bx, by, bw, bh);\n\t\t\t}\n\n\t\t\ttx = bx + ((align == Align.Top_Left || align == Align.Middle_Left || align == Align.Bottom_Left) ? 0 :\n\t\t\t\t(align == Align.Top_Right || align == Align.Middle_Right || align == Align.Bottom_Right) ? (bw - tw) : (bw - tw) / 2);\n\t\t\tty = by + ((align == Align.Top_Left || align == Align.Top_Center || align == Align.Top_Right) ? 0 :\n\t\t\t\t(align == Align.Bottom_Left || align == Align.Bottom_Center || align == Align.Bottom_Right) ? (bh - th) : (bh - th) / 2);\n\n\t\t\treturn new geom.Rectangle(tx, ty, tw, th);\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Obj {\n\n\t\tpublic static each(target:any, func:(key:string, value:any) => void):void {\n\t\t\tif (target == null) return;\n\t\t\tObject.keys(target).forEach((key:string):void => {\n\t\t\t\tfunc(key, target[key]);\n\t\t\t});\n\t\t}\n\n\t\tpublic static get(target:any, key:string, defaultValue:any):any {\n\t\t\tconst value:any = target[key];\n\t\t\treturn typeof value !== 'undefined' ? value : defaultValue;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Arr {\n\n\t\t/**\n\t\t * 等差数列を生成する\n\t\t * @param {number} count 要素数\n\t\t * @param {number} init 初期値\n\t\t * @param {number} step 等差\n\t\t * @returns {number[]} 出力配列\n\t\t */\n\t\tpublic static sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\t\tconst result:number[] = new Array(count);\n\t\t\tlet v:number = init;\n\t\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\t\tresult[i] = v;\n\t\t\t\tv += step;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * 重複を削除したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static unique<T>(list:T[]):T[] {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) === i;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * 重複のみを抽出したリストを生成する\n\t\t * @param list 入力配列\n\t\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t\t * @returns {T[]} 出力配列\n\t\t */\n\t\tpublic static duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\t\tif (unique) {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2つの入力配列に対して総当たり戦をおこなう\n\t\t * @param {T[]} list1 入力配列1\n\t\t * @param {T[]} list2 入力配列2\n\t\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t\t * @param callback.count コールバックの呼ばれた回数\n\t\t * @param callback.index1 入力配列1の現在のインデックス\n\t\t * @param callback.index2 入力配列2の現在のインデックス\n\t\t * @param callback.element1 入力配列1の現在の要素\n\t\t * @param callback.element2 入力配列2の現在の要素\n\t\t */\n\t\tpublic static roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\t\tlet i:number, j:number, p:number = 1;\n\t\t\tconst m:number = list1.length;\n\t\t\tconst n:number = list2.length;\n\t\t\tfor (i = 0; i < m; ++i) {\n\t\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\timport EasingFunction = alm.math.EasingFunction;\n\n\texport class Num {\n\n\t\t/**\n\t\t * 値を特定の範囲から範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {boolean} clamp trueの場合は入力値を[srcA, srcB]の範囲内に丸める\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static map(value:number, srcA:number, srcB:number, dstA:number, dstB:number, clamp:boolean = true):number {\n\t\t\tif (srcA == srcB) return dstA;\n\t\t\tif (clamp) {\n\t\t\t\tif (srcA < srcB) {\n\t\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\t} else {\n\t\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (value - srcA) * (dstB - dstA) / (srcB - srcA) + dstA;\n\t\t}\n\n\t\t/**\n\t\t * 値を特定の範囲からイージング関数を経由して特定の範囲にマッピングする\n\t\t * @param {number} value 入力値\n\t\t * @param {number} srcA マッピング元範囲の境界値A\n\t\t * @param {number} srcB マッピング元範囲の境界値B\n\t\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t\t * @param {EasingFunction} easing イージング関関数\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static ease(value:number, srcA:number, srcB:number, dstA:number, dstB:number, easing:EasingFunction):number {\n\t\t\tif (srcA == srcB) return dstA;\n\t\t\tif (srcA < srcB) {\n\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t\treturn easing((value - srcA) / (srcB - srcA)) * (dstB - dstA) + dstA;\n\t\t\t} else {\n\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t\treturn easing((value - srcB) / (srcA - srcB)) * (dstB - dstA) + dstA;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 乱数（小数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static random(min:number = 0, max:number = 1):number {\n\t\t\treturn min + (max - min) * Math.random();\n\t\t}\n\n\t\t/**\n\t\t * 乱数（整数）を取得する\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static randomInt(min:number = 0, max:number = 1):number {\n\t\t\treturn Math.floor(Num.random(min, max));\n\t\t}\n\n\t\t/**\n\t\t * 値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} min 最小値\n\t\t * @param {number} max 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clamp(value:number, min:number, max:number):number {\n\t\t\treturn value < min ? min : (value > max ? max : value);\n\t\t}\n\n\t\t/**\n\t\t * 富豪を保ったまま、値の絶対値を特定範囲内に丸める\n\t\t * @param {number} value 入力値\n\t\t * @param {number} minAbs 最小値\n\t\t * @param {number} maxAbs 最大値\n\t\t * @returns {number} 出力値\n\t\t */\n\t\tpublic static clampAbs(value:number, minAbs:number, maxAbs:number):number {\n\t\t\tif (value > 0) {\n\t\t\t\treturn value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value);\n\t\t\t} else {\n\t\t\t\tvalue = Math.abs(value);\n\t\t\t\treturn -(value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 2点間の距離を取得する\n\t\t * @param {number} x1 点1のx座標\n\t\t * @param {number} y1 点1のy座標\n\t\t * @param {number} x2 点2のx座標\n\t\t * @param {number} y2 点2のy座標\n\t\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t\t * @returns {number} 距離\n\t\t */\n\t\tpublic static dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\t\tconst dx:number = x2 - x1;\n\t\t\tconst dy:number = y2 - y1;\n\t\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\n\t\t/**\n\t\t * 値をラジアン法から弧度法に変換する\n\t\t * @param {number} radian ラジアン法\n\t\t * @returns {number} 弧度法\n\t\t */\n\t\tpublic static radToDeg(radian:number):number {\n\t\t\treturn radian * Num.RAD2DEG;\n\t\t}\n\n\t\t/**\n\t\t * 値を弧度法からラジアン法に変換する\n\t\t * @param {number} radian 弧度法\n\t\t * @returns {number} ラジアン法\n\t\t */\n\t\tpublic static degToRad(degree:number):number {\n\t\t\treturn degree * Num.DEG2RAD;\n\t\t}\n\n\t\t/**\n\t\t * ある角度からある角度への回転角度を取得する\n\t\t * @param {number} from 元の角度\n\t\t * @param {number} to 目標の角度\n\t\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t\t * @returns {number} 回転角度\n\t\t */\n\t\tpublic static turn(from:number, to:number, radian:boolean = true):number {\n\t\t\treturn radian ? ((to - from + Num.PI3) % Num.PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONST\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static PI2:number = Math.PI * 2;\n\t\tpublic static PI3:number = Math.PI * 3;\n\t\tpublic static PI4:number = Math.PI * 4;\n\t\tpublic static PI5:number = Math.PI * 5;\n\t\tpublic static PI6:number = Math.PI * 6;\n\t\tpublic static PI_2:number = Math.PI / 2;\n\t\tpublic static PI_3:number = Math.PI / 3;\n\t\tpublic static PI_4:number = Math.PI / 4;\n\t\tpublic static PI_6:number = Math.PI / 6;\n\n\t\tprivate static RAD2DEG:number = 180 / Math.PI;\n\t\tprivate static DEG2RAD:number = Math.PI / 180;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Str {\n\n\t\t/**\n\t\t * 時間を h:mm:ss の形式で取得する\n\t\t * @param {number} hours 時\n\t\t * @param {number} minutes 分\n\t\t * @param {number} seconds 秒\n\t\t * @returns {string} h:mm:ss 形式の文字列\n\t\t */\n\t\tpublic static toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\t\tseconds += minutes * 60 + hours * 3600;\n\t\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\t\tlet s:string = ('0' + Math.floor(seconds % 60)).substr(-2, 2);\n\t\t\tif (h != '0') {\n\t\t\t\treturn h + ':' + ('0' + m).substr(-2, 2) + ':' + s;\n\t\t\t} else {\n\t\t\t\treturn m + ':' + s;\n\t\t\t}\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.util {\n\n\texport class Cmd {\n\n\t\tpublic static stop(command:cmd.Command):any {\n\t\t\tif (command) command.interrupt();\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic static sequence(execute:boolean, ...commands:(cmd.Command|Function)[]):cmd.Serial {\n\t\t\tconst c:cmd.Serial = new cmd.Serial();\n\t\t\tc.addCommand(...commands);\n\t\t\tif (execute) c.execute();\n\t\t\treturn c;\n\t\t}\n\n\t\tpublic static single(execute:boolean, command:cmd.Command):cmd.Command {\n\t\t\tif (execute && command) command.execute();\n\t\t\treturn command;\n\t\t}\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.resource {\n\n\texport class ObjectPool<T> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * ObjectPool class.\n\t\t * @class\n\t\t * @param {function} onRequireItem This callback function is called when new item is required.\n\t\t * @param {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @param {number} initCount Init item count.\n\t\t * @param {number} growthCount Growth item count.\n\t\t *\n\t\t * @property {number} initCount Init item count.\n\t\t * @property {number} growthCount Growth item count.\n\t\t * @property {function} onRequireItem This callback function is called when new item is required.\n\t\t * @property {function} onDestroyItem This callback function is called when item is disposed.\n\t\t * @property {Array} items Array of items.\n\t\t * @property {number} index Current index of items.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tconstructor(onRequireItem:() => T, onDestroyItem:(item:T) => void, initCount:number = 100, growthCount:number = 50) {\n\t\t\tthis.onRequireItem = onRequireItem;\n\t\t\tthis.onDestroyItem = onDestroyItem;\n\t\t\tthis.growthCount = growthCount;\n\t\t\tthis.items = new Array(initCount);\n\t\t\tfor (let i = 0; i < initCount; ++i) {\n\t\t\t\tthis.items[i] = this.onRequireItem();\n\t\t\t}\n\t\t\tthis.index = initCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * Get item from object pool.\n\t\t * @return {T} Item\n\t\t */\n\t\tpublic getItem():T {\n\t\t\tif (this.index > 0) {\n\t\t\t\treturn this.items[--this.index];\n\t\t\t}\n\t\t\tfor (let i = 0; i < this.growthCount; ++i) {\n\t\t\t\tthis.items.unshift(this.onRequireItem());\n\t\t\t}\n\t\t\tthis.index = this.growthCount;\n\t\t\treturn this.getItem();\n\t\t}\n\n\t\t/**\n\t\t * Return item to object pool.\n\t\t * @param {T} Item.\n\t\t * @return void\n\t\t */\n\t\tpublic returnItem(item:T):void {\n\t\t\tthis.items[this.index++] = item;\n\t\t}\n\n\t\t/**\n\t\t * Optimize object pool size.\n\t\t * @return void\n\t\t */\n\t\tpublic reduce():void {\n\t\t\tconst n = this.index;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items.shift());\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t}\n\n\t\t/**\n\t\t * Destroy object pool.\n\t\t * @return void\n\t\t */\n\t\tpublic destroy():void {\n\t\t\tconst n = this.items.length;\n\t\t\tfor (let i = 0; i < n; ++i) {\n\t\t\t\tthis.onDestroyItem(this.items[i]);\n\t\t\t}\n\t\t\tthis.index = 0;\n\t\t\tthis.items = null;\n\t\t\tthis.onRequireItem = null;\n\t\t\tthis.onDestroyItem = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate items:T[];\n\t\tprivate index:number;\n\t\tprivate growthCount:number;\n\n\t\tpublic onRequireItem:() => T;\n\t\tpublic onDestroyItem:(item:T) => void;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class Lottery<T = any> {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(values:T[] = null) {\n\t\t\tif (values) {\n\t\t\t\tthis.set(values);\n\t\t\t} else {\n\t\t\t\tthis.initValues = this.restValues = null;\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = true;\n\t\t\t}\n\t\t\tthis.onCheck = null;\n\t\t\tthis.isAutoResetEnabled = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic set(values:T[]):void {\n\t\t\tthis.initValues = values.concat();\n\t\t\tthis.reset();\n\t\t}\n\n\t\tpublic get():T {\n\t\t\tif (this.isEmpty && this.isAutoResetEnabled) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\tconst index:number = Math.floor(Math.random() * this.restCount);\n\t\t\tconst value:T = this.restValues[index];\n\t\t\tlet result:boolean = true;\n\t\t\tif (this.onCheck) result = this.onCheck(value);\n\t\t\tif (result) {\n\t\t\t\tthis.restValues.splice(index, 1);\n\t\t\t\tthis.restCount = this.restValues.length;\n\t\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tpublic add(value:T, reset:boolean = false):void {\n\t\t\tthis.initValues.push(value);\n\t\t\tthis.restValues.push(value);\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t\tif (reset) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.restValues = this.initValues.concat();\n\t\t\tthis.restCount = this.restValues.length;\n\t\t\tthis.isEmpty = this.restCount == 0;\n\t\t}\n\n\t\tpublic getRestCount():number {\n\t\t\treturn this.restCount;\n\t\t}\n\n\t\tpublic getIsEmply():boolean {\n\t\t\treturn this.isEmpty;\n\t\t}\n\n\t\tpublic getIsAutoResetEnabled():boolean {\n\t\t\treturn this.isAutoResetEnabled;\n\t\t}\n\n\t\tpublic setIsAutoResetEnabled(enabled:boolean):void {\n\t\t\tthis.isAutoResetEnabled = enabled;\n\t\t}\n\n\t\tpublic static createIndices(count:number):Lottery<number> {\n\t\t\tconst values:number[] = new Array(count);\n\t\t\tfor (let i:number = 0; i < count; ++i) values[i] = i;\n\t\t\treturn new Lottery<number>(values);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic onCheck:(value:T) => boolean;\n\n\t\tprivate isAutoResetEnabled:boolean;\n\t\tprivate isEmpty:boolean;\n\t\tprivate restCount:number;\n\t\tprivate restValues:T[];\n\t\tprivate initValues:T[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\timport Hash = alm.util.Hash;\n\n\texport class Switcher<T = string> extends alm.event.EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.isLoopEnabled = true;\n\n\t\t\tthis.itemCount = 0;\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.onChange = null;\n\t\t\tthis.onPrev = null;\n\t\t\tthis.onNext = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic setupById(ids:T[]):void {\n\t\t\tthis.itemCount = ids.length;\n\t\t\tthis.itemIds = ids;\n\n\t\t\tthis.itemIndexById = {};\n\t\t\tfor (let i:number = 0; i < this.itemCount; ++i) {\n\t\t\t\tthis.itemIndexById[this.itemIds[i] as unknown as string] = i;\n\t\t\t}\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tpublic setupByCount(itemCount:number):void {\n\t\t\tthis.itemCount = itemCount;\n\n\t\t\tthis.itemIds = null;\n\t\t\tthis.itemIndexById = null;\n\n\t\t\tthis.setup();\n\t\t}\n\n\t\tprivate setup():void {\n\t\t\tthis.currentItemIndex = -1;\n\t\t\tthis.oldItemIndex = -1;\n\n\t\t\tthis.currentItemId = null;\n\t\t\tthis.prevItemId = null;\n\t\t}\n\n\t\tpublic gotoByIndex(itemIndex:number, useTransition:boolean = true):boolean {\n\t\t\tif (itemIndex < 0 || itemIndex >= this.itemCount) itemIndex = -1;\n\t\t\tif (itemIndex == this.currentItemIndex) return false;\n\n\t\t\tthis.oldItemIndex = this.currentItemIndex;\n\t\t\tthis.currentItemIndex = itemIndex;\n\n\t\t\tif (this.itemIds) {\n\t\t\t\tthis.prevItemId = this.oldItemIndex != -1 ? this.itemIds[this.oldItemIndex] : null;\n\t\t\t\tthis.currentItemId = this.currentItemIndex != -1 ? this.itemIds[this.currentItemIndex] : null;\n\t\t\t}\n\n\t\t\tthis.dispatchPagerEvent(SwitcherEvent.CHANGE, this.onChange, useTransition);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic gotoById(itemId:string, useTransition:boolean = true):boolean {\n\t\t\tconst itemIndex:number = this.itemIndexById.hasOwnProperty(itemId) ? this.itemIndexById[itemId] : -1;\n\t\t\treturn this.gotoByIndex(itemIndex, useTransition);\n\t\t}\n\n\t\tpublic prev(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.currentItemIndex - 1;\n\t\t\tif (this.isLoopEnabled && itemIndex < 0) itemIndex = this.itemCount - 1;\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.PREV, this.onPrev, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic next(useTransition:boolean = true):boolean {\n\t\t\tlet itemIndex = this.currentItemIndex + 1;\n\t\t\tif (this.isLoopEnabled && itemIndex >= this.itemCount) itemIndex = 0;\n\n\t\t\tconst result:boolean = this.gotoByIndex(itemIndex, useTransition);\n\t\t\tif (result) {\n\t\t\t\tthis.dispatchPagerEvent(SwitcherEvent.NEXT, this.onNext, useTransition);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tprivate dispatchPagerEvent(eventType:string, callback:(event:SwitcherEvent<T>) => void, useTransition:boolean):void {\n\t\t\tconst event:SwitcherEvent<T> = new SwitcherEvent<T>(eventType, this, this.currentItemIndex, this.oldItemIndex, this.currentItemId, this.prevItemId, useTransition);\n\t\t\tif (callback) {\n\t\t\t\tcallback(event);\n\t\t\t}\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsLoopEnabled():boolean { return this.isLoopEnabled; }\n\t\tpublic setIsLoopEnabled(value:boolean):void { this.isLoopEnabled = value; }\n\t\tprivate isLoopEnabled:boolean;\n\n\t\tpublic getCurrentItemIndex():number { return this.currentItemIndex; }\n\t\tprivate currentItemIndex:number;\n\n\t\tpublic getPrevItemIndex():number { return this.oldItemIndex; }\n\t\tprivate oldItemIndex:number;\n\n\t\tpublic getItemCount():number { return this.itemCount; }\n\t\tprivate itemCount:number;\n\n\t\tpublic getCurrentItemId():T { return this.currentItemId; }\n\t\tprivate currentItemId:T;\n\n\t\tpublic getPrevItemId():T { return this.prevItemId; }\n\t\tprivate prevItemId:T;\n\n\t\tpublic getItemIds():T[] { return this.itemIds; }\n\t\tprivate itemIds:T[];\n\n\t\tprivate itemIndexById:Hash<number>;\n\n\t\tpublic onChange:(event:SwitcherEvent<T>) => void;\n\t\tpublic onPrev:(event:SwitcherEvent<T>) => void;\n\t\tpublic onNext:(event:SwitcherEvent<T>) => void;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class SwitcherEvent<T = string> extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static PREV:string = 'prev';\n\t\tpublic static NEXT:string = 'next';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any, currentItemIndex:number, prevItemIndex:number, currentItemId:T, prevItemId:T, useTransition:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.currentItemIndex = currentItemIndex;\n\t\t\tthis.prevItemIndex = prevItemIndex;\n\t\t\tthis.currentItemId = currentItemId;\n\t\t\tthis.prevItemId = prevItemId;\n\t\t\tthis.useTransition = useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SwitcherEvent<T> {\n\t\t\treturn new SwitcherEvent<T>(this.getType(), this.getTarget(), this.currentItemIndex, this.prevItemIndex, this.currentItemId, this.prevItemId, this.useTransition);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SwitcherEvent] type = ' + this.getType() + ', ' + this.prevItemIndex + ' -> ' + this.currentItemIndex + ', transition = ' + this.useTransition;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentItemIndex:number;\n\t\tpublic readonly prevItemIndex:number;\n\t\tpublic readonly currentItemId:T;\n\t\tpublic readonly prevItemId:T;\n\t\tpublic readonly useTransition:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class LoHi extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(lowThreshold:number, highThreshold:number, initValue:number = 0) {\n\t\t\tsuper();\n\n\t\t\tthis.lowThreshold = lowThreshold;\n\t\t\tthis.highThreshold = highThreshold;\n\t\t\tthis.isHigh = false;\n\t\t\tthis._set(initValue, false);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * 新しい入力値を設定する\n\t\t * @param {number} value 入力値\n\t\t * @returns {boolean} 結果が更新されればtrue\n\t\t */\n\t\tpublic set(value:number):boolean {\n\t\t\treturn this._set(value, true);\n\t\t}\n\n\t\tpublic getIsHigh():boolean {\n\t\t\treturn this.isHigh;\n\t\t}\n\n\t\tpublic getValue():number {\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic getLowThreshold():number {\n\t\t\treturn this.lowThreshold;\n\t\t}\n\n\t\tpublic getHighThreshold():number {\n\t\t\treturn this.highThreshold;\n\t\t}\n\n\t\tpublic setLowThreshold(threshold:number):void {\n\t\t\tthis.lowThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tpublic setHighThreshold(threshold:number):void {\n\t\t\tthis.highThreshold = threshold;\n\t\t\tthis._set(this.value, true);\n\t\t}\n\n\t\tprivate _set(value:number, dispatchEvent:boolean):boolean {\n\t\t\tthis.value = value;\n\t\t\tif (this.isHigh && this.value < this.lowThreshold) {\n\t\t\t\tthis.isHigh = false;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.LOW, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (!this.isHigh && this.value > this.highThreshold) {\n\t\t\t\tthis.isHigh = true;\n\t\t\t\tif (dispatchEvent) {\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.HIGH, this, this.isHigh));\n\t\t\t\t\tthis.dispatchEvent(new LoHiEvent(LoHiEvent.CHANGE, this, this.isHigh));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate lowThreshold:number;\n\t\tprivate highThreshold:number;\n\t\tprivate value:number;\n\t\tprivate isHigh:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.state {\n\n\texport class LoHiEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static CHANGE:string = 'change';\n\t\tpublic static LOW:string = 'low';\n\t\tpublic static HIGH:string = 'high';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any, isHigh:boolean) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.isHigh = isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():LoHiEvent {\n\t\t\treturn new LoHiEvent(this.getType(), this.getTarget(), this.isHigh);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[LoHiEvent] type = ' + this.getType() + ', isHigh = ' + this.isHigh;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly isHigh:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class EasingValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, easing:number = 0.1, tolerance:number = 0) {\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.easing = easing;\n\t\t\tthis.tolerance = tolerance;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tconst d:number = this.target - this.value;\n\t\t\t\tif (this.tolerance > 0 && Math.abs(d) <= this.tolerance) {\n\t\t\t\t\tthis.value = this.target;\n\t\t\t\t} else {\n\t\t\t\t\tthis.value += d * this.easing;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():EasingValue {\n\t\t\tconst v:EasingValue = new EasingValue(this.value, this.easing, this.tolerance);\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic easing:number;\n\t\tpublic tolerance:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SpringValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(initValue:number, spring:number = 0.1, friction:number = 0.9) {\n\t\t\tthis.acceleration = 0;\n\t\t\tthis.velocity = 0;\n\t\t\tthis.value = this.target = initValue;\n\t\t\tthis.spring = spring;\n\t\t\tthis.friction = friction;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic update(useTransition:boolean = true):number {\n\t\t\tif (useTransition) {\n\t\t\t\tthis.acceleration = (this.target - this.value) * this.spring;\n\t\t\t\tthis.velocity += this.acceleration;\n\t\t\t\tthis.velocity *= this.friction;\n\t\t\t\tthis.value += this.velocity;\n\t\t\t} else {\n\t\t\t\tthis.acceleration = 0;\n\t\t\t\tthis.velocity = 0;\n\t\t\t\tthis.value = this.target;\n\t\t\t}\n\n\t\t\treturn this.value;\n\t\t}\n\n\t\tpublic clone():SpringValue {\n\t\t\tconst v:SpringValue = new SpringValue(this.value, this.spring, this.friction);\n\t\t\tv.acceleration = this.acceleration;\n\t\t\tv.velocity = this.velocity;\n\t\t\tv.target = this.target;\n\t\t\treturn v;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic target:number;\n\t\tpublic velocity:number;\n\t\tpublic acceleration:number;\n\t\tpublic spring:number;\n\t\tpublic friction:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tthis._value = (this._value * this._count + n) / ++this._count;\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _count:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class SimpleMovingAverage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxCount:number) {\n\t\t\tthis.maxCount = this._maxCount = maxCount;\n\t\t\tthis.value = this._value = 0;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._count = this._maxCount;\n\n\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\tthis._value -= oldest;\n\n\t\t\t\tconst latest:number = n / this._maxCount;\n\t\t\t\tthis._value += latest;\n\n\t\t\t\tthis.values.push(latest);\n\n\t\t\t} else {\n\t\t\t\tthis._value *= (this._count - 1);\n\t\t\t\tthis._value += n;\n\t\t\t\tthis._value /= this._count;\n\n\t\t\t\tthis.values.push(n / this._maxCount);\n\t\t\t}\n\n\t\t\t/*\n\t\t\tthis._values.push(n);\n\n\t\t\tif (++this._count > this._maxCount) {\n\t\t\t\tthis._values.shift();\n\t\t\t\tthis._count = this._maxCount;\n\t\t\t}\n\n\t\t\tthis._value = 0;\n\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\tthis._value += this._values[i];\n\t\t\t}\n\t\t\tthis._value /= this._count;\n\t\t\t*/\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class MaxValue {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(maxLatestCount:number = 0) {\n\t\t\tthis.maxLatestCount = this._maxLatestCount = maxLatestCount;\n\t\t\tthis.value = this._value = -Number.MAX_VALUE;\n\t\t\tthis.count = this._count = 0;\n\t\t\tthis.values = [];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(n:number):number {\n\t\t\tif (this._maxLatestCount > 0) {\n\t\t\t\tif (++this._count > this._maxLatestCount) {\n\t\t\t\t\tthis._count = this._maxLatestCount;\n\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tconst oldest:number = this.values.shift();\n\t\t\t\t\tif (this._value > oldest) {\n\t\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._value = -Number.MAX_VALUE;\n\t\t\t\t\t\tfor (let i:number = 0; i < this._count; ++i) {\n\t\t\t\t\t\t\tconst v:number = this.values[i];\n\t\t\t\t\t\t\tif (this._value < v) {\n\t\t\t\t\t\t\t\tthis._value = v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.values.push(n);\n\t\t\t\t\tif (this._value < n) {\n\t\t\t\t\t\tthis._value = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++this._count;\n\t\t\t\tif (this._value < n) {\n\t\t\t\t\tthis._value = n;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.value = this._value;\n\t\t\tthis.count = this._count;\n\n\t\t\treturn this._value;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic value:number;\n\t\tpublic maxLatestCount:number;\n\t\tpublic count:number;\n\n\t\tprivate _value:number;\n\t\tprivate _maxLatestCount:number;\n\t\tprivate _count:number;\n\n\t\tprivate values:number[];\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.math {\n\n\texport class Circular {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(angle:number = 0, velocity:number = 0, radian:boolean = true) {\n\t\t\tthis.setAngle(angle, radian);\n\t\t\tthis.setVelocity(velocity, radian);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getAngle(radian:boolean = true):number {\n\t\t\treturn radian ? this.angle : (this.angle * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setAngle(angle:number, radian:boolean = true):void {\n\t\t\tthis.angle = radian ? angle : (angle * Math.PI / 180);\n\t\t}\n\n\t\tpublic getVelocity(radian:boolean = true):number {\n\t\t\treturn radian ? this.velocity : (this.velocity * 180 / Math.PI);\n\t\t}\n\n\t\tpublic setVelocity(velocity:number, radian:boolean = true):void {\n\t\t\tthis.velocity = radian ? velocity : (velocity * Math.PI / 180);\n\t\t}\n\n\t\tpublic update():void {\n\t\t\tthis.angle += this.velocity;\n\t\t}\n\n\t\tpublic getSin(length:number = 1):number {\n\t\t\treturn length * Math.sin(this.angle);\n\t\t}\n\n\t\tpublic getCos(length:number = 1):number {\n\t\t\treturn length * Math.cos(this.angle);\n\t\t}\n\n\t\tpublic getTan(length:number = 1):number {\n\t\t\treturn length * Math.tan(this.angle);\n\t\t}\n\n\t\tpublic getMagnitude(length:number = 1):number {\n\t\t\treturn length * (1 + Math.sin(this.angle)) / 2;\n\t\t}\n\n\t\tpublic getVector(length:number = 1, xy:{ x:number, y:number } = null):{ x:number, y:number } {\n\t\t\tif (xy != null) {\n\t\t\t\txy.x = this.getCos(length);\n\t\t\t\txy.y = this.getSin(length);\n\t\t\t} else {\n\t\t\t\treturn { x: this.getCos(length), y: this.getSin(length) };\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate angle:number;\n\t\tprivate velocity:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class AnimationFrameTicker extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * requestAnimationFrameベースでのFPSタイマー\n\t\t * @param {number} frameRate 目標フレームレート（0の場合はフレームレートを制限しない）\n\t\t * @param {number} tolerance 許容誤差（frameRateに対する割合）\n\t\t */\n\t\tconstructor(frameRate:number = 0, tolerance:number = 0.1) {\n\t\t\tsuper();\n\n\t\t\tthis.targetFrameRate = frameRate;\n\t\t\tthis.interval = 1000 / this.targetFrameRate;\n\n\t\t\tthis.tolerance = tolerance;\n\t\t\tthis.toleranceDuration = this.interval * this.tolerance;\n\n\t\t\tthis.isRunning = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.frameStartTime = Time.now();\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\twindow.cancelAnimationFrame(this.requestId);\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getTargetFrameRate():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tprivate setInterval(callback:Function):number {\n\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t}\n\n\t\tprivate clearInterval(requestId:number):void {\n\t\t\twindow.clearInterval(requestId);\n\t\t}\n\n\t\tprivate updateHandler = ():void => {\n\t\t\tthis.requestId = window.requestAnimationFrame(this.updateHandler);\n\t\t\tif (this.targetFrameRate > 0) {\n\t\t\t\tconst currentTime:number = Time.now();\n\t\t\t\tconst elapsedTime:number = currentTime - this.frameStartTime;\n\t\t\t\tif (elapsedTime >= this.interval - this.toleranceDuration) {\n\t\t\t\t\t//trace('[AnimationFrameTicker] frameRate : ' + (1000 / elapsedTime));\n\t\t\t\t\tthis.frameStartTime = currentTime;\n\t\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new AnimationFrameTickerEvent(AnimationFrameTickerEvent.TICK, this));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate requestId:number;\n\n\t\tprivate targetFrameRate:number;\n\t\tprivate tolerance:number;\n\t\tprivate toleranceDuration:number;\n\t\tprivate interval:number;\n\t\tprivate frameStartTime:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class AnimationFrameTickerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():AnimationFrameTickerEvent {\n\t\t\treturn new AnimationFrameTickerEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[AnimationFrameTickerEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Time = alm.util.Time;\n\n\texport class Timer extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(interval:number = 1000, repeatCount:number = 0) {\n\t\t\tsuper();\n\t\t\tthis.interval = interval;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tId = -1;\n\t\t\tthis.reset();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\t\t\tthis.tStartTime = Time.now();\n\t\t\tthis.startInterval(this.tRestTime != -1 ? this.tRestTime : this.interval);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tRestTime = Time.now() - this.tStartTime;\n\t\t\tthis.stopInterval();\n\t\t}\n\n\t\tpublic reset():void {\n\t\t\tthis.stop();\n\t\t\tthis.elapsedCount = 0;\n\t\t\tthis.tRestTime = -1;\n\t\t}\n\n\t\tpublic restart():void {\n\t\t\tthis.reset();\n\t\t\tthis.start();\n\t\t}\n\n\n\n\n\n\t\tprivate startInterval(interval:number):void {\n\t\t\tthis.stopInterval();\n\t\t\tthis.tInterval = interval;\n\t\t\tthis.tId = window.setInterval(this.timerHandler, this.tInterval);\n\t\t}\n\n\t\tprivate stopInterval():void {\n\t\t\tif (this.tId != -1) {\n\t\t\t\tclearInterval(this.tId);\n\t\t\t\tthis.tId = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatch(eventType:string):void {\n\t\t\tthis.dispatchEvent(new TimerEvent(eventType, this, this.elapsedCount, this.repeatCount, this.getRestCount()));\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tthis.tStartTime = Time.now();\n\t\t\t++this.elapsedCount;\n\t\t\tlet isCompleted:boolean = false;\n\t\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\t\tisCompleted = true;\n\t\t\t\tthis.stop();\n\t\t\t} else if (this.tInterval != this.interval) {\n\t\t\t\tthis.startInterval(this.interval);\n\t\t\t}\n\t\t\tthis.dispatch(TimerEvent.TICK);\n\t\t\tif (isCompleted) {\n\t\t\t\tthis.dispatch(TimerEvent.COMPLETE);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getIsRunning():boolean { return this.isRunning; }\n\t\tprivate isRunning:boolean;\n\n\t\tpublic getInterval():number { return this.interval; }\n\t\tpublic setInterval(interval:number):void { this.interval = interval; }\n\t\tprivate interval:number;\n\n\t\tpublic getElapsedTime():number { return Time.now() - this.tStartTime; }\n\n\t\tpublic getRestTime():number { return this.interval - this.getElapsedTime(); }\n\n\t\tpublic getElapsedCount():number { return this.elapsedCount; }\n\t\tprivate elapsedCount:number;\n\n\t\tpublic getRepeatCount():number { return this.repeatCount; }\n\t\tpublic setRepeatCount(count:number):void { this.repeatCount = count; }\n\t\tprivate repeatCount:number;\n\n\t\tpublic getRestCount():number { return this.repeatCount - this.elapsedCount; }\n\n\t\tprivate tStartTime:number;\n\t\tprivate tRestTime:number;\n\t\tprivate tInterval:number;\n\t\tprivate tId:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.time {\n\n\timport Event = alm.event.Event;\n\n\texport class TimerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TICK:string = 'tick';\n\t\tpublic static COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, elapsedCount:number = 0, repeatCount:number = 0, restCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.elapsedCount = elapsedCount;\n\t\t\tthis.repeatCount = repeatCount;\n\t\t\tthis.restCount = restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():TimerEvent {\n\t\t\treturn new TimerEvent(this.getType(), this.getTarget(), this.elapsedCount, this.repeatCount, this.restCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[TimerEvent] type = ' + this.getType() + ', elapsedCount = ' + this.elapsedCount + ', repeatCount=' + this.repeatCount + ', restCount=' + this.restCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly elapsedCount:number;\n\t\tpublic readonly repeatCount:number;\n\t\tpublic readonly restCount:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\texport type CompleteFunction = (content:any, info?:any) => void;\n\texport type ErrorFunction = (info?:any) => void;\n\n\texport class FileLoader extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(totalThreadCount:number = 3) {\n\t\t\tsuper();\n\n\t\t\tthis.isLoading_ = false;\n\n\t\t\tthis.currentCount = 0;\n\t\t\tthis.totalCount = 0;\n\n\t\t\tthis.currentThreadCount = 0;\n\t\t\tthis.totalThreadCount = totalThreadCount;\n\n\t\t\tthis.loadingQueries = [];\n\t\t\tthis.loadingQueryIndex = -1;\n\n\t\t\tthis.queriesByQueryId = {};\n\t\t\tthis.queriesByUrl = {};\n\n\t\t\tthis.handlersByType = {};\n\n\t\t\ttrace('[FileLoader] totalThreadCount : ' + this.totalThreadCount);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic require(url:string, type:string, id:string = ''):string {\n\t\t\treturn this.addQuery(type, url, {}, id);\n\t\t}\n\n\t\tprivate addQuery(type:string, url:string, param:any, id:string = ''):string {\n\t\t\tif (this.queriesByUrl[url]) return this.queriesByUrl[url].id;\n\n\t\t\tconst query:FileQuery = new FileQuery();\n\t\t\tquery.type = type;\n\t\t\tquery.url = url;\n\t\t\tquery.param = param;\n\n\t\t\tif (id != '') {\n\t\t\t\tquery.id = id;\n\t\t\t} else {\n\t\t\t\tquery.id = String(FileLoader.id);\n\t\t\t\t++FileLoader.id;\n\t\t\t}\n\n\t\t\tthis.loadingQueries.push(query);\n\t\t\tthis.queriesByQueryId[query.id] = query;\n\t\t\tthis.queriesByUrl[query.url] = query;\n\t\t\treturn query.id;\n\t\t}\n\n\t\tpublic load():void {\n\t\t\tif (this.isLoading_) return;\n\t\t\tthis.isLoading_ = true;\n\t\t\tthis.loadingQueryIndex = -1;\n\t\t\tthis.next();\n\t\t}\n\n\t\tprivate next():void {\n\t\t\tthis.currentCount = this.loadingQueryIndex + 1;\n\t\t\tthis.totalCount = this.loadingQueries.length;\n\n\t\t\tconst progress = this.currentCount / this.totalCount;\n\t\t\tif (this.currentCount == 0) {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.START, this, progress, this.currentCount, this.totalCount));\n\t\t\t} else {\n\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.PROGRESS, this, progress, this.currentCount, this.totalCount));\n\t\t\t}\n\n\t\t\twhile (this.currentThreadCount < this.totalThreadCount) {\n\t\t\t\tif (this.loadingQueryIndex + 1 < this.totalCount) {\n\t\t\t\t\t// add thread\n\t\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\t\tquery.isLoading = true;\n\t\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\t\tif (handler) {\n\t\t\t\t\t\thandler.load(query.url, (content:any, info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content, info);\n\t\t\t\t\t\t},(info:any = null):void => {\n\t\t\t\t\t\t\tthis.fileLoadErrorHandler(query, info);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\t}\n\t\t\t\t\t// continue loop\n\n\t\t\t\t} else {\n\t\t\t\t\t// all finished\n\t\t\t\t\tthis.isLoading_ = false;\n\t\t\t\t\tthis.loadingQueries = [];\n\t\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\t\tthis.dispatchEvent(new FileLoaderProgressEvent(FileLoaderProgressEvent.COMPLETE, this, progress, this.currentCount, this.totalCount));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\tif (this.currentCount < this.totalCount) {\n\t\t\t\t++this.loadingQueryIndex;\n\t\t\t\tconst query:FileQuery = this.loadingQueries[this.loadingQueryIndex];\n\t\t\t\tquery.isLoading = true;\n\t\t\t\tquery.isLoadComplete = false;\n\t\t\t\ttrace('[FileLoader] loading... ' + '\\'' + query.url + '\\' as \\'' + query.type + '\\'');\n\n\t\t\t\t++this.currentThreadCount;\n\n\t\t\t\tconst handler:IFileHandler = this.handlersByType[query.type];\n\t\t\t\tif (handler) {\n\t\t\t\t\thandler.load(query.url, (content:any):void => {\n\t\t\t\t\t\tthis.fileLoadCompleteHandler(query, content);\n\t\t\t\t\t},(message:string = ''):void => {\n\t\t\t\t\t\tthis.fileLoadErrorHandler(query, message);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttrace('[FileLoader] handler is not found \\'' + query.type + '\\'');\n\t\t\t\t\t--this.currentThreadCount;\n\t\t\t\t\tthis.next();\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis.isLoading_ = false;\n\t\t\t\tthis.loadingQueries = [];\n\t\t\t\tthis.loadingQueryIndex = -1;\n\t\t\t\tthis.dispatchEvent(new FileLoaderEvent(FileLoaderEvent.COMPLETE, this, this.currentCount / this.totalCount, this.currentCount, this.totalCount));\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tpublic addHandler(handler:IFileHandler):void {\n\t\t\tthis.handlersByType[handler.getType()] = handler;\n\t\t}\n\n\t\tprivate fileLoadCompleteHandler = (query:FileQuery, content:any, info:object = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tquery.content = content;\n\t\t\tif (query.param.onLoad) {\n\t\t\t\tquery.param.onLoad(content, info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderSuccessEvent(FileLoaderSuccessEvent.SUCCESS, this, content, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tprivate fileLoadErrorHandler = (query:FileQuery, info:any = null):void => {\n\t\t\t--this.currentThreadCount;\n\t\t\tquery.isLoading = false;\n\t\t\tquery.isLoadComplete = true;\n\t\t\tif (query.param.onError) {\n\t\t\t\tquery.param.onError(info);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new FileLoaderErrorEvent(FileLoaderErrorEvent.ERROR, this, info));\n\t\t\tthis.next();\n\t\t};\n\n\t\tpublic getQueryByQueryId(queryId:string):FileQuery {\n\t\t\treturn this.queriesByQueryId[queryId];\n\t\t}\n\n\t\tpublic getQueryByUrl(url:string):FileQuery {\n\t\t\treturn this.queriesByUrl[url];\n\t\t}\n\n\t\tpublic isLoading():boolean {\n\t\t\treturn this.isLoading_;\n\t\t}\n\n\t\tpublic getCurrentCount():number {\n\t\t\treturn this.currentCount;\n\t\t}\n\n\t\tpublic getTotalCount():number {\n\t\t\treturn this.totalCount;\n\t\t}\n\n\t\tpublic getContentByUrl<T = any>(url:string):T {\n\t\t\treturn this.queriesByUrl[url].content;\n\t\t}\n\n\t\tpublic getContentByQueryId<T = any>(textureId:string):T {\n\t\t\treturn this.queriesByQueryId[textureId].content;\n\t\t}\n\n\t\tpublic getCurrentThreadCount():number {\n\t\t\treturn this.currentThreadCount;\n\t\t}\n\n\t\tpublic getTotalThreadCount():number {\n\t\t\treturn this.totalThreadCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isLoading_:boolean;\n\n\t\tprivate currentCount:number;\n\t\tprivate totalCount:number;\n\n\t\tprivate currentThreadCount:number;\n\t\tprivate totalThreadCount:number;\n\n\t\tprivate loadingQueries:FileQuery[];\n\t\tprivate loadingQueryIndex:number;\n\n\t\tprivate queriesByQueryId:util.Hash<FileQuery>;\n\t\tprivate queriesByUrl:util.Hash<FileQuery>;\n\n\t\tprivate handlersByType:util.Hash<IFileHandler>;\n\n\t\tprivate static id:number = 0;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderProgressEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic START:string = 'start';\n\t\tstatic PROGRESS:string = 'progress';\n\t\tstatic COMPLETE:string = 'complete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, progress:number = 0, loadedCount:number = 0, totalCount:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.progress = progress;\n\t\t\tthis.loadedCount = loadedCount;\n\t\t\tthis.totalCount = totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderProgressEvent {\n\t\t\treturn new FileLoaderProgressEvent(this.getType(), this.getTarget(), this.progress, this.loadedCount, this.totalCount);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderProgressEvent] type = ' + this.getType() + ', progress = ' + this.progress + ', loadedCount = ' + this.loadedCount + ', totalCount = ' + this.totalCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly progress:number;\n\t\tpublic readonly loadedCount:number;\n\t\tpublic readonly totalCount:number;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderSuccessEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SUCCESS:string = 'success';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, content:any, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.content = content;\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderSuccessEvent {\n\t\t\treturn new FileLoaderSuccessEvent(this.getType(), this.getTarget(), this.content, this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderSuccessEvent] type = ' + this.getType() + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly content:any;\n\t\tpublic readonly info:any;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileLoaderErrorEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic ERROR:string = 'error';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, info:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.info = info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():FileLoaderErrorEvent {\n\t\t\treturn new FileLoaderErrorEvent(this.getType(), this.getTarget(), this.info);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[FileLoaderErrorEvent] type = ' + this.getType() + ', info = ' + this.info;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly info:any;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.io {\n\n\texport class FileQuery {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.isLoadComplete = false;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic id:string;\n\t\tpublic type:string;\n\t\tpublic url:string;\n\t\tpublic param:any;\n\t\tpublic content:any;\n\t\tpublic isLoading:boolean;\n\t\tpublic isLoadComplete:boolean;\n\t}\n}\n","/// <reference path=\"../../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport Cmd = alm.util.Cmd;\n\timport Easing = alm.math.Easing;\n\n\texport class AudioClip {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(context:AudioContext, destination:AudioNode, fileName:string = '', masterVolume:number = 1) {\n\t\t\t//this.context = new AudioContext();\n\t\t\tthis.context = context;\n\t\t\tthis.masterVolume = masterVolume;\n\n\t\t\tthis.buffer = null;\n\t\t\tthis.sourceNode = null;\n\t\t\tthis.isAvailable = false;\n\n\t\t\tthis.duration = 0;\n\n\t\t\tthis.gainNode = this.context.createGain();\n\t\t\tthis.gainNode.connect(destination);\n\n\t\t\tthis.volume = 1;\n\t\t\tthis.applyVolume();\n\n\t\t\tif (fileName != '') {\n\t\t\t\tthis.load(fileName);\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic load(url:string):void {\n\t\t\tconst request:XMLHttpRequest = new XMLHttpRequest();\n\t\t\trequest.responseType = 'arraybuffer';\n\t\t\trequest.onreadystatechange = ():void => {\n\t\t\t\tif (request.readyState == 4) {\n\t\t\t\t\tif (request.status == 0 || request.status == 200) {\n\t\t\t\t\t\tthis.context.decodeAudioData(request.response, (buffer:AudioBuffer):void => {\n\t\t\t\t\t\t\ttrace('[AudioClip] load complete :', url);\n\t\t\t\t\t\t\tthis.isAvailable = true;\n\t\t\t\t\t\t\tthis.buffer = buffer;\n\t\t\t\t\t\t\tthis.duration = this.buffer.duration;\n\t\t\t\t\t\t}, (error:Error):void => {\n\t\t\t\t\t\t\ttrace('[AudioClip] load error :', error);\n\t\t\t\t\t\t\ttrace(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\trequest.open('GET', url, true);\n\t\t\trequest.send('');\n\t\t}\n\n\t\tpublic play(loop:boolean = false, overwrite:boolean = true):void {\n\t\t\tif (!this.isAvailable) return;\n\t\t\tif (!overwrite && this.sourceNode) return;\n\t\t\tthis.stop();\n\t\t\tthis.sourceNode = this.context.createBufferSource();\n\t\t\tthis.sourceNode.buffer = this.buffer;\n\t\t\tthis.sourceNode.loop = loop;\n\t\t\tthis.sourceNode.connect(this.gainNode);\n\t\t\tthis.sourceNode.start(0);\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (this.sourceNode) {\n\t\t\t\tthis.sourceNode.stop();\n\t\t\t\tthis.sourceNode.disconnect(this.gainNode);\n\t\t\t\tthis.sourceNode = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic getVolume():number {\n\t\t\treturn this.volume;\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tCmd.stop(this.volumeTween);\n\t\t\tif (this.volume == volume) return;\n\t\t\tthis.volume = volume;\n\t\t\tthis.applyVolume();\n\t\t}\n\n\t\tpublic fadeTo(to:number, duration:number = 1000, onComplete:Function = null):void {\n\t\t\tCmd.stop(this.volumeTween);\n\t\t\tthis.volumeTween = new cmd.Tween(this, { volume: to }, null, duration, Easing.linear, null, ():void => {\n\t\t\t\tthis.applyVolume();\n\t\t\t}, ():void => {\n\t\t\t\tif (onComplete) onComplete();\n\t\t\t});\n\t\t\tthis.volumeTween.execute();\n\t\t}\n\n\t\tpublic fadeIn(duration:number = 1000):void {\n\t\t\tthis.fadeTo(1, duration);\n\t\t}\n\n\t\tpublic fadeOut(duration:number = 1000, stopOnComplete:boolean = true):void {\n\t\t\tthis.fadeTo(0, duration, ():void => {\n\t\t\t\tif (stopOnComplete) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tprivate applyVolume():void {\n\t\t\tthis.gainNode.gain.value = this.volume * this.masterVolume;\n\t\t}\n\n\t\tpublic getIsAvailable():boolean {\n\t\t\treturn this.isAvailable;\n\t\t}\n\n\t\tpublic getDuration():number {\n\t\t\treturn this.duration;\n\t\t}\n\n\t\tpublic getCurrentTime():number {\n\t\t\treturn this.context.currentTime;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isAvailable:boolean;\n\t\tprivate context:AudioContext;\n\t\tprivate volume:number;\n\t\tprivate masterVolume:number;\n\t\tprivate buffer:AudioBuffer;\n\t\tprivate duration:number;\n\t\tprivate sourceNode:AudioBufferSourceNode;\n\t\tprivate gainNode:GainNode;\n\t\tprivate volumeTween:cmd.Tween;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Hash = alm.util.Hash;\n\n\texport class AudioPlayer extends EventDispatcher {\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate constructor() {\n\t\t\tsuper();\n\n\t\t\tconst AudioContext:any = window['AudioContext'] || window['webkitAudioContext'] || null;\n\t\t\tthis.isAvailable = AudioContext != null;\n\t\t\tif (this.isAvailable) {\n\t\t\t\tthis.context = new AudioContext();\n\t\t\t\tthis.clipsById = {};\n\n\t\t\t\tthis.masterGainNode = this.context.createGain();\n\t\t\t\tthis.masterGainNode.connect(this.context.destination);\n\t\t\t\tthis.masterVolume = 1;\n\t\t\t}\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolute:number = 1, id:string = ''):boolean {\n\t\t\tif (!this.isAvailable) return false;\n\t\t\tif (id == '') id = url;\n\t\t\tif (this.clipsById[id]) return false;\n\t\t\tthis.clipsById[id] = new AudioClip(this.context, this.masterGainNode, url, masterVolute);\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic getClip(id:string):AudioClip {\n\t\t\tif (!this.isAvailable) return;\n\t\t\treturn this.clipsById[id];\n\t\t}\n\n\t\tpublic getMasterVolume():number {\n\t\t\tif (!this.isAvailable) return 0;\n\t\t\treturn this.masterVolume;\n\t\t}\n\n\t\tpublic setMasterVolume(volume:number):void {\n\t\t\tif (!this.isAvailable) return;\n\t\t\tthis.masterVolume = volume;\n\t\t\tthis.masterGainNode.gain.value = this.masterVolume;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getInstance():AudioPlayer { return AudioPlayer.instance || (AudioPlayer.instance = new AudioPlayer()); }\n\t\tprivate static instance:AudioPlayer = null;\n\n\t\tprivate isAvailable:boolean;\n\t\tprivate context:AudioContext;\n\t\tprivate clipsById:Hash<AudioClip>;\n\n\t\tprivate masterGainNode:GainNode;\n\t\tprivate masterVolume:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\texport class CrossOverLoopAudio {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(crossOverDuration:number = 1) {\n\t\t\tthis.audioPlayer = AudioPlayer.getInstance();\n\n\t\t\tthis.clipCount = 0;\n\t\t\tthis.clipIndex = 0;\n\t\t\tthis.clipIds = [];\n\t\t\tthis.clip = null;\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.volume = 1;\n\n\t\t\tthis.crossOverDuration = crossOverDuration;\n\t\t\tthis.timeoutId = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolume:number = 1):void {\n\t\t\tconst id = url + '-' + this.clipCount;\n\t\t\tthis.audioPlayer.add(url, masterVolume, id);\n\t\t\tthis.clipIds.push(id);\n\t\t\tthis.clipCount = this.clipIds.length;\n\t\t}\n\n\t\tpublic play():void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.playCurrent();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\n\t\t\tthis.stopCurrent();\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tthis.volume = volume;\n\n\t\t\tif (this.clip) {\n\t\t\t\tthis.clip.setVolume(this.volume);\n\t\t\t}\n\t\t}\n\n\t\tprivate playCurrent():void {\n\t\t\tthis.clip = this.audioPlayer.getClip(this.clipIds[this.clipIndex]);\n\t\t\tthis.clip.setVolume(this.volume);\n\t\t\tthis.clip.play(false, true);\n\n\t\t\tconst interval = (this.clip.getDuration() - this.crossOverDuration) * 1000;\n\t\t\tthis.timeoutId = window.setTimeout(this.timerHandler, interval);\n\t\t}\n\n\t\tprivate stopCurrent():void {\n\t\t\tif (this.timeoutId != -1) {\n\t\t\t\twindow.clearTimeout(this.timeoutId);\n\t\t\t\tthis.timeoutId = -1;\n\t\t\t}\n\n\t\t\tif (this.clip) {\n\t\t\t\tthis.clip.stop();\n\t\t\t\tthis.clip = null;\n\t\t\t}\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tif (++this.clipIndex == this.clipCount) this.clipIndex = 0;\n\t\t\tthis.playCurrent();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate audioPlayer:AudioPlayer;\n\t\tprivate volume:number;\n\n\t\tprivate clipIds:string[];\n\t\tprivate clip:AudioClip;\n\t\tprivate clipIndex:number;\n\t\tprivate clipCount:number;\n\n\t\tprivate isPlaying:boolean;\n\n\t\tprivate crossOverDuration:number;\n\t\tprivate timeoutId:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.audio {\n\n\timport Num = alm.util.Num;\n\timport Easing = alm.math.Easing;\n\n\texport class FootstepAudio {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic constructor(intervalMin:number = 0.12, intervalMax:number = 0.6) {\n\t\t\tthis.audioPlayer = AudioPlayer.getInstance();\n\n\t\t\tthis.intervalMin = intervalMin;\n\t\t\tthis.intervalMax = intervalMax;\n\t\t\tthis.intervalId = -1;\n\t\t\tthis.interval = this.intervalMax;\n\n\t\t\tthis.clipIndex = -1;\n\t\t\tthis.clipCount = 0;\n\t\t\tthis.clipIds = [];\n\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.volume = 1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic add(url:string, masterVolume:number = 1):void {\n\t\t\tconst id = url + '-' + this.clipCount;\n\t\t\tthis.audioPlayer.add(url, masterVolume, id);\n\t\t\tthis.clipIds.push(id);\n\t\t\tthis.clipCount = this.clipIds.length;\n\t\t}\n\n\t\tpublic play(immediately:boolean = true):void {\n\t\t\tif (this.isPlaying) return;\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.isWaitingForFirstStep = true;\n\t\t\tthis.startTime = immediately ? 0 : new Date().getTime();\n\t\t\tthis.intervalId = window.setInterval(this.timerHandler, 1000 / 60);\n\t\t\tthis.timerHandler();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isPlaying) return;\n\t\t\tthis.isPlaying = false;\n\n\t\t\twindow.clearInterval(this.intervalId);\n\t\t}\n\n\t\tpublic setSpeed(speedRatio:number):void {\n\t\t\tthis.interval = Num.ease(speedRatio, 0, 1, this.intervalMax, this.intervalMin, Easing.easeOutSine);\n\t\t}\n\n\t\tpublic setVolume(volume:number):void {\n\t\t\tthis.volume = volume;\n\t\t}\n\n\t\tprivate timerHandler = ():void => {\n\t\t\tconst interval = this.isWaitingForFirstStep ? (this.interval * 0.5) : this.interval;\n\t\t\tconst time = new Date().getTime();\n\t\t\tif (time - this.startTime >= interval * 1000) {\n\t\t\t\tthis.startTime = time;\n\t\t\t\tthis.isWaitingForFirstStep = false;\n\n\t\t\t\tif (++this.clipIndex >= this.clipCount) {\n\t\t\t\t\tthis.clipIndex = 0;\n\t\t\t\t}\n\t\t\t\tconst clipId = this.clipIds[this.clipIndex];\n\t\t\t\tthis.audioPlayer.getClip(clipId).setVolume(this.volume);\n\t\t\t\tthis.audioPlayer.getClip(clipId).play(false, true);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate audioPlayer:AudioPlayer;\n\t\tprivate volume:number;\n\n\t\tprivate clipIds:string[];\n\t\tprivate clipIndex:number;\n\t\tprivate clipCount:number;\n\n\t\tprivate startTime:number;\n\t\tprivate isWaitingForFirstStep:boolean;\n\n\t\tprivate intervalMin:number;\n\t\tprivate intervalMax:number;\n\t\tprivate interval:number;\n\t\tprivate intervalId:number;\n\n\t\tprivate isPlaying:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\timport EventDispatcher = alm.event.EventDispatcher;\n\timport Logger = alm.debug.Logger;\n\n\texport abstract class View<T = any> extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(view:T = null, id:string = null) {\n\t\t\tsuper();\n\t\t\tthis.id = id != null ? id : String(View.viewCount);\n\t\t\tthis.view = view;\n\t\t\tthis.name = '';\n\t\t\tthis.autoHideWithInit = true;\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = false;\n\t\t\tthis.isShowing = false;\n\t\t\tthis.isShown = true;\n\t\t\tthis.isHiding = false;\n\n\t\t\tif (View.viewsById[this.id]) {\n\t\t\t\tLogger.warn('view id \\'' + this.id + '\\' is duplicate');\n\t\t\t}\n\t\t\tView.viewsById[this.id] = this;\n\t\t\t++View.viewCount;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic initialize():void {\n\t\t\tif (this.isInitializing || this.isInitialized) return;\n\t\t\tthis.isInitializing = true;\n\n\t\t\t//if (View.viewsById[this.id] == null) {\n\t\t\t//\tView.viewsById[this.id] = this;\n\t\t\t//}\n\n\t\t\tthis.view = this.implInitialize();\n\t\t\tif (this.isInitializing) {\n\t\t\t\tthrowError(this.name || this, 'view is not assigned', !this.view);\n\t\t\t\tif (this.autoHideWithInit) {\n\t\t\t\t\tthis.hide(false);\n\t\t\t\t}\n\t\t\t\tthis.isInitializing = false;\n\t\t\t\tthis.isInitialized = true;\n\t\t\t} else {\n\t\t\t\t// finalized while initializing\n\t\t\t\tthis.view = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic ready():void {\n\t\t\tif (this.isReadying || this.isReadied) return;\n\t\t\tthis.isReadying = true;\n\t\t\tthrowError(this.name || this, 'ready() must be called after initialize()', !this.isInitialized);\n\t\t\tthis.implReady();\n\t\t\tthis.isReadying = false;\n\t\t\tthis.isReadied = true;\n\t\t}\n\n\t\tpublic finalize():void {\n\t\t\tif (!this.isInitializing && !this.isInitialized) return;\n\t\t\tthis.implFinalize();\n\t\t\tthis.isInitializing = false;\n\t\t\tthis.isInitialized = false;\n\n\t\t\tdelete View.viewsById[this.id];\n\t\t\tView.viewsById[this.id] = null;\n\t\t}\n\n\t\tpublic show(useTransition:boolean = true):void {\n\t\t\tif (this.isShown) return;\n\t\t\tthis.getShowCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic hide(useTransition:boolean = true):void {\n\t\t\tif (!this.isShown) return;\n\t\t\tthis.getHideCommand(useTransition).execute();\n\t\t}\n\n\t\tpublic getShowCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (this.isShown) return;\n\t\t\t\t\tthrowError(this.name || this, 'getShowCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\tthrowWarn(this.name || this, 'getShowCommand() is must be called after ready()', this.isReadying|| !this.isReadied);\n\t\t\t\t\tthis.isShown = true;\n\t\t\t\t\tthis.isShowing = true;\n\t\t\t\t\tthis.isHiding = false;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.showCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implShow(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getHideCommand(useTransition:boolean = true):cmd.Command {\n\t\t\tconst command:cmd.Serial = new cmd.Serial();\n\t\t\tcommand.addCommand(\n\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\tif (!this.isShown) return;\n\t\t\t\t\tif (!this.isInitializing) {\n\t\t\t\t\t\tthrowError(this.name || this, 'getHideCommand() is must be called after initialize()', this.isInitializing || !this.isInitialized);\n\t\t\t\t\t\tthrowWarn(this.name || this, 'getHideCommand() is must be called after ready()', this.isReadying || !this.isReadied);\n\t\t\t\t\t}\n\t\t\t\t\tthis.isShown = false;\n\t\t\t\t\tthis.isShowing = false;\n\t\t\t\t\tthis.isHiding = true;\n\n\t\t\t\t\tif (this.showCommand) {\n\t\t\t\t\t\tthis.showCommand.interrupt();\n\t\t\t\t\t\tthis.showCommand = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.hideCommand) {\n\t\t\t\t\t\tthis.hideCommand.interrupt();\n\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hideCommand = command;\n\t\t\t\t\tcommand.insertCommand(\n\t\t\t\t\t\tthis.implHide(this.view, useTransition),\n\t\t\t\t\t\tnew cmd.Func(():void => {\n\t\t\t\t\t\t\tthis.hideCommand = null;\n\t\t\t\t\t\t\tthis.isHiding = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn command;\n\t\t}\n\n\t\tpublic getIsInitializing():boolean {\n\t\t\treturn this.isInitializing;\n\t\t}\n\n\t\tpublic getIsInitialized():boolean {\n\t\t\treturn this.isInitialized;\n\t\t}\n\n\t\tpublic getIsReadying():boolean {\n\t\t\treturn this.isReadying;\n\t\t}\n\n\t\tpublic getIsReadied():boolean {\n\t\t\treturn this.isReadied;\n\t\t}\n\n\t\tpublic getIsShowing():boolean {\n\t\t\treturn this.isShowing;\n\t\t}\n\n\t\tpublic getIsShown():boolean {\n\t\t\treturn this.isShown;\n\t\t}\n\n\t\tpublic getIsHiding():boolean {\n\t\t\treturn this.isHiding;\n\t\t}\n\n\t\tpublic getIsHidden():boolean {\n\t\t\treturn !this.isShown;\n\t\t}\n\n\t\tpublic getId():string {\n\t\t\treturn this.id;\n\t\t}\n\n\t\tpublic getView():T {\n\t\t\treturn this.view;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic setName(value:string):void {\n\t\t\tthis.name = value;\n\t\t}\n\n\t\tpublic getAutoHideWithInit():boolean {\n\t\t\treturn this.autoHideWithInit;\n\t\t}\n\n\t\tpublic setAutoHideWithInit(value:boolean):void {\n\t\t\tthis.autoHideWithInit = value;\n\t\t}\n\n\n\n\n\n\t\tprotected abstract implInitialize():T;\n\t\tprotected abstract implReady():void;\n\t\tprotected abstract implFinalize():void;\n\t\tprotected abstract implShow(view:T, useTransition:boolean):cmd.Command;\n\t\tprotected abstract implHide(view:T, useTransition:boolean):cmd.Command;\n\n\n\n\n\n\t\tpublic static getViewById(id:string):View {\n\t\t\treturn View.viewsById[id];\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate id:string;\n\t\tprivate view:T;\n\t\tprivate name:string;\n\t\tprivate autoHideWithInit:boolean;\n\t\tprivate showCommand:cmd.Command;\n\t\tprivate hideCommand:cmd.Command;\n\t\tprivate isInitializing:boolean;\n\t\tprivate isInitialized:boolean;\n\t\tprivate isReadying:boolean;\n\t\tprivate isReadied:boolean;\n\t\tprivate isShowing:boolean;\n\t\tprivate isShown:boolean;\n\t\tprivate isHiding:boolean;\n\n\t\tprivate static viewCount:number = 0;\n\t\tprivate static viewsById:util.Hash<View> = {};\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\texport class ButtonBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:IButton, hitArea:HTMLElement = null, isHoverCursorEnabled:boolean = true, isPreventDefaultEnabled:boolean = true, isStopPropagationEnabled:boolean = true) {\n\t\t\tthis.target = target;\n\t\t\tthis.hitArea = null;\n\t\t\tthis.isHoverCursorEnabled = isHoverCursorEnabled;\n\t\t\tthis.isPreventDefaultEnabled = isPreventDefaultEnabled;\n\t\t\tthis.isStopPropagationEnabled = isStopPropagationEnabled;\n\t\t\tthis.isEnabled = true;\n\t\t\tthis.isOver = false;\n\t\t\tthis.isDown = false;\n\t\t\tthis.isOverInternal = false;\n\t\t\tthis.isDownInternal = false;\n\t\t\tthis.defaultMouseCursor = '';\n\n\t\t\tthis.setHitArea(hitArea);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic over(useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isOver) return;\n\t\t\t\tthis.isOver = true;\n\t\t\t\tthis.target.implButtonOver(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic out(useTransition:boolean = true):void {\n\t\t\tthis._out(true, useTransition);\n\t\t}\n\n\t\tprivate _out(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isOverInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isOver) return;\n\t\t\t\tthis.isOver = false;\n\t\t\t\tthis.target.implButtonOut(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic down(useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = true;\n\t\t\tif (this.isEnabled) {\n\t\t\t\tif (this.isDown) return;\n\t\t\t\tthis.isDown = true;\n\t\t\t\tthis.target.implButtonDown(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic up(useTransition:boolean = true):void {\n\t\t\tthis._up(true, useTransition);\n\t\t}\n\n\t\tprivate _up(checkEnabled:boolean, useTransition:boolean = true):void {\n\t\t\tthis.isDownInternal = false;\n\t\t\tif (this.isEnabled || !checkEnabled) {\n\t\t\t\tif (!this.isDown) return;\n\t\t\t\tthis.isDown = false;\n\t\t\t\tthis.target.implButtonUp(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic click(useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled) {\n\t\t\t\tthis.target.implButtonClick(useTransition);\n\t\t\t}\n\t\t}\n\n\t\tprivate on():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.addEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.addEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.addEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.addEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.addEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.addEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.addEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.addEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tprivate off():void {\n\t\t\tif (this.hitArea == null) return;\n\n\t\t\tthis.hitArea.removeEventListener('mouseover', this.mouseOverHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseout', this.mouseOutHandler);\n\t\t\tthis.hitArea.removeEventListener('mousedown', this.mouseDownHandler);\n\t\t\tthis.hitArea.removeEventListener('mouseup', this.mouseUpHandler);\n\t\t\tthis.hitArea.removeEventListener('click', this.clickHandler);\n\n\t\t\tthis.hitArea.removeEventListener('touchstart', this.touchStartHandler);\n\t\t\tthis.hitArea.removeEventListener('touchend', this.touchEndHandler);\n\t\t\tthis.hitArea.removeEventListener('touchcancel', this.touchCancelHandler);\n\t\t}\n\n\t\tpublic getIsEnabled():boolean {\n\t\t\treturn this.isEnabled;\n\t\t}\n\n\t\tpublic setIsEnabled(value:boolean, useTransition:boolean = true):void {\n\t\t\tif (this.isEnabled != value) {\n\t\t\t\tthis.isEnabled = value;\n\t\t\t\tif (this.isEnabled) {\n\t\t\t\t\tif (this.isOverInternal) {\n\t\t\t\t\t\tthis.over();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDownInternal) {\n\t\t\t\t\t\tthis.down();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.isOver) {\n\t\t\t\t\t\tthis._out(false);\n\t\t\t\t\t\tthis.isOverInternal = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDown) {\n\t\t\t\t\t\tthis._up(false);\n\t\t\t\t\t\tthis.isDownInternal = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.target.implButtonChangeEnabled(this.isEnabled, useTransition);\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsOver():boolean {\n\t\t\treturn this.isOver;\n\t\t}\n\n\t\tpublic getIsDown():boolean {\n\t\t\treturn this.isDown;\n\t\t}\n\n\t\tpublic getHitArea():HTMLElement {\n\t\t\treturn this.hitArea;\n\t\t}\n\n\t\tpublic setHitArea(hitArea:HTMLElement):void {\n\t\t\tif (this.hitArea !== hitArea) {\n\t\t\t\tthis.off();\n\t\t\t\tthis.hitArea = hitArea;\n\t\t\t\tthis.on();\n\t\t\t}\n\t\t}\n\n\t\tpublic clearHitArea():void {\n\t\t\tthis.setHitArea(null);\n\t\t}\n\n\t\tpublic getIsPreventDefaultEnabled():boolean {\n\t\t\treturn this.isPreventDefaultEnabled;\n\t\t}\n\n\t\tpublic setIsPreventDefaultEnabled(enabled:boolean):void {\n\t\t\tthis.isPreventDefaultEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsStopPropagationEnabled():boolean {\n\t\t\treturn this.isStopPropagationEnabled;\n\t\t}\n\n\t\tpublic setIsStopPropagationEnabled(enabled:boolean):void {\n\t\t\tthis.isStopPropagationEnabled = enabled;\n\t\t}\n\n\t\tpublic getIsHoverCursorEnabled():boolean {\n\t\t\treturn this.isHoverCursorEnabled;\n\t\t}\n\n\t\tpublic setIsHoverCursorEnabled(enabled:boolean):void {\n\t\t\tthis.isHoverCursorEnabled = enabled;\n\t\t}\n\n\t\tprivate applyMouseCursor():void {\n\t\t\tif (this.isHoverCursorEnabled) {\n\t\t\t\tif (this.isOverInternal && this.isEnabled && this.hitArea != null) {\n\t\t\t\t\tthis.defaultMouseCursor = this.hitArea.style.cursor;\n\t\t\t\t\tthis.hitArea.style.cursor = 'pointer';\n\t\t\t\t} else {\n\t\t\t\t\tthis.hitArea.style.cursor = this.defaultMouseCursor != '' ? this.defaultMouseCursor : 'auto';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// --------------------------------------------------\n\t\t// Mouse Event\n\n\t\tprivate mouseOverHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.over();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseOutHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.out();\n\t\t\tthis.applyMouseCursor();\n\t\t};\n\n\t\tprivate mouseDownHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate mouseUpHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\t\tprivate clickHandler = (event:MouseEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.click();\n\t\t};\n\n\t\t// --------------------------------------------------\n\t\t// Touch Event\n\n\t\tprivate touchStartHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.down();\n\t\t};\n\n\t\tprivate touchEndHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t\tthis.click();\n\t\t};\n\n\t\tprivate touchCancelHandler = (event:TouchEvent):void => {\n\t\t\tif (this.isPreventDefaultEnabled) event.preventDefault();\n\t\t\tif (this.isStopPropagationEnabled) event.stopPropagation();\n\t\t\tthis.up();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:IButton;\n\t\tprivate hitArea:HTMLElement;\n\t\tprivate isEnabled:boolean;\n\t\tprivate isOver:boolean;\n\t\tprivate isDown:boolean;\n\t\tprivate isOverInternal:boolean;\n\t\tprivate isDownInternal:boolean;\n\t\tprivate isPreventDefaultEnabled:boolean;\n\t\tprivate isStopPropagationEnabled:boolean;\n\t\tprivate isHoverCursorEnabled:boolean;\n\t\tprivate defaultMouseCursor:string;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.view {\n\n\texport class SelectionBehavior {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(target:ISelection) {\n\t\t\tthis.target = target;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic select(useTransition:boolean = true):void {\n\t\t\tif (this.isSelected) return;\n\t\t\tthis.isSelected = true;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic deselect(useTransition:boolean = true):void {\n\t\t\tif (!this.isSelected) return;\n\t\t\tthis.isSelected = false;\n\t\t\tthis.target.implSelectionChanged(this.isSelected, useTransition);\n\t\t}\n\n\t\tpublic getIsSelected():boolean {\n\t\t\treturn this.isSelected;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate target:ISelection;\n\t\tprivate isSelected:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class DeviceInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tconst u:string = window.navigator.userAgent.toLowerCase();\n\n\t\t\t// Device\n\t\t\tthis.isTablet = (u.indexOf('windows') != -1 && u.indexOf('touch') != -1)\n\t\t\t\t|| u.indexOf('ipad') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') == -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('tablet') != -1)\n\t\t\t\t|| u.indexOf('kindle') != -1\n\t\t\t\t|| u.indexOf('silk') != -1\n\t\t\t\t|| u.indexOf('playbook') != -1;\n\n\t\t\tthis.isMobile = (u.indexOf('windows') != -1 && u.indexOf('phone') != -1)\n\t\t\t\t|| u.indexOf('iphone') != -1\n\t\t\t\t|| u.indexOf('ipod') != -1\n\t\t\t\t|| (u.indexOf('android') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| (u.indexOf('firefox') != -1 && u.indexOf('mobile') != -1)\n\t\t\t\t|| u.indexOf('blackberry') != -1;\n\n\t\t\tthis.isDesktop = !this.isTablet && !this.isMobile;\n\n\t\t\t// OS\n\t\t\tthis.isIOS = u.indexOf('ipad') != -1 || u.indexOf('iphone') != -1 || u.indexOf('ipod') != -1;\n\t\t\tthis.isAndroid = u.indexOf('android') != -1 && u.indexOf('mobile') != -1;\n\n\t\t\t// Browser\n\t\t\tif(u.indexOf('msie') != -1 || u.indexOf('trident') != -1) {\n\t\t\t\tthis.isIE = true;\n\t\t\t} else if(u.indexOf('edge') != -1) {\n\t\t\t\tthis.isEdge = true;\n\t\t\t} else if(u.indexOf('chrome') != -1) {\n\t\t\t\tthis.isChrome = true;\n\t\t\t} else if(u.indexOf('safari') != -1) {\n\t\t\t\tthis.isSafari = true;\n\t\t\t} else if(u.indexOf('firefox') != -1) {\n\t\t\t\tthis.isFireFox = true;\n\t\t\t} else if(u.indexOf('opera') != -1) {\n\t\t\t\tthis.isOpera = true;\n\t\t\t} else {\n\t\t\t\tthis.isUnknownBrowser = true;\n\t\t\t}\n\n\t\t\t// Function\n\t\t\tthis.isTouchEnabled = (typeof window.ontouchstart) !== 'undefined';\n\t\t\tthis.isDownloadEnabled = !this.isIOS;\n\n\t\t\t// Resolution\n\t\t\tthis.devicePixelRatio = window.devicePixelRatio;\n\t\t\tthis.isRetina = this.devicePixelRatio > 1;\n\t\t}\n\n\t\t// --------------------\n\t\t// Device\n\n\t\tpublic static getIsDesktop():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDesktop;\n\t\t}\n\n\t\tpublic static getIsTablet():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTablet;\n\t\t}\n\n\t\tpublic static getIsMobile():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isMobile;\n\t\t}\n\n\t\t// --------------------\n\t\t// OS\n\n\t\tpublic static getIsIOS():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIOS;\n\t\t}\n\n\t\tpublic static getIsAndroid():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isAndroid;\n\t\t}\n\n\t\t// --------------------\n\t\t// Browser\n\n\t\tpublic static getIsIE():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isIE;\n\t\t}\n\n\t\tpublic static getIsEdge():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isEdge;\n\t\t}\n\n\t\tpublic static getIsChrome():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isChrome;\n\t\t}\n\n\t\tpublic static getIsSafari():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isSafari;\n\t\t}\n\n\t\tpublic static getIsFireFox():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isFireFox;\n\t\t}\n\n\t\tpublic static getIsOpera():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isOpera;\n\t\t}\n\n\t\tpublic static getIsUnknownBrowser():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isUnknownBrowser;\n\t\t}\n\n\t\t// --------------------\n\t\t// Function\n\n\t\tpublic static getIsTouchEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isTouchEnabled;\n\t\t}\n\n\t\tpublic static getIsDownloadEnabled():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isDownloadEnabled;\n\t\t}\n\n\t\t// --------------------\n\t\t// Resolution\n\n\t\tpublic static getIsRetina():boolean {\n\t\t\tthis.initialize();\n\t\t\treturn this.isRetina;\n\t\t}\n\n\t\tpublic static getDevicePixelRatio():number {\n\t\t\tthis.initialize();\n\t\t\treturn this.devicePixelRatio;\n\t\t}\n\n\t\tpublic static getDpi():number {\n\t\t\tif (this.dpi == -1) {\n\t\t\t\tconst div:HTMLElement = document.createElement('div');\n\t\t\t\tdiv.setAttribute('style', 'height:1in;left:-100%;top:-100%;position:absolute;width:1in;');\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\tthis.dpi = div.offsetHeight;\n\t\t\t\tdocument.body.removeChild(div);\n\t\t\t}\n\t\t\treturn this.dpi;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isDesktop:boolean = false;\n\t\tprivate static isTablet:boolean = false;\n\t\tprivate static isMobile:boolean = false;\n\n\t\tprivate static isIOS:boolean = false;\n\t\tprivate static isAndroid:boolean = false;\n\n\t\tprivate static isIE:boolean = false;\n\t\tprivate static isEdge:boolean = false;\n\t\tprivate static isChrome:boolean = false;\n\t\tprivate static isSafari:boolean = false;\n\t\tprivate static isFireFox:boolean = false;\n\t\tprivate static isOpera:boolean = false;\n\t\tprivate static isUnknownBrowser:boolean = false;\n\n\t\tprivate static isTouchEnabled:boolean = false;\n\t\tprivate static isDownloadEnabled:boolean = false;\n\n\t\tprivate static isRetina:boolean = false;\n\t\tprivate static devicePixelRatio:number = 1;\n\t\tprivate static dpi:number = -1;\n\n\t\tprivate static isInitialized:boolean = false;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\timport Time = alm.util.Time;\n\n\texport class LocalStorage {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t/**\n\t\t * データをCookieに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param expiredAt 有効期限（UNIXミリ秒）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static save(key:string, value:any, expiredAt:number = -1):boolean {\n\t\t\tif (!LocalStorage.isAvailable()) return false;\n\t\t\tconst record:{ value:string; expiredAt:number } = { value:JSON.stringify(value), expiredAt: expiredAt };\n\t\t\tlocalStorage.setItem(key, JSON.stringify(record));\n\t\t\treturn true;\n\t\t}\n\t\t/**\n\t\t * データをLocalStorageに保存する\n\t\t * @param key 保存するキー\n\t\t * @param value 保存するデータ\n\t\t * @param minutes 保存期間（分）\n\t\t * @returns {boolean} 保存に成功した場合trueが返る\n\t\t */\n\t\tpublic static saveWithTerm(key:string, value:any, milliseconds:number = -1):boolean {\n\t\t\tconst expiredAt:number = milliseconds > 0 ? Time.now() + milliseconds : -1;\n\t\t\treturn LocalStorage.save(key, value, expiredAt);\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから読み込む\n\t\t * @param key 保存したキー\n\t\t * @returns {any} 読み込まれたデータ\n\t\t */\n\t\tpublic static load(key:string, defaultValue:any = null):any {\n\t\t\tif (!LocalStorage.isAvailable()) return defaultValue;\n\t\t\tconst record:{ value:string; expiredAt:number } = JSON.parse(localStorage.getItem(key));\n\t\t\tif (record) {\n\t\t\t\t// データが見つかった\n\t\t\t\tif (record.expiredAt > 0) {\n\t\t\t\t\t// 期限付きデータ\n\t\t\t\t\tif (Time.now() < record.expiredAt) {\n\t\t\t\t\t\t// 有効期限内\n\t\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 有効期限を過ぎているので破棄\n\t\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t\t\treturn defaultValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 永続データ\n\t\t\t\t\treturn JSON.parse(record.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// データが見つからなかった\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * 保存したデータをLocalStorageから削除する\n\t\t * @param key 保存したキー\n\t\t */\n\t\tpublic static remove(key:string):void {\n\t\t\tif (!LocalStorage.isAvailable()) return;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t/**\n\t\t * LocalStorageが使用可能かどうか確認する\n\t\t * @returns {boolean} 使用可能な場合はtrueが返る\n\t\t */\n\t\tpublic static isAvailable():boolean {\n\t\t\tif (LocalStorage.isAvailable_ == null) {\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem('__CKECK__', '__CKECK__');\n\t\t\t\t\tlocalStorage.removeItem('__CKECK__');\n\t\t\t\t\tLocalStorage.isAvailable_ = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLocalStorage.isAvailable_ = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn LocalStorage.isAvailable_;\n\t\t}\n\n\t\t/**\n\t\t * 各時間の尺度ミリ秒で合算する\n\t\t * @param dates 日\n\t\t * @param hours 時\n\t\t * @param minutes 分\n\t\t * @param seconds 秒\n\t\t * @param milliseconds ミリ秒\n\t\t * @returns {number} 合算されたミリ秒\n\t\t */\n\t\tpublic static toMilliseconds(dates:number = 0, hours:number = 0, minutes:number = 0, seconds:number = 0, milliseconds:number = 0):number {\n\t\t\treturn milliseconds + (seconds + (minutes + (hours + dates * 24) * 60) * 60) * 1000;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static isAvailable_:boolean = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\t// https://github.com/nfriend/ts-keycode-enum\n\texport enum KeyCode {\n\t\tBackspace = 8,\n\t\tTab = 9,\n\t\tEnter = 13,\n\t\tShift = 16,\n\t\tCtrl = 17,\n\t\tAlt = 18,\n\t\tPauseBreak = 19,\n\t\tCapsLock = 20,\n\t\tEscape = 27,\n\t\tSpace = 32,\n\t\tPageUp = 33,\n\t\tPageDown = 34,\n\t\tEnd = 35,\n\t\tHome = 36,\n\n\t\tLeftArrow = 37,\n\t\tUpArrow = 38,\n\t\tRightArrow = 39,\n\t\tDownArrow = 40,\n\n\t\tInsert = 45,\n\t\tDelete = 46,\n\n\t\tKey0 = 48,\n\t\tKey1 = 49,\n\t\tKey2 = 50,\n\t\tKey3 = 51,\n\t\tKey4 = 52,\n\t\tKey5 = 53,\n\t\tKey6 = 54,\n\t\tKey7 = 55,\n\t\tKey8 = 56,\n\t\tKey9 = 57,\n\n\t\tClosedParen = Key0,\n\t\tExclamationMark = Key1,\n\t\tAtSign = Key2,\n\t\tPoundSign = Key3,\n\t\tHash = PoundSign,\n\t\tDollarSign = Key4,\n\t\tPercentSign = Key5,\n\t\tCaret = Key6,\n\t\tHat = Caret,\n\t\tAmpersand = Key7,\n\t\tStar = Key8,\n\t\tAsterik = Star,\n\t\tOpenParen = Key9,\n\n\t\tA = 65,\n\t\tB = 66,\n\t\tC = 67,\n\t\tD = 68,\n\t\tE = 69,\n\t\tF = 70,\n\t\tG = 71,\n\t\tH = 72,\n\t\tI = 73,\n\t\tJ = 74,\n\t\tK = 75,\n\t\tL = 76,\n\t\tM = 77,\n\t\tN = 78,\n\t\tO = 79,\n\t\tP = 80,\n\t\tQ = 81,\n\t\tR = 82,\n\t\tS = 83,\n\t\tT = 84,\n\t\tU = 85,\n\t\tV = 86,\n\t\tW = 87,\n\t\tX = 88,\n\t\tY = 89,\n\t\tZ = 90,\n\n\t\tLeftWindowKey = 91,\n\t\tRightWindowKey = 92,\n\t\tSelectKey = 93,\n\n\t\tNumpad0 = 96,\n\t\tNumpad1 = 97,\n\t\tNumpad2 = 98,\n\t\tNumpad3 = 99,\n\t\tNumpad4 = 100,\n\t\tNumpad5 = 101,\n\t\tNumpad6 = 102,\n\t\tNumpad7 = 103,\n\t\tNumpad8 = 104,\n\t\tNumpad9 = 105,\n\n\t\tMultiply = 106,\n\t\tAdd = 107,\n\t\tSubtract = 109,\n\t\tDecimalPoint = 110,\n\t\tDivide = 111,\n\n\t\tF1 = 112,\n\t\tF2 = 113,\n\t\tF3 = 114,\n\t\tF4 = 115,\n\t\tF5 = 116,\n\t\tF6 = 117,\n\t\tF7 = 118,\n\t\tF8 = 119,\n\t\tF9 = 120,\n\t\tF10 = 121,\n\t\tF11 = 122,\n\t\tF12 = 123,\n\n\t\tNumLock = 144,\n\t\tScrollLock = 145,\n\n\t\tSemiColon = 186,\n\t\tEquals = 187,\n\t\tComma = 188,\n\t\tDash = 189,\n\t\tPeriod = 190,\n\t\tUnderScore = Dash,\n\t\tPlusSign = Equals,\n\t\tForwardSlash = 191,\n\t\tTilde = 192,\n\t\tGraveAccent = Tilde,\n\n\t\tOpenBracket = 219,\n\t\tClosedBracket = 221,\n\t\tQuote = 222\n\t}\n\n\n\n\n\n\texport class KeyWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] start');\n\n\t\t\twindow.addEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.addEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[KeyWatcher] stop');\n\n\t\t\twindow.removeEventListener('keydown', this.windowKeyDownHandler);\n\t\t\twindow.removeEventListener('keyup', this.windowKeyUpHandler);\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:KeyWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\n\n\n\n\t\tprivate static windowKeyDownHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] == null) {\n\t\t\t\tKeyWatcher.isKeyPressedByKeyCode[keyCode] = true;\n\t\t\t\t++KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t} else if (KeyWatcher.isContinuousPressEnabled) {\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_DOWN, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\t\tprivate static windowKeyUpHandler = (event:KeyboardEvent):void => {\n\t\t\tconst keyCode:number = event.keyCode;\n\t\t\tif (KeyWatcher.isKeyPressedByKeyCode[keyCode] != null) {\n\t\t\t\tdelete KeyWatcher.isKeyPressedByKeyCode[keyCode];\n\t\t\t\t--KeyWatcher.pressedKeyCount;\n\t\t\t\tKeyWatcher.eventDispatcher.dispatchEvent(new KeyWatcherEvent(KeyWatcherEvent.KEY_UP, KeyWatcher, event));\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getIsAnyKeyPressed():boolean { return this.pressedKeyCount > 0; }\n\t\tprivate static pressedKeyCount:number = 0;\n\n\t\tpublic static getIsKeyPressed(keyCode:number):boolean { return this.isKeyPressedByKeyCode[keyCode] != null; }\n\t\tprivate static isKeyPressedByKeyCode:util.Hash<boolean> = {};\n\n\n\t\tpublic static getIsContinuousPressEnabled():boolean { return this.isContinuousPressEnabled; }\n\t\tpublic static setIsContinuousPressEnabled(enabled:boolean):void { this.isContinuousPressEnabled = enabled; }\n\t\tprivate static isContinuousPressEnabled:boolean = false;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static isLongPressed:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class KeyWatcherEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic KEY_UP:string = 'keyUp';\n\t\tstatic KEY_DOWN:string = 'keyDown';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, originalEvent:KeyboardEvent = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.key = this.originalEvent.key;\n\t\t\tthis.keyCode = this.originalEvent.keyCode;\n\t\t\tthis.altKey = this.originalEvent.altKey;\n\t\t\tthis.ctrlKey = this.originalEvent.ctrlKey;\n\t\t\tthis.shiftKey = this.originalEvent.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():KeyWatcherEvent {\n\t\t\treturn new KeyWatcherEvent(this.getType(), this.getTarget(), this.originalEvent);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[KeyWatcherEvent] type = ' + this.getType() + ', key = ' + this.key + ', keyCode = ' + this.keyCode + ', altKey = ' + this.altKey + ', ctrlKey = ' + this.ctrlKey + ', shiftKey = ' + this.shiftKey;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly originalEvent:KeyboardEvent;\n\t\tpublic readonly key:string;\n\t\tpublic readonly keyCode:number;\n\t\tpublic readonly altKey:boolean;\n\t\tpublic readonly ctrlKey:boolean;\n\t\tpublic readonly shiftKey:boolean;\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate static initialize():void {\n\t\t\tif (this.isInitialized) return;\n\t\t\tthis.isInitialized = true;\n\n\t\t\tthis.eventDispatcher = new alm.event.EventDispatcher();\n\t\t}\n\n\t\tpublic static start(target:Window = null):void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] start');\n\n\t\t\tthis.window = target || window;\n\n\t\t\tthis.window.addEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.addEventListener('scroll', this.windowScrollHandler);\n\t\t\tthis.apply();\n\t\t}\n\n\t\tpublic static stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.initialize();\n\t\t\ttrace('[WindowWatcher] stop');\n\n\t\t\tthis.window.removeEventListener('resize', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('orientationchange', this.windowResizeHandler);\n\t\t\tthis.window.removeEventListener('scroll', this.windowScrollHandler);\n\t\t}\n\n\t\tpublic static apply():void {\n\t\t\tthis.windowWidth = this.window.innerWidth;\n\t\t\tthis.windowHeight = this.window.innerHeight;\n\n\t\t\tthis.scrollTop = (this.window.pageYOffset !== undefined) ? this.window.pageYOffset : document.documentElement.scrollTop;\n\t\t\tthis.scrollBottom = this.scrollTop + this.windowHeight;\n\t\t}\n\n\t\tpublic static addEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.addEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static removeEventListener(eventType:string, listener:(event:WindowWatcherEvent) => void):void {\n\t\t\tthis.initialize();\n\t\t\tthis.eventDispatcher.removeEventListener(eventType, listener);\n\t\t}\n\n\t\tpublic static calcScrolledPosition(y:number):number {\n\t\t\treturn y - this.scrollTop;\n\t\t};\n\n\t\tpublic static calcScrolledPositionRatio(y:number):number {\n\t\t\treturn this.calcScrolledPosition(y) / this.windowHeight;\n\t\t}\n\n\t\tprivate static resize(event:Event):void {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.RESIZE, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\tprivate static windowResizeHandler = (event:Event):void => {\n\t\t\tif (!DeviceInfo.getIsDesktop() && WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.resize');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowOrientationChangeHandler = (event:Event):void => {\n\t\t\tif (DeviceInfo.getIsDesktop() || !WindowWatcher.isMobileOrientationResize) return;\n\t\t\ttrace('[WindowWatcher] resize by window.orientationchange');\n\t\t\tWindowWatcher.resize(event);\n\t\t};\n\n\t\tprivate static windowScrollHandler = (event:Event):void => {\n\t\t\tWindowWatcher.apply();\n\t\t\tWindowWatcher.eventDispatcher.dispatchEvent(new WindowWatcherEvent(WindowWatcherEvent.SCROLL, WindowWatcher, event, WindowWatcher.scrollTop, WindowWatcher.scrollBottom, WindowWatcher.windowWidth, WindowWatcher.windowHeight));\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static getIsRunning():boolean { return this.isRunning; }\n\t\tprivate static isRunning:boolean = false;\n\n\t\tpublic static getWindow():Window { return this.window; }\n\t\tprivate static window:Window = null;\n\n\t\tpublic static getScrollTop():number { return this.scrollTop; }\n\t\tprivate static scrollTop:number;\n\n\t\tpublic static getScrollBottom():number { return this.scrollBottom; }\n\t\tprivate static scrollBottom:number;\n\n\t\tpublic static getWindowWidth():number { return this.windowWidth; }\n\t\tprivate static windowWidth:number = 0;\n\n\t\tpublic static getWindowHeight():number { return this.windowHeight; }\n\t\tprivate static windowHeight:number = 0;\n\n\t\tpublic static getIsMobileOrientationResize():boolean { return this.isMobileOrientationResize; }\n\t\tpublic static setIsMobileOrientationResize(value:boolean):void { this.isMobileOrientationResize = value; }\n\t\tprivate static isMobileOrientationResize:boolean = true;\n\n\t\tprivate static isInitialized:boolean = false;\n\t\tprivate static eventDispatcher:alm.event.EventDispatcher = null;\n\n\n\n\n\n\t\tprivate constructor() {}\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace alm.browser {\n\n\texport class WindowWatcherEvent extends alm.event.Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tstatic SCROLL:string = 'scroll';\n\t\tstatic RESIZE:string = 'resize';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null, originalEvent:Event = null, scrollTop:number = 0, scrollBottom:number = 0, windowWidth:number = 0, windowHeight:number = 0) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t\tthis.originalEvent = originalEvent;\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollBottom = scrollBottom;\n\t\t\tthis.windowWidth = windowWidth;\n\t\t\tthis.windowHeight = windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():WindowWatcherEvent {\n\t\t\treturn new WindowWatcherEvent(this.getType(), this.getTarget(), this.originalEvent, this.scrollTop, this.scrollBottom, this.windowWidth, this.windowHeight);\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[WindowWatcherEvent] type = ' + this.getType() + ', scrollTop = ' + this.scrollTop + ', scrollBottom = ' + this.scrollBottom + ', windowWidth = ' + this.windowWidth + ', windowHeight = ' + this.windowHeight;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly originalEvent:Event;\n\t\tpublic readonly scrollTop:number;\n\t\tpublic readonly scrollBottom:number;\n\t\tpublic readonly windowWidth:number;\n\t\tpublic readonly windowHeight:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\texport class ScrollSectionTriggerEvent extends alm.event.Event {\n\n\t\tpublic static CHANGE:string = 'ScrollSectionTriggerEvent.CHANGE';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, target:object, currentSectionIndex:number, prevSectionIndex:number) {\n\t\t\tsuper(eventType, target);\n\n\t\t\tthis.currentSectionIndex = currentSectionIndex;\n\t\t\tthis.prevSectionIndex = prevSectionIndex;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentSectionIndex:number;\n\t\tpublic readonly prevSectionIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\timport Logger = alm.debug.Logger;\n\timport WindowWatcher = alm.browser.WindowWatcher;\n\timport WindowWatcherEvent = alm.browser.WindowWatcherEvent;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class ScrollSectionTrigger extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(threshold:number = 0.5) {\n\t\t\tsuper();\n\n\t\t\tthis.isRunning = false;\n\n\t\t\tthis.scrollPosition = null;\n\t\t\tthis.triggerPositions = [];\n\t\t\tthis.thresholdRatio = threshold;\n\t\t\tthis.thresholdPosition = null;\n\n\t\t\tthis.currentSectionIndex = -1;\n\t\t\tthis.prevSectionIndex = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.SCROLL, this.windowScrollHandler);\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.start();\n\n\t\t\tthis.updateThresholdPosition();\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.SCROLL, this.windowScrollHandler);\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.stop();\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getCurrentIndex():number {\n\t\t\treturn this.currentSectionIndex;\n\t\t}\n\n\t\tpublic getPrevIndex():number {\n\t\t\treturn this.prevSectionIndex;\n\t\t}\n\n\t\tpublic getTriggerPositions():number[] {\n\t\t\treturn this.triggerPositions.concat();\n\t\t}\n\n\t\tpublic setTriggerPositions(positions:number[]):void {\n\t\t\tthis.triggerPositions = positions.concat();\n\t\t\tthis.triggerPositions.sort((a, b):number => { return a - b; });\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tpublic getThreshold():number {\n\t\t\treturn this.thresholdRatio;\n\t\t}\n\n\t\tpublic setThreshold(ratio:number):void {\n\t\t\tthis.thresholdRatio = ratio;\n\t\t\tthis.updateThresholdPosition();\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tprivate check():void {\n\t\t\tif (this.scrollPosition == null) {\n\t\t\t\tLogger.warn('[RangeTrigger] current position is need set');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet nearestTriggerIndex = -1;\n\t\t\tlet nearestScrolledTriggerPosition = -1;\n\t\t\tlet nearestDistance:number = Number.MAX_VALUE;\n\t\t\tconst triggerPositionCount = this.triggerPositions.length;\n\t\t\tfor (let i = 0; i < triggerPositionCount; ++i) {\n\t\t\t\tconst scrolledTriggerPosition = this.triggerPositions[i] - this.scrollPosition;\n\t\t\t\tconst distance = Math.abs(scrolledTriggerPosition - this.thresholdPosition);\n\t\t\t\tif (distance < nearestDistance) {\n\t\t\t\t\tnearestDistance = distance;\n\t\t\t\t\tnearestTriggerIndex = i;\n\t\t\t\t\tnearestScrolledTriggerPosition = scrolledTriggerPosition;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestTriggerIndex >= 0) {\n\t\t\t\tlet sectionIndex = -1;\n\t\t\t\tif (nearestScrolledTriggerPosition > this.thresholdPosition) {\n\t\t\t\t\tsectionIndex = nearestTriggerIndex;\n\t\t\t\t} else {\n\t\t\t\t\tsectionIndex = nearestTriggerIndex + 1;\n\t\t\t\t}\n\n\t\t\t\tif (this.currentSectionIndex != sectionIndex) {\n\t\t\t\t\tthis.prevSectionIndex = this.currentSectionIndex;\n\t\t\t\t\tthis.currentSectionIndex = sectionIndex;\n\t\t\t\t\tthis.dispatchEvent(new ScrollSectionTriggerEvent(ScrollSectionTriggerEvent.CHANGE, this, this.currentSectionIndex, this.prevSectionIndex));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate updateThresholdPosition():void {\n\t\t\tthis.thresholdPosition = WindowWatcher.getWindowHeight() * this.thresholdRatio;\n\t\t}\n\n\t\tprivate updateScrollPosition():void {\n\t\t\tthis.scrollPosition = WindowWatcher.getScrollTop();\n\t\t}\n\n\t\tprivate windowScrollHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t};\n\n\t\tprivate windowResizeHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.updateThresholdPosition();\n\t\t\tthis.updateScrollPosition();\n\t\t\tthis.check();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate scrollPosition:number;\n\t\tprivate triggerPositions:number[];\n\t\tprivate thresholdRatio:number;\n\t\tprivate thresholdPosition:number;\n\n\t\tprivate currentSectionIndex:number;\n\t\tprivate prevSectionIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\timport WindowWatcher = alm.browser.WindowWatcher;\n\timport WindowWatcherEvent = alm.browser.WindowWatcherEvent;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class ResponsiveObserver extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor() {\n\t\t\tsuper();\n\n\t\t\tthis.breakPoints = [];\n\t\t\tthis.breakPointCount = 0;\n\n\t\t\tthis.currentIndex = -1;\n\t\t\tthis.prevIndex = -1;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tif (this.isRunning) return;\n\t\t\tthis.isRunning = true;\n\n\t\t\tWindowWatcher.addEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.start();\n\n\t\t\tthis.check();\n\t\t}\n\n\t\tpublic stop():void {\n\t\t\tif (!this.isRunning) return;\n\t\t\tthis.isRunning = false;\n\n\t\t\tWindowWatcher.removeEventListener(WindowWatcherEvent.RESIZE, this.windowResizeHandler);\n\t\t\tWindowWatcher.stop();\n\t\t}\n\n\t\tpublic setBreakpoints(breakPoints:number[]):void {\n\t\t\tthis.breakPoints = breakPoints.concat();\n\t\t\tthis.breakPointCount = this.breakPoints.length;\n\t\t\tthis.breakPoints.sort((a, b):number => { return a - b; });\n\t\t\tif (this.isRunning) {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t}\n\n\t\tpublic getIsRunning():boolean {\n\t\t\treturn this.isRunning;\n\t\t}\n\n\t\tpublic getCurrentIndex():number {\n\t\t\treturn this.currentIndex;\n\t\t}\n\n\t\tpublic getPrevIndex():number {\n\t\t\treturn this.prevIndex;\n\t\t}\n\n\t\tpublic getBreakPoints():number[] {\n\t\t\treturn this.breakPoints.concat();\n\t\t}\n\n\t\tpublic getBreakPointCount():number {\n\t\t\treturn this.breakPointCount;\n\t\t}\n\n\t\tprivate check():void {\n\t\t\tconst windowWidth = WindowWatcher.getWindowWidth();\n\t\t\tlet index;\n\t\t\tfor (index = 0; index < this.breakPointCount; ++index) {\n\t\t\t\tif (windowWidth <= this.breakPoints[index]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.currentIndex == index) return;\n\t\t\tthis.prevIndex = this.currentIndex;\n\t\t\tthis.currentIndex = index;\n\t\t\ttrace('[ResponsiveObserver] switch index :', this.prevIndex, '->', this.currentIndex, ', window width =', windowWidth);\n\n\t\t\tthis.dispatchEvent(new ResponsiveObserverEvent(ResponsiveObserverEvent.CHANGE, this, this.currentIndex, this.prevIndex));\n\t\t}\n\n\t\tprivate windowResizeHandler = (event:WindowWatcherEvent):void => {\n\t\t\tthis.check();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate isRunning:boolean;\n\n\t\tprivate breakPoints:number[];\n\t\tprivate breakPointCount:number;\n\n\t\tprivate currentIndex:number;\n\t\tprivate prevIndex:number;\n\t}\n}\n","/// <reference path=\"../../index.ts\" />\n\nnamespace alm.browser {\n\n\texport class ResponsiveObserverEvent extends alm.event.Event {\n\n\t\tpublic static CHANGE:string = 'ResponsiveObserverEvent.CHANGE';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, target:object, currentIndex:number, prevIndex:number) {\n\t\t\tsuper(eventType, target);\n\n\t\t\tthis.currentIndex = currentIndex;\n\t\t\tthis.prevIndex = prevIndex;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic readonly currentIndex:number;\n\t\tpublic readonly prevIndex:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class Scene extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string) {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.state = SceneState.Idling;\n\t\t\tthis.parent = null;\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\tthis.isEntered = false;\n\t\t\tthis.onLoad = null;\n\t\t\tthis.onUnload = null;\n\t\t\tthis.onArrive = null;\n\t\t\tthis.onLeave = null;\n\t\t\tthis.onAscend = null;\n\t\t\tthis.onDescend = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic addChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child name \\'' + childName + '\\' is already contained.');\n\t\t\t\t} else {\n\t\t\t\t\t++this.numChildren;\n\t\t\t\t\tchild.parent = this;\n\t\t\t\t\tthis.childrenByName[childName] = child;\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] addChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic removeChild(child:Scene):Scene {\n\t\t\tif (child) {\n\t\t\t\tconst childName:string = child.name;\n\t\t\t\tif (this.childrenByName[childName]) {\n\t\t\t\t\t--this.numChildren;\n\t\t\t\t\tchild.parent = null;\n\t\t\t\t\tdelete this.childrenByName[childName];\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child name \\'' + childName + '\\' is not contained.');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] removeChild was failed, because child is null.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic addChildren(children:Scene[]):Scene[] {\n\t\t\tconst addedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.addChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\taddedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn addedChildren;\n\t\t}\n\n\t\tpublic removeChildren(children:Scene[]):Scene[] {\n\t\t\tconst removedChildren:Scene[] = [];\n\t\t\tconst n:number = children.length;\n\t\t\tlet c:Scene;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tc = this.removeChild(children[i]);\n\t\t\t\tif (c) {\n\t\t\t\t\tremovedChildren.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn removedChildren;\n\t\t}\n\n\t\tpublic removeAllChildren():Scene[] {\n\t\t\tconst children:Scene[] = [];\n\t\t\tlet child:Scene;\n\t\t\tfor (let name in this.childrenByName) {\n\t\t\t\tchild = this.childrenByName[name];\n\t\t\t\tchild.parent = null;\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\tthis.childrenByName = {};\n\t\t\tthis.numChildren = 0;\n\t\t\treturn children;\n\t\t}\n\n\t\tpublic contains(child:Scene|string):boolean {\n\t\t\tif (child) {\n\t\t\t\treturn this.childrenByName[typeof child == 'string' ? child : child.name] != null;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getState():SceneState {\n\t\t\treturn this.state;\n\t\t}\n\n\t\tpublic getLastState():SceneState {\n\t\t\treturn this.lastState;\n\t\t}\n\n\t\tpublic getParent():Scene {\n\t\t\treturn this.parent;\n\t\t}\n\n\t\tpublic getChildByName(name:string):Scene {\n\t\t\treturn this.childrenByName[name];\n\t\t}\n\n\t\tpublic getNumChildren():number {\n\t\t\treturn this.numChildren;\n\t\t}\n\n\t\tpublic getManager():SceneManager {\n\t\t\tif (this.parent) {\n\t\t\t\treturn this.parent.getManager();\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getManager was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic getPath():string {\n\t\t\tconst manager:SceneManager = this.getManager();\n\t\t\tif (manager) {\n\t\t\t\tconst names:string[] = [this.name];\n\t\t\t\tlet scene:Scene = this;\n\t\t\t\twhile (scene = scene.parent) {\n\t\t\t\t\tnames.unshift(scene.name);\n\t\t\t\t}\n\t\t\t\treturn manager.getScenePathByNames(names);\n\t\t\t} else {\n\t\t\t\tLogger.warn('[Scene \\'' + this.name + '\\'] getPath was failed, check whether if scene is connected to root.');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic gotoScene(path:string):void {\n\t\t\tthis.getManager().goto(path);\n\t\t}\n\n\n\n\n\n\t\tpublic _load(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Loading;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLoad) == 'function' ? this.onLoad() : this.implOnLoad();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _unload(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Unloading;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onUnload) == 'function' ? this.onUnload() : this.implOnUnload();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.UNLOAD_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _arrive(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Arriving;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onArrive) == 'function' ? this.onArrive() : this.implOnArrive();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ARRIVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _leave(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Leaving;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onLeave) == 'function' ? this.onLeave() : this.implOnLeave();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.LEAVE_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _ascend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Ascending;\n\t\t\tthis.isEntered = true;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onAscend) == 'function' ? this.onAscend() : this.implOnAscend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.ASCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\t\tpublic _descend(transferInfo:SceneTransferInfo):void {\n\t\t\tthis.transferInfo = transferInfo;\n\t\t\tthis.state = SceneState.Descending;\n\t\t\tthis.isEntered = false;\n\t\t\tconst command:cmd.Serial = new cmd.Serial(\n\t\t\t\t():void => {\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND, this));\n\t\t\t\t\tconst c:cmd.Command = typeof(this.onDescend) == 'function' ? this.onDescend() : this.implOnDescend();\n\t\t\t\t\tif (c) command.insertCommand(c);\n\t\t\t\t},\n\t\t\t\t():void => {\n\t\t\t\t\tthis.lastState = this.state;\n\t\t\t\t\tthis.state = SceneState.Idling;\n\t\t\t\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.DESCEND_COMPLETE, this));\n\t\t\t\t}\n\t\t\t);\n\t\t\tcommand.execute();\n\t\t}\n\n\n\n\n\n\t\tprotected implOnLoad():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnUnload():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnArrive():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnLeave():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnAscend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\t\tprotected implOnDescend():cmd.Command {\n\t\t\treturn new cmd.Command();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\t// The callback function is called preferentially over the override\n\t\tpublic onLoad:() => cmd.Command;\n\t\tpublic onUnload:() => cmd.Command;\n\t\tpublic onArrive:() => cmd.Command;\n\t\tpublic onLeave:() => cmd.Command;\n\t\tpublic onAscend:() => cmd.Command;\n\t\tpublic onDescend:() => cmd.Command;\n\n\t\tprivate isEntered:boolean;\n\t\tprivate name:string;\n\t\tprivate state:SceneState;\n\t\tprivate lastState:SceneState;\n\t\tprivate parent:Scene;\n\t\tprivate childrenByName:alm.util.Hash<Scene>;\n\t\tprivate numChildren:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static LOAD:string = 'load';\n\t\tpublic static UNLOAD:string = 'unload';\n\t\tpublic static ARRIVE:string = 'arrive';\n\t\tpublic static LEAVE:string = 'leave';\n\t\tpublic static ASCEND:string = 'ascend';\n\t\tpublic static DESCEND:string = 'descend';\n\n\t\tpublic static LOAD_COMPLETE:string = 'loadComplete';\n\t\tpublic static UNLOAD_COMPLETE:string = 'unloadComplete';\n\t\tpublic static ARRIVE_COMPLETE:string = 'arriveComplete';\n\t\tpublic static LEAVE_COMPLETE:string = 'leaveComplete';\n\t\tpublic static ASCEND_COMPLETE:string = 'ascendComplete';\n\t\tpublic static DESCEND_COMPLETE:string = 'descendComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneEvent {\n\t\t\treturn new SceneEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Logger = alm.debug.Logger;\n\timport LoggerLevel = alm.debug.LoggerLevel;\n\timport EventDispatcher = alm.event.EventDispatcher;\n\n\texport class SceneManager extends EventDispatcher {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(name:string = '') {\n\t\t\tsuper();\n\t\t\tthis.name = name;\n\t\t\tthis.root = new core.RootScene(this);\n\t\t\tthis.currentScene = null;\n\n\t\t\tthis.waypoints = [];\n\t\t\tthis.waypointIndex = -1;\n\t\t\tthis.lastState = SceneState.Idling;\n\t\t\tthis.eventIndex = -1;\n\t\t\tthis.transferId = -1;\n\t\t\tthis.transferInfo = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic start():void {\n\t\t\tLogger.verbose('----- scene manager start -----');\n\t\t\tthis.goto('/');\n\t\t}\n\n\t\tpublic goto(path:string):void {\n\t\t\tpath = this.resolvePath(path);\n\n\t\t\t// Return if current destination and new destination is same.\n\t\t\tif (this.transferInfo && this.transferInfo.getDestinationPath() == path) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Build waypoints\n\t\t\tlet newWaypoints:core.Waypoint[] = [];\n\t\t\tif (this.waypointIndex != -1) {\n\t\t\t\tnewWaypoints = this.createWaypoints(this.waypoints[this.waypointIndex].getPath(), path);\n\t\t\t} else {\n\t\t\t\t// Init\n\t\t\t\tnewWaypoints = [new core.Waypoint('/', 0)];\n\t\t\t}\n\n\t\t\t// Transfer\n\t\t\tif (newWaypoints.length > 0) {\n\t\t\t\tconst isDestinationChanged:boolean = this.transferInfo != null;\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.waypointIndex = 0;\n\t\t\t\t\tthis.eventIndex = 0;\n\t\t\t\t\t++this.transferId;\n\t\t\t\t\tthis.waypoints = newWaypoints;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.verbose('destination is changed');\n\t\t\t\t\tLogger.verbose('waypoint index : ' + this.waypointIndex);\n\t\t\t\t\tthis.waypoints = this.waypoints.slice(0, this.waypointIndex + 1).concat(newWaypoints.slice(1));\n\t\t\t\t\tthis.setDirection(this.waypoints);\n\t\t\t\t\tthis.printWaypoint(this.waypoints);\n\t\t\t\t}\n\n\t\t\t\tthis.transferInfo = new SceneTransferInfo(this.transferId, this.waypoints[this.waypointIndex].getPath(), this.waypoints[this.waypoints.length - 1].getPath());\n\n\t\t\t\tif (!isDestinationChanged) {\n\t\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_START, this));\n\t\t\t\t}\n\n\t\t\t\tthis.checkState();\n\t\t\t}\n\t\t}\n\n\t\tpublic resolvePath(path:string):string {\n\t\t\t// Relative to absolute\n\t\t\tif (path[0] != '/') {\n\t\t\t\tif (this.currentScene) {\n\t\t\t\t\tpath = this.currentScene.getPath() + '/' + path;\n\t\t\t\t} else {\n\t\t\t\t\tpath = '/' + path;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Normalize\n\t\t\tconst names:string[] = path.split('/');\n\t\t\tconst normalized:string[] = [];\n\t\t\tfor (let i:number = 0; i < names.length; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (name == '') continue;\n\t\t\t\tif (name == '.') continue;\n\t\t\t\tif (name == '..') {\n\t\t\t\t\tnormalized.pop();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnormalized.push(name);\n\t\t\t}\n\n\t\t\treturn '/' + normalized.join('/');\n\t\t}\n\n\t\tpublic addSceneAt(path:string, createScene:boolean = false):Scene {\n\t\t\tlet success:boolean = false;\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tconst name:string = names[i];\n\t\t\t\tif (i == n - 1) {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tLogger.warn('[SceneManager \\'' + this.name + '\\'] addSceneAt was failed, because path \\'' + path + '\\' is already exist.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (scene.contains(name)) {\n\t\t\t\t\t\tscene = scene.getChildByName(name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscene = scene.addChild(new Scene(name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn success ? scene : null;\n\t\t}\n\n\t\tpublic getName():string {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic getRoot():Scene {\n\t\t\treturn this.root;\n\t\t}\n\n\t\tpublic getSceneByPath(path:string):Scene {\n\t\t\tconst names:string[] = this.getSceneNamesByPath(path);\n\t\t\tconst n:number = names.length;\n\t\t\tlet scene:Scene = this.root;\n\t\t\tfor (let i:number = 1; i < n; ++i) {\n\t\t\t\tscene = scene.getChildByName(names[i]);\n\t\t\t}\n\t\t\treturn scene;\n\t\t}\n\n\t\tpublic getSceneNamesByPath(path:string):string[] {\n\t\t\treturn path == '/' ? [''] : this.resolvePath(path).split('/');\n\t\t}\n\n\t\tpublic getSceneLevelByNames(names:string[]):number {\n\t\t\treturn names.length - 1;\n\t\t}\n\n\t\tpublic getScenePathByNames(names:string[]):string {\n\t\t\treturn names.length == 0 ? '/' : names.length == 1 ? ('/' + names[0]) : names.join('/');\n\t\t}\n\n\t\tprivate createWaypoints(departurePath:string, destinationPath:string):core.Waypoint[] {\n\t\t\tif (departurePath == destinationPath) {\n\t\t\t\tLogger.warn('[SceneManager] departure path and destination path is same, path = \\'' + departurePath + '\\'');\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tLogger.verbose('----- scene flow -----');\n\n\t\t\tconst waypoints:core.Waypoint[] = [\n\t\t\t\tnew core.Waypoint(departurePath, this.getSceneLevelByNames(this.getSceneNamesByPath(departurePath)))\n\t\t\t];\n\n\t\t\tconst departureNames:string[] = this.getSceneNamesByPath(departurePath);\n\t\t\tconst destinationNames:string[] = this.getSceneNamesByPath(destinationPath);\n\n\t\t\tLogger.verbose('    path');\n\t\t\tLogger.verbose('        current    : \\'' + departurePath + '\\'');\n\t\t\tLogger.verbose('        destination: \\'' + destinationPath + '\\'');\n\n\t\t\tLogger.verbose('    names');\n\t\t\tLogger.verbose('        current(' + departureNames.length + ')    : \\'' + departureNames + '\\'');\n\t\t\tLogger.verbose('        destination(' + destinationNames.length + '): \\'' + destinationNames + '\\'');\n\n\t\t\t// 折り返しを見つける\n\t\t\tlet turningLevel:number = 0;\n\t\t\tlet turningNames:string[] = [];\n\t\t\tlet turningPath:string;\n\t\t\tif (destinationPath == '/') {\n\t\t\t\tturningLevel = -1;\n\t\t\t\tturningNames = [];\n\t\t\t\tturningPath = '/';\n\t\t\t} else {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (departureNames[turningLevel] == destinationNames[turningLevel]) {\n\t\t\t\t\t\tturningNames.push(departureNames[turningLevel]);\n\t\t\t\t\t\t++turningLevel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t--turningLevel;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tturningPath = this.getScenePathByNames(turningNames);\n\t\t\t}\n\n\t\t\tLogger.verbose('    turning');\n\t\t\tLogger.verbose('        path     : ' + turningPath);\n\t\t\tLogger.verbose('        level    : ' + turningLevel);\n\t\t\tLogger.verbose('        names(' + turningNames.length + ') : \\'' + turningNames + '\\'');\n\n\t\t\t// 出発シーンから折り返しまで\n\t\t\t{\n\t\t\t\tconst names:string[] = departureNames.concat();\n\t\t\t\tlet prevPath:string = departurePath;\n\t\t\t\tfor (let i:number = departureNames.length - 1; i > turningLevel + 1; --i) {\n\t\t\t\t\tnames.pop();\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (turningPath == destinationPath && turningLevel > 0) {\n\t\t\t\t// 折り返しと到着シーンが同一\n\t\t\t\tconst from:core.Direction = turningLevel == waypoints[waypoints.length - 1].getLevel() ? core.Direction.Sibling : core.Direction.Ascend;\n\t\t\t\twaypoints.push(new core.Waypoint(turningPath, turningLevel));\n\t\t\t} else {\n\n\t\t\t\t// 折り返しから到達シーンまで\n\t\t\t\tconst names:string[] = turningNames.concat();\n\t\t\t\tconst prev:core.Waypoint = waypoints[waypoints.length - 1];\n\t\t\t\tlet prevPath:string = prev.getPath();\n\t\t\t\tlet prevLevel:number = prev.getLevel();\n\t\t\t\tfor (let i:number = turningLevel + 1; i < destinationNames.length; ++i) {\n\t\t\t\t\tconst name:string = destinationNames[i];\n\t\t\t\t\tnames.push(name);\n\t\t\t\t\tconst path:string = this.getScenePathByNames(names);\n\t\t\t\t\tif (path != prevPath) {\n\t\t\t\t\t\tconst level:number = this.getSceneLevelByNames(names);\n\t\t\t\t\t\twaypoints.push(new core.Waypoint(path, level));\n\t\t\t\t\t\tprevLevel = level;\n\t\t\t\t\t\tprevPath = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 進行方向\n\t\t\tthis.setDirection(waypoints);\n\n\t\t\tif (Logger.level <= LoggerLevel.Verbose) {\n\t\t\t\tthis.printWaypoint(waypoints);\n\t\t\t}\n\n\t\t\treturn waypoints;\n\t\t}\n\n\t\tprivate setDirection(waypoints:core.Waypoint[]):void {\n\t\t\tconst n:number = waypoints.length;\n\t\t\tlet prev:core.Waypoint = null;\n\t\t\tlet point:core.Waypoint;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tpoint = waypoints[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tconst d:number = point.getLevel() - prev.getLevel();\n\t\t\t\t\tpoint._setFrom(d > 0 ? core.Direction.Descend : d < 0 ? core.Direction.Ascend : core.Direction.Sibling);\n\t\t\t\t\tprev._setTo(point.getFrom());\n\t\t\t\t}\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tprivate printWaypoint(waypoints:core.Waypoint[]):void {\n\t\t\tLogger.verbose('    waypoints');\n\t\t\tconst n:number = waypoints.length;\n\t\t\tfor (let i:number = 0; i < n; ++i) {\n\t\t\t\tLogger.verbose('        [' + i + '] ' + waypoints[i]);\n\t\t\t}\n\t\t\tLogger.verbose('');\n\t\t}\n\n\n\n\n\n\t\tprivate checkState():void {\n\t\t\ttrace('lastState : ' + scn.getSceneStateString(this.lastState));\n\n\t\t\t//trace(this.waypointIndex + ' / ' + this.waypoints.length);\n\n\t\t\tif (this.waypointIndex >= this.waypoints.length) {\n\t\t\t\tLogger.verbose('----- scene transfer complete -----');\n\t\t\t\tconst tmpTransferId:number = this.transferInfo.getTransferId();\n\t\t\t\tthis.waypointIndex = this.waypoints.length - 1;\n\t\t\t\tthis.dispatchEvent(new SceneManagerEvent(SceneManagerEvent.TRANSFER_COMPLETE, this));\n\t\t\t\tif (tmpTransferId == this.transferInfo.getTransferId()) {\n\t\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\t\tthis.transferInfo = null;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentScene) {\n\t\t\t\tconst currentWaypoint:core.Waypoint = this.waypoints[this.waypointIndex];\n\t\t\t\tthis.currentScene = this.getSceneByPath(currentWaypoint.getPath());\n\n\t\t\t\t// Departure scene\n\t\t\t\tif (this.waypoints.length > 1 && this.waypointIndex == 0) {\n\t\t\t\t\ttrace('Departure scene');\n\n\t\t\t\t\t// Leave\n\t\t\t\t\tif (this.lastState != SceneState.Leaving && this.currentScene.getLastState() == SceneState.Arriving) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Leave   : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._leave(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Departure to child\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tthis.checkState();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Through scene\n\t\t\t\tif (this.waypointIndex > 0 && this.waypointIndex < this.waypoints.length - 1) {\n\t\t\t\t\ttrace('Through scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ascend\n\t\t\t\t\tif (this.lastState != SceneState.Ascending && currentWaypoint.getFrom() == core.Direction.Ascend) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Ascend  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._ascend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unload\n\t\t\t\t\tif (this.lastState != SceneState.Unloading && (currentWaypoint.getTo() == core.Direction.Sibling || currentWaypoint.getTo() == core.Direction.Ascend)) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Unload  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._unload(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Descend\n\t\t\t\t\tif (this.lastState != SceneState.Descending && currentWaypoint.getTo() == core.Direction.Descend) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Descend : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._descend(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Destination scene\n\t\t\t\tif (this.waypointIndex == this.waypoints.length - 1) {\n\t\t\t\t\ttrace('Destination scene');\n\n\t\t\t\t\t// Load\n\t\t\t\t\tif (this.lastState != SceneState.Loading && (currentWaypoint.getFrom() == core.Direction.Sibling || currentWaypoint.getFrom() == core.Direction.Descend)) {\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Arrive\n\t\t\t\t\tif (this.lastState != SceneState.Arriving) {\n\t\t\t\t\t\t++this.waypointIndex;\n\t\t\t\t\t\tLogger.verbose(this.eventIndex + ' Arrive  : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\t\t\tthis.currentScene.addEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\t\t\t\tthis.currentScene._arrive(this.transferInfo);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\ttrace('Init scene');\n\n\t\t\t\t// Init\n\t\t\t\tthis.lastState = SceneState.Idling;\n\t\t\t\tthis.currentScene = this.root;\n\t\t\t\tLogger.verbose(this.eventIndex + ' Load    : \\'' + this.currentScene.getPath() + '\\'');\n\t\t\t\tthis.currentScene.addEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\t\tthis.currentScene._load(this.transferInfo);\n\t\t\t}\n\t\t}\n\n\t\tprivate sceneLoadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LOAD_COMPLETE, this.sceneLoadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Loading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneUnloadCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.UNLOAD_COMPLETE, this.sceneUnloadCompleteHandler);\n\t\t\tthis.lastState = SceneState.Unloading;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneArriveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ARRIVE_COMPLETE, this.sceneArriveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Arriving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneLeaveCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.LEAVE_COMPLETE, this.sceneLeaveCompleteHandler);\n\t\t\tthis.lastState = SceneState.Leaving;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneAscendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.ASCEND_COMPLETE, this.sceneAscendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Ascending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\t\tprivate sceneDescendCompleteHandler = (event:SceneEvent):void => {\n\t\t\tthis.currentScene.removeEventListener(SceneEvent.DESCEND_COMPLETE, this.sceneDescendCompleteHandler);\n\t\t\tthis.lastState = SceneState.Descending;\n\t\t\t++this.eventIndex;\n\t\t\tthis.checkState();\n\t\t};\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate name:string;\n\t\tprivate root:Scene;\n\t\tprivate currentScene:Scene;\n\n\t\tprivate waypoints:core.Waypoint[];\n\t\tprivate waypointIndex:number;\n\t\tprivate lastState:SceneState;\n\t\tprivate eventIndex:number;\n\t\tprivate transferInfo:SceneTransferInfo;\n\t\tprivate transferId:number;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\timport Event = alm.event.Event;\n\n\texport class SceneManagerEvent extends Event {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// EVENT\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic static TRANSFER_START:string = 'transferStart';\n\t\tpublic static TRANSFER_COMPLETE:string = 'transferComplete';\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(eventType:string, eventTarget:any = null) {\n\t\t\tsuper(eventType, eventTarget);\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic clone():SceneManagerEvent {\n\t\t\treturn new SceneManagerEvent(this.getType(), this.getTarget());\n\t\t}\n\n\t\tpublic toString():string {\n\t\t\treturn '[SceneManagerEvent] type = ' + this.getType();\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\texport class SceneTransferInfo {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(transferId:number, departurePath:string, destinationPath:string) {\n\t\t\tthis.transferId = transferId;\n\t\t\tthis.departurePath = departurePath;\n\t\t\tthis.destinationPath = destinationPath;\n\t\t\tthis.relay = null;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getTransferId():number {\n\t\t\treturn this.transferId;\n\t\t}\n\n\t\tpublic getDeparturePath():string {\n\t\t\treturn this.departurePath;\n\t\t}\n\n\t\tpublic getDestinationPath():string {\n\t\t\treturn this.destinationPath;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic relay:any;\n\n\t\tprivate transferId:number;\n\t\tprivate departurePath:string;\n\t\tprivate destinationPath:string;\n\t}\n}\n","/// <reference path='../index.ts' />\n\nnamespace scn {\n\n\texport enum SceneState {\n\t\tIdling,\n\t\tLoading,\n\t\tUnloading,\n\t\tArriving,\n\t\tLeaving,\n\t\tAscending,\n\t\tDescending,\n\t}\n\n\texport function getSceneStateString(state:SceneState):string {\n\t\tswitch (state) {\n\t\t\tcase SceneState.Idling:\n\t\t\t\treturn 'idling';\n\t\t\tcase SceneState.Loading:\n\t\t\t\treturn 'loading';\n\t\t\tcase SceneState.Unloading:\n\t\t\t\treturn 'unloading';\n\t\t\tcase SceneState.Arriving:\n\t\t\t\treturn 'arriving';\n\t\t\tcase SceneState.Leaving:\n\t\t\t\treturn 'leaving';\n\t\t\tcase SceneState.Ascending:\n\t\t\t\treturn 'ascending';\n\t\t\tcase SceneState.Descending:\n\t\t\t\treturn 'descending';\n\t\t}\n\t\treturn '';\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport enum Direction {\n\t\tStatic,\n\t\tSibling,\n\t\tAscend,\n\t\tDescend,\n\t}\n\n\texport function getDirectionString(direction:Direction):string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.Static:\n\t\t\t\treturn 'static';\n\t\t\tcase Direction.Sibling:\n\t\t\t\treturn 'sibling';\n\t\t\tcase Direction.Ascend:\n\t\t\t\treturn 'ascend';\n\t\t\tcase Direction.Descend:\n\t\t\t\treturn 'descend';\n\t\t}\n\t\treturn '';\n\t}\n}\n","/// <reference path='../../index.ts' />\n\nnamespace scn.core {\n\n\texport class RootScene extends Scene {\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// CONSTRUCTOR\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tconstructor(manager:SceneManager) {\n\t\t\tsuper('');\n\t\t\tthis.manager = manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// METHOD\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tpublic getManager():SceneManager {\n\t\t\treturn this.manager;\n\t\t}\n\n\n\n\n\n\t\t// --------------------------------------------------\n\t\t//\n\t\t// VARIABLE\n\t\t//\n\t\t// --------------------------------------------------\n\n\t\tprivate manager:SceneManager;\n\t}\n}\n"]}